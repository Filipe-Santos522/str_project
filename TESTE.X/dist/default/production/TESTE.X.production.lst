

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jan 14 18:46:38 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text36,local,class=CODE,merge=1,delta=2,group=3
    57                           	psect	text37,local,class=CODE,merge=1,delta=2,group=3
    58                           	psect	text38,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text42,local,class=CODE,merge=1,delta=2,group=3
    63                           	psect	text43,local,class=CODE,merge=1,delta=2,group=3
    64                           	psect	text44,local,class=CODE,merge=1,delta=2,group=3
    65                           	psect	text45,local,class=CODE,merge=1,delta=2,group=3
    66                           	psect	text46,local,class=CODE,merge=1,delta=2,group=3
    67                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	text50,local,class=CODE,merge=1,delta=2
    71                           	psect	text51,local,class=CODE,merge=1,delta=2
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2
    74                           	psect	text54,local,class=CODE,merge=1,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	text56,local,class=CODE,merge=1,delta=2
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    78                           	dabs	1,0x7E,2
    79  0000                     
    80                           ; Version 2.35
    81                           ; Generated 13/04/2021 GMT
    82                           ; 
    83                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution. Publication is not required when
    97                           ;        this file is used in an embedded application.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC16F18875 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001C                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  008C                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0090                     	;# 
   156  0091                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0095                     	;# 
   160  0096                     	;# 
   161  0097                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009A                     	;# 
   165  009B                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  0110                     	;# 
   175  0110                     	;# 
   176  0111                     	;# 
   177  0112                     	;# 
   178  0112                     	;# 
   179  0113                     	;# 
   180  0114                     	;# 
   181  0114                     	;# 
   182  0115                     	;# 
   183  0116                     	;# 
   184  0116                     	;# 
   185  0117                     	;# 
   186  0119                     	;# 
   187  0119                     	;# 
   188  0119                     	;# 
   189  011A                     	;# 
   190  011A                     	;# 
   191  011A                     	;# 
   192  011B                     	;# 
   193  011B                     	;# 
   194  011B                     	;# 
   195  011B                     	;# 
   196  011B                     	;# 
   197  011C                     	;# 
   198  011C                     	;# 
   199  011C                     	;# 
   200  011D                     	;# 
   201  011D                     	;# 
   202  011D                     	;# 
   203  011E                     	;# 
   204  011E                     	;# 
   205  011E                     	;# 
   206  011F                     	;# 
   207  011F                     	;# 
   208  011F                     	;# 
   209  011F                     	;# 
   210  011F                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  018E                     	;# 
   214  018F                     	;# 
   215  0190                     	;# 
   216  0191                     	;# 
   217  0192                     	;# 
   218  0196                     	;# 
   219  0197                     	;# 
   220  0198                     	;# 
   221  0199                     	;# 
   222  019A                     	;# 
   223  019B                     	;# 
   224  019C                     	;# 
   225  020C                     	;# 
   226  020C                     	;# 
   227  020D                     	;# 
   228  020E                     	;# 
   229  020F                     	;# 
   230  020F                     	;# 
   231  0210                     	;# 
   232  0210                     	;# 
   233  0211                     	;# 
   234  0211                     	;# 
   235  0212                     	;# 
   236  0212                     	;# 
   237  0213                     	;# 
   238  0214                     	;# 
   239  0215                     	;# 
   240  0215                     	;# 
   241  0216                     	;# 
   242  0216                     	;# 
   243  0217                     	;# 
   244  0217                     	;# 
   245  0218                     	;# 
   246  0218                     	;# 
   247  0219                     	;# 
   248  021A                     	;# 
   249  021B                     	;# 
   250  021B                     	;# 
   251  021C                     	;# 
   252  021C                     	;# 
   253  021D                     	;# 
   254  021D                     	;# 
   255  021E                     	;# 
   256  021F                     	;# 
   257  028C                     	;# 
   258  028C                     	;# 
   259  028D                     	;# 
   260  028D                     	;# 
   261  028E                     	;# 
   262  028F                     	;# 
   263  0290                     	;# 
   264  0290                     	;# 
   265  0291                     	;# 
   266  0292                     	;# 
   267  0292                     	;# 
   268  0293                     	;# 
   269  0293                     	;# 
   270  0294                     	;# 
   271  0295                     	;# 
   272  0296                     	;# 
   273  0296                     	;# 
   274  0297                     	;# 
   275  0298                     	;# 
   276  0298                     	;# 
   277  0299                     	;# 
   278  0299                     	;# 
   279  029A                     	;# 
   280  029B                     	;# 
   281  029C                     	;# 
   282  029C                     	;# 
   283  029D                     	;# 
   284  030C                     	;# 
   285  030C                     	;# 
   286  030D                     	;# 
   287  030E                     	;# 
   288  030F                     	;# 
   289  0310                     	;# 
   290  0310                     	;# 
   291  0311                     	;# 
   292  0312                     	;# 
   293  0313                     	;# 
   294  0314                     	;# 
   295  0314                     	;# 
   296  0315                     	;# 
   297  0316                     	;# 
   298  0317                     	;# 
   299  0318                     	;# 
   300  0318                     	;# 
   301  0319                     	;# 
   302  031A                     	;# 
   303  031B                     	;# 
   304  031C                     	;# 
   305  031C                     	;# 
   306  031D                     	;# 
   307  031E                     	;# 
   308  031F                     	;# 
   309  038C                     	;# 
   310  038C                     	;# 
   311  038D                     	;# 
   312  038E                     	;# 
   313  0390                     	;# 
   314  0390                     	;# 
   315  0391                     	;# 
   316  0392                     	;# 
   317  040C                     	;# 
   318  040D                     	;# 
   319  040E                     	;# 
   320  040F                     	;# 
   321  0410                     	;# 
   322  0411                     	;# 
   323  0416                     	;# 
   324  0416                     	;# 
   325  0417                     	;# 
   326  0418                     	;# 
   327  0418                     	;# 
   328  0419                     	;# 
   329  041A                     	;# 
   330  041A                     	;# 
   331  041B                     	;# 
   332  041C                     	;# 
   333  041C                     	;# 
   334  041D                     	;# 
   335  041E                     	;# 
   336  041F                     	;# 
   337  048C                     	;# 
   338  048C                     	;# 
   339  048D                     	;# 
   340  048E                     	;# 
   341  048F                     	;# 
   342  048F                     	;# 
   343  0490                     	;# 
   344  0491                     	;# 
   345  0492                     	;# 
   346  0492                     	;# 
   347  0493                     	;# 
   348  0494                     	;# 
   349  0495                     	;# 
   350  0495                     	;# 
   351  0496                     	;# 
   352  0497                     	;# 
   353  0498                     	;# 
   354  0499                     	;# 
   355  049A                     	;# 
   356  049B                     	;# 
   357  049C                     	;# 
   358  049D                     	;# 
   359  050C                     	;# 
   360  050C                     	;# 
   361  050D                     	;# 
   362  050E                     	;# 
   363  050F                     	;# 
   364  050F                     	;# 
   365  0510                     	;# 
   366  0511                     	;# 
   367  0512                     	;# 
   368  0512                     	;# 
   369  0513                     	;# 
   370  0514                     	;# 
   371  0515                     	;# 
   372  0515                     	;# 
   373  0516                     	;# 
   374  0517                     	;# 
   375  0518                     	;# 
   376  0519                     	;# 
   377  051A                     	;# 
   378  051B                     	;# 
   379  051C                     	;# 
   380  051D                     	;# 
   381  058C                     	;# 
   382  058C                     	;# 
   383  058D                     	;# 
   384  058E                     	;# 
   385  058F                     	;# 
   386  058F                     	;# 
   387  0590                     	;# 
   388  0591                     	;# 
   389  0592                     	;# 
   390  0593                     	;# 
   391  060C                     	;# 
   392  060D                     	;# 
   393  060E                     	;# 
   394  060F                     	;# 
   395  0610                     	;# 
   396  0611                     	;# 
   397  0612                     	;# 
   398  0613                     	;# 
   399  0614                     	;# 
   400  0616                     	;# 
   401  0617                     	;# 
   402  0618                     	;# 
   403  0619                     	;# 
   404  061A                     	;# 
   405  061B                     	;# 
   406  061C                     	;# 
   407  061D                     	;# 
   408  061E                     	;# 
   409  068C                     	;# 
   410  068D                     	;# 
   411  068E                     	;# 
   412  068F                     	;# 
   413  0690                     	;# 
   414  0691                     	;# 
   415  0692                     	;# 
   416  0693                     	;# 
   417  0694                     	;# 
   418  070C                     	;# 
   419  070D                     	;# 
   420  070E                     	;# 
   421  070F                     	;# 
   422  0710                     	;# 
   423  0711                     	;# 
   424  0712                     	;# 
   425  0713                     	;# 
   426  0714                     	;# 
   427  0716                     	;# 
   428  0717                     	;# 
   429  0718                     	;# 
   430  0719                     	;# 
   431  071A                     	;# 
   432  071B                     	;# 
   433  071C                     	;# 
   434  071D                     	;# 
   435  071E                     	;# 
   436  0796                     	;# 
   437  0797                     	;# 
   438  0798                     	;# 
   439  0799                     	;# 
   440  079A                     	;# 
   441  079B                     	;# 
   442  080C                     	;# 
   443  080D                     	;# 
   444  080E                     	;# 
   445  080F                     	;# 
   446  0810                     	;# 
   447  0811                     	;# 
   448  0812                     	;# 
   449  0813                     	;# 
   450  0814                     	;# 
   451  081A                     	;# 
   452  081B                     	;# 
   453  081C                     	;# 
   454  081D                     	;# 
   455  081E                     	;# 
   456  081F                     	;# 
   457  088C                     	;# 
   458  088D                     	;# 
   459  088E                     	;# 
   460  088F                     	;# 
   461  0890                     	;# 
   462  0891                     	;# 
   463  0892                     	;# 
   464  0893                     	;# 
   465  0895                     	;# 
   466  0896                     	;# 
   467  0897                     	;# 
   468  0898                     	;# 
   469  0899                     	;# 
   470  089A                     	;# 
   471  089B                     	;# 
   472  090C                     	;# 
   473  090E                     	;# 
   474  090F                     	;# 
   475  091F                     	;# 
   476  091F                     	;# 
   477  098F                     	;# 
   478  098F                     	;# 
   479  0990                     	;# 
   480  0991                     	;# 
   481  0992                     	;# 
   482  0993                     	;# 
   483  0994                     	;# 
   484  0995                     	;# 
   485  0996                     	;# 
   486  0997                     	;# 
   487  0E0F                     	;# 
   488  0E10                     	;# 
   489  0E11                     	;# 
   490  0E12                     	;# 
   491  0E13                     	;# 
   492  0E14                     	;# 
   493  0E15                     	;# 
   494  0E16                     	;# 
   495  0E17                     	;# 
   496  0E18                     	;# 
   497  0E19                     	;# 
   498  0E1A                     	;# 
   499  0E1B                     	;# 
   500  0E1C                     	;# 
   501  0E1D                     	;# 
   502  0E1E                     	;# 
   503  0E1F                     	;# 
   504  0E20                     	;# 
   505  0E21                     	;# 
   506  0E22                     	;# 
   507  0E23                     	;# 
   508  0E24                     	;# 
   509  0E25                     	;# 
   510  0E26                     	;# 
   511  0E27                     	;# 
   512  0E28                     	;# 
   513  0E29                     	;# 
   514  0E2A                     	;# 
   515  0E2B                     	;# 
   516  0E2C                     	;# 
   517  0E2D                     	;# 
   518  0E2E                     	;# 
   519  0E2F                     	;# 
   520  0E30                     	;# 
   521  0E31                     	;# 
   522  0E32                     	;# 
   523  0E33                     	;# 
   524  0E34                     	;# 
   525  0E35                     	;# 
   526  0E36                     	;# 
   527  0E37                     	;# 
   528  0E8F                     	;# 
   529  0E90                     	;# 
   530  0E91                     	;# 
   531  0E92                     	;# 
   532  0E93                     	;# 
   533  0E94                     	;# 
   534  0E95                     	;# 
   535  0E96                     	;# 
   536  0E97                     	;# 
   537  0E9C                     	;# 
   538  0E9D                     	;# 
   539  0E9E                     	;# 
   540  0EA1                     	;# 
   541  0EA2                     	;# 
   542  0EA3                     	;# 
   543  0EA4                     	;# 
   544  0EA5                     	;# 
   545  0EA9                     	;# 
   546  0EAA                     	;# 
   547  0EAB                     	;# 
   548  0EAC                     	;# 
   549  0EB1                     	;# 
   550  0EB2                     	;# 
   551  0EB3                     	;# 
   552  0EB8                     	;# 
   553  0EB9                     	;# 
   554  0EBA                     	;# 
   555  0EBB                     	;# 
   556  0EBC                     	;# 
   557  0EBD                     	;# 
   558  0EBE                     	;# 
   559  0EC3                     	;# 
   560  0EC5                     	;# 
   561  0EC6                     	;# 
   562  0EC7                     	;# 
   563  0EC8                     	;# 
   564  0EC9                     	;# 
   565  0ECA                     	;# 
   566  0ECB                     	;# 
   567  0ECC                     	;# 
   568  0F10                     	;# 
   569  0F11                     	;# 
   570  0F12                     	;# 
   571  0F13                     	;# 
   572  0F14                     	;# 
   573  0F15                     	;# 
   574  0F16                     	;# 
   575  0F17                     	;# 
   576  0F18                     	;# 
   577  0F19                     	;# 
   578  0F1A                     	;# 
   579  0F1B                     	;# 
   580  0F1C                     	;# 
   581  0F1D                     	;# 
   582  0F1E                     	;# 
   583  0F1F                     	;# 
   584  0F20                     	;# 
   585  0F21                     	;# 
   586  0F22                     	;# 
   587  0F23                     	;# 
   588  0F24                     	;# 
   589  0F25                     	;# 
   590  0F26                     	;# 
   591  0F27                     	;# 
   592  0F28                     	;# 
   593  0F29                     	;# 
   594  0F2A                     	;# 
   595  0F2B                     	;# 
   596  0F2C                     	;# 
   597  0F2D                     	;# 
   598  0F2E                     	;# 
   599  0F2F                     	;# 
   600  0F30                     	;# 
   601  0F31                     	;# 
   602  0F32                     	;# 
   603  0F38                     	;# 
   604  0F39                     	;# 
   605  0F3A                     	;# 
   606  0F3B                     	;# 
   607  0F3C                     	;# 
   608  0F3D                     	;# 
   609  0F3E                     	;# 
   610  0F3F                     	;# 
   611  0F40                     	;# 
   612  0F41                     	;# 
   613  0F43                     	;# 
   614  0F44                     	;# 
   615  0F45                     	;# 
   616  0F46                     	;# 
   617  0F47                     	;# 
   618  0F48                     	;# 
   619  0F49                     	;# 
   620  0F4A                     	;# 
   621  0F4B                     	;# 
   622  0F4C                     	;# 
   623  0F4E                     	;# 
   624  0F4F                     	;# 
   625  0F50                     	;# 
   626  0F51                     	;# 
   627  0F52                     	;# 
   628  0F53                     	;# 
   629  0F54                     	;# 
   630  0F55                     	;# 
   631  0F56                     	;# 
   632  0F57                     	;# 
   633  0F59                     	;# 
   634  0F5A                     	;# 
   635  0F5B                     	;# 
   636  0F5C                     	;# 
   637  0F5D                     	;# 
   638  0F61                     	;# 
   639  0F62                     	;# 
   640  0F64                     	;# 
   641  0F65                     	;# 
   642  0F66                     	;# 
   643  0F67                     	;# 
   644  0F68                     	;# 
   645  0F69                     	;# 
   646  0F6A                     	;# 
   647  0F6B                     	;# 
   648  0F6C                     	;# 
   649  0F6D                     	;# 
   650  0FE4                     	;# 
   651  0FE5                     	;# 
   652  0FE6                     	;# 
   653  0FE7                     	;# 
   654  0FE8                     	;# 
   655  0FE9                     	;# 
   656  0FEA                     	;# 
   657  0FEB                     	;# 
   658  0FED                     	;# 
   659  0FEE                     	;# 
   660  0FEF                     	;# 
   661  0000                     	;# 
   662  0001                     	;# 
   663  0002                     	;# 
   664  0003                     	;# 
   665  0004                     	;# 
   666  0005                     	;# 
   667  0006                     	;# 
   668  0007                     	;# 
   669  0008                     	;# 
   670  0009                     	;# 
   671  000A                     	;# 
   672  000B                     	;# 
   673  000C                     	;# 
   674  000D                     	;# 
   675  000E                     	;# 
   676  000F                     	;# 
   677  0010                     	;# 
   678  0011                     	;# 
   679  0012                     	;# 
   680  0013                     	;# 
   681  0014                     	;# 
   682  0015                     	;# 
   683  0016                     	;# 
   684  0017                     	;# 
   685  0018                     	;# 
   686  0019                     	;# 
   687  001A                     	;# 
   688  001C                     	;# 
   689  001C                     	;# 
   690  001D                     	;# 
   691  001D                     	;# 
   692  001E                     	;# 
   693  001F                     	;# 
   694  008C                     	;# 
   695  008C                     	;# 
   696  008D                     	;# 
   697  008E                     	;# 
   698  008E                     	;# 
   699  008F                     	;# 
   700  0090                     	;# 
   701  0090                     	;# 
   702  0091                     	;# 
   703  0093                     	;# 
   704  0094                     	;# 
   705  0095                     	;# 
   706  0096                     	;# 
   707  0097                     	;# 
   708  0098                     	;# 
   709  0099                     	;# 
   710  009A                     	;# 
   711  009B                     	;# 
   712  009C                     	;# 
   713  009D                     	;# 
   714  009E                     	;# 
   715  010C                     	;# 
   716  010D                     	;# 
   717  010E                     	;# 
   718  010E                     	;# 
   719  010F                     	;# 
   720  0110                     	;# 
   721  0110                     	;# 
   722  0111                     	;# 
   723  0112                     	;# 
   724  0112                     	;# 
   725  0113                     	;# 
   726  0114                     	;# 
   727  0114                     	;# 
   728  0115                     	;# 
   729  0116                     	;# 
   730  0116                     	;# 
   731  0117                     	;# 
   732  0119                     	;# 
   733  0119                     	;# 
   734  0119                     	;# 
   735  011A                     	;# 
   736  011A                     	;# 
   737  011A                     	;# 
   738  011B                     	;# 
   739  011B                     	;# 
   740  011B                     	;# 
   741  011B                     	;# 
   742  011B                     	;# 
   743  011C                     	;# 
   744  011C                     	;# 
   745  011C                     	;# 
   746  011D                     	;# 
   747  011D                     	;# 
   748  011D                     	;# 
   749  011E                     	;# 
   750  011E                     	;# 
   751  011E                     	;# 
   752  011F                     	;# 
   753  011F                     	;# 
   754  011F                     	;# 
   755  011F                     	;# 
   756  011F                     	;# 
   757  018C                     	;# 
   758  018D                     	;# 
   759  018E                     	;# 
   760  018F                     	;# 
   761  0190                     	;# 
   762  0191                     	;# 
   763  0192                     	;# 
   764  0196                     	;# 
   765  0197                     	;# 
   766  0198                     	;# 
   767  0199                     	;# 
   768  019A                     	;# 
   769  019B                     	;# 
   770  019C                     	;# 
   771  020C                     	;# 
   772  020C                     	;# 
   773  020D                     	;# 
   774  020E                     	;# 
   775  020F                     	;# 
   776  020F                     	;# 
   777  0210                     	;# 
   778  0210                     	;# 
   779  0211                     	;# 
   780  0211                     	;# 
   781  0212                     	;# 
   782  0212                     	;# 
   783  0213                     	;# 
   784  0214                     	;# 
   785  0215                     	;# 
   786  0215                     	;# 
   787  0216                     	;# 
   788  0216                     	;# 
   789  0217                     	;# 
   790  0217                     	;# 
   791  0218                     	;# 
   792  0218                     	;# 
   793  0219                     	;# 
   794  021A                     	;# 
   795  021B                     	;# 
   796  021B                     	;# 
   797  021C                     	;# 
   798  021C                     	;# 
   799  021D                     	;# 
   800  021D                     	;# 
   801  021E                     	;# 
   802  021F                     	;# 
   803  028C                     	;# 
   804  028C                     	;# 
   805  028D                     	;# 
   806  028D                     	;# 
   807  028E                     	;# 
   808  028F                     	;# 
   809  0290                     	;# 
   810  0290                     	;# 
   811  0291                     	;# 
   812  0292                     	;# 
   813  0292                     	;# 
   814  0293                     	;# 
   815  0293                     	;# 
   816  0294                     	;# 
   817  0295                     	;# 
   818  0296                     	;# 
   819  0296                     	;# 
   820  0297                     	;# 
   821  0298                     	;# 
   822  0298                     	;# 
   823  0299                     	;# 
   824  0299                     	;# 
   825  029A                     	;# 
   826  029B                     	;# 
   827  029C                     	;# 
   828  029C                     	;# 
   829  029D                     	;# 
   830  030C                     	;# 
   831  030C                     	;# 
   832  030D                     	;# 
   833  030E                     	;# 
   834  030F                     	;# 
   835  0310                     	;# 
   836  0310                     	;# 
   837  0311                     	;# 
   838  0312                     	;# 
   839  0313                     	;# 
   840  0314                     	;# 
   841  0314                     	;# 
   842  0315                     	;# 
   843  0316                     	;# 
   844  0317                     	;# 
   845  0318                     	;# 
   846  0318                     	;# 
   847  0319                     	;# 
   848  031A                     	;# 
   849  031B                     	;# 
   850  031C                     	;# 
   851  031C                     	;# 
   852  031D                     	;# 
   853  031E                     	;# 
   854  031F                     	;# 
   855  038C                     	;# 
   856  038C                     	;# 
   857  038D                     	;# 
   858  038E                     	;# 
   859  0390                     	;# 
   860  0390                     	;# 
   861  0391                     	;# 
   862  0392                     	;# 
   863  040C                     	;# 
   864  040D                     	;# 
   865  040E                     	;# 
   866  040F                     	;# 
   867  0410                     	;# 
   868  0411                     	;# 
   869  0416                     	;# 
   870  0416                     	;# 
   871  0417                     	;# 
   872  0418                     	;# 
   873  0418                     	;# 
   874  0419                     	;# 
   875  041A                     	;# 
   876  041A                     	;# 
   877  041B                     	;# 
   878  041C                     	;# 
   879  041C                     	;# 
   880  041D                     	;# 
   881  041E                     	;# 
   882  041F                     	;# 
   883  048C                     	;# 
   884  048C                     	;# 
   885  048D                     	;# 
   886  048E                     	;# 
   887  048F                     	;# 
   888  048F                     	;# 
   889  0490                     	;# 
   890  0491                     	;# 
   891  0492                     	;# 
   892  0492                     	;# 
   893  0493                     	;# 
   894  0494                     	;# 
   895  0495                     	;# 
   896  0495                     	;# 
   897  0496                     	;# 
   898  0497                     	;# 
   899  0498                     	;# 
   900  0499                     	;# 
   901  049A                     	;# 
   902  049B                     	;# 
   903  049C                     	;# 
   904  049D                     	;# 
   905  050C                     	;# 
   906  050C                     	;# 
   907  050D                     	;# 
   908  050E                     	;# 
   909  050F                     	;# 
   910  050F                     	;# 
   911  0510                     	;# 
   912  0511                     	;# 
   913  0512                     	;# 
   914  0512                     	;# 
   915  0513                     	;# 
   916  0514                     	;# 
   917  0515                     	;# 
   918  0515                     	;# 
   919  0516                     	;# 
   920  0517                     	;# 
   921  0518                     	;# 
   922  0519                     	;# 
   923  051A                     	;# 
   924  051B                     	;# 
   925  051C                     	;# 
   926  051D                     	;# 
   927  058C                     	;# 
   928  058C                     	;# 
   929  058D                     	;# 
   930  058E                     	;# 
   931  058F                     	;# 
   932  058F                     	;# 
   933  0590                     	;# 
   934  0591                     	;# 
   935  0592                     	;# 
   936  0593                     	;# 
   937  060C                     	;# 
   938  060D                     	;# 
   939  060E                     	;# 
   940  060F                     	;# 
   941  0610                     	;# 
   942  0611                     	;# 
   943  0612                     	;# 
   944  0613                     	;# 
   945  0614                     	;# 
   946  0616                     	;# 
   947  0617                     	;# 
   948  0618                     	;# 
   949  0619                     	;# 
   950  061A                     	;# 
   951  061B                     	;# 
   952  061C                     	;# 
   953  061D                     	;# 
   954  061E                     	;# 
   955  068C                     	;# 
   956  068D                     	;# 
   957  068E                     	;# 
   958  068F                     	;# 
   959  0690                     	;# 
   960  0691                     	;# 
   961  0692                     	;# 
   962  0693                     	;# 
   963  0694                     	;# 
   964  070C                     	;# 
   965  070D                     	;# 
   966  070E                     	;# 
   967  070F                     	;# 
   968  0710                     	;# 
   969  0711                     	;# 
   970  0712                     	;# 
   971  0713                     	;# 
   972  0714                     	;# 
   973  0716                     	;# 
   974  0717                     	;# 
   975  0718                     	;# 
   976  0719                     	;# 
   977  071A                     	;# 
   978  071B                     	;# 
   979  071C                     	;# 
   980  071D                     	;# 
   981  071E                     	;# 
   982  0796                     	;# 
   983  0797                     	;# 
   984  0798                     	;# 
   985  0799                     	;# 
   986  079A                     	;# 
   987  079B                     	;# 
   988  080C                     	;# 
   989  080D                     	;# 
   990  080E                     	;# 
   991  080F                     	;# 
   992  0810                     	;# 
   993  0811                     	;# 
   994  0812                     	;# 
   995  0813                     	;# 
   996  0814                     	;# 
   997  081A                     	;# 
   998  081B                     	;# 
   999  081C                     	;# 
  1000  081D                     	;# 
  1001  081E                     	;# 
  1002  081F                     	;# 
  1003  088C                     	;# 
  1004  088D                     	;# 
  1005  088E                     	;# 
  1006  088F                     	;# 
  1007  0890                     	;# 
  1008  0891                     	;# 
  1009  0892                     	;# 
  1010  0893                     	;# 
  1011  0895                     	;# 
  1012  0896                     	;# 
  1013  0897                     	;# 
  1014  0898                     	;# 
  1015  0899                     	;# 
  1016  089A                     	;# 
  1017  089B                     	;# 
  1018  090C                     	;# 
  1019  090E                     	;# 
  1020  090F                     	;# 
  1021  091F                     	;# 
  1022  091F                     	;# 
  1023  098F                     	;# 
  1024  098F                     	;# 
  1025  0990                     	;# 
  1026  0991                     	;# 
  1027  0992                     	;# 
  1028  0993                     	;# 
  1029  0994                     	;# 
  1030  0995                     	;# 
  1031  0996                     	;# 
  1032  0997                     	;# 
  1033  0E0F                     	;# 
  1034  0E10                     	;# 
  1035  0E11                     	;# 
  1036  0E12                     	;# 
  1037  0E13                     	;# 
  1038  0E14                     	;# 
  1039  0E15                     	;# 
  1040  0E16                     	;# 
  1041  0E17                     	;# 
  1042  0E18                     	;# 
  1043  0E19                     	;# 
  1044  0E1A                     	;# 
  1045  0E1B                     	;# 
  1046  0E1C                     	;# 
  1047  0E1D                     	;# 
  1048  0E1E                     	;# 
  1049  0E1F                     	;# 
  1050  0E20                     	;# 
  1051  0E21                     	;# 
  1052  0E22                     	;# 
  1053  0E23                     	;# 
  1054  0E24                     	;# 
  1055  0E25                     	;# 
  1056  0E26                     	;# 
  1057  0E27                     	;# 
  1058  0E28                     	;# 
  1059  0E29                     	;# 
  1060  0E2A                     	;# 
  1061  0E2B                     	;# 
  1062  0E2C                     	;# 
  1063  0E2D                     	;# 
  1064  0E2E                     	;# 
  1065  0E2F                     	;# 
  1066  0E30                     	;# 
  1067  0E31                     	;# 
  1068  0E32                     	;# 
  1069  0E33                     	;# 
  1070  0E34                     	;# 
  1071  0E35                     	;# 
  1072  0E36                     	;# 
  1073  0E37                     	;# 
  1074  0E8F                     	;# 
  1075  0E90                     	;# 
  1076  0E91                     	;# 
  1077  0E92                     	;# 
  1078  0E93                     	;# 
  1079  0E94                     	;# 
  1080  0E95                     	;# 
  1081  0E96                     	;# 
  1082  0E97                     	;# 
  1083  0E9C                     	;# 
  1084  0E9D                     	;# 
  1085  0E9E                     	;# 
  1086  0EA1                     	;# 
  1087  0EA2                     	;# 
  1088  0EA3                     	;# 
  1089  0EA4                     	;# 
  1090  0EA5                     	;# 
  1091  0EA9                     	;# 
  1092  0EAA                     	;# 
  1093  0EAB                     	;# 
  1094  0EAC                     	;# 
  1095  0EB1                     	;# 
  1096  0EB2                     	;# 
  1097  0EB3                     	;# 
  1098  0EB8                     	;# 
  1099  0EB9                     	;# 
  1100  0EBA                     	;# 
  1101  0EBB                     	;# 
  1102  0EBC                     	;# 
  1103  0EBD                     	;# 
  1104  0EBE                     	;# 
  1105  0EC3                     	;# 
  1106  0EC5                     	;# 
  1107  0EC6                     	;# 
  1108  0EC7                     	;# 
  1109  0EC8                     	;# 
  1110  0EC9                     	;# 
  1111  0ECA                     	;# 
  1112  0ECB                     	;# 
  1113  0ECC                     	;# 
  1114  0F10                     	;# 
  1115  0F11                     	;# 
  1116  0F12                     	;# 
  1117  0F13                     	;# 
  1118  0F14                     	;# 
  1119  0F15                     	;# 
  1120  0F16                     	;# 
  1121  0F17                     	;# 
  1122  0F18                     	;# 
  1123  0F19                     	;# 
  1124  0F1A                     	;# 
  1125  0F1B                     	;# 
  1126  0F1C                     	;# 
  1127  0F1D                     	;# 
  1128  0F1E                     	;# 
  1129  0F1F                     	;# 
  1130  0F20                     	;# 
  1131  0F21                     	;# 
  1132  0F22                     	;# 
  1133  0F23                     	;# 
  1134  0F24                     	;# 
  1135  0F25                     	;# 
  1136  0F26                     	;# 
  1137  0F27                     	;# 
  1138  0F28                     	;# 
  1139  0F29                     	;# 
  1140  0F2A                     	;# 
  1141  0F2B                     	;# 
  1142  0F2C                     	;# 
  1143  0F2D                     	;# 
  1144  0F2E                     	;# 
  1145  0F2F                     	;# 
  1146  0F30                     	;# 
  1147  0F31                     	;# 
  1148  0F32                     	;# 
  1149  0F38                     	;# 
  1150  0F39                     	;# 
  1151  0F3A                     	;# 
  1152  0F3B                     	;# 
  1153  0F3C                     	;# 
  1154  0F3D                     	;# 
  1155  0F3E                     	;# 
  1156  0F3F                     	;# 
  1157  0F40                     	;# 
  1158  0F41                     	;# 
  1159  0F43                     	;# 
  1160  0F44                     	;# 
  1161  0F45                     	;# 
  1162  0F46                     	;# 
  1163  0F47                     	;# 
  1164  0F48                     	;# 
  1165  0F49                     	;# 
  1166  0F4A                     	;# 
  1167  0F4B                     	;# 
  1168  0F4C                     	;# 
  1169  0F4E                     	;# 
  1170  0F4F                     	;# 
  1171  0F50                     	;# 
  1172  0F51                     	;# 
  1173  0F52                     	;# 
  1174  0F53                     	;# 
  1175  0F54                     	;# 
  1176  0F55                     	;# 
  1177  0F56                     	;# 
  1178  0F57                     	;# 
  1179  0F59                     	;# 
  1180  0F5A                     	;# 
  1181  0F5B                     	;# 
  1182  0F5C                     	;# 
  1183  0F5D                     	;# 
  1184  0F61                     	;# 
  1185  0F62                     	;# 
  1186  0F64                     	;# 
  1187  0F65                     	;# 
  1188  0F66                     	;# 
  1189  0F67                     	;# 
  1190  0F68                     	;# 
  1191  0F69                     	;# 
  1192  0F6A                     	;# 
  1193  0F6B                     	;# 
  1194  0F6C                     	;# 
  1195  0F6D                     	;# 
  1196  0FE4                     	;# 
  1197  0FE5                     	;# 
  1198  0FE6                     	;# 
  1199  0FE7                     	;# 
  1200  0FE8                     	;# 
  1201  0FE9                     	;# 
  1202  0FEA                     	;# 
  1203  0FEB                     	;# 
  1204  0FED                     	;# 
  1205  0FEE                     	;# 
  1206  0FEF                     	;# 
  1207  0000                     	;# 
  1208  0001                     	;# 
  1209  0002                     	;# 
  1210  0003                     	;# 
  1211  0004                     	;# 
  1212  0005                     	;# 
  1213  0006                     	;# 
  1214  0007                     	;# 
  1215  0008                     	;# 
  1216  0009                     	;# 
  1217  000A                     	;# 
  1218  000B                     	;# 
  1219  000C                     	;# 
  1220  000D                     	;# 
  1221  000E                     	;# 
  1222  000F                     	;# 
  1223  0010                     	;# 
  1224  0011                     	;# 
  1225  0012                     	;# 
  1226  0013                     	;# 
  1227  0014                     	;# 
  1228  0015                     	;# 
  1229  0016                     	;# 
  1230  0017                     	;# 
  1231  0018                     	;# 
  1232  0019                     	;# 
  1233  001A                     	;# 
  1234  001C                     	;# 
  1235  001C                     	;# 
  1236  001D                     	;# 
  1237  001D                     	;# 
  1238  001E                     	;# 
  1239  001F                     	;# 
  1240  008C                     	;# 
  1241  008C                     	;# 
  1242  008D                     	;# 
  1243  008E                     	;# 
  1244  008E                     	;# 
  1245  008F                     	;# 
  1246  0090                     	;# 
  1247  0090                     	;# 
  1248  0091                     	;# 
  1249  0093                     	;# 
  1250  0094                     	;# 
  1251  0095                     	;# 
  1252  0096                     	;# 
  1253  0097                     	;# 
  1254  0098                     	;# 
  1255  0099                     	;# 
  1256  009A                     	;# 
  1257  009B                     	;# 
  1258  009C                     	;# 
  1259  009D                     	;# 
  1260  009E                     	;# 
  1261  010C                     	;# 
  1262  010D                     	;# 
  1263  010E                     	;# 
  1264  010E                     	;# 
  1265  010F                     	;# 
  1266  0110                     	;# 
  1267  0110                     	;# 
  1268  0111                     	;# 
  1269  0112                     	;# 
  1270  0112                     	;# 
  1271  0113                     	;# 
  1272  0114                     	;# 
  1273  0114                     	;# 
  1274  0115                     	;# 
  1275  0116                     	;# 
  1276  0116                     	;# 
  1277  0117                     	;# 
  1278  0119                     	;# 
  1279  0119                     	;# 
  1280  0119                     	;# 
  1281  011A                     	;# 
  1282  011A                     	;# 
  1283  011A                     	;# 
  1284  011B                     	;# 
  1285  011B                     	;# 
  1286  011B                     	;# 
  1287  011B                     	;# 
  1288  011B                     	;# 
  1289  011C                     	;# 
  1290  011C                     	;# 
  1291  011C                     	;# 
  1292  011D                     	;# 
  1293  011D                     	;# 
  1294  011D                     	;# 
  1295  011E                     	;# 
  1296  011E                     	;# 
  1297  011E                     	;# 
  1298  011F                     	;# 
  1299  011F                     	;# 
  1300  011F                     	;# 
  1301  011F                     	;# 
  1302  011F                     	;# 
  1303  018C                     	;# 
  1304  018D                     	;# 
  1305  018E                     	;# 
  1306  018F                     	;# 
  1307  0190                     	;# 
  1308  0191                     	;# 
  1309  0192                     	;# 
  1310  0196                     	;# 
  1311  0197                     	;# 
  1312  0198                     	;# 
  1313  0199                     	;# 
  1314  019A                     	;# 
  1315  019B                     	;# 
  1316  019C                     	;# 
  1317  020C                     	;# 
  1318  020C                     	;# 
  1319  020D                     	;# 
  1320  020E                     	;# 
  1321  020F                     	;# 
  1322  020F                     	;# 
  1323  0210                     	;# 
  1324  0210                     	;# 
  1325  0211                     	;# 
  1326  0211                     	;# 
  1327  0212                     	;# 
  1328  0212                     	;# 
  1329  0213                     	;# 
  1330  0214                     	;# 
  1331  0215                     	;# 
  1332  0215                     	;# 
  1333  0216                     	;# 
  1334  0216                     	;# 
  1335  0217                     	;# 
  1336  0217                     	;# 
  1337  0218                     	;# 
  1338  0218                     	;# 
  1339  0219                     	;# 
  1340  021A                     	;# 
  1341  021B                     	;# 
  1342  021B                     	;# 
  1343  021C                     	;# 
  1344  021C                     	;# 
  1345  021D                     	;# 
  1346  021D                     	;# 
  1347  021E                     	;# 
  1348  021F                     	;# 
  1349  028C                     	;# 
  1350  028C                     	;# 
  1351  028D                     	;# 
  1352  028D                     	;# 
  1353  028E                     	;# 
  1354  028F                     	;# 
  1355  0290                     	;# 
  1356  0290                     	;# 
  1357  0291                     	;# 
  1358  0292                     	;# 
  1359  0292                     	;# 
  1360  0293                     	;# 
  1361  0293                     	;# 
  1362  0294                     	;# 
  1363  0295                     	;# 
  1364  0296                     	;# 
  1365  0296                     	;# 
  1366  0297                     	;# 
  1367  0298                     	;# 
  1368  0298                     	;# 
  1369  0299                     	;# 
  1370  0299                     	;# 
  1371  029A                     	;# 
  1372  029B                     	;# 
  1373  029C                     	;# 
  1374  029C                     	;# 
  1375  029D                     	;# 
  1376  030C                     	;# 
  1377  030C                     	;# 
  1378  030D                     	;# 
  1379  030E                     	;# 
  1380  030F                     	;# 
  1381  0310                     	;# 
  1382  0310                     	;# 
  1383  0311                     	;# 
  1384  0312                     	;# 
  1385  0313                     	;# 
  1386  0314                     	;# 
  1387  0314                     	;# 
  1388  0315                     	;# 
  1389  0316                     	;# 
  1390  0317                     	;# 
  1391  0318                     	;# 
  1392  0318                     	;# 
  1393  0319                     	;# 
  1394  031A                     	;# 
  1395  031B                     	;# 
  1396  031C                     	;# 
  1397  031C                     	;# 
  1398  031D                     	;# 
  1399  031E                     	;# 
  1400  031F                     	;# 
  1401  038C                     	;# 
  1402  038C                     	;# 
  1403  038D                     	;# 
  1404  038E                     	;# 
  1405  0390                     	;# 
  1406  0390                     	;# 
  1407  0391                     	;# 
  1408  0392                     	;# 
  1409  040C                     	;# 
  1410  040D                     	;# 
  1411  040E                     	;# 
  1412  040F                     	;# 
  1413  0410                     	;# 
  1414  0411                     	;# 
  1415  0416                     	;# 
  1416  0416                     	;# 
  1417  0417                     	;# 
  1418  0418                     	;# 
  1419  0418                     	;# 
  1420  0419                     	;# 
  1421  041A                     	;# 
  1422  041A                     	;# 
  1423  041B                     	;# 
  1424  041C                     	;# 
  1425  041C                     	;# 
  1426  041D                     	;# 
  1427  041E                     	;# 
  1428  041F                     	;# 
  1429  048C                     	;# 
  1430  048C                     	;# 
  1431  048D                     	;# 
  1432  048E                     	;# 
  1433  048F                     	;# 
  1434  048F                     	;# 
  1435  0490                     	;# 
  1436  0491                     	;# 
  1437  0492                     	;# 
  1438  0492                     	;# 
  1439  0493                     	;# 
  1440  0494                     	;# 
  1441  0495                     	;# 
  1442  0495                     	;# 
  1443  0496                     	;# 
  1444  0497                     	;# 
  1445  0498                     	;# 
  1446  0499                     	;# 
  1447  049A                     	;# 
  1448  049B                     	;# 
  1449  049C                     	;# 
  1450  049D                     	;# 
  1451  050C                     	;# 
  1452  050C                     	;# 
  1453  050D                     	;# 
  1454  050E                     	;# 
  1455  050F                     	;# 
  1456  050F                     	;# 
  1457  0510                     	;# 
  1458  0511                     	;# 
  1459  0512                     	;# 
  1460  0512                     	;# 
  1461  0513                     	;# 
  1462  0514                     	;# 
  1463  0515                     	;# 
  1464  0515                     	;# 
  1465  0516                     	;# 
  1466  0517                     	;# 
  1467  0518                     	;# 
  1468  0519                     	;# 
  1469  051A                     	;# 
  1470  051B                     	;# 
  1471  051C                     	;# 
  1472  051D                     	;# 
  1473  058C                     	;# 
  1474  058C                     	;# 
  1475  058D                     	;# 
  1476  058E                     	;# 
  1477  058F                     	;# 
  1478  058F                     	;# 
  1479  0590                     	;# 
  1480  0591                     	;# 
  1481  0592                     	;# 
  1482  0593                     	;# 
  1483  060C                     	;# 
  1484  060D                     	;# 
  1485  060E                     	;# 
  1486  060F                     	;# 
  1487  0610                     	;# 
  1488  0611                     	;# 
  1489  0612                     	;# 
  1490  0613                     	;# 
  1491  0614                     	;# 
  1492  0616                     	;# 
  1493  0617                     	;# 
  1494  0618                     	;# 
  1495  0619                     	;# 
  1496  061A                     	;# 
  1497  061B                     	;# 
  1498  061C                     	;# 
  1499  061D                     	;# 
  1500  061E                     	;# 
  1501  068C                     	;# 
  1502  068D                     	;# 
  1503  068E                     	;# 
  1504  068F                     	;# 
  1505  0690                     	;# 
  1506  0691                     	;# 
  1507  0692                     	;# 
  1508  0693                     	;# 
  1509  0694                     	;# 
  1510  070C                     	;# 
  1511  070D                     	;# 
  1512  070E                     	;# 
  1513  070F                     	;# 
  1514  0710                     	;# 
  1515  0711                     	;# 
  1516  0712                     	;# 
  1517  0713                     	;# 
  1518  0714                     	;# 
  1519  0716                     	;# 
  1520  0717                     	;# 
  1521  0718                     	;# 
  1522  0719                     	;# 
  1523  071A                     	;# 
  1524  071B                     	;# 
  1525  071C                     	;# 
  1526  071D                     	;# 
  1527  071E                     	;# 
  1528  0796                     	;# 
  1529  0797                     	;# 
  1530  0798                     	;# 
  1531  0799                     	;# 
  1532  079A                     	;# 
  1533  079B                     	;# 
  1534  080C                     	;# 
  1535  080D                     	;# 
  1536  080E                     	;# 
  1537  080F                     	;# 
  1538  0810                     	;# 
  1539  0811                     	;# 
  1540  0812                     	;# 
  1541  0813                     	;# 
  1542  0814                     	;# 
  1543  081A                     	;# 
  1544  081B                     	;# 
  1545  081C                     	;# 
  1546  081D                     	;# 
  1547  081E                     	;# 
  1548  081F                     	;# 
  1549  088C                     	;# 
  1550  088D                     	;# 
  1551  088E                     	;# 
  1552  088F                     	;# 
  1553  0890                     	;# 
  1554  0891                     	;# 
  1555  0892                     	;# 
  1556  0893                     	;# 
  1557  0895                     	;# 
  1558  0896                     	;# 
  1559  0897                     	;# 
  1560  0898                     	;# 
  1561  0899                     	;# 
  1562  089A                     	;# 
  1563  089B                     	;# 
  1564  090C                     	;# 
  1565  090E                     	;# 
  1566  090F                     	;# 
  1567  091F                     	;# 
  1568  091F                     	;# 
  1569  098F                     	;# 
  1570  098F                     	;# 
  1571  0990                     	;# 
  1572  0991                     	;# 
  1573  0992                     	;# 
  1574  0993                     	;# 
  1575  0994                     	;# 
  1576  0995                     	;# 
  1577  0996                     	;# 
  1578  0997                     	;# 
  1579  0E0F                     	;# 
  1580  0E10                     	;# 
  1581  0E11                     	;# 
  1582  0E12                     	;# 
  1583  0E13                     	;# 
  1584  0E14                     	;# 
  1585  0E15                     	;# 
  1586  0E16                     	;# 
  1587  0E17                     	;# 
  1588  0E18                     	;# 
  1589  0E19                     	;# 
  1590  0E1A                     	;# 
  1591  0E1B                     	;# 
  1592  0E1C                     	;# 
  1593  0E1D                     	;# 
  1594  0E1E                     	;# 
  1595  0E1F                     	;# 
  1596  0E20                     	;# 
  1597  0E21                     	;# 
  1598  0E22                     	;# 
  1599  0E23                     	;# 
  1600  0E24                     	;# 
  1601  0E25                     	;# 
  1602  0E26                     	;# 
  1603  0E27                     	;# 
  1604  0E28                     	;# 
  1605  0E29                     	;# 
  1606  0E2A                     	;# 
  1607  0E2B                     	;# 
  1608  0E2C                     	;# 
  1609  0E2D                     	;# 
  1610  0E2E                     	;# 
  1611  0E2F                     	;# 
  1612  0E30                     	;# 
  1613  0E31                     	;# 
  1614  0E32                     	;# 
  1615  0E33                     	;# 
  1616  0E34                     	;# 
  1617  0E35                     	;# 
  1618  0E36                     	;# 
  1619  0E37                     	;# 
  1620  0E8F                     	;# 
  1621  0E90                     	;# 
  1622  0E91                     	;# 
  1623  0E92                     	;# 
  1624  0E93                     	;# 
  1625  0E94                     	;# 
  1626  0E95                     	;# 
  1627  0E96                     	;# 
  1628  0E97                     	;# 
  1629  0E9C                     	;# 
  1630  0E9D                     	;# 
  1631  0E9E                     	;# 
  1632  0EA1                     	;# 
  1633  0EA2                     	;# 
  1634  0EA3                     	;# 
  1635  0EA4                     	;# 
  1636  0EA5                     	;# 
  1637  0EA9                     	;# 
  1638  0EAA                     	;# 
  1639  0EAB                     	;# 
  1640  0EAC                     	;# 
  1641  0EB1                     	;# 
  1642  0EB2                     	;# 
  1643  0EB3                     	;# 
  1644  0EB8                     	;# 
  1645  0EB9                     	;# 
  1646  0EBA                     	;# 
  1647  0EBB                     	;# 
  1648  0EBC                     	;# 
  1649  0EBD                     	;# 
  1650  0EBE                     	;# 
  1651  0EC3                     	;# 
  1652  0EC5                     	;# 
  1653  0EC6                     	;# 
  1654  0EC7                     	;# 
  1655  0EC8                     	;# 
  1656  0EC9                     	;# 
  1657  0ECA                     	;# 
  1658  0ECB                     	;# 
  1659  0ECC                     	;# 
  1660  0F10                     	;# 
  1661  0F11                     	;# 
  1662  0F12                     	;# 
  1663  0F13                     	;# 
  1664  0F14                     	;# 
  1665  0F15                     	;# 
  1666  0F16                     	;# 
  1667  0F17                     	;# 
  1668  0F18                     	;# 
  1669  0F19                     	;# 
  1670  0F1A                     	;# 
  1671  0F1B                     	;# 
  1672  0F1C                     	;# 
  1673  0F1D                     	;# 
  1674  0F1E                     	;# 
  1675  0F1F                     	;# 
  1676  0F20                     	;# 
  1677  0F21                     	;# 
  1678  0F22                     	;# 
  1679  0F23                     	;# 
  1680  0F24                     	;# 
  1681  0F25                     	;# 
  1682  0F26                     	;# 
  1683  0F27                     	;# 
  1684  0F28                     	;# 
  1685  0F29                     	;# 
  1686  0F2A                     	;# 
  1687  0F2B                     	;# 
  1688  0F2C                     	;# 
  1689  0F2D                     	;# 
  1690  0F2E                     	;# 
  1691  0F2F                     	;# 
  1692  0F30                     	;# 
  1693  0F31                     	;# 
  1694  0F32                     	;# 
  1695  0F38                     	;# 
  1696  0F39                     	;# 
  1697  0F3A                     	;# 
  1698  0F3B                     	;# 
  1699  0F3C                     	;# 
  1700  0F3D                     	;# 
  1701  0F3E                     	;# 
  1702  0F3F                     	;# 
  1703  0F40                     	;# 
  1704  0F41                     	;# 
  1705  0F43                     	;# 
  1706  0F44                     	;# 
  1707  0F45                     	;# 
  1708  0F46                     	;# 
  1709  0F47                     	;# 
  1710  0F48                     	;# 
  1711  0F49                     	;# 
  1712  0F4A                     	;# 
  1713  0F4B                     	;# 
  1714  0F4C                     	;# 
  1715  0F4E                     	;# 
  1716  0F4F                     	;# 
  1717  0F50                     	;# 
  1718  0F51                     	;# 
  1719  0F52                     	;# 
  1720  0F53                     	;# 
  1721  0F54                     	;# 
  1722  0F55                     	;# 
  1723  0F56                     	;# 
  1724  0F57                     	;# 
  1725  0F59                     	;# 
  1726  0F5A                     	;# 
  1727  0F5B                     	;# 
  1728  0F5C                     	;# 
  1729  0F5D                     	;# 
  1730  0F61                     	;# 
  1731  0F62                     	;# 
  1732  0F64                     	;# 
  1733  0F65                     	;# 
  1734  0F66                     	;# 
  1735  0F67                     	;# 
  1736  0F68                     	;# 
  1737  0F69                     	;# 
  1738  0F6A                     	;# 
  1739  0F6B                     	;# 
  1740  0F6C                     	;# 
  1741  0F6D                     	;# 
  1742  0FE4                     	;# 
  1743  0FE5                     	;# 
  1744  0FE6                     	;# 
  1745  0FE7                     	;# 
  1746  0FE8                     	;# 
  1747  0FE9                     	;# 
  1748  0FEA                     	;# 
  1749  0FEB                     	;# 
  1750  0FED                     	;# 
  1751  0FEE                     	;# 
  1752  0FEF                     	;# 
  1753  0000                     	;# 
  1754  0001                     	;# 
  1755  0002                     	;# 
  1756  0003                     	;# 
  1757  0004                     	;# 
  1758  0005                     	;# 
  1759  0006                     	;# 
  1760  0007                     	;# 
  1761  0008                     	;# 
  1762  0009                     	;# 
  1763  000A                     	;# 
  1764  000B                     	;# 
  1765  000C                     	;# 
  1766  000D                     	;# 
  1767  000E                     	;# 
  1768  000F                     	;# 
  1769  0010                     	;# 
  1770  0011                     	;# 
  1771  0012                     	;# 
  1772  0013                     	;# 
  1773  0014                     	;# 
  1774  0015                     	;# 
  1775  0016                     	;# 
  1776  0017                     	;# 
  1777  0018                     	;# 
  1778  0019                     	;# 
  1779  001A                     	;# 
  1780  001C                     	;# 
  1781  001C                     	;# 
  1782  001D                     	;# 
  1783  001D                     	;# 
  1784  001E                     	;# 
  1785  001F                     	;# 
  1786  008C                     	;# 
  1787  008C                     	;# 
  1788  008D                     	;# 
  1789  008E                     	;# 
  1790  008E                     	;# 
  1791  008F                     	;# 
  1792  0090                     	;# 
  1793  0090                     	;# 
  1794  0091                     	;# 
  1795  0093                     	;# 
  1796  0094                     	;# 
  1797  0095                     	;# 
  1798  0096                     	;# 
  1799  0097                     	;# 
  1800  0098                     	;# 
  1801  0099                     	;# 
  1802  009A                     	;# 
  1803  009B                     	;# 
  1804  009C                     	;# 
  1805  009D                     	;# 
  1806  009E                     	;# 
  1807  010C                     	;# 
  1808  010D                     	;# 
  1809  010E                     	;# 
  1810  010E                     	;# 
  1811  010F                     	;# 
  1812  0110                     	;# 
  1813  0110                     	;# 
  1814  0111                     	;# 
  1815  0112                     	;# 
  1816  0112                     	;# 
  1817  0113                     	;# 
  1818  0114                     	;# 
  1819  0114                     	;# 
  1820  0115                     	;# 
  1821  0116                     	;# 
  1822  0116                     	;# 
  1823  0117                     	;# 
  1824  0119                     	;# 
  1825  0119                     	;# 
  1826  0119                     	;# 
  1827  011A                     	;# 
  1828  011A                     	;# 
  1829  011A                     	;# 
  1830  011B                     	;# 
  1831  011B                     	;# 
  1832  011B                     	;# 
  1833  011B                     	;# 
  1834  011B                     	;# 
  1835  011C                     	;# 
  1836  011C                     	;# 
  1837  011C                     	;# 
  1838  011D                     	;# 
  1839  011D                     	;# 
  1840  011D                     	;# 
  1841  011E                     	;# 
  1842  011E                     	;# 
  1843  011E                     	;# 
  1844  011F                     	;# 
  1845  011F                     	;# 
  1846  011F                     	;# 
  1847  011F                     	;# 
  1848  011F                     	;# 
  1849  018C                     	;# 
  1850  018D                     	;# 
  1851  018E                     	;# 
  1852  018F                     	;# 
  1853  0190                     	;# 
  1854  0191                     	;# 
  1855  0192                     	;# 
  1856  0196                     	;# 
  1857  0197                     	;# 
  1858  0198                     	;# 
  1859  0199                     	;# 
  1860  019A                     	;# 
  1861  019B                     	;# 
  1862  019C                     	;# 
  1863  020C                     	;# 
  1864  020C                     	;# 
  1865  020D                     	;# 
  1866  020E                     	;# 
  1867  020F                     	;# 
  1868  020F                     	;# 
  1869  0210                     	;# 
  1870  0210                     	;# 
  1871  0211                     	;# 
  1872  0211                     	;# 
  1873  0212                     	;# 
  1874  0212                     	;# 
  1875  0213                     	;# 
  1876  0214                     	;# 
  1877  0215                     	;# 
  1878  0215                     	;# 
  1879  0216                     	;# 
  1880  0216                     	;# 
  1881  0217                     	;# 
  1882  0217                     	;# 
  1883  0218                     	;# 
  1884  0218                     	;# 
  1885  0219                     	;# 
  1886  021A                     	;# 
  1887  021B                     	;# 
  1888  021B                     	;# 
  1889  021C                     	;# 
  1890  021C                     	;# 
  1891  021D                     	;# 
  1892  021D                     	;# 
  1893  021E                     	;# 
  1894  021F                     	;# 
  1895  028C                     	;# 
  1896  028C                     	;# 
  1897  028D                     	;# 
  1898  028D                     	;# 
  1899  028E                     	;# 
  1900  028F                     	;# 
  1901  0290                     	;# 
  1902  0290                     	;# 
  1903  0291                     	;# 
  1904  0292                     	;# 
  1905  0292                     	;# 
  1906  0293                     	;# 
  1907  0293                     	;# 
  1908  0294                     	;# 
  1909  0295                     	;# 
  1910  0296                     	;# 
  1911  0296                     	;# 
  1912  0297                     	;# 
  1913  0298                     	;# 
  1914  0298                     	;# 
  1915  0299                     	;# 
  1916  0299                     	;# 
  1917  029A                     	;# 
  1918  029B                     	;# 
  1919  029C                     	;# 
  1920  029C                     	;# 
  1921  029D                     	;# 
  1922  030C                     	;# 
  1923  030C                     	;# 
  1924  030D                     	;# 
  1925  030E                     	;# 
  1926  030F                     	;# 
  1927  0310                     	;# 
  1928  0310                     	;# 
  1929  0311                     	;# 
  1930  0312                     	;# 
  1931  0313                     	;# 
  1932  0314                     	;# 
  1933  0314                     	;# 
  1934  0315                     	;# 
  1935  0316                     	;# 
  1936  0317                     	;# 
  1937  0318                     	;# 
  1938  0318                     	;# 
  1939  0319                     	;# 
  1940  031A                     	;# 
  1941  031B                     	;# 
  1942  031C                     	;# 
  1943  031C                     	;# 
  1944  031D                     	;# 
  1945  031E                     	;# 
  1946  031F                     	;# 
  1947  038C                     	;# 
  1948  038C                     	;# 
  1949  038D                     	;# 
  1950  038E                     	;# 
  1951  0390                     	;# 
  1952  0390                     	;# 
  1953  0391                     	;# 
  1954  0392                     	;# 
  1955  040C                     	;# 
  1956  040D                     	;# 
  1957  040E                     	;# 
  1958  040F                     	;# 
  1959  0410                     	;# 
  1960  0411                     	;# 
  1961  0416                     	;# 
  1962  0416                     	;# 
  1963  0417                     	;# 
  1964  0418                     	;# 
  1965  0418                     	;# 
  1966  0419                     	;# 
  1967  041A                     	;# 
  1968  041A                     	;# 
  1969  041B                     	;# 
  1970  041C                     	;# 
  1971  041C                     	;# 
  1972  041D                     	;# 
  1973  041E                     	;# 
  1974  041F                     	;# 
  1975  048C                     	;# 
  1976  048C                     	;# 
  1977  048D                     	;# 
  1978  048E                     	;# 
  1979  048F                     	;# 
  1980  048F                     	;# 
  1981  0490                     	;# 
  1982  0491                     	;# 
  1983  0492                     	;# 
  1984  0492                     	;# 
  1985  0493                     	;# 
  1986  0494                     	;# 
  1987  0495                     	;# 
  1988  0495                     	;# 
  1989  0496                     	;# 
  1990  0497                     	;# 
  1991  0498                     	;# 
  1992  0499                     	;# 
  1993  049A                     	;# 
  1994  049B                     	;# 
  1995  049C                     	;# 
  1996  049D                     	;# 
  1997  050C                     	;# 
  1998  050C                     	;# 
  1999  050D                     	;# 
  2000  050E                     	;# 
  2001  050F                     	;# 
  2002  050F                     	;# 
  2003  0510                     	;# 
  2004  0511                     	;# 
  2005  0512                     	;# 
  2006  0512                     	;# 
  2007  0513                     	;# 
  2008  0514                     	;# 
  2009  0515                     	;# 
  2010  0515                     	;# 
  2011  0516                     	;# 
  2012  0517                     	;# 
  2013  0518                     	;# 
  2014  0519                     	;# 
  2015  051A                     	;# 
  2016  051B                     	;# 
  2017  051C                     	;# 
  2018  051D                     	;# 
  2019  058C                     	;# 
  2020  058C                     	;# 
  2021  058D                     	;# 
  2022  058E                     	;# 
  2023  058F                     	;# 
  2024  058F                     	;# 
  2025  0590                     	;# 
  2026  0591                     	;# 
  2027  0592                     	;# 
  2028  0593                     	;# 
  2029  060C                     	;# 
  2030  060D                     	;# 
  2031  060E                     	;# 
  2032  060F                     	;# 
  2033  0610                     	;# 
  2034  0611                     	;# 
  2035  0612                     	;# 
  2036  0613                     	;# 
  2037  0614                     	;# 
  2038  0616                     	;# 
  2039  0617                     	;# 
  2040  0618                     	;# 
  2041  0619                     	;# 
  2042  061A                     	;# 
  2043  061B                     	;# 
  2044  061C                     	;# 
  2045  061D                     	;# 
  2046  061E                     	;# 
  2047  068C                     	;# 
  2048  068D                     	;# 
  2049  068E                     	;# 
  2050  068F                     	;# 
  2051  0690                     	;# 
  2052  0691                     	;# 
  2053  0692                     	;# 
  2054  0693                     	;# 
  2055  0694                     	;# 
  2056  070C                     	;# 
  2057  070D                     	;# 
  2058  070E                     	;# 
  2059  070F                     	;# 
  2060  0710                     	;# 
  2061  0711                     	;# 
  2062  0712                     	;# 
  2063  0713                     	;# 
  2064  0714                     	;# 
  2065  0716                     	;# 
  2066  0717                     	;# 
  2067  0718                     	;# 
  2068  0719                     	;# 
  2069  071A                     	;# 
  2070  071B                     	;# 
  2071  071C                     	;# 
  2072  071D                     	;# 
  2073  071E                     	;# 
  2074  0796                     	;# 
  2075  0797                     	;# 
  2076  0798                     	;# 
  2077  0799                     	;# 
  2078  079A                     	;# 
  2079  079B                     	;# 
  2080  080C                     	;# 
  2081  080D                     	;# 
  2082  080E                     	;# 
  2083  080F                     	;# 
  2084  0810                     	;# 
  2085  0811                     	;# 
  2086  0812                     	;# 
  2087  0813                     	;# 
  2088  0814                     	;# 
  2089  081A                     	;# 
  2090  081B                     	;# 
  2091  081C                     	;# 
  2092  081D                     	;# 
  2093  081E                     	;# 
  2094  081F                     	;# 
  2095  088C                     	;# 
  2096  088D                     	;# 
  2097  088E                     	;# 
  2098  088F                     	;# 
  2099  0890                     	;# 
  2100  0891                     	;# 
  2101  0892                     	;# 
  2102  0893                     	;# 
  2103  0895                     	;# 
  2104  0896                     	;# 
  2105  0897                     	;# 
  2106  0898                     	;# 
  2107  0899                     	;# 
  2108  089A                     	;# 
  2109  089B                     	;# 
  2110  090C                     	;# 
  2111  090E                     	;# 
  2112  090F                     	;# 
  2113  091F                     	;# 
  2114  091F                     	;# 
  2115  098F                     	;# 
  2116  098F                     	;# 
  2117  0990                     	;# 
  2118  0991                     	;# 
  2119  0992                     	;# 
  2120  0993                     	;# 
  2121  0994                     	;# 
  2122  0995                     	;# 
  2123  0996                     	;# 
  2124  0997                     	;# 
  2125  0E0F                     	;# 
  2126  0E10                     	;# 
  2127  0E11                     	;# 
  2128  0E12                     	;# 
  2129  0E13                     	;# 
  2130  0E14                     	;# 
  2131  0E15                     	;# 
  2132  0E16                     	;# 
  2133  0E17                     	;# 
  2134  0E18                     	;# 
  2135  0E19                     	;# 
  2136  0E1A                     	;# 
  2137  0E1B                     	;# 
  2138  0E1C                     	;# 
  2139  0E1D                     	;# 
  2140  0E1E                     	;# 
  2141  0E1F                     	;# 
  2142  0E20                     	;# 
  2143  0E21                     	;# 
  2144  0E22                     	;# 
  2145  0E23                     	;# 
  2146  0E24                     	;# 
  2147  0E25                     	;# 
  2148  0E26                     	;# 
  2149  0E27                     	;# 
  2150  0E28                     	;# 
  2151  0E29                     	;# 
  2152  0E2A                     	;# 
  2153  0E2B                     	;# 
  2154  0E2C                     	;# 
  2155  0E2D                     	;# 
  2156  0E2E                     	;# 
  2157  0E2F                     	;# 
  2158  0E30                     	;# 
  2159  0E31                     	;# 
  2160  0E32                     	;# 
  2161  0E33                     	;# 
  2162  0E34                     	;# 
  2163  0E35                     	;# 
  2164  0E36                     	;# 
  2165  0E37                     	;# 
  2166  0E8F                     	;# 
  2167  0E90                     	;# 
  2168  0E91                     	;# 
  2169  0E92                     	;# 
  2170  0E93                     	;# 
  2171  0E94                     	;# 
  2172  0E95                     	;# 
  2173  0E96                     	;# 
  2174  0E97                     	;# 
  2175  0E9C                     	;# 
  2176  0E9D                     	;# 
  2177  0E9E                     	;# 
  2178  0EA1                     	;# 
  2179  0EA2                     	;# 
  2180  0EA3                     	;# 
  2181  0EA4                     	;# 
  2182  0EA5                     	;# 
  2183  0EA9                     	;# 
  2184  0EAA                     	;# 
  2185  0EAB                     	;# 
  2186  0EAC                     	;# 
  2187  0EB1                     	;# 
  2188  0EB2                     	;# 
  2189  0EB3                     	;# 
  2190  0EB8                     	;# 
  2191  0EB9                     	;# 
  2192  0EBA                     	;# 
  2193  0EBB                     	;# 
  2194  0EBC                     	;# 
  2195  0EBD                     	;# 
  2196  0EBE                     	;# 
  2197  0EC3                     	;# 
  2198  0EC5                     	;# 
  2199  0EC6                     	;# 
  2200  0EC7                     	;# 
  2201  0EC8                     	;# 
  2202  0EC9                     	;# 
  2203  0ECA                     	;# 
  2204  0ECB                     	;# 
  2205  0ECC                     	;# 
  2206  0F10                     	;# 
  2207  0F11                     	;# 
  2208  0F12                     	;# 
  2209  0F13                     	;# 
  2210  0F14                     	;# 
  2211  0F15                     	;# 
  2212  0F16                     	;# 
  2213  0F17                     	;# 
  2214  0F18                     	;# 
  2215  0F19                     	;# 
  2216  0F1A                     	;# 
  2217  0F1B                     	;# 
  2218  0F1C                     	;# 
  2219  0F1D                     	;# 
  2220  0F1E                     	;# 
  2221  0F1F                     	;# 
  2222  0F20                     	;# 
  2223  0F21                     	;# 
  2224  0F22                     	;# 
  2225  0F23                     	;# 
  2226  0F24                     	;# 
  2227  0F25                     	;# 
  2228  0F26                     	;# 
  2229  0F27                     	;# 
  2230  0F28                     	;# 
  2231  0F29                     	;# 
  2232  0F2A                     	;# 
  2233  0F2B                     	;# 
  2234  0F2C                     	;# 
  2235  0F2D                     	;# 
  2236  0F2E                     	;# 
  2237  0F2F                     	;# 
  2238  0F30                     	;# 
  2239  0F31                     	;# 
  2240  0F32                     	;# 
  2241  0F38                     	;# 
  2242  0F39                     	;# 
  2243  0F3A                     	;# 
  2244  0F3B                     	;# 
  2245  0F3C                     	;# 
  2246  0F3D                     	;# 
  2247  0F3E                     	;# 
  2248  0F3F                     	;# 
  2249  0F40                     	;# 
  2250  0F41                     	;# 
  2251  0F43                     	;# 
  2252  0F44                     	;# 
  2253  0F45                     	;# 
  2254  0F46                     	;# 
  2255  0F47                     	;# 
  2256  0F48                     	;# 
  2257  0F49                     	;# 
  2258  0F4A                     	;# 
  2259  0F4B                     	;# 
  2260  0F4C                     	;# 
  2261  0F4E                     	;# 
  2262  0F4F                     	;# 
  2263  0F50                     	;# 
  2264  0F51                     	;# 
  2265  0F52                     	;# 
  2266  0F53                     	;# 
  2267  0F54                     	;# 
  2268  0F55                     	;# 
  2269  0F56                     	;# 
  2270  0F57                     	;# 
  2271  0F59                     	;# 
  2272  0F5A                     	;# 
  2273  0F5B                     	;# 
  2274  0F5C                     	;# 
  2275  0F5D                     	;# 
  2276  0F61                     	;# 
  2277  0F62                     	;# 
  2278  0F64                     	;# 
  2279  0F65                     	;# 
  2280  0F66                     	;# 
  2281  0F67                     	;# 
  2282  0F68                     	;# 
  2283  0F69                     	;# 
  2284  0F6A                     	;# 
  2285  0F6B                     	;# 
  2286  0F6C                     	;# 
  2287  0F6D                     	;# 
  2288  0FE4                     	;# 
  2289  0FE5                     	;# 
  2290  0FE6                     	;# 
  2291  0FE7                     	;# 
  2292  0FE8                     	;# 
  2293  0FE9                     	;# 
  2294  0FEA                     	;# 
  2295  0FEB                     	;# 
  2296  0FED                     	;# 
  2297  0FEE                     	;# 
  2298  0FEF                     	;# 
  2299  0000                     	;# 
  2300  0001                     	;# 
  2301  0002                     	;# 
  2302  0003                     	;# 
  2303  0004                     	;# 
  2304  0005                     	;# 
  2305  0006                     	;# 
  2306  0007                     	;# 
  2307  0008                     	;# 
  2308  0009                     	;# 
  2309  000A                     	;# 
  2310  000B                     	;# 
  2311  000C                     	;# 
  2312  000D                     	;# 
  2313  000E                     	;# 
  2314  000F                     	;# 
  2315  0010                     	;# 
  2316  0011                     	;# 
  2317  0012                     	;# 
  2318  0013                     	;# 
  2319  0014                     	;# 
  2320  0015                     	;# 
  2321  0016                     	;# 
  2322  0017                     	;# 
  2323  0018                     	;# 
  2324  0019                     	;# 
  2325  001A                     	;# 
  2326  001C                     	;# 
  2327  001C                     	;# 
  2328  001D                     	;# 
  2329  001D                     	;# 
  2330  001E                     	;# 
  2331  001F                     	;# 
  2332  008C                     	;# 
  2333  008C                     	;# 
  2334  008D                     	;# 
  2335  008E                     	;# 
  2336  008E                     	;# 
  2337  008F                     	;# 
  2338  0090                     	;# 
  2339  0090                     	;# 
  2340  0091                     	;# 
  2341  0093                     	;# 
  2342  0094                     	;# 
  2343  0095                     	;# 
  2344  0096                     	;# 
  2345  0097                     	;# 
  2346  0098                     	;# 
  2347  0099                     	;# 
  2348  009A                     	;# 
  2349  009B                     	;# 
  2350  009C                     	;# 
  2351  009D                     	;# 
  2352  009E                     	;# 
  2353  010C                     	;# 
  2354  010D                     	;# 
  2355  010E                     	;# 
  2356  010E                     	;# 
  2357  010F                     	;# 
  2358  0110                     	;# 
  2359  0110                     	;# 
  2360  0111                     	;# 
  2361  0112                     	;# 
  2362  0112                     	;# 
  2363  0113                     	;# 
  2364  0114                     	;# 
  2365  0114                     	;# 
  2366  0115                     	;# 
  2367  0116                     	;# 
  2368  0116                     	;# 
  2369  0117                     	;# 
  2370  0119                     	;# 
  2371  0119                     	;# 
  2372  0119                     	;# 
  2373  011A                     	;# 
  2374  011A                     	;# 
  2375  011A                     	;# 
  2376  011B                     	;# 
  2377  011B                     	;# 
  2378  011B                     	;# 
  2379  011B                     	;# 
  2380  011B                     	;# 
  2381  011C                     	;# 
  2382  011C                     	;# 
  2383  011C                     	;# 
  2384  011D                     	;# 
  2385  011D                     	;# 
  2386  011D                     	;# 
  2387  011E                     	;# 
  2388  011E                     	;# 
  2389  011E                     	;# 
  2390  011F                     	;# 
  2391  011F                     	;# 
  2392  011F                     	;# 
  2393  011F                     	;# 
  2394  011F                     	;# 
  2395  018C                     	;# 
  2396  018D                     	;# 
  2397  018E                     	;# 
  2398  018F                     	;# 
  2399  0190                     	;# 
  2400  0191                     	;# 
  2401  0192                     	;# 
  2402  0196                     	;# 
  2403  0197                     	;# 
  2404  0198                     	;# 
  2405  0199                     	;# 
  2406  019A                     	;# 
  2407  019B                     	;# 
  2408  019C                     	;# 
  2409  020C                     	;# 
  2410  020C                     	;# 
  2411  020D                     	;# 
  2412  020E                     	;# 
  2413  020F                     	;# 
  2414  020F                     	;# 
  2415  0210                     	;# 
  2416  0210                     	;# 
  2417  0211                     	;# 
  2418  0211                     	;# 
  2419  0212                     	;# 
  2420  0212                     	;# 
  2421  0213                     	;# 
  2422  0214                     	;# 
  2423  0215                     	;# 
  2424  0215                     	;# 
  2425  0216                     	;# 
  2426  0216                     	;# 
  2427  0217                     	;# 
  2428  0217                     	;# 
  2429  0218                     	;# 
  2430  0218                     	;# 
  2431  0219                     	;# 
  2432  021A                     	;# 
  2433  021B                     	;# 
  2434  021B                     	;# 
  2435  021C                     	;# 
  2436  021C                     	;# 
  2437  021D                     	;# 
  2438  021D                     	;# 
  2439  021E                     	;# 
  2440  021F                     	;# 
  2441  028C                     	;# 
  2442  028C                     	;# 
  2443  028D                     	;# 
  2444  028D                     	;# 
  2445  028E                     	;# 
  2446  028F                     	;# 
  2447  0290                     	;# 
  2448  0290                     	;# 
  2449  0291                     	;# 
  2450  0292                     	;# 
  2451  0292                     	;# 
  2452  0293                     	;# 
  2453  0293                     	;# 
  2454  0294                     	;# 
  2455  0295                     	;# 
  2456  0296                     	;# 
  2457  0296                     	;# 
  2458  0297                     	;# 
  2459  0298                     	;# 
  2460  0298                     	;# 
  2461  0299                     	;# 
  2462  0299                     	;# 
  2463  029A                     	;# 
  2464  029B                     	;# 
  2465  029C                     	;# 
  2466  029C                     	;# 
  2467  029D                     	;# 
  2468  030C                     	;# 
  2469  030C                     	;# 
  2470  030D                     	;# 
  2471  030E                     	;# 
  2472  030F                     	;# 
  2473  0310                     	;# 
  2474  0310                     	;# 
  2475  0311                     	;# 
  2476  0312                     	;# 
  2477  0313                     	;# 
  2478  0314                     	;# 
  2479  0314                     	;# 
  2480  0315                     	;# 
  2481  0316                     	;# 
  2482  0317                     	;# 
  2483  0318                     	;# 
  2484  0318                     	;# 
  2485  0319                     	;# 
  2486  031A                     	;# 
  2487  031B                     	;# 
  2488  031C                     	;# 
  2489  031C                     	;# 
  2490  031D                     	;# 
  2491  031E                     	;# 
  2492  031F                     	;# 
  2493  038C                     	;# 
  2494  038C                     	;# 
  2495  038D                     	;# 
  2496  038E                     	;# 
  2497  0390                     	;# 
  2498  0390                     	;# 
  2499  0391                     	;# 
  2500  0392                     	;# 
  2501  040C                     	;# 
  2502  040D                     	;# 
  2503  040E                     	;# 
  2504  040F                     	;# 
  2505  0410                     	;# 
  2506  0411                     	;# 
  2507  0416                     	;# 
  2508  0416                     	;# 
  2509  0417                     	;# 
  2510  0418                     	;# 
  2511  0418                     	;# 
  2512  0419                     	;# 
  2513  041A                     	;# 
  2514  041A                     	;# 
  2515  041B                     	;# 
  2516  041C                     	;# 
  2517  041C                     	;# 
  2518  041D                     	;# 
  2519  041E                     	;# 
  2520  041F                     	;# 
  2521  048C                     	;# 
  2522  048C                     	;# 
  2523  048D                     	;# 
  2524  048E                     	;# 
  2525  048F                     	;# 
  2526  048F                     	;# 
  2527  0490                     	;# 
  2528  0491                     	;# 
  2529  0492                     	;# 
  2530  0492                     	;# 
  2531  0493                     	;# 
  2532  0494                     	;# 
  2533  0495                     	;# 
  2534  0495                     	;# 
  2535  0496                     	;# 
  2536  0497                     	;# 
  2537  0498                     	;# 
  2538  0499                     	;# 
  2539  049A                     	;# 
  2540  049B                     	;# 
  2541  049C                     	;# 
  2542  049D                     	;# 
  2543  050C                     	;# 
  2544  050C                     	;# 
  2545  050D                     	;# 
  2546  050E                     	;# 
  2547  050F                     	;# 
  2548  050F                     	;# 
  2549  0510                     	;# 
  2550  0511                     	;# 
  2551  0512                     	;# 
  2552  0512                     	;# 
  2553  0513                     	;# 
  2554  0514                     	;# 
  2555  0515                     	;# 
  2556  0515                     	;# 
  2557  0516                     	;# 
  2558  0517                     	;# 
  2559  0518                     	;# 
  2560  0519                     	;# 
  2561  051A                     	;# 
  2562  051B                     	;# 
  2563  051C                     	;# 
  2564  051D                     	;# 
  2565  058C                     	;# 
  2566  058C                     	;# 
  2567  058D                     	;# 
  2568  058E                     	;# 
  2569  058F                     	;# 
  2570  058F                     	;# 
  2571  0590                     	;# 
  2572  0591                     	;# 
  2573  0592                     	;# 
  2574  0593                     	;# 
  2575  060C                     	;# 
  2576  060D                     	;# 
  2577  060E                     	;# 
  2578  060F                     	;# 
  2579  0610                     	;# 
  2580  0611                     	;# 
  2581  0612                     	;# 
  2582  0613                     	;# 
  2583  0614                     	;# 
  2584  0616                     	;# 
  2585  0617                     	;# 
  2586  0618                     	;# 
  2587  0619                     	;# 
  2588  061A                     	;# 
  2589  061B                     	;# 
  2590  061C                     	;# 
  2591  061D                     	;# 
  2592  061E                     	;# 
  2593  068C                     	;# 
  2594  068D                     	;# 
  2595  068E                     	;# 
  2596  068F                     	;# 
  2597  0690                     	;# 
  2598  0691                     	;# 
  2599  0692                     	;# 
  2600  0693                     	;# 
  2601  0694                     	;# 
  2602  070C                     	;# 
  2603  070D                     	;# 
  2604  070E                     	;# 
  2605  070F                     	;# 
  2606  0710                     	;# 
  2607  0711                     	;# 
  2608  0712                     	;# 
  2609  0713                     	;# 
  2610  0714                     	;# 
  2611  0716                     	;# 
  2612  0717                     	;# 
  2613  0718                     	;# 
  2614  0719                     	;# 
  2615  071A                     	;# 
  2616  071B                     	;# 
  2617  071C                     	;# 
  2618  071D                     	;# 
  2619  071E                     	;# 
  2620  0796                     	;# 
  2621  0797                     	;# 
  2622  0798                     	;# 
  2623  0799                     	;# 
  2624  079A                     	;# 
  2625  079B                     	;# 
  2626  080C                     	;# 
  2627  080D                     	;# 
  2628  080E                     	;# 
  2629  080F                     	;# 
  2630  0810                     	;# 
  2631  0811                     	;# 
  2632  0812                     	;# 
  2633  0813                     	;# 
  2634  0814                     	;# 
  2635  081A                     	;# 
  2636  081B                     	;# 
  2637  081C                     	;# 
  2638  081D                     	;# 
  2639  081E                     	;# 
  2640  081F                     	;# 
  2641  088C                     	;# 
  2642  088D                     	;# 
  2643  088E                     	;# 
  2644  088F                     	;# 
  2645  0890                     	;# 
  2646  0891                     	;# 
  2647  0892                     	;# 
  2648  0893                     	;# 
  2649  0895                     	;# 
  2650  0896                     	;# 
  2651  0897                     	;# 
  2652  0898                     	;# 
  2653  0899                     	;# 
  2654  089A                     	;# 
  2655  089B                     	;# 
  2656  090C                     	;# 
  2657  090E                     	;# 
  2658  090F                     	;# 
  2659  091F                     	;# 
  2660  091F                     	;# 
  2661  098F                     	;# 
  2662  098F                     	;# 
  2663  0990                     	;# 
  2664  0991                     	;# 
  2665  0992                     	;# 
  2666  0993                     	;# 
  2667  0994                     	;# 
  2668  0995                     	;# 
  2669  0996                     	;# 
  2670  0997                     	;# 
  2671  0E0F                     	;# 
  2672  0E10                     	;# 
  2673  0E11                     	;# 
  2674  0E12                     	;# 
  2675  0E13                     	;# 
  2676  0E14                     	;# 
  2677  0E15                     	;# 
  2678  0E16                     	;# 
  2679  0E17                     	;# 
  2680  0E18                     	;# 
  2681  0E19                     	;# 
  2682  0E1A                     	;# 
  2683  0E1B                     	;# 
  2684  0E1C                     	;# 
  2685  0E1D                     	;# 
  2686  0E1E                     	;# 
  2687  0E1F                     	;# 
  2688  0E20                     	;# 
  2689  0E21                     	;# 
  2690  0E22                     	;# 
  2691  0E23                     	;# 
  2692  0E24                     	;# 
  2693  0E25                     	;# 
  2694  0E26                     	;# 
  2695  0E27                     	;# 
  2696  0E28                     	;# 
  2697  0E29                     	;# 
  2698  0E2A                     	;# 
  2699  0E2B                     	;# 
  2700  0E2C                     	;# 
  2701  0E2D                     	;# 
  2702  0E2E                     	;# 
  2703  0E2F                     	;# 
  2704  0E30                     	;# 
  2705  0E31                     	;# 
  2706  0E32                     	;# 
  2707  0E33                     	;# 
  2708  0E34                     	;# 
  2709  0E35                     	;# 
  2710  0E36                     	;# 
  2711  0E37                     	;# 
  2712  0E8F                     	;# 
  2713  0E90                     	;# 
  2714  0E91                     	;# 
  2715  0E92                     	;# 
  2716  0E93                     	;# 
  2717  0E94                     	;# 
  2718  0E95                     	;# 
  2719  0E96                     	;# 
  2720  0E97                     	;# 
  2721  0E9C                     	;# 
  2722  0E9D                     	;# 
  2723  0E9E                     	;# 
  2724  0EA1                     	;# 
  2725  0EA2                     	;# 
  2726  0EA3                     	;# 
  2727  0EA4                     	;# 
  2728  0EA5                     	;# 
  2729  0EA9                     	;# 
  2730  0EAA                     	;# 
  2731  0EAB                     	;# 
  2732  0EAC                     	;# 
  2733  0EB1                     	;# 
  2734  0EB2                     	;# 
  2735  0EB3                     	;# 
  2736  0EB8                     	;# 
  2737  0EB9                     	;# 
  2738  0EBA                     	;# 
  2739  0EBB                     	;# 
  2740  0EBC                     	;# 
  2741  0EBD                     	;# 
  2742  0EBE                     	;# 
  2743  0EC3                     	;# 
  2744  0EC5                     	;# 
  2745  0EC6                     	;# 
  2746  0EC7                     	;# 
  2747  0EC8                     	;# 
  2748  0EC9                     	;# 
  2749  0ECA                     	;# 
  2750  0ECB                     	;# 
  2751  0ECC                     	;# 
  2752  0F10                     	;# 
  2753  0F11                     	;# 
  2754  0F12                     	;# 
  2755  0F13                     	;# 
  2756  0F14                     	;# 
  2757  0F15                     	;# 
  2758  0F16                     	;# 
  2759  0F17                     	;# 
  2760  0F18                     	;# 
  2761  0F19                     	;# 
  2762  0F1A                     	;# 
  2763  0F1B                     	;# 
  2764  0F1C                     	;# 
  2765  0F1D                     	;# 
  2766  0F1E                     	;# 
  2767  0F1F                     	;# 
  2768  0F20                     	;# 
  2769  0F21                     	;# 
  2770  0F22                     	;# 
  2771  0F23                     	;# 
  2772  0F24                     	;# 
  2773  0F25                     	;# 
  2774  0F26                     	;# 
  2775  0F27                     	;# 
  2776  0F28                     	;# 
  2777  0F29                     	;# 
  2778  0F2A                     	;# 
  2779  0F2B                     	;# 
  2780  0F2C                     	;# 
  2781  0F2D                     	;# 
  2782  0F2E                     	;# 
  2783  0F2F                     	;# 
  2784  0F30                     	;# 
  2785  0F31                     	;# 
  2786  0F32                     	;# 
  2787  0F38                     	;# 
  2788  0F39                     	;# 
  2789  0F3A                     	;# 
  2790  0F3B                     	;# 
  2791  0F3C                     	;# 
  2792  0F3D                     	;# 
  2793  0F3E                     	;# 
  2794  0F3F                     	;# 
  2795  0F40                     	;# 
  2796  0F41                     	;# 
  2797  0F43                     	;# 
  2798  0F44                     	;# 
  2799  0F45                     	;# 
  2800  0F46                     	;# 
  2801  0F47                     	;# 
  2802  0F48                     	;# 
  2803  0F49                     	;# 
  2804  0F4A                     	;# 
  2805  0F4B                     	;# 
  2806  0F4C                     	;# 
  2807  0F4E                     	;# 
  2808  0F4F                     	;# 
  2809  0F50                     	;# 
  2810  0F51                     	;# 
  2811  0F52                     	;# 
  2812  0F53                     	;# 
  2813  0F54                     	;# 
  2814  0F55                     	;# 
  2815  0F56                     	;# 
  2816  0F57                     	;# 
  2817  0F59                     	;# 
  2818  0F5A                     	;# 
  2819  0F5B                     	;# 
  2820  0F5C                     	;# 
  2821  0F5D                     	;# 
  2822  0F61                     	;# 
  2823  0F62                     	;# 
  2824  0F64                     	;# 
  2825  0F65                     	;# 
  2826  0F66                     	;# 
  2827  0F67                     	;# 
  2828  0F68                     	;# 
  2829  0F69                     	;# 
  2830  0F6A                     	;# 
  2831  0F6B                     	;# 
  2832  0F6C                     	;# 
  2833  0F6D                     	;# 
  2834  0FE4                     	;# 
  2835  0FE5                     	;# 
  2836  0FE6                     	;# 
  2837  0FE7                     	;# 
  2838  0FE8                     	;# 
  2839  0FE9                     	;# 
  2840  0FEA                     	;# 
  2841  0FEB                     	;# 
  2842  0FED                     	;# 
  2843  0FEE                     	;# 
  2844  0FEF                     	;# 
  2845  0000                     	;# 
  2846  0001                     	;# 
  2847  0002                     	;# 
  2848  0003                     	;# 
  2849  0004                     	;# 
  2850  0005                     	;# 
  2851  0006                     	;# 
  2852  0007                     	;# 
  2853  0008                     	;# 
  2854  0009                     	;# 
  2855  000A                     	;# 
  2856  000B                     	;# 
  2857  000C                     	;# 
  2858  000D                     	;# 
  2859  000E                     	;# 
  2860  000F                     	;# 
  2861  0010                     	;# 
  2862  0011                     	;# 
  2863  0012                     	;# 
  2864  0013                     	;# 
  2865  0014                     	;# 
  2866  0015                     	;# 
  2867  0016                     	;# 
  2868  0017                     	;# 
  2869  0018                     	;# 
  2870  0019                     	;# 
  2871  001A                     	;# 
  2872  001C                     	;# 
  2873  001C                     	;# 
  2874  001D                     	;# 
  2875  001D                     	;# 
  2876  001E                     	;# 
  2877  001F                     	;# 
  2878  008C                     	;# 
  2879  008C                     	;# 
  2880  008D                     	;# 
  2881  008E                     	;# 
  2882  008E                     	;# 
  2883  008F                     	;# 
  2884  0090                     	;# 
  2885  0090                     	;# 
  2886  0091                     	;# 
  2887  0093                     	;# 
  2888  0094                     	;# 
  2889  0095                     	;# 
  2890  0096                     	;# 
  2891  0097                     	;# 
  2892  0098                     	;# 
  2893  0099                     	;# 
  2894  009A                     	;# 
  2895  009B                     	;# 
  2896  009C                     	;# 
  2897  009D                     	;# 
  2898  009E                     	;# 
  2899  010C                     	;# 
  2900  010D                     	;# 
  2901  010E                     	;# 
  2902  010E                     	;# 
  2903  010F                     	;# 
  2904  0110                     	;# 
  2905  0110                     	;# 
  2906  0111                     	;# 
  2907  0112                     	;# 
  2908  0112                     	;# 
  2909  0113                     	;# 
  2910  0114                     	;# 
  2911  0114                     	;# 
  2912  0115                     	;# 
  2913  0116                     	;# 
  2914  0116                     	;# 
  2915  0117                     	;# 
  2916  0119                     	;# 
  2917  0119                     	;# 
  2918  0119                     	;# 
  2919  011A                     	;# 
  2920  011A                     	;# 
  2921  011A                     	;# 
  2922  011B                     	;# 
  2923  011B                     	;# 
  2924  011B                     	;# 
  2925  011B                     	;# 
  2926  011B                     	;# 
  2927  011C                     	;# 
  2928  011C                     	;# 
  2929  011C                     	;# 
  2930  011D                     	;# 
  2931  011D                     	;# 
  2932  011D                     	;# 
  2933  011E                     	;# 
  2934  011E                     	;# 
  2935  011E                     	;# 
  2936  011F                     	;# 
  2937  011F                     	;# 
  2938  011F                     	;# 
  2939  011F                     	;# 
  2940  011F                     	;# 
  2941  018C                     	;# 
  2942  018D                     	;# 
  2943  018E                     	;# 
  2944  018F                     	;# 
  2945  0190                     	;# 
  2946  0191                     	;# 
  2947  0192                     	;# 
  2948  0196                     	;# 
  2949  0197                     	;# 
  2950  0198                     	;# 
  2951  0199                     	;# 
  2952  019A                     	;# 
  2953  019B                     	;# 
  2954  019C                     	;# 
  2955  020C                     	;# 
  2956  020C                     	;# 
  2957  020D                     	;# 
  2958  020E                     	;# 
  2959  020F                     	;# 
  2960  020F                     	;# 
  2961  0210                     	;# 
  2962  0210                     	;# 
  2963  0211                     	;# 
  2964  0211                     	;# 
  2965  0212                     	;# 
  2966  0212                     	;# 
  2967  0213                     	;# 
  2968  0214                     	;# 
  2969  0215                     	;# 
  2970  0215                     	;# 
  2971  0216                     	;# 
  2972  0216                     	;# 
  2973  0217                     	;# 
  2974  0217                     	;# 
  2975  0218                     	;# 
  2976  0218                     	;# 
  2977  0219                     	;# 
  2978  021A                     	;# 
  2979  021B                     	;# 
  2980  021B                     	;# 
  2981  021C                     	;# 
  2982  021C                     	;# 
  2983  021D                     	;# 
  2984  021D                     	;# 
  2985  021E                     	;# 
  2986  021F                     	;# 
  2987  028C                     	;# 
  2988  028C                     	;# 
  2989  028D                     	;# 
  2990  028D                     	;# 
  2991  028E                     	;# 
  2992  028F                     	;# 
  2993  0290                     	;# 
  2994  0290                     	;# 
  2995  0291                     	;# 
  2996  0292                     	;# 
  2997  0292                     	;# 
  2998  0293                     	;# 
  2999  0293                     	;# 
  3000  0294                     	;# 
  3001  0295                     	;# 
  3002  0296                     	;# 
  3003  0296                     	;# 
  3004  0297                     	;# 
  3005  0298                     	;# 
  3006  0298                     	;# 
  3007  0299                     	;# 
  3008  0299                     	;# 
  3009  029A                     	;# 
  3010  029B                     	;# 
  3011  029C                     	;# 
  3012  029C                     	;# 
  3013  029D                     	;# 
  3014  030C                     	;# 
  3015  030C                     	;# 
  3016  030D                     	;# 
  3017  030E                     	;# 
  3018  030F                     	;# 
  3019  0310                     	;# 
  3020  0310                     	;# 
  3021  0311                     	;# 
  3022  0312                     	;# 
  3023  0313                     	;# 
  3024  0314                     	;# 
  3025  0314                     	;# 
  3026  0315                     	;# 
  3027  0316                     	;# 
  3028  0317                     	;# 
  3029  0318                     	;# 
  3030  0318                     	;# 
  3031  0319                     	;# 
  3032  031A                     	;# 
  3033  031B                     	;# 
  3034  031C                     	;# 
  3035  031C                     	;# 
  3036  031D                     	;# 
  3037  031E                     	;# 
  3038  031F                     	;# 
  3039  038C                     	;# 
  3040  038C                     	;# 
  3041  038D                     	;# 
  3042  038E                     	;# 
  3043  0390                     	;# 
  3044  0390                     	;# 
  3045  0391                     	;# 
  3046  0392                     	;# 
  3047  040C                     	;# 
  3048  040D                     	;# 
  3049  040E                     	;# 
  3050  040F                     	;# 
  3051  0410                     	;# 
  3052  0411                     	;# 
  3053  0416                     	;# 
  3054  0416                     	;# 
  3055  0417                     	;# 
  3056  0418                     	;# 
  3057  0418                     	;# 
  3058  0419                     	;# 
  3059  041A                     	;# 
  3060  041A                     	;# 
  3061  041B                     	;# 
  3062  041C                     	;# 
  3063  041C                     	;# 
  3064  041D                     	;# 
  3065  041E                     	;# 
  3066  041F                     	;# 
  3067  048C                     	;# 
  3068  048C                     	;# 
  3069  048D                     	;# 
  3070  048E                     	;# 
  3071  048F                     	;# 
  3072  048F                     	;# 
  3073  0490                     	;# 
  3074  0491                     	;# 
  3075  0492                     	;# 
  3076  0492                     	;# 
  3077  0493                     	;# 
  3078  0494                     	;# 
  3079  0495                     	;# 
  3080  0495                     	;# 
  3081  0496                     	;# 
  3082  0497                     	;# 
  3083  0498                     	;# 
  3084  0499                     	;# 
  3085  049A                     	;# 
  3086  049B                     	;# 
  3087  049C                     	;# 
  3088  049D                     	;# 
  3089  050C                     	;# 
  3090  050C                     	;# 
  3091  050D                     	;# 
  3092  050E                     	;# 
  3093  050F                     	;# 
  3094  050F                     	;# 
  3095  0510                     	;# 
  3096  0511                     	;# 
  3097  0512                     	;# 
  3098  0512                     	;# 
  3099  0513                     	;# 
  3100  0514                     	;# 
  3101  0515                     	;# 
  3102  0515                     	;# 
  3103  0516                     	;# 
  3104  0517                     	;# 
  3105  0518                     	;# 
  3106  0519                     	;# 
  3107  051A                     	;# 
  3108  051B                     	;# 
  3109  051C                     	;# 
  3110  051D                     	;# 
  3111  058C                     	;# 
  3112  058C                     	;# 
  3113  058D                     	;# 
  3114  058E                     	;# 
  3115  058F                     	;# 
  3116  058F                     	;# 
  3117  0590                     	;# 
  3118  0591                     	;# 
  3119  0592                     	;# 
  3120  0593                     	;# 
  3121  060C                     	;# 
  3122  060D                     	;# 
  3123  060E                     	;# 
  3124  060F                     	;# 
  3125  0610                     	;# 
  3126  0611                     	;# 
  3127  0612                     	;# 
  3128  0613                     	;# 
  3129  0614                     	;# 
  3130  0616                     	;# 
  3131  0617                     	;# 
  3132  0618                     	;# 
  3133  0619                     	;# 
  3134  061A                     	;# 
  3135  061B                     	;# 
  3136  061C                     	;# 
  3137  061D                     	;# 
  3138  061E                     	;# 
  3139  068C                     	;# 
  3140  068D                     	;# 
  3141  068E                     	;# 
  3142  068F                     	;# 
  3143  0690                     	;# 
  3144  0691                     	;# 
  3145  0692                     	;# 
  3146  0693                     	;# 
  3147  0694                     	;# 
  3148  070C                     	;# 
  3149  070D                     	;# 
  3150  070E                     	;# 
  3151  070F                     	;# 
  3152  0710                     	;# 
  3153  0711                     	;# 
  3154  0712                     	;# 
  3155  0713                     	;# 
  3156  0714                     	;# 
  3157  0716                     	;# 
  3158  0717                     	;# 
  3159  0718                     	;# 
  3160  0719                     	;# 
  3161  071A                     	;# 
  3162  071B                     	;# 
  3163  071C                     	;# 
  3164  071D                     	;# 
  3165  071E                     	;# 
  3166  0796                     	;# 
  3167  0797                     	;# 
  3168  0798                     	;# 
  3169  0799                     	;# 
  3170  079A                     	;# 
  3171  079B                     	;# 
  3172  080C                     	;# 
  3173  080D                     	;# 
  3174  080E                     	;# 
  3175  080F                     	;# 
  3176  0810                     	;# 
  3177  0811                     	;# 
  3178  0812                     	;# 
  3179  0813                     	;# 
  3180  0814                     	;# 
  3181  081A                     	;# 
  3182  081B                     	;# 
  3183  081C                     	;# 
  3184  081D                     	;# 
  3185  081E                     	;# 
  3186  081F                     	;# 
  3187  088C                     	;# 
  3188  088D                     	;# 
  3189  088E                     	;# 
  3190  088F                     	;# 
  3191  0890                     	;# 
  3192  0891                     	;# 
  3193  0892                     	;# 
  3194  0893                     	;# 
  3195  0895                     	;# 
  3196  0896                     	;# 
  3197  0897                     	;# 
  3198  0898                     	;# 
  3199  0899                     	;# 
  3200  089A                     	;# 
  3201  089B                     	;# 
  3202  090C                     	;# 
  3203  090E                     	;# 
  3204  090F                     	;# 
  3205  091F                     	;# 
  3206  091F                     	;# 
  3207  098F                     	;# 
  3208  098F                     	;# 
  3209  0990                     	;# 
  3210  0991                     	;# 
  3211  0992                     	;# 
  3212  0993                     	;# 
  3213  0994                     	;# 
  3214  0995                     	;# 
  3215  0996                     	;# 
  3216  0997                     	;# 
  3217  0E0F                     	;# 
  3218  0E10                     	;# 
  3219  0E11                     	;# 
  3220  0E12                     	;# 
  3221  0E13                     	;# 
  3222  0E14                     	;# 
  3223  0E15                     	;# 
  3224  0E16                     	;# 
  3225  0E17                     	;# 
  3226  0E18                     	;# 
  3227  0E19                     	;# 
  3228  0E1A                     	;# 
  3229  0E1B                     	;# 
  3230  0E1C                     	;# 
  3231  0E1D                     	;# 
  3232  0E1E                     	;# 
  3233  0E1F                     	;# 
  3234  0E20                     	;# 
  3235  0E21                     	;# 
  3236  0E22                     	;# 
  3237  0E23                     	;# 
  3238  0E24                     	;# 
  3239  0E25                     	;# 
  3240  0E26                     	;# 
  3241  0E27                     	;# 
  3242  0E28                     	;# 
  3243  0E29                     	;# 
  3244  0E2A                     	;# 
  3245  0E2B                     	;# 
  3246  0E2C                     	;# 
  3247  0E2D                     	;# 
  3248  0E2E                     	;# 
  3249  0E2F                     	;# 
  3250  0E30                     	;# 
  3251  0E31                     	;# 
  3252  0E32                     	;# 
  3253  0E33                     	;# 
  3254  0E34                     	;# 
  3255  0E35                     	;# 
  3256  0E36                     	;# 
  3257  0E37                     	;# 
  3258  0E8F                     	;# 
  3259  0E90                     	;# 
  3260  0E91                     	;# 
  3261  0E92                     	;# 
  3262  0E93                     	;# 
  3263  0E94                     	;# 
  3264  0E95                     	;# 
  3265  0E96                     	;# 
  3266  0E97                     	;# 
  3267  0E9C                     	;# 
  3268  0E9D                     	;# 
  3269  0E9E                     	;# 
  3270  0EA1                     	;# 
  3271  0EA2                     	;# 
  3272  0EA3                     	;# 
  3273  0EA4                     	;# 
  3274  0EA5                     	;# 
  3275  0EA9                     	;# 
  3276  0EAA                     	;# 
  3277  0EAB                     	;# 
  3278  0EAC                     	;# 
  3279  0EB1                     	;# 
  3280  0EB2                     	;# 
  3281  0EB3                     	;# 
  3282  0EB8                     	;# 
  3283  0EB9                     	;# 
  3284  0EBA                     	;# 
  3285  0EBB                     	;# 
  3286  0EBC                     	;# 
  3287  0EBD                     	;# 
  3288  0EBE                     	;# 
  3289  0EC3                     	;# 
  3290  0EC5                     	;# 
  3291  0EC6                     	;# 
  3292  0EC7                     	;# 
  3293  0EC8                     	;# 
  3294  0EC9                     	;# 
  3295  0ECA                     	;# 
  3296  0ECB                     	;# 
  3297  0ECC                     	;# 
  3298  0F10                     	;# 
  3299  0F11                     	;# 
  3300  0F12                     	;# 
  3301  0F13                     	;# 
  3302  0F14                     	;# 
  3303  0F15                     	;# 
  3304  0F16                     	;# 
  3305  0F17                     	;# 
  3306  0F18                     	;# 
  3307  0F19                     	;# 
  3308  0F1A                     	;# 
  3309  0F1B                     	;# 
  3310  0F1C                     	;# 
  3311  0F1D                     	;# 
  3312  0F1E                     	;# 
  3313  0F1F                     	;# 
  3314  0F20                     	;# 
  3315  0F21                     	;# 
  3316  0F22                     	;# 
  3317  0F23                     	;# 
  3318  0F24                     	;# 
  3319  0F25                     	;# 
  3320  0F26                     	;# 
  3321  0F27                     	;# 
  3322  0F28                     	;# 
  3323  0F29                     	;# 
  3324  0F2A                     	;# 
  3325  0F2B                     	;# 
  3326  0F2C                     	;# 
  3327  0F2D                     	;# 
  3328  0F2E                     	;# 
  3329  0F2F                     	;# 
  3330  0F30                     	;# 
  3331  0F31                     	;# 
  3332  0F32                     	;# 
  3333  0F38                     	;# 
  3334  0F39                     	;# 
  3335  0F3A                     	;# 
  3336  0F3B                     	;# 
  3337  0F3C                     	;# 
  3338  0F3D                     	;# 
  3339  0F3E                     	;# 
  3340  0F3F                     	;# 
  3341  0F40                     	;# 
  3342  0F41                     	;# 
  3343  0F43                     	;# 
  3344  0F44                     	;# 
  3345  0F45                     	;# 
  3346  0F46                     	;# 
  3347  0F47                     	;# 
  3348  0F48                     	;# 
  3349  0F49                     	;# 
  3350  0F4A                     	;# 
  3351  0F4B                     	;# 
  3352  0F4C                     	;# 
  3353  0F4E                     	;# 
  3354  0F4F                     	;# 
  3355  0F50                     	;# 
  3356  0F51                     	;# 
  3357  0F52                     	;# 
  3358  0F53                     	;# 
  3359  0F54                     	;# 
  3360  0F55                     	;# 
  3361  0F56                     	;# 
  3362  0F57                     	;# 
  3363  0F59                     	;# 
  3364  0F5A                     	;# 
  3365  0F5B                     	;# 
  3366  0F5C                     	;# 
  3367  0F5D                     	;# 
  3368  0F61                     	;# 
  3369  0F62                     	;# 
  3370  0F64                     	;# 
  3371  0F65                     	;# 
  3372  0F66                     	;# 
  3373  0F67                     	;# 
  3374  0F68                     	;# 
  3375  0F69                     	;# 
  3376  0F6A                     	;# 
  3377  0F6B                     	;# 
  3378  0F6C                     	;# 
  3379  0F6D                     	;# 
  3380  0FE4                     	;# 
  3381  0FE5                     	;# 
  3382  0FE6                     	;# 
  3383  0FE7                     	;# 
  3384  0FE8                     	;# 
  3385  0FE9                     	;# 
  3386  0FEA                     	;# 
  3387  0FEB                     	;# 
  3388  0FED                     	;# 
  3389  0FEE                     	;# 
  3390  0FEF                     	;# 
  3391  0000                     	;# 
  3392  0001                     	;# 
  3393  0002                     	;# 
  3394  0003                     	;# 
  3395  0004                     	;# 
  3396  0005                     	;# 
  3397  0006                     	;# 
  3398  0007                     	;# 
  3399  0008                     	;# 
  3400  0009                     	;# 
  3401  000A                     	;# 
  3402  000B                     	;# 
  3403  000C                     	;# 
  3404  000D                     	;# 
  3405  000E                     	;# 
  3406  000F                     	;# 
  3407  0010                     	;# 
  3408  0011                     	;# 
  3409  0012                     	;# 
  3410  0013                     	;# 
  3411  0014                     	;# 
  3412  0015                     	;# 
  3413  0016                     	;# 
  3414  0017                     	;# 
  3415  0018                     	;# 
  3416  0019                     	;# 
  3417  001A                     	;# 
  3418  001C                     	;# 
  3419  001C                     	;# 
  3420  001D                     	;# 
  3421  001D                     	;# 
  3422  001E                     	;# 
  3423  001F                     	;# 
  3424  008C                     	;# 
  3425  008C                     	;# 
  3426  008D                     	;# 
  3427  008E                     	;# 
  3428  008E                     	;# 
  3429  008F                     	;# 
  3430  0090                     	;# 
  3431  0090                     	;# 
  3432  0091                     	;# 
  3433  0093                     	;# 
  3434  0094                     	;# 
  3435  0095                     	;# 
  3436  0096                     	;# 
  3437  0097                     	;# 
  3438  0098                     	;# 
  3439  0099                     	;# 
  3440  009A                     	;# 
  3441  009B                     	;# 
  3442  009C                     	;# 
  3443  009D                     	;# 
  3444  009E                     	;# 
  3445  010C                     	;# 
  3446  010D                     	;# 
  3447  010E                     	;# 
  3448  010E                     	;# 
  3449  010F                     	;# 
  3450  0110                     	;# 
  3451  0110                     	;# 
  3452  0111                     	;# 
  3453  0112                     	;# 
  3454  0112                     	;# 
  3455  0113                     	;# 
  3456  0114                     	;# 
  3457  0114                     	;# 
  3458  0115                     	;# 
  3459  0116                     	;# 
  3460  0116                     	;# 
  3461  0117                     	;# 
  3462  0119                     	;# 
  3463  0119                     	;# 
  3464  0119                     	;# 
  3465  011A                     	;# 
  3466  011A                     	;# 
  3467  011A                     	;# 
  3468  011B                     	;# 
  3469  011B                     	;# 
  3470  011B                     	;# 
  3471  011B                     	;# 
  3472  011B                     	;# 
  3473  011C                     	;# 
  3474  011C                     	;# 
  3475  011C                     	;# 
  3476  011D                     	;# 
  3477  011D                     	;# 
  3478  011D                     	;# 
  3479  011E                     	;# 
  3480  011E                     	;# 
  3481  011E                     	;# 
  3482  011F                     	;# 
  3483  011F                     	;# 
  3484  011F                     	;# 
  3485  011F                     	;# 
  3486  011F                     	;# 
  3487  018C                     	;# 
  3488  018D                     	;# 
  3489  018E                     	;# 
  3490  018F                     	;# 
  3491  0190                     	;# 
  3492  0191                     	;# 
  3493  0192                     	;# 
  3494  0196                     	;# 
  3495  0197                     	;# 
  3496  0198                     	;# 
  3497  0199                     	;# 
  3498  019A                     	;# 
  3499  019B                     	;# 
  3500  019C                     	;# 
  3501  020C                     	;# 
  3502  020C                     	;# 
  3503  020D                     	;# 
  3504  020E                     	;# 
  3505  020F                     	;# 
  3506  020F                     	;# 
  3507  0210                     	;# 
  3508  0210                     	;# 
  3509  0211                     	;# 
  3510  0211                     	;# 
  3511  0212                     	;# 
  3512  0212                     	;# 
  3513  0213                     	;# 
  3514  0214                     	;# 
  3515  0215                     	;# 
  3516  0215                     	;# 
  3517  0216                     	;# 
  3518  0216                     	;# 
  3519  0217                     	;# 
  3520  0217                     	;# 
  3521  0218                     	;# 
  3522  0218                     	;# 
  3523  0219                     	;# 
  3524  021A                     	;# 
  3525  021B                     	;# 
  3526  021B                     	;# 
  3527  021C                     	;# 
  3528  021C                     	;# 
  3529  021D                     	;# 
  3530  021D                     	;# 
  3531  021E                     	;# 
  3532  021F                     	;# 
  3533  028C                     	;# 
  3534  028C                     	;# 
  3535  028D                     	;# 
  3536  028D                     	;# 
  3537  028E                     	;# 
  3538  028F                     	;# 
  3539  0290                     	;# 
  3540  0290                     	;# 
  3541  0291                     	;# 
  3542  0292                     	;# 
  3543  0292                     	;# 
  3544  0293                     	;# 
  3545  0293                     	;# 
  3546  0294                     	;# 
  3547  0295                     	;# 
  3548  0296                     	;# 
  3549  0296                     	;# 
  3550  0297                     	;# 
  3551  0298                     	;# 
  3552  0298                     	;# 
  3553  0299                     	;# 
  3554  0299                     	;# 
  3555  029A                     	;# 
  3556  029B                     	;# 
  3557  029C                     	;# 
  3558  029C                     	;# 
  3559  029D                     	;# 
  3560  030C                     	;# 
  3561  030C                     	;# 
  3562  030D                     	;# 
  3563  030E                     	;# 
  3564  030F                     	;# 
  3565  0310                     	;# 
  3566  0310                     	;# 
  3567  0311                     	;# 
  3568  0312                     	;# 
  3569  0313                     	;# 
  3570  0314                     	;# 
  3571  0314                     	;# 
  3572  0315                     	;# 
  3573  0316                     	;# 
  3574  0317                     	;# 
  3575  0318                     	;# 
  3576  0318                     	;# 
  3577  0319                     	;# 
  3578  031A                     	;# 
  3579  031B                     	;# 
  3580  031C                     	;# 
  3581  031C                     	;# 
  3582  031D                     	;# 
  3583  031E                     	;# 
  3584  031F                     	;# 
  3585  038C                     	;# 
  3586  038C                     	;# 
  3587  038D                     	;# 
  3588  038E                     	;# 
  3589  0390                     	;# 
  3590  0390                     	;# 
  3591  0391                     	;# 
  3592  0392                     	;# 
  3593  040C                     	;# 
  3594  040D                     	;# 
  3595  040E                     	;# 
  3596  040F                     	;# 
  3597  0410                     	;# 
  3598  0411                     	;# 
  3599  0416                     	;# 
  3600  0416                     	;# 
  3601  0417                     	;# 
  3602  0418                     	;# 
  3603  0418                     	;# 
  3604  0419                     	;# 
  3605  041A                     	;# 
  3606  041A                     	;# 
  3607  041B                     	;# 
  3608  041C                     	;# 
  3609  041C                     	;# 
  3610  041D                     	;# 
  3611  041E                     	;# 
  3612  041F                     	;# 
  3613  048C                     	;# 
  3614  048C                     	;# 
  3615  048D                     	;# 
  3616  048E                     	;# 
  3617  048F                     	;# 
  3618  048F                     	;# 
  3619  0490                     	;# 
  3620  0491                     	;# 
  3621  0492                     	;# 
  3622  0492                     	;# 
  3623  0493                     	;# 
  3624  0494                     	;# 
  3625  0495                     	;# 
  3626  0495                     	;# 
  3627  0496                     	;# 
  3628  0497                     	;# 
  3629  0498                     	;# 
  3630  0499                     	;# 
  3631  049A                     	;# 
  3632  049B                     	;# 
  3633  049C                     	;# 
  3634  049D                     	;# 
  3635  050C                     	;# 
  3636  050C                     	;# 
  3637  050D                     	;# 
  3638  050E                     	;# 
  3639  050F                     	;# 
  3640  050F                     	;# 
  3641  0510                     	;# 
  3642  0511                     	;# 
  3643  0512                     	;# 
  3644  0512                     	;# 
  3645  0513                     	;# 
  3646  0514                     	;# 
  3647  0515                     	;# 
  3648  0515                     	;# 
  3649  0516                     	;# 
  3650  0517                     	;# 
  3651  0518                     	;# 
  3652  0519                     	;# 
  3653  051A                     	;# 
  3654  051B                     	;# 
  3655  051C                     	;# 
  3656  051D                     	;# 
  3657  058C                     	;# 
  3658  058C                     	;# 
  3659  058D                     	;# 
  3660  058E                     	;# 
  3661  058F                     	;# 
  3662  058F                     	;# 
  3663  0590                     	;# 
  3664  0591                     	;# 
  3665  0592                     	;# 
  3666  0593                     	;# 
  3667  060C                     	;# 
  3668  060D                     	;# 
  3669  060E                     	;# 
  3670  060F                     	;# 
  3671  0610                     	;# 
  3672  0611                     	;# 
  3673  0612                     	;# 
  3674  0613                     	;# 
  3675  0614                     	;# 
  3676  0616                     	;# 
  3677  0617                     	;# 
  3678  0618                     	;# 
  3679  0619                     	;# 
  3680  061A                     	;# 
  3681  061B                     	;# 
  3682  061C                     	;# 
  3683  061D                     	;# 
  3684  061E                     	;# 
  3685  068C                     	;# 
  3686  068D                     	;# 
  3687  068E                     	;# 
  3688  068F                     	;# 
  3689  0690                     	;# 
  3690  0691                     	;# 
  3691  0692                     	;# 
  3692  0693                     	;# 
  3693  0694                     	;# 
  3694  070C                     	;# 
  3695  070D                     	;# 
  3696  070E                     	;# 
  3697  070F                     	;# 
  3698  0710                     	;# 
  3699  0711                     	;# 
  3700  0712                     	;# 
  3701  0713                     	;# 
  3702  0714                     	;# 
  3703  0716                     	;# 
  3704  0717                     	;# 
  3705  0718                     	;# 
  3706  0719                     	;# 
  3707  071A                     	;# 
  3708  071B                     	;# 
  3709  071C                     	;# 
  3710  071D                     	;# 
  3711  071E                     	;# 
  3712  0796                     	;# 
  3713  0797                     	;# 
  3714  0798                     	;# 
  3715  0799                     	;# 
  3716  079A                     	;# 
  3717  079B                     	;# 
  3718  080C                     	;# 
  3719  080D                     	;# 
  3720  080E                     	;# 
  3721  080F                     	;# 
  3722  0810                     	;# 
  3723  0811                     	;# 
  3724  0812                     	;# 
  3725  0813                     	;# 
  3726  0814                     	;# 
  3727  081A                     	;# 
  3728  081B                     	;# 
  3729  081C                     	;# 
  3730  081D                     	;# 
  3731  081E                     	;# 
  3732  081F                     	;# 
  3733  088C                     	;# 
  3734  088D                     	;# 
  3735  088E                     	;# 
  3736  088F                     	;# 
  3737  0890                     	;# 
  3738  0891                     	;# 
  3739  0892                     	;# 
  3740  0893                     	;# 
  3741  0895                     	;# 
  3742  0896                     	;# 
  3743  0897                     	;# 
  3744  0898                     	;# 
  3745  0899                     	;# 
  3746  089A                     	;# 
  3747  089B                     	;# 
  3748  090C                     	;# 
  3749  090E                     	;# 
  3750  090F                     	;# 
  3751  091F                     	;# 
  3752  091F                     	;# 
  3753  098F                     	;# 
  3754  098F                     	;# 
  3755  0990                     	;# 
  3756  0991                     	;# 
  3757  0992                     	;# 
  3758  0993                     	;# 
  3759  0994                     	;# 
  3760  0995                     	;# 
  3761  0996                     	;# 
  3762  0997                     	;# 
  3763  0E0F                     	;# 
  3764  0E10                     	;# 
  3765  0E11                     	;# 
  3766  0E12                     	;# 
  3767  0E13                     	;# 
  3768  0E14                     	;# 
  3769  0E15                     	;# 
  3770  0E16                     	;# 
  3771  0E17                     	;# 
  3772  0E18                     	;# 
  3773  0E19                     	;# 
  3774  0E1A                     	;# 
  3775  0E1B                     	;# 
  3776  0E1C                     	;# 
  3777  0E1D                     	;# 
  3778  0E1E                     	;# 
  3779  0E1F                     	;# 
  3780  0E20                     	;# 
  3781  0E21                     	;# 
  3782  0E22                     	;# 
  3783  0E23                     	;# 
  3784  0E24                     	;# 
  3785  0E25                     	;# 
  3786  0E26                     	;# 
  3787  0E27                     	;# 
  3788  0E28                     	;# 
  3789  0E29                     	;# 
  3790  0E2A                     	;# 
  3791  0E2B                     	;# 
  3792  0E2C                     	;# 
  3793  0E2D                     	;# 
  3794  0E2E                     	;# 
  3795  0E2F                     	;# 
  3796  0E30                     	;# 
  3797  0E31                     	;# 
  3798  0E32                     	;# 
  3799  0E33                     	;# 
  3800  0E34                     	;# 
  3801  0E35                     	;# 
  3802  0E36                     	;# 
  3803  0E37                     	;# 
  3804  0E8F                     	;# 
  3805  0E90                     	;# 
  3806  0E91                     	;# 
  3807  0E92                     	;# 
  3808  0E93                     	;# 
  3809  0E94                     	;# 
  3810  0E95                     	;# 
  3811  0E96                     	;# 
  3812  0E97                     	;# 
  3813  0E9C                     	;# 
  3814  0E9D                     	;# 
  3815  0E9E                     	;# 
  3816  0EA1                     	;# 
  3817  0EA2                     	;# 
  3818  0EA3                     	;# 
  3819  0EA4                     	;# 
  3820  0EA5                     	;# 
  3821  0EA9                     	;# 
  3822  0EAA                     	;# 
  3823  0EAB                     	;# 
  3824  0EAC                     	;# 
  3825  0EB1                     	;# 
  3826  0EB2                     	;# 
  3827  0EB3                     	;# 
  3828  0EB8                     	;# 
  3829  0EB9                     	;# 
  3830  0EBA                     	;# 
  3831  0EBB                     	;# 
  3832  0EBC                     	;# 
  3833  0EBD                     	;# 
  3834  0EBE                     	;# 
  3835  0EC3                     	;# 
  3836  0EC5                     	;# 
  3837  0EC6                     	;# 
  3838  0EC7                     	;# 
  3839  0EC8                     	;# 
  3840  0EC9                     	;# 
  3841  0ECA                     	;# 
  3842  0ECB                     	;# 
  3843  0ECC                     	;# 
  3844  0F10                     	;# 
  3845  0F11                     	;# 
  3846  0F12                     	;# 
  3847  0F13                     	;# 
  3848  0F14                     	;# 
  3849  0F15                     	;# 
  3850  0F16                     	;# 
  3851  0F17                     	;# 
  3852  0F18                     	;# 
  3853  0F19                     	;# 
  3854  0F1A                     	;# 
  3855  0F1B                     	;# 
  3856  0F1C                     	;# 
  3857  0F1D                     	;# 
  3858  0F1E                     	;# 
  3859  0F1F                     	;# 
  3860  0F20                     	;# 
  3861  0F21                     	;# 
  3862  0F22                     	;# 
  3863  0F23                     	;# 
  3864  0F24                     	;# 
  3865  0F25                     	;# 
  3866  0F26                     	;# 
  3867  0F27                     	;# 
  3868  0F28                     	;# 
  3869  0F29                     	;# 
  3870  0F2A                     	;# 
  3871  0F2B                     	;# 
  3872  0F2C                     	;# 
  3873  0F2D                     	;# 
  3874  0F2E                     	;# 
  3875  0F2F                     	;# 
  3876  0F30                     	;# 
  3877  0F31                     	;# 
  3878  0F32                     	;# 
  3879  0F38                     	;# 
  3880  0F39                     	;# 
  3881  0F3A                     	;# 
  3882  0F3B                     	;# 
  3883  0F3C                     	;# 
  3884  0F3D                     	;# 
  3885  0F3E                     	;# 
  3886  0F3F                     	;# 
  3887  0F40                     	;# 
  3888  0F41                     	;# 
  3889  0F43                     	;# 
  3890  0F44                     	;# 
  3891  0F45                     	;# 
  3892  0F46                     	;# 
  3893  0F47                     	;# 
  3894  0F48                     	;# 
  3895  0F49                     	;# 
  3896  0F4A                     	;# 
  3897  0F4B                     	;# 
  3898  0F4C                     	;# 
  3899  0F4E                     	;# 
  3900  0F4F                     	;# 
  3901  0F50                     	;# 
  3902  0F51                     	;# 
  3903  0F52                     	;# 
  3904  0F53                     	;# 
  3905  0F54                     	;# 
  3906  0F55                     	;# 
  3907  0F56                     	;# 
  3908  0F57                     	;# 
  3909  0F59                     	;# 
  3910  0F5A                     	;# 
  3911  0F5B                     	;# 
  3912  0F5C                     	;# 
  3913  0F5D                     	;# 
  3914  0F61                     	;# 
  3915  0F62                     	;# 
  3916  0F64                     	;# 
  3917  0F65                     	;# 
  3918  0F66                     	;# 
  3919  0F67                     	;# 
  3920  0F68                     	;# 
  3921  0F69                     	;# 
  3922  0F6A                     	;# 
  3923  0F6B                     	;# 
  3924  0F6C                     	;# 
  3925  0F6D                     	;# 
  3926  0FE4                     	;# 
  3927  0FE5                     	;# 
  3928  0FE6                     	;# 
  3929  0FE7                     	;# 
  3930  0FE8                     	;# 
  3931  0FE9                     	;# 
  3932  0FEA                     	;# 
  3933  0FEB                     	;# 
  3934  0FED                     	;# 
  3935  0FEE                     	;# 
  3936  0FEF                     	;# 
  3937  0000                     	;# 
  3938  0001                     	;# 
  3939  0002                     	;# 
  3940  0003                     	;# 
  3941  0004                     	;# 
  3942  0005                     	;# 
  3943  0006                     	;# 
  3944  0007                     	;# 
  3945  0008                     	;# 
  3946  0009                     	;# 
  3947  000A                     	;# 
  3948  000B                     	;# 
  3949  000C                     	;# 
  3950  000D                     	;# 
  3951  000E                     	;# 
  3952  000F                     	;# 
  3953  0010                     	;# 
  3954  0011                     	;# 
  3955  0012                     	;# 
  3956  0013                     	;# 
  3957  0014                     	;# 
  3958  0015                     	;# 
  3959  0016                     	;# 
  3960  0017                     	;# 
  3961  0018                     	;# 
  3962  0019                     	;# 
  3963  001A                     	;# 
  3964  001C                     	;# 
  3965  001C                     	;# 
  3966  001D                     	;# 
  3967  001D                     	;# 
  3968  001E                     	;# 
  3969  001F                     	;# 
  3970  008C                     	;# 
  3971  008C                     	;# 
  3972  008D                     	;# 
  3973  008E                     	;# 
  3974  008E                     	;# 
  3975  008F                     	;# 
  3976  0090                     	;# 
  3977  0090                     	;# 
  3978  0091                     	;# 
  3979  0093                     	;# 
  3980  0094                     	;# 
  3981  0095                     	;# 
  3982  0096                     	;# 
  3983  0097                     	;# 
  3984  0098                     	;# 
  3985  0099                     	;# 
  3986  009A                     	;# 
  3987  009B                     	;# 
  3988  009C                     	;# 
  3989  009D                     	;# 
  3990  009E                     	;# 
  3991  010C                     	;# 
  3992  010D                     	;# 
  3993  010E                     	;# 
  3994  010E                     	;# 
  3995  010F                     	;# 
  3996  0110                     	;# 
  3997  0110                     	;# 
  3998  0111                     	;# 
  3999  0112                     	;# 
  4000  0112                     	;# 
  4001  0113                     	;# 
  4002  0114                     	;# 
  4003  0114                     	;# 
  4004  0115                     	;# 
  4005  0116                     	;# 
  4006  0116                     	;# 
  4007  0117                     	;# 
  4008  0119                     	;# 
  4009  0119                     	;# 
  4010  0119                     	;# 
  4011  011A                     	;# 
  4012  011A                     	;# 
  4013  011A                     	;# 
  4014  011B                     	;# 
  4015  011B                     	;# 
  4016  011B                     	;# 
  4017  011B                     	;# 
  4018  011B                     	;# 
  4019  011C                     	;# 
  4020  011C                     	;# 
  4021  011C                     	;# 
  4022  011D                     	;# 
  4023  011D                     	;# 
  4024  011D                     	;# 
  4025  011E                     	;# 
  4026  011E                     	;# 
  4027  011E                     	;# 
  4028  011F                     	;# 
  4029  011F                     	;# 
  4030  011F                     	;# 
  4031  011F                     	;# 
  4032  011F                     	;# 
  4033  018C                     	;# 
  4034  018D                     	;# 
  4035  018E                     	;# 
  4036  018F                     	;# 
  4037  0190                     	;# 
  4038  0191                     	;# 
  4039  0192                     	;# 
  4040  0196                     	;# 
  4041  0197                     	;# 
  4042  0198                     	;# 
  4043  0199                     	;# 
  4044  019A                     	;# 
  4045  019B                     	;# 
  4046  019C                     	;# 
  4047  020C                     	;# 
  4048  020C                     	;# 
  4049  020D                     	;# 
  4050  020E                     	;# 
  4051  020F                     	;# 
  4052  020F                     	;# 
  4053  0210                     	;# 
  4054  0210                     	;# 
  4055  0211                     	;# 
  4056  0211                     	;# 
  4057  0212                     	;# 
  4058  0212                     	;# 
  4059  0213                     	;# 
  4060  0214                     	;# 
  4061  0215                     	;# 
  4062  0215                     	;# 
  4063  0216                     	;# 
  4064  0216                     	;# 
  4065  0217                     	;# 
  4066  0217                     	;# 
  4067  0218                     	;# 
  4068  0218                     	;# 
  4069  0219                     	;# 
  4070  021A                     	;# 
  4071  021B                     	;# 
  4072  021B                     	;# 
  4073  021C                     	;# 
  4074  021C                     	;# 
  4075  021D                     	;# 
  4076  021D                     	;# 
  4077  021E                     	;# 
  4078  021F                     	;# 
  4079  028C                     	;# 
  4080  028C                     	;# 
  4081  028D                     	;# 
  4082  028D                     	;# 
  4083  028E                     	;# 
  4084  028F                     	;# 
  4085  0290                     	;# 
  4086  0290                     	;# 
  4087  0291                     	;# 
  4088  0292                     	;# 
  4089  0292                     	;# 
  4090  0293                     	;# 
  4091  0293                     	;# 
  4092  0294                     	;# 
  4093  0295                     	;# 
  4094  0296                     	;# 
  4095  0296                     	;# 
  4096  0297                     	;# 
  4097  0298                     	;# 
  4098  0298                     	;# 
  4099  0299                     	;# 
  4100  0299                     	;# 
  4101  029A                     	;# 
  4102  029B                     	;# 
  4103  029C                     	;# 
  4104  029C                     	;# 
  4105  029D                     	;# 
  4106  030C                     	;# 
  4107  030C                     	;# 
  4108  030D                     	;# 
  4109  030E                     	;# 
  4110  030F                     	;# 
  4111  0310                     	;# 
  4112  0310                     	;# 
  4113  0311                     	;# 
  4114  0312                     	;# 
  4115  0313                     	;# 
  4116  0314                     	;# 
  4117  0314                     	;# 
  4118  0315                     	;# 
  4119  0316                     	;# 
  4120  0317                     	;# 
  4121  0318                     	;# 
  4122  0318                     	;# 
  4123  0319                     	;# 
  4124  031A                     	;# 
  4125  031B                     	;# 
  4126  031C                     	;# 
  4127  031C                     	;# 
  4128  031D                     	;# 
  4129  031E                     	;# 
  4130  031F                     	;# 
  4131  038C                     	;# 
  4132  038C                     	;# 
  4133  038D                     	;# 
  4134  038E                     	;# 
  4135  0390                     	;# 
  4136  0390                     	;# 
  4137  0391                     	;# 
  4138  0392                     	;# 
  4139  040C                     	;# 
  4140  040D                     	;# 
  4141  040E                     	;# 
  4142  040F                     	;# 
  4143  0410                     	;# 
  4144  0411                     	;# 
  4145  0416                     	;# 
  4146  0416                     	;# 
  4147  0417                     	;# 
  4148  0418                     	;# 
  4149  0418                     	;# 
  4150  0419                     	;# 
  4151  041A                     	;# 
  4152  041A                     	;# 
  4153  041B                     	;# 
  4154  041C                     	;# 
  4155  041C                     	;# 
  4156  041D                     	;# 
  4157  041E                     	;# 
  4158  041F                     	;# 
  4159  048C                     	;# 
  4160  048C                     	;# 
  4161  048D                     	;# 
  4162  048E                     	;# 
  4163  048F                     	;# 
  4164  048F                     	;# 
  4165  0490                     	;# 
  4166  0491                     	;# 
  4167  0492                     	;# 
  4168  0492                     	;# 
  4169  0493                     	;# 
  4170  0494                     	;# 
  4171  0495                     	;# 
  4172  0495                     	;# 
  4173  0496                     	;# 
  4174  0497                     	;# 
  4175  0498                     	;# 
  4176  0499                     	;# 
  4177  049A                     	;# 
  4178  049B                     	;# 
  4179  049C                     	;# 
  4180  049D                     	;# 
  4181  050C                     	;# 
  4182  050C                     	;# 
  4183  050D                     	;# 
  4184  050E                     	;# 
  4185  050F                     	;# 
  4186  050F                     	;# 
  4187  0510                     	;# 
  4188  0511                     	;# 
  4189  0512                     	;# 
  4190  0512                     	;# 
  4191  0513                     	;# 
  4192  0514                     	;# 
  4193  0515                     	;# 
  4194  0515                     	;# 
  4195  0516                     	;# 
  4196  0517                     	;# 
  4197  0518                     	;# 
  4198  0519                     	;# 
  4199  051A                     	;# 
  4200  051B                     	;# 
  4201  051C                     	;# 
  4202  051D                     	;# 
  4203  058C                     	;# 
  4204  058C                     	;# 
  4205  058D                     	;# 
  4206  058E                     	;# 
  4207  058F                     	;# 
  4208  058F                     	;# 
  4209  0590                     	;# 
  4210  0591                     	;# 
  4211  0592                     	;# 
  4212  0593                     	;# 
  4213  060C                     	;# 
  4214  060D                     	;# 
  4215  060E                     	;# 
  4216  060F                     	;# 
  4217  0610                     	;# 
  4218  0611                     	;# 
  4219  0612                     	;# 
  4220  0613                     	;# 
  4221  0614                     	;# 
  4222  0616                     	;# 
  4223  0617                     	;# 
  4224  0618                     	;# 
  4225  0619                     	;# 
  4226  061A                     	;# 
  4227  061B                     	;# 
  4228  061C                     	;# 
  4229  061D                     	;# 
  4230  061E                     	;# 
  4231  068C                     	;# 
  4232  068D                     	;# 
  4233  068E                     	;# 
  4234  068F                     	;# 
  4235  0690                     	;# 
  4236  0691                     	;# 
  4237  0692                     	;# 
  4238  0693                     	;# 
  4239  0694                     	;# 
  4240  070C                     	;# 
  4241  070D                     	;# 
  4242  070E                     	;# 
  4243  070F                     	;# 
  4244  0710                     	;# 
  4245  0711                     	;# 
  4246  0712                     	;# 
  4247  0713                     	;# 
  4248  0714                     	;# 
  4249  0716                     	;# 
  4250  0717                     	;# 
  4251  0718                     	;# 
  4252  0719                     	;# 
  4253  071A                     	;# 
  4254  071B                     	;# 
  4255  071C                     	;# 
  4256  071D                     	;# 
  4257  071E                     	;# 
  4258  0796                     	;# 
  4259  0797                     	;# 
  4260  0798                     	;# 
  4261  0799                     	;# 
  4262  079A                     	;# 
  4263  079B                     	;# 
  4264  080C                     	;# 
  4265  080D                     	;# 
  4266  080E                     	;# 
  4267  080F                     	;# 
  4268  0810                     	;# 
  4269  0811                     	;# 
  4270  0812                     	;# 
  4271  0813                     	;# 
  4272  0814                     	;# 
  4273  081A                     	;# 
  4274  081B                     	;# 
  4275  081C                     	;# 
  4276  081D                     	;# 
  4277  081E                     	;# 
  4278  081F                     	;# 
  4279  088C                     	;# 
  4280  088D                     	;# 
  4281  088E                     	;# 
  4282  088F                     	;# 
  4283  0890                     	;# 
  4284  0891                     	;# 
  4285  0892                     	;# 
  4286  0893                     	;# 
  4287  0895                     	;# 
  4288  0896                     	;# 
  4289  0897                     	;# 
  4290  0898                     	;# 
  4291  0899                     	;# 
  4292  089A                     	;# 
  4293  089B                     	;# 
  4294  090C                     	;# 
  4295  090E                     	;# 
  4296  090F                     	;# 
  4297  091F                     	;# 
  4298  091F                     	;# 
  4299  098F                     	;# 
  4300  098F                     	;# 
  4301  0990                     	;# 
  4302  0991                     	;# 
  4303  0992                     	;# 
  4304  0993                     	;# 
  4305  0994                     	;# 
  4306  0995                     	;# 
  4307  0996                     	;# 
  4308  0997                     	;# 
  4309  0E0F                     	;# 
  4310  0E10                     	;# 
  4311  0E11                     	;# 
  4312  0E12                     	;# 
  4313  0E13                     	;# 
  4314  0E14                     	;# 
  4315  0E15                     	;# 
  4316  0E16                     	;# 
  4317  0E17                     	;# 
  4318  0E18                     	;# 
  4319  0E19                     	;# 
  4320  0E1A                     	;# 
  4321  0E1B                     	;# 
  4322  0E1C                     	;# 
  4323  0E1D                     	;# 
  4324  0E1E                     	;# 
  4325  0E1F                     	;# 
  4326  0E20                     	;# 
  4327  0E21                     	;# 
  4328  0E22                     	;# 
  4329  0E23                     	;# 
  4330  0E24                     	;# 
  4331  0E25                     	;# 
  4332  0E26                     	;# 
  4333  0E27                     	;# 
  4334  0E28                     	;# 
  4335  0E29                     	;# 
  4336  0E2A                     	;# 
  4337  0E2B                     	;# 
  4338  0E2C                     	;# 
  4339  0E2D                     	;# 
  4340  0E2E                     	;# 
  4341  0E2F                     	;# 
  4342  0E30                     	;# 
  4343  0E31                     	;# 
  4344  0E32                     	;# 
  4345  0E33                     	;# 
  4346  0E34                     	;# 
  4347  0E35                     	;# 
  4348  0E36                     	;# 
  4349  0E37                     	;# 
  4350  0E8F                     	;# 
  4351  0E90                     	;# 
  4352  0E91                     	;# 
  4353  0E92                     	;# 
  4354  0E93                     	;# 
  4355  0E94                     	;# 
  4356  0E95                     	;# 
  4357  0E96                     	;# 
  4358  0E97                     	;# 
  4359  0E9C                     	;# 
  4360  0E9D                     	;# 
  4361  0E9E                     	;# 
  4362  0EA1                     	;# 
  4363  0EA2                     	;# 
  4364  0EA3                     	;# 
  4365  0EA4                     	;# 
  4366  0EA5                     	;# 
  4367  0EA9                     	;# 
  4368  0EAA                     	;# 
  4369  0EAB                     	;# 
  4370  0EAC                     	;# 
  4371  0EB1                     	;# 
  4372  0EB2                     	;# 
  4373  0EB3                     	;# 
  4374  0EB8                     	;# 
  4375  0EB9                     	;# 
  4376  0EBA                     	;# 
  4377  0EBB                     	;# 
  4378  0EBC                     	;# 
  4379  0EBD                     	;# 
  4380  0EBE                     	;# 
  4381  0EC3                     	;# 
  4382  0EC5                     	;# 
  4383  0EC6                     	;# 
  4384  0EC7                     	;# 
  4385  0EC8                     	;# 
  4386  0EC9                     	;# 
  4387  0ECA                     	;# 
  4388  0ECB                     	;# 
  4389  0ECC                     	;# 
  4390  0F10                     	;# 
  4391  0F11                     	;# 
  4392  0F12                     	;# 
  4393  0F13                     	;# 
  4394  0F14                     	;# 
  4395  0F15                     	;# 
  4396  0F16                     	;# 
  4397  0F17                     	;# 
  4398  0F18                     	;# 
  4399  0F19                     	;# 
  4400  0F1A                     	;# 
  4401  0F1B                     	;# 
  4402  0F1C                     	;# 
  4403  0F1D                     	;# 
  4404  0F1E                     	;# 
  4405  0F1F                     	;# 
  4406  0F20                     	;# 
  4407  0F21                     	;# 
  4408  0F22                     	;# 
  4409  0F23                     	;# 
  4410  0F24                     	;# 
  4411  0F25                     	;# 
  4412  0F26                     	;# 
  4413  0F27                     	;# 
  4414  0F28                     	;# 
  4415  0F29                     	;# 
  4416  0F2A                     	;# 
  4417  0F2B                     	;# 
  4418  0F2C                     	;# 
  4419  0F2D                     	;# 
  4420  0F2E                     	;# 
  4421  0F2F                     	;# 
  4422  0F30                     	;# 
  4423  0F31                     	;# 
  4424  0F32                     	;# 
  4425  0F38                     	;# 
  4426  0F39                     	;# 
  4427  0F3A                     	;# 
  4428  0F3B                     	;# 
  4429  0F3C                     	;# 
  4430  0F3D                     	;# 
  4431  0F3E                     	;# 
  4432  0F3F                     	;# 
  4433  0F40                     	;# 
  4434  0F41                     	;# 
  4435  0F43                     	;# 
  4436  0F44                     	;# 
  4437  0F45                     	;# 
  4438  0F46                     	;# 
  4439  0F47                     	;# 
  4440  0F48                     	;# 
  4441  0F49                     	;# 
  4442  0F4A                     	;# 
  4443  0F4B                     	;# 
  4444  0F4C                     	;# 
  4445  0F4E                     	;# 
  4446  0F4F                     	;# 
  4447  0F50                     	;# 
  4448  0F51                     	;# 
  4449  0F52                     	;# 
  4450  0F53                     	;# 
  4451  0F54                     	;# 
  4452  0F55                     	;# 
  4453  0F56                     	;# 
  4454  0F57                     	;# 
  4455  0F59                     	;# 
  4456  0F5A                     	;# 
  4457  0F5B                     	;# 
  4458  0F5C                     	;# 
  4459  0F5D                     	;# 
  4460  0F61                     	;# 
  4461  0F62                     	;# 
  4462  0F64                     	;# 
  4463  0F65                     	;# 
  4464  0F66                     	;# 
  4465  0F67                     	;# 
  4466  0F68                     	;# 
  4467  0F69                     	;# 
  4468  0F6A                     	;# 
  4469  0F6B                     	;# 
  4470  0F6C                     	;# 
  4471  0F6D                     	;# 
  4472  0FE4                     	;# 
  4473  0FE5                     	;# 
  4474  0FE6                     	;# 
  4475  0FE7                     	;# 
  4476  0FE8                     	;# 
  4477  0FE9                     	;# 
  4478  0FEA                     	;# 
  4479  0FEB                     	;# 
  4480  0FED                     	;# 
  4481  0FEE                     	;# 
  4482  0FEF                     	;# 
  4483  0000                     	;# 
  4484  0001                     	;# 
  4485  0002                     	;# 
  4486  0003                     	;# 
  4487  0004                     	;# 
  4488  0005                     	;# 
  4489  0006                     	;# 
  4490  0007                     	;# 
  4491  0008                     	;# 
  4492  0009                     	;# 
  4493  000A                     	;# 
  4494  000B                     	;# 
  4495  000C                     	;# 
  4496  000D                     	;# 
  4497  000E                     	;# 
  4498  000F                     	;# 
  4499  0010                     	;# 
  4500  0011                     	;# 
  4501  0012                     	;# 
  4502  0013                     	;# 
  4503  0014                     	;# 
  4504  0015                     	;# 
  4505  0016                     	;# 
  4506  0017                     	;# 
  4507  0018                     	;# 
  4508  0019                     	;# 
  4509  001A                     	;# 
  4510  001C                     	;# 
  4511  001C                     	;# 
  4512  001D                     	;# 
  4513  001D                     	;# 
  4514  001E                     	;# 
  4515  001F                     	;# 
  4516  008C                     	;# 
  4517  008C                     	;# 
  4518  008D                     	;# 
  4519  008E                     	;# 
  4520  008E                     	;# 
  4521  008F                     	;# 
  4522  0090                     	;# 
  4523  0090                     	;# 
  4524  0091                     	;# 
  4525  0093                     	;# 
  4526  0094                     	;# 
  4527  0095                     	;# 
  4528  0096                     	;# 
  4529  0097                     	;# 
  4530  0098                     	;# 
  4531  0099                     	;# 
  4532  009A                     	;# 
  4533  009B                     	;# 
  4534  009C                     	;# 
  4535  009D                     	;# 
  4536  009E                     	;# 
  4537  010C                     	;# 
  4538  010D                     	;# 
  4539  010E                     	;# 
  4540  010E                     	;# 
  4541  010F                     	;# 
  4542  0110                     	;# 
  4543  0110                     	;# 
  4544  0111                     	;# 
  4545  0112                     	;# 
  4546  0112                     	;# 
  4547  0113                     	;# 
  4548  0114                     	;# 
  4549  0114                     	;# 
  4550  0115                     	;# 
  4551  0116                     	;# 
  4552  0116                     	;# 
  4553  0117                     	;# 
  4554  0119                     	;# 
  4555  0119                     	;# 
  4556  0119                     	;# 
  4557  011A                     	;# 
  4558  011A                     	;# 
  4559  011A                     	;# 
  4560  011B                     	;# 
  4561  011B                     	;# 
  4562  011B                     	;# 
  4563  011B                     	;# 
  4564  011B                     	;# 
  4565  011C                     	;# 
  4566  011C                     	;# 
  4567  011C                     	;# 
  4568  011D                     	;# 
  4569  011D                     	;# 
  4570  011D                     	;# 
  4571  011E                     	;# 
  4572  011E                     	;# 
  4573  011E                     	;# 
  4574  011F                     	;# 
  4575  011F                     	;# 
  4576  011F                     	;# 
  4577  011F                     	;# 
  4578  011F                     	;# 
  4579  018C                     	;# 
  4580  018D                     	;# 
  4581  018E                     	;# 
  4582  018F                     	;# 
  4583  0190                     	;# 
  4584  0191                     	;# 
  4585  0192                     	;# 
  4586  0196                     	;# 
  4587  0197                     	;# 
  4588  0198                     	;# 
  4589  0199                     	;# 
  4590  019A                     	;# 
  4591  019B                     	;# 
  4592  019C                     	;# 
  4593  020C                     	;# 
  4594  020C                     	;# 
  4595  020D                     	;# 
  4596  020E                     	;# 
  4597  020F                     	;# 
  4598  020F                     	;# 
  4599  0210                     	;# 
  4600  0210                     	;# 
  4601  0211                     	;# 
  4602  0211                     	;# 
  4603  0212                     	;# 
  4604  0212                     	;# 
  4605  0213                     	;# 
  4606  0214                     	;# 
  4607  0215                     	;# 
  4608  0215                     	;# 
  4609  0216                     	;# 
  4610  0216                     	;# 
  4611  0217                     	;# 
  4612  0217                     	;# 
  4613  0218                     	;# 
  4614  0218                     	;# 
  4615  0219                     	;# 
  4616  021A                     	;# 
  4617  021B                     	;# 
  4618  021B                     	;# 
  4619  021C                     	;# 
  4620  021C                     	;# 
  4621  021D                     	;# 
  4622  021D                     	;# 
  4623  021E                     	;# 
  4624  021F                     	;# 
  4625  028C                     	;# 
  4626  028C                     	;# 
  4627  028D                     	;# 
  4628  028D                     	;# 
  4629  028E                     	;# 
  4630  028F                     	;# 
  4631  0290                     	;# 
  4632  0290                     	;# 
  4633  0291                     	;# 
  4634  0292                     	;# 
  4635  0292                     	;# 
  4636  0293                     	;# 
  4637  0293                     	;# 
  4638  0294                     	;# 
  4639  0295                     	;# 
  4640  0296                     	;# 
  4641  0296                     	;# 
  4642  0297                     	;# 
  4643  0298                     	;# 
  4644  0298                     	;# 
  4645  0299                     	;# 
  4646  0299                     	;# 
  4647  029A                     	;# 
  4648  029B                     	;# 
  4649  029C                     	;# 
  4650  029C                     	;# 
  4651  029D                     	;# 
  4652  030C                     	;# 
  4653  030C                     	;# 
  4654  030D                     	;# 
  4655  030E                     	;# 
  4656  030F                     	;# 
  4657  0310                     	;# 
  4658  0310                     	;# 
  4659  0311                     	;# 
  4660  0312                     	;# 
  4661  0313                     	;# 
  4662  0314                     	;# 
  4663  0314                     	;# 
  4664  0315                     	;# 
  4665  0316                     	;# 
  4666  0317                     	;# 
  4667  0318                     	;# 
  4668  0318                     	;# 
  4669  0319                     	;# 
  4670  031A                     	;# 
  4671  031B                     	;# 
  4672  031C                     	;# 
  4673  031C                     	;# 
  4674  031D                     	;# 
  4675  031E                     	;# 
  4676  031F                     	;# 
  4677  038C                     	;# 
  4678  038C                     	;# 
  4679  038D                     	;# 
  4680  038E                     	;# 
  4681  0390                     	;# 
  4682  0390                     	;# 
  4683  0391                     	;# 
  4684  0392                     	;# 
  4685  040C                     	;# 
  4686  040D                     	;# 
  4687  040E                     	;# 
  4688  040F                     	;# 
  4689  0410                     	;# 
  4690  0411                     	;# 
  4691  0416                     	;# 
  4692  0416                     	;# 
  4693  0417                     	;# 
  4694  0418                     	;# 
  4695  0418                     	;# 
  4696  0419                     	;# 
  4697  041A                     	;# 
  4698  041A                     	;# 
  4699  041B                     	;# 
  4700  041C                     	;# 
  4701  041C                     	;# 
  4702  041D                     	;# 
  4703  041E                     	;# 
  4704  041F                     	;# 
  4705  048C                     	;# 
  4706  048C                     	;# 
  4707  048D                     	;# 
  4708  048E                     	;# 
  4709  048F                     	;# 
  4710  048F                     	;# 
  4711  0490                     	;# 
  4712  0491                     	;# 
  4713  0492                     	;# 
  4714  0492                     	;# 
  4715  0493                     	;# 
  4716  0494                     	;# 
  4717  0495                     	;# 
  4718  0495                     	;# 
  4719  0496                     	;# 
  4720  0497                     	;# 
  4721  0498                     	;# 
  4722  0499                     	;# 
  4723  049A                     	;# 
  4724  049B                     	;# 
  4725  049C                     	;# 
  4726  049D                     	;# 
  4727  050C                     	;# 
  4728  050C                     	;# 
  4729  050D                     	;# 
  4730  050E                     	;# 
  4731  050F                     	;# 
  4732  050F                     	;# 
  4733  0510                     	;# 
  4734  0511                     	;# 
  4735  0512                     	;# 
  4736  0512                     	;# 
  4737  0513                     	;# 
  4738  0514                     	;# 
  4739  0515                     	;# 
  4740  0515                     	;# 
  4741  0516                     	;# 
  4742  0517                     	;# 
  4743  0518                     	;# 
  4744  0519                     	;# 
  4745  051A                     	;# 
  4746  051B                     	;# 
  4747  051C                     	;# 
  4748  051D                     	;# 
  4749  058C                     	;# 
  4750  058C                     	;# 
  4751  058D                     	;# 
  4752  058E                     	;# 
  4753  058F                     	;# 
  4754  058F                     	;# 
  4755  0590                     	;# 
  4756  0591                     	;# 
  4757  0592                     	;# 
  4758  0593                     	;# 
  4759  060C                     	;# 
  4760  060D                     	;# 
  4761  060E                     	;# 
  4762  060F                     	;# 
  4763  0610                     	;# 
  4764  0611                     	;# 
  4765  0612                     	;# 
  4766  0613                     	;# 
  4767  0614                     	;# 
  4768  0616                     	;# 
  4769  0617                     	;# 
  4770  0618                     	;# 
  4771  0619                     	;# 
  4772  061A                     	;# 
  4773  061B                     	;# 
  4774  061C                     	;# 
  4775  061D                     	;# 
  4776  061E                     	;# 
  4777  068C                     	;# 
  4778  068D                     	;# 
  4779  068E                     	;# 
  4780  068F                     	;# 
  4781  0690                     	;# 
  4782  0691                     	;# 
  4783  0692                     	;# 
  4784  0693                     	;# 
  4785  0694                     	;# 
  4786  070C                     	;# 
  4787  070D                     	;# 
  4788  070E                     	;# 
  4789  070F                     	;# 
  4790  0710                     	;# 
  4791  0711                     	;# 
  4792  0712                     	;# 
  4793  0713                     	;# 
  4794  0714                     	;# 
  4795  0716                     	;# 
  4796  0717                     	;# 
  4797  0718                     	;# 
  4798  0719                     	;# 
  4799  071A                     	;# 
  4800  071B                     	;# 
  4801  071C                     	;# 
  4802  071D                     	;# 
  4803  071E                     	;# 
  4804  0796                     	;# 
  4805  0797                     	;# 
  4806  0798                     	;# 
  4807  0799                     	;# 
  4808  079A                     	;# 
  4809  079B                     	;# 
  4810  080C                     	;# 
  4811  080D                     	;# 
  4812  080E                     	;# 
  4813  080F                     	;# 
  4814  0810                     	;# 
  4815  0811                     	;# 
  4816  0812                     	;# 
  4817  0813                     	;# 
  4818  0814                     	;# 
  4819  081A                     	;# 
  4820  081B                     	;# 
  4821  081C                     	;# 
  4822  081D                     	;# 
  4823  081E                     	;# 
  4824  081F                     	;# 
  4825  088C                     	;# 
  4826  088D                     	;# 
  4827  088E                     	;# 
  4828  088F                     	;# 
  4829  0890                     	;# 
  4830  0891                     	;# 
  4831  0892                     	;# 
  4832  0893                     	;# 
  4833  0895                     	;# 
  4834  0896                     	;# 
  4835  0897                     	;# 
  4836  0898                     	;# 
  4837  0899                     	;# 
  4838  089A                     	;# 
  4839  089B                     	;# 
  4840  090C                     	;# 
  4841  090E                     	;# 
  4842  090F                     	;# 
  4843  091F                     	;# 
  4844  091F                     	;# 
  4845  098F                     	;# 
  4846  098F                     	;# 
  4847  0990                     	;# 
  4848  0991                     	;# 
  4849  0992                     	;# 
  4850  0993                     	;# 
  4851  0994                     	;# 
  4852  0995                     	;# 
  4853  0996                     	;# 
  4854  0997                     	;# 
  4855  0E0F                     	;# 
  4856  0E10                     	;# 
  4857  0E11                     	;# 
  4858  0E12                     	;# 
  4859  0E13                     	;# 
  4860  0E14                     	;# 
  4861  0E15                     	;# 
  4862  0E16                     	;# 
  4863  0E17                     	;# 
  4864  0E18                     	;# 
  4865  0E19                     	;# 
  4866  0E1A                     	;# 
  4867  0E1B                     	;# 
  4868  0E1C                     	;# 
  4869  0E1D                     	;# 
  4870  0E1E                     	;# 
  4871  0E1F                     	;# 
  4872  0E20                     	;# 
  4873  0E21                     	;# 
  4874  0E22                     	;# 
  4875  0E23                     	;# 
  4876  0E24                     	;# 
  4877  0E25                     	;# 
  4878  0E26                     	;# 
  4879  0E27                     	;# 
  4880  0E28                     	;# 
  4881  0E29                     	;# 
  4882  0E2A                     	;# 
  4883  0E2B                     	;# 
  4884  0E2C                     	;# 
  4885  0E2D                     	;# 
  4886  0E2E                     	;# 
  4887  0E2F                     	;# 
  4888  0E30                     	;# 
  4889  0E31                     	;# 
  4890  0E32                     	;# 
  4891  0E33                     	;# 
  4892  0E34                     	;# 
  4893  0E35                     	;# 
  4894  0E36                     	;# 
  4895  0E37                     	;# 
  4896  0E8F                     	;# 
  4897  0E90                     	;# 
  4898  0E91                     	;# 
  4899  0E92                     	;# 
  4900  0E93                     	;# 
  4901  0E94                     	;# 
  4902  0E95                     	;# 
  4903  0E96                     	;# 
  4904  0E97                     	;# 
  4905  0E9C                     	;# 
  4906  0E9D                     	;# 
  4907  0E9E                     	;# 
  4908  0EA1                     	;# 
  4909  0EA2                     	;# 
  4910  0EA3                     	;# 
  4911  0EA4                     	;# 
  4912  0EA5                     	;# 
  4913  0EA9                     	;# 
  4914  0EAA                     	;# 
  4915  0EAB                     	;# 
  4916  0EAC                     	;# 
  4917  0EB1                     	;# 
  4918  0EB2                     	;# 
  4919  0EB3                     	;# 
  4920  0EB8                     	;# 
  4921  0EB9                     	;# 
  4922  0EBA                     	;# 
  4923  0EBB                     	;# 
  4924  0EBC                     	;# 
  4925  0EBD                     	;# 
  4926  0EBE                     	;# 
  4927  0EC3                     	;# 
  4928  0EC5                     	;# 
  4929  0EC6                     	;# 
  4930  0EC7                     	;# 
  4931  0EC8                     	;# 
  4932  0EC9                     	;# 
  4933  0ECA                     	;# 
  4934  0ECB                     	;# 
  4935  0ECC                     	;# 
  4936  0F10                     	;# 
  4937  0F11                     	;# 
  4938  0F12                     	;# 
  4939  0F13                     	;# 
  4940  0F14                     	;# 
  4941  0F15                     	;# 
  4942  0F16                     	;# 
  4943  0F17                     	;# 
  4944  0F18                     	;# 
  4945  0F19                     	;# 
  4946  0F1A                     	;# 
  4947  0F1B                     	;# 
  4948  0F1C                     	;# 
  4949  0F1D                     	;# 
  4950  0F1E                     	;# 
  4951  0F1F                     	;# 
  4952  0F20                     	;# 
  4953  0F21                     	;# 
  4954  0F22                     	;# 
  4955  0F23                     	;# 
  4956  0F24                     	;# 
  4957  0F25                     	;# 
  4958  0F26                     	;# 
  4959  0F27                     	;# 
  4960  0F28                     	;# 
  4961  0F29                     	;# 
  4962  0F2A                     	;# 
  4963  0F2B                     	;# 
  4964  0F2C                     	;# 
  4965  0F2D                     	;# 
  4966  0F2E                     	;# 
  4967  0F2F                     	;# 
  4968  0F30                     	;# 
  4969  0F31                     	;# 
  4970  0F32                     	;# 
  4971  0F38                     	;# 
  4972  0F39                     	;# 
  4973  0F3A                     	;# 
  4974  0F3B                     	;# 
  4975  0F3C                     	;# 
  4976  0F3D                     	;# 
  4977  0F3E                     	;# 
  4978  0F3F                     	;# 
  4979  0F40                     	;# 
  4980  0F41                     	;# 
  4981  0F43                     	;# 
  4982  0F44                     	;# 
  4983  0F45                     	;# 
  4984  0F46                     	;# 
  4985  0F47                     	;# 
  4986  0F48                     	;# 
  4987  0F49                     	;# 
  4988  0F4A                     	;# 
  4989  0F4B                     	;# 
  4990  0F4C                     	;# 
  4991  0F4E                     	;# 
  4992  0F4F                     	;# 
  4993  0F50                     	;# 
  4994  0F51                     	;# 
  4995  0F52                     	;# 
  4996  0F53                     	;# 
  4997  0F54                     	;# 
  4998  0F55                     	;# 
  4999  0F56                     	;# 
  5000  0F57                     	;# 
  5001  0F59                     	;# 
  5002  0F5A                     	;# 
  5003  0F5B                     	;# 
  5004  0F5C                     	;# 
  5005  0F5D                     	;# 
  5006  0F61                     	;# 
  5007  0F62                     	;# 
  5008  0F64                     	;# 
  5009  0F65                     	;# 
  5010  0F66                     	;# 
  5011  0F67                     	;# 
  5012  0F68                     	;# 
  5013  0F69                     	;# 
  5014  0F6A                     	;# 
  5015  0F6B                     	;# 
  5016  0F6C                     	;# 
  5017  0F6D                     	;# 
  5018  0FE4                     	;# 
  5019  0FE5                     	;# 
  5020  0FE6                     	;# 
  5021  0FE7                     	;# 
  5022  0FE8                     	;# 
  5023  0FE9                     	;# 
  5024  0FEA                     	;# 
  5025  0FEB                     	;# 
  5026  0FED                     	;# 
  5027  0FEE                     	;# 
  5028  0FEF                     	;# 
  5029  0000                     	;# 
  5030  0001                     	;# 
  5031  0002                     	;# 
  5032  0003                     	;# 
  5033  0004                     	;# 
  5034  0005                     	;# 
  5035  0006                     	;# 
  5036  0007                     	;# 
  5037  0008                     	;# 
  5038  0009                     	;# 
  5039  000A                     	;# 
  5040  000B                     	;# 
  5041  000C                     	;# 
  5042  000D                     	;# 
  5043  000E                     	;# 
  5044  000F                     	;# 
  5045  0010                     	;# 
  5046  0011                     	;# 
  5047  0012                     	;# 
  5048  0013                     	;# 
  5049  0014                     	;# 
  5050  0015                     	;# 
  5051  0016                     	;# 
  5052  0017                     	;# 
  5053  0018                     	;# 
  5054  0019                     	;# 
  5055  001A                     	;# 
  5056  001C                     	;# 
  5057  001C                     	;# 
  5058  001D                     	;# 
  5059  001D                     	;# 
  5060  001E                     	;# 
  5061  001F                     	;# 
  5062  008C                     	;# 
  5063  008C                     	;# 
  5064  008D                     	;# 
  5065  008E                     	;# 
  5066  008E                     	;# 
  5067  008F                     	;# 
  5068  0090                     	;# 
  5069  0090                     	;# 
  5070  0091                     	;# 
  5071  0093                     	;# 
  5072  0094                     	;# 
  5073  0095                     	;# 
  5074  0096                     	;# 
  5075  0097                     	;# 
  5076  0098                     	;# 
  5077  0099                     	;# 
  5078  009A                     	;# 
  5079  009B                     	;# 
  5080  009C                     	;# 
  5081  009D                     	;# 
  5082  009E                     	;# 
  5083  010C                     	;# 
  5084  010D                     	;# 
  5085  010E                     	;# 
  5086  010E                     	;# 
  5087  010F                     	;# 
  5088  0110                     	;# 
  5089  0110                     	;# 
  5090  0111                     	;# 
  5091  0112                     	;# 
  5092  0112                     	;# 
  5093  0113                     	;# 
  5094  0114                     	;# 
  5095  0114                     	;# 
  5096  0115                     	;# 
  5097  0116                     	;# 
  5098  0116                     	;# 
  5099  0117                     	;# 
  5100  0119                     	;# 
  5101  0119                     	;# 
  5102  0119                     	;# 
  5103  011A                     	;# 
  5104  011A                     	;# 
  5105  011A                     	;# 
  5106  011B                     	;# 
  5107  011B                     	;# 
  5108  011B                     	;# 
  5109  011B                     	;# 
  5110  011B                     	;# 
  5111  011C                     	;# 
  5112  011C                     	;# 
  5113  011C                     	;# 
  5114  011D                     	;# 
  5115  011D                     	;# 
  5116  011D                     	;# 
  5117  011E                     	;# 
  5118  011E                     	;# 
  5119  011E                     	;# 
  5120  011F                     	;# 
  5121  011F                     	;# 
  5122  011F                     	;# 
  5123  011F                     	;# 
  5124  011F                     	;# 
  5125  018C                     	;# 
  5126  018D                     	;# 
  5127  018E                     	;# 
  5128  018F                     	;# 
  5129  0190                     	;# 
  5130  0191                     	;# 
  5131  0192                     	;# 
  5132  0196                     	;# 
  5133  0197                     	;# 
  5134  0198                     	;# 
  5135  0199                     	;# 
  5136  019A                     	;# 
  5137  019B                     	;# 
  5138  019C                     	;# 
  5139  020C                     	;# 
  5140  020C                     	;# 
  5141  020D                     	;# 
  5142  020E                     	;# 
  5143  020F                     	;# 
  5144  020F                     	;# 
  5145  0210                     	;# 
  5146  0210                     	;# 
  5147  0211                     	;# 
  5148  0211                     	;# 
  5149  0212                     	;# 
  5150  0212                     	;# 
  5151  0213                     	;# 
  5152  0214                     	;# 
  5153  0215                     	;# 
  5154  0215                     	;# 
  5155  0216                     	;# 
  5156  0216                     	;# 
  5157  0217                     	;# 
  5158  0217                     	;# 
  5159  0218                     	;# 
  5160  0218                     	;# 
  5161  0219                     	;# 
  5162  021A                     	;# 
  5163  021B                     	;# 
  5164  021B                     	;# 
  5165  021C                     	;# 
  5166  021C                     	;# 
  5167  021D                     	;# 
  5168  021D                     	;# 
  5169  021E                     	;# 
  5170  021F                     	;# 
  5171  028C                     	;# 
  5172  028C                     	;# 
  5173  028D                     	;# 
  5174  028D                     	;# 
  5175  028E                     	;# 
  5176  028F                     	;# 
  5177  0290                     	;# 
  5178  0290                     	;# 
  5179  0291                     	;# 
  5180  0292                     	;# 
  5181  0292                     	;# 
  5182  0293                     	;# 
  5183  0293                     	;# 
  5184  0294                     	;# 
  5185  0295                     	;# 
  5186  0296                     	;# 
  5187  0296                     	;# 
  5188  0297                     	;# 
  5189  0298                     	;# 
  5190  0298                     	;# 
  5191  0299                     	;# 
  5192  0299                     	;# 
  5193  029A                     	;# 
  5194  029B                     	;# 
  5195  029C                     	;# 
  5196  029C                     	;# 
  5197  029D                     	;# 
  5198  030C                     	;# 
  5199  030C                     	;# 
  5200  030D                     	;# 
  5201  030E                     	;# 
  5202  030F                     	;# 
  5203  0310                     	;# 
  5204  0310                     	;# 
  5205  0311                     	;# 
  5206  0312                     	;# 
  5207  0313                     	;# 
  5208  0314                     	;# 
  5209  0314                     	;# 
  5210  0315                     	;# 
  5211  0316                     	;# 
  5212  0317                     	;# 
  5213  0318                     	;# 
  5214  0318                     	;# 
  5215  0319                     	;# 
  5216  031A                     	;# 
  5217  031B                     	;# 
  5218  031C                     	;# 
  5219  031C                     	;# 
  5220  031D                     	;# 
  5221  031E                     	;# 
  5222  031F                     	;# 
  5223  038C                     	;# 
  5224  038C                     	;# 
  5225  038D                     	;# 
  5226  038E                     	;# 
  5227  0390                     	;# 
  5228  0390                     	;# 
  5229  0391                     	;# 
  5230  0392                     	;# 
  5231  040C                     	;# 
  5232  040D                     	;# 
  5233  040E                     	;# 
  5234  040F                     	;# 
  5235  0410                     	;# 
  5236  0411                     	;# 
  5237  0416                     	;# 
  5238  0416                     	;# 
  5239  0417                     	;# 
  5240  0418                     	;# 
  5241  0418                     	;# 
  5242  0419                     	;# 
  5243  041A                     	;# 
  5244  041A                     	;# 
  5245  041B                     	;# 
  5246  041C                     	;# 
  5247  041C                     	;# 
  5248  041D                     	;# 
  5249  041E                     	;# 
  5250  041F                     	;# 
  5251  048C                     	;# 
  5252  048C                     	;# 
  5253  048D                     	;# 
  5254  048E                     	;# 
  5255  048F                     	;# 
  5256  048F                     	;# 
  5257  0490                     	;# 
  5258  0491                     	;# 
  5259  0492                     	;# 
  5260  0492                     	;# 
  5261  0493                     	;# 
  5262  0494                     	;# 
  5263  0495                     	;# 
  5264  0495                     	;# 
  5265  0496                     	;# 
  5266  0497                     	;# 
  5267  0498                     	;# 
  5268  0499                     	;# 
  5269  049A                     	;# 
  5270  049B                     	;# 
  5271  049C                     	;# 
  5272  049D                     	;# 
  5273  050C                     	;# 
  5274  050C                     	;# 
  5275  050D                     	;# 
  5276  050E                     	;# 
  5277  050F                     	;# 
  5278  050F                     	;# 
  5279  0510                     	;# 
  5280  0511                     	;# 
  5281  0512                     	;# 
  5282  0512                     	;# 
  5283  0513                     	;# 
  5284  0514                     	;# 
  5285  0515                     	;# 
  5286  0515                     	;# 
  5287  0516                     	;# 
  5288  0517                     	;# 
  5289  0518                     	;# 
  5290  0519                     	;# 
  5291  051A                     	;# 
  5292  051B                     	;# 
  5293  051C                     	;# 
  5294  051D                     	;# 
  5295  058C                     	;# 
  5296  058C                     	;# 
  5297  058D                     	;# 
  5298  058E                     	;# 
  5299  058F                     	;# 
  5300  058F                     	;# 
  5301  0590                     	;# 
  5302  0591                     	;# 
  5303  0592                     	;# 
  5304  0593                     	;# 
  5305  060C                     	;# 
  5306  060D                     	;# 
  5307  060E                     	;# 
  5308  060F                     	;# 
  5309  0610                     	;# 
  5310  0611                     	;# 
  5311  0612                     	;# 
  5312  0613                     	;# 
  5313  0614                     	;# 
  5314  0616                     	;# 
  5315  0617                     	;# 
  5316  0618                     	;# 
  5317  0619                     	;# 
  5318  061A                     	;# 
  5319  061B                     	;# 
  5320  061C                     	;# 
  5321  061D                     	;# 
  5322  061E                     	;# 
  5323  068C                     	;# 
  5324  068D                     	;# 
  5325  068E                     	;# 
  5326  068F                     	;# 
  5327  0690                     	;# 
  5328  0691                     	;# 
  5329  0692                     	;# 
  5330  0693                     	;# 
  5331  0694                     	;# 
  5332  070C                     	;# 
  5333  070D                     	;# 
  5334  070E                     	;# 
  5335  070F                     	;# 
  5336  0710                     	;# 
  5337  0711                     	;# 
  5338  0712                     	;# 
  5339  0713                     	;# 
  5340  0714                     	;# 
  5341  0716                     	;# 
  5342  0717                     	;# 
  5343  0718                     	;# 
  5344  0719                     	;# 
  5345  071A                     	;# 
  5346  071B                     	;# 
  5347  071C                     	;# 
  5348  071D                     	;# 
  5349  071E                     	;# 
  5350  0796                     	;# 
  5351  0797                     	;# 
  5352  0798                     	;# 
  5353  0799                     	;# 
  5354  079A                     	;# 
  5355  079B                     	;# 
  5356  080C                     	;# 
  5357  080D                     	;# 
  5358  080E                     	;# 
  5359  080F                     	;# 
  5360  0810                     	;# 
  5361  0811                     	;# 
  5362  0812                     	;# 
  5363  0813                     	;# 
  5364  0814                     	;# 
  5365  081A                     	;# 
  5366  081B                     	;# 
  5367  081C                     	;# 
  5368  081D                     	;# 
  5369  081E                     	;# 
  5370  081F                     	;# 
  5371  088C                     	;# 
  5372  088D                     	;# 
  5373  088E                     	;# 
  5374  088F                     	;# 
  5375  0890                     	;# 
  5376  0891                     	;# 
  5377  0892                     	;# 
  5378  0893                     	;# 
  5379  0895                     	;# 
  5380  0896                     	;# 
  5381  0897                     	;# 
  5382  0898                     	;# 
  5383  0899                     	;# 
  5384  089A                     	;# 
  5385  089B                     	;# 
  5386  090C                     	;# 
  5387  090E                     	;# 
  5388  090F                     	;# 
  5389  091F                     	;# 
  5390  091F                     	;# 
  5391  098F                     	;# 
  5392  098F                     	;# 
  5393  0990                     	;# 
  5394  0991                     	;# 
  5395  0992                     	;# 
  5396  0993                     	;# 
  5397  0994                     	;# 
  5398  0995                     	;# 
  5399  0996                     	;# 
  5400  0997                     	;# 
  5401  0E0F                     	;# 
  5402  0E10                     	;# 
  5403  0E11                     	;# 
  5404  0E12                     	;# 
  5405  0E13                     	;# 
  5406  0E14                     	;# 
  5407  0E15                     	;# 
  5408  0E16                     	;# 
  5409  0E17                     	;# 
  5410  0E18                     	;# 
  5411  0E19                     	;# 
  5412  0E1A                     	;# 
  5413  0E1B                     	;# 
  5414  0E1C                     	;# 
  5415  0E1D                     	;# 
  5416  0E1E                     	;# 
  5417  0E1F                     	;# 
  5418  0E20                     	;# 
  5419  0E21                     	;# 
  5420  0E22                     	;# 
  5421  0E23                     	;# 
  5422  0E24                     	;# 
  5423  0E25                     	;# 
  5424  0E26                     	;# 
  5425  0E27                     	;# 
  5426  0E28                     	;# 
  5427  0E29                     	;# 
  5428  0E2A                     	;# 
  5429  0E2B                     	;# 
  5430  0E2C                     	;# 
  5431  0E2D                     	;# 
  5432  0E2E                     	;# 
  5433  0E2F                     	;# 
  5434  0E30                     	;# 
  5435  0E31                     	;# 
  5436  0E32                     	;# 
  5437  0E33                     	;# 
  5438  0E34                     	;# 
  5439  0E35                     	;# 
  5440  0E36                     	;# 
  5441  0E37                     	;# 
  5442  0E8F                     	;# 
  5443  0E90                     	;# 
  5444  0E91                     	;# 
  5445  0E92                     	;# 
  5446  0E93                     	;# 
  5447  0E94                     	;# 
  5448  0E95                     	;# 
  5449  0E96                     	;# 
  5450  0E97                     	;# 
  5451  0E9C                     	;# 
  5452  0E9D                     	;# 
  5453  0E9E                     	;# 
  5454  0EA1                     	;# 
  5455  0EA2                     	;# 
  5456  0EA3                     	;# 
  5457  0EA4                     	;# 
  5458  0EA5                     	;# 
  5459  0EA9                     	;# 
  5460  0EAA                     	;# 
  5461  0EAB                     	;# 
  5462  0EAC                     	;# 
  5463  0EB1                     	;# 
  5464  0EB2                     	;# 
  5465  0EB3                     	;# 
  5466  0EB8                     	;# 
  5467  0EB9                     	;# 
  5468  0EBA                     	;# 
  5469  0EBB                     	;# 
  5470  0EBC                     	;# 
  5471  0EBD                     	;# 
  5472  0EBE                     	;# 
  5473  0EC3                     	;# 
  5474  0EC5                     	;# 
  5475  0EC6                     	;# 
  5476  0EC7                     	;# 
  5477  0EC8                     	;# 
  5478  0EC9                     	;# 
  5479  0ECA                     	;# 
  5480  0ECB                     	;# 
  5481  0ECC                     	;# 
  5482  0F10                     	;# 
  5483  0F11                     	;# 
  5484  0F12                     	;# 
  5485  0F13                     	;# 
  5486  0F14                     	;# 
  5487  0F15                     	;# 
  5488  0F16                     	;# 
  5489  0F17                     	;# 
  5490  0F18                     	;# 
  5491  0F19                     	;# 
  5492  0F1A                     	;# 
  5493  0F1B                     	;# 
  5494  0F1C                     	;# 
  5495  0F1D                     	;# 
  5496  0F1E                     	;# 
  5497  0F1F                     	;# 
  5498  0F20                     	;# 
  5499  0F21                     	;# 
  5500  0F22                     	;# 
  5501  0F23                     	;# 
  5502  0F24                     	;# 
  5503  0F25                     	;# 
  5504  0F26                     	;# 
  5505  0F27                     	;# 
  5506  0F28                     	;# 
  5507  0F29                     	;# 
  5508  0F2A                     	;# 
  5509  0F2B                     	;# 
  5510  0F2C                     	;# 
  5511  0F2D                     	;# 
  5512  0F2E                     	;# 
  5513  0F2F                     	;# 
  5514  0F30                     	;# 
  5515  0F31                     	;# 
  5516  0F32                     	;# 
  5517  0F38                     	;# 
  5518  0F39                     	;# 
  5519  0F3A                     	;# 
  5520  0F3B                     	;# 
  5521  0F3C                     	;# 
  5522  0F3D                     	;# 
  5523  0F3E                     	;# 
  5524  0F3F                     	;# 
  5525  0F40                     	;# 
  5526  0F41                     	;# 
  5527  0F43                     	;# 
  5528  0F44                     	;# 
  5529  0F45                     	;# 
  5530  0F46                     	;# 
  5531  0F47                     	;# 
  5532  0F48                     	;# 
  5533  0F49                     	;# 
  5534  0F4A                     	;# 
  5535  0F4B                     	;# 
  5536  0F4C                     	;# 
  5537  0F4E                     	;# 
  5538  0F4F                     	;# 
  5539  0F50                     	;# 
  5540  0F51                     	;# 
  5541  0F52                     	;# 
  5542  0F53                     	;# 
  5543  0F54                     	;# 
  5544  0F55                     	;# 
  5545  0F56                     	;# 
  5546  0F57                     	;# 
  5547  0F59                     	;# 
  5548  0F5A                     	;# 
  5549  0F5B                     	;# 
  5550  0F5C                     	;# 
  5551  0F5D                     	;# 
  5552  0F61                     	;# 
  5553  0F62                     	;# 
  5554  0F64                     	;# 
  5555  0F65                     	;# 
  5556  0F66                     	;# 
  5557  0F67                     	;# 
  5558  0F68                     	;# 
  5559  0F69                     	;# 
  5560  0F6A                     	;# 
  5561  0F6B                     	;# 
  5562  0F6C                     	;# 
  5563  0F6D                     	;# 
  5564  0FE4                     	;# 
  5565  0FE5                     	;# 
  5566  0FE6                     	;# 
  5567  0FE7                     	;# 
  5568  0FE8                     	;# 
  5569  0FE9                     	;# 
  5570  0FEA                     	;# 
  5571  0FEB                     	;# 
  5572  0FED                     	;# 
  5573  0FEE                     	;# 
  5574  0FEF                     	;# 
  5575  0000                     	;# 
  5576  0001                     	;# 
  5577  0002                     	;# 
  5578  0003                     	;# 
  5579  0004                     	;# 
  5580  0005                     	;# 
  5581  0006                     	;# 
  5582  0007                     	;# 
  5583  0008                     	;# 
  5584  0009                     	;# 
  5585  000A                     	;# 
  5586  000B                     	;# 
  5587  000C                     	;# 
  5588  000D                     	;# 
  5589  000E                     	;# 
  5590  000F                     	;# 
  5591  0010                     	;# 
  5592  0011                     	;# 
  5593  0012                     	;# 
  5594  0013                     	;# 
  5595  0014                     	;# 
  5596  0015                     	;# 
  5597  0016                     	;# 
  5598  0017                     	;# 
  5599  0018                     	;# 
  5600  0019                     	;# 
  5601  001A                     	;# 
  5602  001C                     	;# 
  5603  001C                     	;# 
  5604  001D                     	;# 
  5605  001D                     	;# 
  5606  001E                     	;# 
  5607  001F                     	;# 
  5608  008C                     	;# 
  5609  008C                     	;# 
  5610  008D                     	;# 
  5611  008E                     	;# 
  5612  008E                     	;# 
  5613  008F                     	;# 
  5614  0090                     	;# 
  5615  0090                     	;# 
  5616  0091                     	;# 
  5617  0093                     	;# 
  5618  0094                     	;# 
  5619  0095                     	;# 
  5620  0096                     	;# 
  5621  0097                     	;# 
  5622  0098                     	;# 
  5623  0099                     	;# 
  5624  009A                     	;# 
  5625  009B                     	;# 
  5626  009C                     	;# 
  5627  009D                     	;# 
  5628  009E                     	;# 
  5629  010C                     	;# 
  5630  010D                     	;# 
  5631  010E                     	;# 
  5632  010E                     	;# 
  5633  010F                     	;# 
  5634  0110                     	;# 
  5635  0110                     	;# 
  5636  0111                     	;# 
  5637  0112                     	;# 
  5638  0112                     	;# 
  5639  0113                     	;# 
  5640  0114                     	;# 
  5641  0114                     	;# 
  5642  0115                     	;# 
  5643  0116                     	;# 
  5644  0116                     	;# 
  5645  0117                     	;# 
  5646  0119                     	;# 
  5647  0119                     	;# 
  5648  0119                     	;# 
  5649  011A                     	;# 
  5650  011A                     	;# 
  5651  011A                     	;# 
  5652  011B                     	;# 
  5653  011B                     	;# 
  5654  011B                     	;# 
  5655  011B                     	;# 
  5656  011B                     	;# 
  5657  011C                     	;# 
  5658  011C                     	;# 
  5659  011C                     	;# 
  5660  011D                     	;# 
  5661  011D                     	;# 
  5662  011D                     	;# 
  5663  011E                     	;# 
  5664  011E                     	;# 
  5665  011E                     	;# 
  5666  011F                     	;# 
  5667  011F                     	;# 
  5668  011F                     	;# 
  5669  011F                     	;# 
  5670  011F                     	;# 
  5671  018C                     	;# 
  5672  018D                     	;# 
  5673  018E                     	;# 
  5674  018F                     	;# 
  5675  0190                     	;# 
  5676  0191                     	;# 
  5677  0192                     	;# 
  5678  0196                     	;# 
  5679  0197                     	;# 
  5680  0198                     	;# 
  5681  0199                     	;# 
  5682  019A                     	;# 
  5683  019B                     	;# 
  5684  019C                     	;# 
  5685  020C                     	;# 
  5686  020C                     	;# 
  5687  020D                     	;# 
  5688  020E                     	;# 
  5689  020F                     	;# 
  5690  020F                     	;# 
  5691  0210                     	;# 
  5692  0210                     	;# 
  5693  0211                     	;# 
  5694  0211                     	;# 
  5695  0212                     	;# 
  5696  0212                     	;# 
  5697  0213                     	;# 
  5698  0214                     	;# 
  5699  0215                     	;# 
  5700  0215                     	;# 
  5701  0216                     	;# 
  5702  0216                     	;# 
  5703  0217                     	;# 
  5704  0217                     	;# 
  5705  0218                     	;# 
  5706  0218                     	;# 
  5707  0219                     	;# 
  5708  021A                     	;# 
  5709  021B                     	;# 
  5710  021B                     	;# 
  5711  021C                     	;# 
  5712  021C                     	;# 
  5713  021D                     	;# 
  5714  021D                     	;# 
  5715  021E                     	;# 
  5716  021F                     	;# 
  5717  028C                     	;# 
  5718  028C                     	;# 
  5719  028D                     	;# 
  5720  028D                     	;# 
  5721  028E                     	;# 
  5722  028F                     	;# 
  5723  0290                     	;# 
  5724  0290                     	;# 
  5725  0291                     	;# 
  5726  0292                     	;# 
  5727  0292                     	;# 
  5728  0293                     	;# 
  5729  0293                     	;# 
  5730  0294                     	;# 
  5731  0295                     	;# 
  5732  0296                     	;# 
  5733  0296                     	;# 
  5734  0297                     	;# 
  5735  0298                     	;# 
  5736  0298                     	;# 
  5737  0299                     	;# 
  5738  0299                     	;# 
  5739  029A                     	;# 
  5740  029B                     	;# 
  5741  029C                     	;# 
  5742  029C                     	;# 
  5743  029D                     	;# 
  5744  030C                     	;# 
  5745  030C                     	;# 
  5746  030D                     	;# 
  5747  030E                     	;# 
  5748  030F                     	;# 
  5749  0310                     	;# 
  5750  0310                     	;# 
  5751  0311                     	;# 
  5752  0312                     	;# 
  5753  0313                     	;# 
  5754  0314                     	;# 
  5755  0314                     	;# 
  5756  0315                     	;# 
  5757  0316                     	;# 
  5758  0317                     	;# 
  5759  0318                     	;# 
  5760  0318                     	;# 
  5761  0319                     	;# 
  5762  031A                     	;# 
  5763  031B                     	;# 
  5764  031C                     	;# 
  5765  031C                     	;# 
  5766  031D                     	;# 
  5767  031E                     	;# 
  5768  031F                     	;# 
  5769  038C                     	;# 
  5770  038C                     	;# 
  5771  038D                     	;# 
  5772  038E                     	;# 
  5773  0390                     	;# 
  5774  0390                     	;# 
  5775  0391                     	;# 
  5776  0392                     	;# 
  5777  040C                     	;# 
  5778  040D                     	;# 
  5779  040E                     	;# 
  5780  040F                     	;# 
  5781  0410                     	;# 
  5782  0411                     	;# 
  5783  0416                     	;# 
  5784  0416                     	;# 
  5785  0417                     	;# 
  5786  0418                     	;# 
  5787  0418                     	;# 
  5788  0419                     	;# 
  5789  041A                     	;# 
  5790  041A                     	;# 
  5791  041B                     	;# 
  5792  041C                     	;# 
  5793  041C                     	;# 
  5794  041D                     	;# 
  5795  041E                     	;# 
  5796  041F                     	;# 
  5797  048C                     	;# 
  5798  048C                     	;# 
  5799  048D                     	;# 
  5800  048E                     	;# 
  5801  048F                     	;# 
  5802  048F                     	;# 
  5803  0490                     	;# 
  5804  0491                     	;# 
  5805  0492                     	;# 
  5806  0492                     	;# 
  5807  0493                     	;# 
  5808  0494                     	;# 
  5809  0495                     	;# 
  5810  0495                     	;# 
  5811  0496                     	;# 
  5812  0497                     	;# 
  5813  0498                     	;# 
  5814  0499                     	;# 
  5815  049A                     	;# 
  5816  049B                     	;# 
  5817  049C                     	;# 
  5818  049D                     	;# 
  5819  050C                     	;# 
  5820  050C                     	;# 
  5821  050D                     	;# 
  5822  050E                     	;# 
  5823  050F                     	;# 
  5824  050F                     	;# 
  5825  0510                     	;# 
  5826  0511                     	;# 
  5827  0512                     	;# 
  5828  0512                     	;# 
  5829  0513                     	;# 
  5830  0514                     	;# 
  5831  0515                     	;# 
  5832  0515                     	;# 
  5833  0516                     	;# 
  5834  0517                     	;# 
  5835  0518                     	;# 
  5836  0519                     	;# 
  5837  051A                     	;# 
  5838  051B                     	;# 
  5839  051C                     	;# 
  5840  051D                     	;# 
  5841  058C                     	;# 
  5842  058C                     	;# 
  5843  058D                     	;# 
  5844  058E                     	;# 
  5845  058F                     	;# 
  5846  058F                     	;# 
  5847  0590                     	;# 
  5848  0591                     	;# 
  5849  0592                     	;# 
  5850  0593                     	;# 
  5851  060C                     	;# 
  5852  060D                     	;# 
  5853  060E                     	;# 
  5854  060F                     	;# 
  5855  0610                     	;# 
  5856  0611                     	;# 
  5857  0612                     	;# 
  5858  0613                     	;# 
  5859  0614                     	;# 
  5860  0616                     	;# 
  5861  0617                     	;# 
  5862  0618                     	;# 
  5863  0619                     	;# 
  5864  061A                     	;# 
  5865  061B                     	;# 
  5866  061C                     	;# 
  5867  061D                     	;# 
  5868  061E                     	;# 
  5869  068C                     	;# 
  5870  068D                     	;# 
  5871  068E                     	;# 
  5872  068F                     	;# 
  5873  0690                     	;# 
  5874  0691                     	;# 
  5875  0692                     	;# 
  5876  0693                     	;# 
  5877  0694                     	;# 
  5878  070C                     	;# 
  5879  070D                     	;# 
  5880  070E                     	;# 
  5881  070F                     	;# 
  5882  0710                     	;# 
  5883  0711                     	;# 
  5884  0712                     	;# 
  5885  0713                     	;# 
  5886  0714                     	;# 
  5887  0716                     	;# 
  5888  0717                     	;# 
  5889  0718                     	;# 
  5890  0719                     	;# 
  5891  071A                     	;# 
  5892  071B                     	;# 
  5893  071C                     	;# 
  5894  071D                     	;# 
  5895  071E                     	;# 
  5896  0796                     	;# 
  5897  0797                     	;# 
  5898  0798                     	;# 
  5899  0799                     	;# 
  5900  079A                     	;# 
  5901  079B                     	;# 
  5902  080C                     	;# 
  5903  080D                     	;# 
  5904  080E                     	;# 
  5905  080F                     	;# 
  5906  0810                     	;# 
  5907  0811                     	;# 
  5908  0812                     	;# 
  5909  0813                     	;# 
  5910  0814                     	;# 
  5911  081A                     	;# 
  5912  081B                     	;# 
  5913  081C                     	;# 
  5914  081D                     	;# 
  5915  081E                     	;# 
  5916  081F                     	;# 
  5917  088C                     	;# 
  5918  088D                     	;# 
  5919  088E                     	;# 
  5920  088F                     	;# 
  5921  0890                     	;# 
  5922  0891                     	;# 
  5923  0892                     	;# 
  5924  0893                     	;# 
  5925  0895                     	;# 
  5926  0896                     	;# 
  5927  0897                     	;# 
  5928  0898                     	;# 
  5929  0899                     	;# 
  5930  089A                     	;# 
  5931  089B                     	;# 
  5932  090C                     	;# 
  5933  090E                     	;# 
  5934  090F                     	;# 
  5935  091F                     	;# 
  5936  091F                     	;# 
  5937  098F                     	;# 
  5938  098F                     	;# 
  5939  0990                     	;# 
  5940  0991                     	;# 
  5941  0992                     	;# 
  5942  0993                     	;# 
  5943  0994                     	;# 
  5944  0995                     	;# 
  5945  0996                     	;# 
  5946  0997                     	;# 
  5947  0E0F                     	;# 
  5948  0E10                     	;# 
  5949  0E11                     	;# 
  5950  0E12                     	;# 
  5951  0E13                     	;# 
  5952  0E14                     	;# 
  5953  0E15                     	;# 
  5954  0E16                     	;# 
  5955  0E17                     	;# 
  5956  0E18                     	;# 
  5957  0E19                     	;# 
  5958  0E1A                     	;# 
  5959  0E1B                     	;# 
  5960  0E1C                     	;# 
  5961  0E1D                     	;# 
  5962  0E1E                     	;# 
  5963  0E1F                     	;# 
  5964  0E20                     	;# 
  5965  0E21                     	;# 
  5966  0E22                     	;# 
  5967  0E23                     	;# 
  5968  0E24                     	;# 
  5969  0E25                     	;# 
  5970  0E26                     	;# 
  5971  0E27                     	;# 
  5972  0E28                     	;# 
  5973  0E29                     	;# 
  5974  0E2A                     	;# 
  5975  0E2B                     	;# 
  5976  0E2C                     	;# 
  5977  0E2D                     	;# 
  5978  0E2E                     	;# 
  5979  0E2F                     	;# 
  5980  0E30                     	;# 
  5981  0E31                     	;# 
  5982  0E32                     	;# 
  5983  0E33                     	;# 
  5984  0E34                     	;# 
  5985  0E35                     	;# 
  5986  0E36                     	;# 
  5987  0E37                     	;# 
  5988  0E8F                     	;# 
  5989  0E90                     	;# 
  5990  0E91                     	;# 
  5991  0E92                     	;# 
  5992  0E93                     	;# 
  5993  0E94                     	;# 
  5994  0E95                     	;# 
  5995  0E96                     	;# 
  5996  0E97                     	;# 
  5997  0E9C                     	;# 
  5998  0E9D                     	;# 
  5999  0E9E                     	;# 
  6000  0EA1                     	;# 
  6001  0EA2                     	;# 
  6002  0EA3                     	;# 
  6003  0EA4                     	;# 
  6004  0EA5                     	;# 
  6005  0EA9                     	;# 
  6006  0EAA                     	;# 
  6007  0EAB                     	;# 
  6008  0EAC                     	;# 
  6009  0EB1                     	;# 
  6010  0EB2                     	;# 
  6011  0EB3                     	;# 
  6012  0EB8                     	;# 
  6013  0EB9                     	;# 
  6014  0EBA                     	;# 
  6015  0EBB                     	;# 
  6016  0EBC                     	;# 
  6017  0EBD                     	;# 
  6018  0EBE                     	;# 
  6019  0EC3                     	;# 
  6020  0EC5                     	;# 
  6021  0EC6                     	;# 
  6022  0EC7                     	;# 
  6023  0EC8                     	;# 
  6024  0EC9                     	;# 
  6025  0ECA                     	;# 
  6026  0ECB                     	;# 
  6027  0ECC                     	;# 
  6028  0F10                     	;# 
  6029  0F11                     	;# 
  6030  0F12                     	;# 
  6031  0F13                     	;# 
  6032  0F14                     	;# 
  6033  0F15                     	;# 
  6034  0F16                     	;# 
  6035  0F17                     	;# 
  6036  0F18                     	;# 
  6037  0F19                     	;# 
  6038  0F1A                     	;# 
  6039  0F1B                     	;# 
  6040  0F1C                     	;# 
  6041  0F1D                     	;# 
  6042  0F1E                     	;# 
  6043  0F1F                     	;# 
  6044  0F20                     	;# 
  6045  0F21                     	;# 
  6046  0F22                     	;# 
  6047  0F23                     	;# 
  6048  0F24                     	;# 
  6049  0F25                     	;# 
  6050  0F26                     	;# 
  6051  0F27                     	;# 
  6052  0F28                     	;# 
  6053  0F29                     	;# 
  6054  0F2A                     	;# 
  6055  0F2B                     	;# 
  6056  0F2C                     	;# 
  6057  0F2D                     	;# 
  6058  0F2E                     	;# 
  6059  0F2F                     	;# 
  6060  0F30                     	;# 
  6061  0F31                     	;# 
  6062  0F32                     	;# 
  6063  0F38                     	;# 
  6064  0F39                     	;# 
  6065  0F3A                     	;# 
  6066  0F3B                     	;# 
  6067  0F3C                     	;# 
  6068  0F3D                     	;# 
  6069  0F3E                     	;# 
  6070  0F3F                     	;# 
  6071  0F40                     	;# 
  6072  0F41                     	;# 
  6073  0F43                     	;# 
  6074  0F44                     	;# 
  6075  0F45                     	;# 
  6076  0F46                     	;# 
  6077  0F47                     	;# 
  6078  0F48                     	;# 
  6079  0F49                     	;# 
  6080  0F4A                     	;# 
  6081  0F4B                     	;# 
  6082  0F4C                     	;# 
  6083  0F4E                     	;# 
  6084  0F4F                     	;# 
  6085  0F50                     	;# 
  6086  0F51                     	;# 
  6087  0F52                     	;# 
  6088  0F53                     	;# 
  6089  0F54                     	;# 
  6090  0F55                     	;# 
  6091  0F56                     	;# 
  6092  0F57                     	;# 
  6093  0F59                     	;# 
  6094  0F5A                     	;# 
  6095  0F5B                     	;# 
  6096  0F5C                     	;# 
  6097  0F5D                     	;# 
  6098  0F61                     	;# 
  6099  0F62                     	;# 
  6100  0F64                     	;# 
  6101  0F65                     	;# 
  6102  0F66                     	;# 
  6103  0F67                     	;# 
  6104  0F68                     	;# 
  6105  0F69                     	;# 
  6106  0F6A                     	;# 
  6107  0F6B                     	;# 
  6108  0F6C                     	;# 
  6109  0F6D                     	;# 
  6110  0FE4                     	;# 
  6111  0FE5                     	;# 
  6112  0FE6                     	;# 
  6113  0FE7                     	;# 
  6114  0FE8                     	;# 
  6115  0FE9                     	;# 
  6116  0FEA                     	;# 
  6117  0FEB                     	;# 
  6118  0FED                     	;# 
  6119  0FEE                     	;# 
  6120  0FEF                     	;# 
  6121  0000                     	;# 
  6122  0001                     	;# 
  6123  0002                     	;# 
  6124  0003                     	;# 
  6125  0004                     	;# 
  6126  0005                     	;# 
  6127  0006                     	;# 
  6128  0007                     	;# 
  6129  0008                     	;# 
  6130  0009                     	;# 
  6131  000A                     	;# 
  6132  000B                     	;# 
  6133  000C                     	;# 
  6134  000D                     	;# 
  6135  000E                     	;# 
  6136  000F                     	;# 
  6137  0010                     	;# 
  6138  0011                     	;# 
  6139  0012                     	;# 
  6140  0013                     	;# 
  6141  0014                     	;# 
  6142  0015                     	;# 
  6143  0016                     	;# 
  6144  0017                     	;# 
  6145  0018                     	;# 
  6146  0019                     	;# 
  6147  001A                     	;# 
  6148  001C                     	;# 
  6149  001C                     	;# 
  6150  001D                     	;# 
  6151  001D                     	;# 
  6152  001E                     	;# 
  6153  001F                     	;# 
  6154  008C                     	;# 
  6155  008C                     	;# 
  6156  008D                     	;# 
  6157  008E                     	;# 
  6158  008E                     	;# 
  6159  008F                     	;# 
  6160  0090                     	;# 
  6161  0090                     	;# 
  6162  0091                     	;# 
  6163  0093                     	;# 
  6164  0094                     	;# 
  6165  0095                     	;# 
  6166  0096                     	;# 
  6167  0097                     	;# 
  6168  0098                     	;# 
  6169  0099                     	;# 
  6170  009A                     	;# 
  6171  009B                     	;# 
  6172  009C                     	;# 
  6173  009D                     	;# 
  6174  009E                     	;# 
  6175  010C                     	;# 
  6176  010D                     	;# 
  6177  010E                     	;# 
  6178  010E                     	;# 
  6179  010F                     	;# 
  6180  0110                     	;# 
  6181  0110                     	;# 
  6182  0111                     	;# 
  6183  0112                     	;# 
  6184  0112                     	;# 
  6185  0113                     	;# 
  6186  0114                     	;# 
  6187  0114                     	;# 
  6188  0115                     	;# 
  6189  0116                     	;# 
  6190  0116                     	;# 
  6191  0117                     	;# 
  6192  0119                     	;# 
  6193  0119                     	;# 
  6194  0119                     	;# 
  6195  011A                     	;# 
  6196  011A                     	;# 
  6197  011A                     	;# 
  6198  011B                     	;# 
  6199  011B                     	;# 
  6200  011B                     	;# 
  6201  011B                     	;# 
  6202  011B                     	;# 
  6203  011C                     	;# 
  6204  011C                     	;# 
  6205  011C                     	;# 
  6206  011D                     	;# 
  6207  011D                     	;# 
  6208  011D                     	;# 
  6209  011E                     	;# 
  6210  011E                     	;# 
  6211  011E                     	;# 
  6212  011F                     	;# 
  6213  011F                     	;# 
  6214  011F                     	;# 
  6215  011F                     	;# 
  6216  011F                     	;# 
  6217  018C                     	;# 
  6218  018D                     	;# 
  6219  018E                     	;# 
  6220  018F                     	;# 
  6221  0190                     	;# 
  6222  0191                     	;# 
  6223  0192                     	;# 
  6224  0196                     	;# 
  6225  0197                     	;# 
  6226  0198                     	;# 
  6227  0199                     	;# 
  6228  019A                     	;# 
  6229  019B                     	;# 
  6230  019C                     	;# 
  6231  020C                     	;# 
  6232  020C                     	;# 
  6233  020D                     	;# 
  6234  020E                     	;# 
  6235  020F                     	;# 
  6236  020F                     	;# 
  6237  0210                     	;# 
  6238  0210                     	;# 
  6239  0211                     	;# 
  6240  0211                     	;# 
  6241  0212                     	;# 
  6242  0212                     	;# 
  6243  0213                     	;# 
  6244  0214                     	;# 
  6245  0215                     	;# 
  6246  0215                     	;# 
  6247  0216                     	;# 
  6248  0216                     	;# 
  6249  0217                     	;# 
  6250  0217                     	;# 
  6251  0218                     	;# 
  6252  0218                     	;# 
  6253  0219                     	;# 
  6254  021A                     	;# 
  6255  021B                     	;# 
  6256  021B                     	;# 
  6257  021C                     	;# 
  6258  021C                     	;# 
  6259  021D                     	;# 
  6260  021D                     	;# 
  6261  021E                     	;# 
  6262  021F                     	;# 
  6263  028C                     	;# 
  6264  028C                     	;# 
  6265  028D                     	;# 
  6266  028D                     	;# 
  6267  028E                     	;# 
  6268  028F                     	;# 
  6269  0290                     	;# 
  6270  0290                     	;# 
  6271  0291                     	;# 
  6272  0292                     	;# 
  6273  0292                     	;# 
  6274  0293                     	;# 
  6275  0293                     	;# 
  6276  0294                     	;# 
  6277  0295                     	;# 
  6278  0296                     	;# 
  6279  0296                     	;# 
  6280  0297                     	;# 
  6281  0298                     	;# 
  6282  0298                     	;# 
  6283  0299                     	;# 
  6284  0299                     	;# 
  6285  029A                     	;# 
  6286  029B                     	;# 
  6287  029C                     	;# 
  6288  029C                     	;# 
  6289  029D                     	;# 
  6290  030C                     	;# 
  6291  030C                     	;# 
  6292  030D                     	;# 
  6293  030E                     	;# 
  6294  030F                     	;# 
  6295  0310                     	;# 
  6296  0310                     	;# 
  6297  0311                     	;# 
  6298  0312                     	;# 
  6299  0313                     	;# 
  6300  0314                     	;# 
  6301  0314                     	;# 
  6302  0315                     	;# 
  6303  0316                     	;# 
  6304  0317                     	;# 
  6305  0318                     	;# 
  6306  0318                     	;# 
  6307  0319                     	;# 
  6308  031A                     	;# 
  6309  031B                     	;# 
  6310  031C                     	;# 
  6311  031C                     	;# 
  6312  031D                     	;# 
  6313  031E                     	;# 
  6314  031F                     	;# 
  6315  038C                     	;# 
  6316  038C                     	;# 
  6317  038D                     	;# 
  6318  038E                     	;# 
  6319  0390                     	;# 
  6320  0390                     	;# 
  6321  0391                     	;# 
  6322  0392                     	;# 
  6323  040C                     	;# 
  6324  040D                     	;# 
  6325  040E                     	;# 
  6326  040F                     	;# 
  6327  0410                     	;# 
  6328  0411                     	;# 
  6329  0416                     	;# 
  6330  0416                     	;# 
  6331  0417                     	;# 
  6332  0418                     	;# 
  6333  0418                     	;# 
  6334  0419                     	;# 
  6335  041A                     	;# 
  6336  041A                     	;# 
  6337  041B                     	;# 
  6338  041C                     	;# 
  6339  041C                     	;# 
  6340  041D                     	;# 
  6341  041E                     	;# 
  6342  041F                     	;# 
  6343  048C                     	;# 
  6344  048C                     	;# 
  6345  048D                     	;# 
  6346  048E                     	;# 
  6347  048F                     	;# 
  6348  048F                     	;# 
  6349  0490                     	;# 
  6350  0491                     	;# 
  6351  0492                     	;# 
  6352  0492                     	;# 
  6353  0493                     	;# 
  6354  0494                     	;# 
  6355  0495                     	;# 
  6356  0495                     	;# 
  6357  0496                     	;# 
  6358  0497                     	;# 
  6359  0498                     	;# 
  6360  0499                     	;# 
  6361  049A                     	;# 
  6362  049B                     	;# 
  6363  049C                     	;# 
  6364  049D                     	;# 
  6365  050C                     	;# 
  6366  050C                     	;# 
  6367  050D                     	;# 
  6368  050E                     	;# 
  6369  050F                     	;# 
  6370  050F                     	;# 
  6371  0510                     	;# 
  6372  0511                     	;# 
  6373  0512                     	;# 
  6374  0512                     	;# 
  6375  0513                     	;# 
  6376  0514                     	;# 
  6377  0515                     	;# 
  6378  0515                     	;# 
  6379  0516                     	;# 
  6380  0517                     	;# 
  6381  0518                     	;# 
  6382  0519                     	;# 
  6383  051A                     	;# 
  6384  051B                     	;# 
  6385  051C                     	;# 
  6386  051D                     	;# 
  6387  058C                     	;# 
  6388  058C                     	;# 
  6389  058D                     	;# 
  6390  058E                     	;# 
  6391  058F                     	;# 
  6392  058F                     	;# 
  6393  0590                     	;# 
  6394  0591                     	;# 
  6395  0592                     	;# 
  6396  0593                     	;# 
  6397  060C                     	;# 
  6398  060D                     	;# 
  6399  060E                     	;# 
  6400  060F                     	;# 
  6401  0610                     	;# 
  6402  0611                     	;# 
  6403  0612                     	;# 
  6404  0613                     	;# 
  6405  0614                     	;# 
  6406  0616                     	;# 
  6407  0617                     	;# 
  6408  0618                     	;# 
  6409  0619                     	;# 
  6410  061A                     	;# 
  6411  061B                     	;# 
  6412  061C                     	;# 
  6413  061D                     	;# 
  6414  061E                     	;# 
  6415  068C                     	;# 
  6416  068D                     	;# 
  6417  068E                     	;# 
  6418  068F                     	;# 
  6419  0690                     	;# 
  6420  0691                     	;# 
  6421  0692                     	;# 
  6422  0693                     	;# 
  6423  0694                     	;# 
  6424  070C                     	;# 
  6425  070D                     	;# 
  6426  070E                     	;# 
  6427  070F                     	;# 
  6428  0710                     	;# 
  6429  0711                     	;# 
  6430  0712                     	;# 
  6431  0713                     	;# 
  6432  0714                     	;# 
  6433  0716                     	;# 
  6434  0717                     	;# 
  6435  0718                     	;# 
  6436  0719                     	;# 
  6437  071A                     	;# 
  6438  071B                     	;# 
  6439  071C                     	;# 
  6440  071D                     	;# 
  6441  071E                     	;# 
  6442  0796                     	;# 
  6443  0797                     	;# 
  6444  0798                     	;# 
  6445  0799                     	;# 
  6446  079A                     	;# 
  6447  079B                     	;# 
  6448  080C                     	;# 
  6449  080D                     	;# 
  6450  080E                     	;# 
  6451  080F                     	;# 
  6452  0810                     	;# 
  6453  0811                     	;# 
  6454  0812                     	;# 
  6455  0813                     	;# 
  6456  0814                     	;# 
  6457  081A                     	;# 
  6458  081B                     	;# 
  6459  081C                     	;# 
  6460  081D                     	;# 
  6461  081E                     	;# 
  6462  081F                     	;# 
  6463  088C                     	;# 
  6464  088D                     	;# 
  6465  088E                     	;# 
  6466  088F                     	;# 
  6467  0890                     	;# 
  6468  0891                     	;# 
  6469  0892                     	;# 
  6470  0893                     	;# 
  6471  0895                     	;# 
  6472  0896                     	;# 
  6473  0897                     	;# 
  6474  0898                     	;# 
  6475  0899                     	;# 
  6476  089A                     	;# 
  6477  089B                     	;# 
  6478  090C                     	;# 
  6479  090E                     	;# 
  6480  090F                     	;# 
  6481  091F                     	;# 
  6482  091F                     	;# 
  6483  098F                     	;# 
  6484  098F                     	;# 
  6485  0990                     	;# 
  6486  0991                     	;# 
  6487  0992                     	;# 
  6488  0993                     	;# 
  6489  0994                     	;# 
  6490  0995                     	;# 
  6491  0996                     	;# 
  6492  0997                     	;# 
  6493  0E0F                     	;# 
  6494  0E10                     	;# 
  6495  0E11                     	;# 
  6496  0E12                     	;# 
  6497  0E13                     	;# 
  6498  0E14                     	;# 
  6499  0E15                     	;# 
  6500  0E16                     	;# 
  6501  0E17                     	;# 
  6502  0E18                     	;# 
  6503  0E19                     	;# 
  6504  0E1A                     	;# 
  6505  0E1B                     	;# 
  6506  0E1C                     	;# 
  6507  0E1D                     	;# 
  6508  0E1E                     	;# 
  6509  0E1F                     	;# 
  6510  0E20                     	;# 
  6511  0E21                     	;# 
  6512  0E22                     	;# 
  6513  0E23                     	;# 
  6514  0E24                     	;# 
  6515  0E25                     	;# 
  6516  0E26                     	;# 
  6517  0E27                     	;# 
  6518  0E28                     	;# 
  6519  0E29                     	;# 
  6520  0E2A                     	;# 
  6521  0E2B                     	;# 
  6522  0E2C                     	;# 
  6523  0E2D                     	;# 
  6524  0E2E                     	;# 
  6525  0E2F                     	;# 
  6526  0E30                     	;# 
  6527  0E31                     	;# 
  6528  0E32                     	;# 
  6529  0E33                     	;# 
  6530  0E34                     	;# 
  6531  0E35                     	;# 
  6532  0E36                     	;# 
  6533  0E37                     	;# 
  6534  0E8F                     	;# 
  6535  0E90                     	;# 
  6536  0E91                     	;# 
  6537  0E92                     	;# 
  6538  0E93                     	;# 
  6539  0E94                     	;# 
  6540  0E95                     	;# 
  6541  0E96                     	;# 
  6542  0E97                     	;# 
  6543  0E9C                     	;# 
  6544  0E9D                     	;# 
  6545  0E9E                     	;# 
  6546  0EA1                     	;# 
  6547  0EA2                     	;# 
  6548  0EA3                     	;# 
  6549  0EA4                     	;# 
  6550  0EA5                     	;# 
  6551  0EA9                     	;# 
  6552  0EAA                     	;# 
  6553  0EAB                     	;# 
  6554  0EAC                     	;# 
  6555  0EB1                     	;# 
  6556  0EB2                     	;# 
  6557  0EB3                     	;# 
  6558  0EB8                     	;# 
  6559  0EB9                     	;# 
  6560  0EBA                     	;# 
  6561  0EBB                     	;# 
  6562  0EBC                     	;# 
  6563  0EBD                     	;# 
  6564  0EBE                     	;# 
  6565  0EC3                     	;# 
  6566  0EC5                     	;# 
  6567  0EC6                     	;# 
  6568  0EC7                     	;# 
  6569  0EC8                     	;# 
  6570  0EC9                     	;# 
  6571  0ECA                     	;# 
  6572  0ECB                     	;# 
  6573  0ECC                     	;# 
  6574  0F10                     	;# 
  6575  0F11                     	;# 
  6576  0F12                     	;# 
  6577  0F13                     	;# 
  6578  0F14                     	;# 
  6579  0F15                     	;# 
  6580  0F16                     	;# 
  6581  0F17                     	;# 
  6582  0F18                     	;# 
  6583  0F19                     	;# 
  6584  0F1A                     	;# 
  6585  0F1B                     	;# 
  6586  0F1C                     	;# 
  6587  0F1D                     	;# 
  6588  0F1E                     	;# 
  6589  0F1F                     	;# 
  6590  0F20                     	;# 
  6591  0F21                     	;# 
  6592  0F22                     	;# 
  6593  0F23                     	;# 
  6594  0F24                     	;# 
  6595  0F25                     	;# 
  6596  0F26                     	;# 
  6597  0F27                     	;# 
  6598  0F28                     	;# 
  6599  0F29                     	;# 
  6600  0F2A                     	;# 
  6601  0F2B                     	;# 
  6602  0F2C                     	;# 
  6603  0F2D                     	;# 
  6604  0F2E                     	;# 
  6605  0F2F                     	;# 
  6606  0F30                     	;# 
  6607  0F31                     	;# 
  6608  0F32                     	;# 
  6609  0F38                     	;# 
  6610  0F39                     	;# 
  6611  0F3A                     	;# 
  6612  0F3B                     	;# 
  6613  0F3C                     	;# 
  6614  0F3D                     	;# 
  6615  0F3E                     	;# 
  6616  0F3F                     	;# 
  6617  0F40                     	;# 
  6618  0F41                     	;# 
  6619  0F43                     	;# 
  6620  0F44                     	;# 
  6621  0F45                     	;# 
  6622  0F46                     	;# 
  6623  0F47                     	;# 
  6624  0F48                     	;# 
  6625  0F49                     	;# 
  6626  0F4A                     	;# 
  6627  0F4B                     	;# 
  6628  0F4C                     	;# 
  6629  0F4E                     	;# 
  6630  0F4F                     	;# 
  6631  0F50                     	;# 
  6632  0F51                     	;# 
  6633  0F52                     	;# 
  6634  0F53                     	;# 
  6635  0F54                     	;# 
  6636  0F55                     	;# 
  6637  0F56                     	;# 
  6638  0F57                     	;# 
  6639  0F59                     	;# 
  6640  0F5A                     	;# 
  6641  0F5B                     	;# 
  6642  0F5C                     	;# 
  6643  0F5D                     	;# 
  6644  0F61                     	;# 
  6645  0F62                     	;# 
  6646  0F64                     	;# 
  6647  0F65                     	;# 
  6648  0F66                     	;# 
  6649  0F67                     	;# 
  6650  0F68                     	;# 
  6651  0F69                     	;# 
  6652  0F6A                     	;# 
  6653  0F6B                     	;# 
  6654  0F6C                     	;# 
  6655  0F6D                     	;# 
  6656  0FE4                     	;# 
  6657  0FE5                     	;# 
  6658  0FE6                     	;# 
  6659  0FE7                     	;# 
  6660  0FE8                     	;# 
  6661  0FE9                     	;# 
  6662  0FEA                     	;# 
  6663  0FEB                     	;# 
  6664  0FED                     	;# 
  6665  0FEE                     	;# 
  6666  0FEF                     	;# 
  6667                           
  6668 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  6669  0000                     
  6670 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  6671  0000                     
  6672 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  6673  0000                     
  6674 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  6675  0000                     
  6676 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  6677  0000                     
  6678 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  6679  0000                     
  6680 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  6681  0000                     
  6682 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  6683  0000                     
  6684 ;; Function _I2C1_DO_TX is unused but had its address taken
  6685  0000                     
  6686 ;; Function _I2C1_DO_RX is unused but had its address taken
  6687  0000                     
  6688 ;; Function _I2C1_DO_RCEN is unused but had its address taken
  6689  0000                     
  6690 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  6691  0000                     
  6692 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  6693  0000                     
  6694 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  6695  0000                     
  6696 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  6697  0000                     
  6698 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  6699  0000                     
  6700 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  6701  0000                     
  6702 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  6703  0000                     
  6704 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  6705  0000                     
  6706 ;; Function _I2C1_DO_RESET is unused but had its address taken
  6707  0000                     
  6708 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  6709  0000                     
  6710 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  6711  0000                     
  6712 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  6713  0000                     
  6714                           	psect	stringtext1
  6715  1800                     __pstringtext1:
  6716  1800                     _i2c1_fsmStateTable:
  6717  1800  3400               	retlw	0
  6718  1801  3400               	retlw	0
  6719  1802  3400               	retlw	0
  6720  1803  3400               	retlw	0
  6721  1804  3400               	retlw	0
  6722  1805  3400               	retlw	0
  6723  1806  3400               	retlw	0
  6724  1807  3400               	retlw	0
  6725  1808  3400               	retlw	0
  6726  1809  3400               	retlw	0
  6727  180A  3400               	retlw	0
  6728  180B  3400               	retlw	0
  6729  180C  3400               	retlw	0
  6730  180D  3400               	retlw	0
  6731  180E  3400               	retlw	0
  6732  180F  3400               	retlw	0
  6733  1810  3400               	retlw	0
  6734  1811  3400               	retlw	0
  6735  1812  3400               	retlw	0
  6736  1813  3400               	retlw	0
  6737  1814  3400               	retlw	0
  6738  1815  3400               	retlw	0
  6739  1816  3400               	retlw	0
  6740  1817  3400               	retlw	0
  6741  1818  3400               	retlw	0
  6742  1819  3400               	retlw	0
  6743  181A  3400               	retlw	0
  6744  181B  3400               	retlw	0
  6745  181C  3400               	retlw	0
  6746  181D  3400               	retlw	0
  6747  181E  3400               	retlw	0
  6748  181F  3400               	retlw	0
  6749  1820                     __end_of_i2c1_fsmStateTable:
  6750                           
  6751                           	psect	nvBANK1
  6752  00EE                     __pnvBANK1:
  6753  00EE                     _last_temperature:
  6754  00EE                     	ds	1
  6755  00EF                     _last_luminosity:
  6756  00EF                     	ds	1
  6757                           
  6758                           	psect	nvBANK2
  6759  0149                     __pnvBANK2:
  6760  0149                     _data_address:
  6761  0149                     	ds	2
  6762  014B                     _TMR1_InterruptHandler:
  6763  014B                     	ds	2
  6764  014D                     _timer1ReloadVal:
  6765  014D                     	ds	2
  6766  014F                     _alarmc:
  6767  014F                     	ds	1
  6768  0150                     _character:
  6769  0150                     	ds	1
  6770  0151                     _modification:
  6771  0151                     	ds	1
  6772  0152                     _max_temperature:
  6773  0152                     	ds	1
  6774  0153                     _counter:
  6775  0153                     	ds	1
  6776  0154                     _max_luminosity:
  6777  0154                     	ds	1
  6778  000E                     _PORTCbits	set	14
  6779  0016                     _LATAbits	set	22
  6780  000C                     _PORTAbits	set	12
  6781  000D                     _PORTBbits	set	13
  6782  000B                     _INTCONbits	set	11
  6783  0014                     _TRISD	set	20
  6784  0013                     _TRISC	set	19
  6785  0012                     _TRISB	set	18
  6786  0011                     _TRISA	set	17
  6787  0015                     _TRISE	set	21
  6788  0018                     _LATC	set	24
  6789  0017                     _LATB	set	23
  6790  0016                     _LATA	set	22
  6791  0019                     _LATD	set	25
  6792  001A                     _LATE	set	26
  6793  0013                     _TRISCbits	set	19
  6794  0094                     _ADCON1bits	set	148
  6795  008E                     _ADPREVL	set	142
  6796  008F                     _ADPREVH	set	143
  6797  0097                     _ADSTATbits	set	151
  6798  0090                     _ADACCL	set	144
  6799  0091                     _ADACCH	set	145
  6800  0095                     _ADCON2bits	set	149
  6801  0096                     _ADCON3bits	set	150
  6802  008C                     _ADRESL	set	140
  6803  008D                     _ADRESH	set	141
  6804  0093                     _ADCON0bits	set	147
  6805  009D                     _ADACQ	set	157
  6806  0093                     _ADCON0	set	147
  6807  0098                     _ADCLK	set	152
  6808  0099                     _ADACT	set	153
  6809  009A                     _ADREF	set	154
  6810  0097                     _ADSTAT	set	151
  6811  0096                     _ADCON3	set	150
  6812  0095                     _ADCON2	set	149
  6813  0094                     _ADCON1	set	148
  6814  009C                     _ADPRE	set	156
  6815  009B                     _ADCAP	set	155
  6816  009E                     _ADPCH	set	158
  6817  0116                     _ADERRL	set	278
  6818  0117                     _ADERRH	set	279
  6819  0114                     _ADFLTRL	set	276
  6820  0115                     _ADFLTRH	set	277
  6821  010C                     _ADCNT	set	268
  6822  010D                     _ADRPT	set	269
  6823  0113                     _ADSTPTH	set	275
  6824  0112                     _ADSTPTL	set	274
  6825  0111                     _ADUTHH	set	273
  6826  0110                     _ADUTHL	set	272
  6827  010F                     _ADLTHH	set	271
  6828  010E                     _ADLTHL	set	270
  6829  018C                     _SSP1BUF	set	396
  6830  018F                     _SSP1STATbits	set	399
  6831  0191                     _SSP1CON2bits	set	401
  6832  0190                     _SSP1CON1bits	set	400
  6833  018D                     _SSP1ADD	set	397
  6834  0191                     _SSP1CON2	set	401
  6835  0190                     _SSP1CON1	set	400
  6836  018F                     _SSP1STAT	set	399
  6837  020F                     _T1GCONbits	set	527
  6838  020E                     _T1CONbits	set	526
  6839  020E                     _T1CON	set	526
  6840  020C                     _TMR1L	set	524
  6841  020D                     _TMR1H	set	525
  6842  0211                     _T1CLK	set	529
  6843  0210                     _T1GATE	set	528
  6844  020F                     _T1GCON	set	527
  6845  0719                     _PIE3bits	set	1817
  6846  0710                     _PIR4bits	set	1808
  6847  071A                     _PIE4bits	set	1818
  6848  070F                     _PIR3bits	set	1807
  6849  079B                     _PMD5	set	1947
  6850  079A                     _PMD4	set	1946
  6851  0799                     _PMD3	set	1945
  6852  0798                     _PMD2	set	1944
  6853  0797                     _PMD1	set	1943
  6854  0796                     _PMD0	set	1942
  6855  081E                     _NVMCON1	set	2078
  6856  081F                     _NVMCON2	set	2079
  6857  081C                     _NVMDATL	set	2076
  6858  081D                     _NVMDATH	set	2077
  6859  081E                     _NVMCON1bits	set	2078
  6860  081B                     _NVMADRH	set	2075
  6861  081A                     _NVMADRL	set	2074
  6862  0892                     _OSCTUNE	set	2194
  6863  0893                     _OSCFRQ	set	2195
  6864  0891                     _OSCEN	set	2193
  6865  088F                     _OSCCON3	set	2191
  6866  088D                     _OSCCON1	set	2189
  6867  0EC6                     _SSP1DATPPS	set	3782
  6868  0EC5                     _SSP1CLKPPS	set	3781
  6869  0F24                     _RC4PPS	set	3876
  6870  0F23                     _RC3PPS	set	3875
  6871  0F68                     _INLVLE	set	3944
  6872  0F5D                     _INLVLD	set	3933
  6873  0F52                     _INLVLC	set	3922
  6874  0F47                     _INLVLB	set	3911
  6875  0F3C                     _INLVLA	set	3900
  6876  0F67                     _SLRCONE	set	3943
  6877  0F5C                     _SLRCOND	set	3932
  6878  0F51                     _SLRCONC	set	3921
  6879  0F46                     _SLRCONB	set	3910
  6880  0F3B                     _SLRCONA	set	3899
  6881  0F5B                     _ODCOND	set	3931
  6882  0F50                     _ODCONC	set	3920
  6883  0F45                     _ODCONB	set	3909
  6884  0F3A                     _ODCONA	set	3898
  6885  0F66                     _ODCONE	set	3942
  6886  0F4F                     _WPUC	set	3919
  6887  0F39                     _WPUA	set	3897
  6888  0F44                     _WPUB	set	3908
  6889  0F65                     _WPUE	set	3941
  6890  0F5A                     _WPUD	set	3930
  6891  0F38                     _ANSELA	set	3896
  6892  0F64                     _ANSELE	set	3940
  6893  0F43                     _ANSELB	set	3907
  6894  0F4E                     _ANSELC	set	3918
  6895  0F59                     _ANSELD	set	3929
  6896                           
  6897                           	psect	stringtext2
  6898  1820                     __pstringtext2:
  6899  1820                     STR_1:
  6900  1820  3425               	retlw	37	;'%'
  6901  1821  3430               	retlw	48	;'0'
  6902  1822  3432               	retlw	50	;'2'
  6903  1823  3464               	retlw	100	;'d'
  6904  1824  343A               	retlw	58	;':'
  6905  1825  3425               	retlw	37	;'%'
  6906  1826  3430               	retlw	48	;'0'
  6907  1827  3432               	retlw	50	;'2'
  6908  1828  3464               	retlw	100	;'d'
  6909  1829  343A               	retlw	58	;':'
  6910  182A  3425               	retlw	37	;'%'
  6911  182B  3430               	retlw	48	;'0'
  6912  182C  3432               	retlw	50	;'2'
  6913  182D  3464               	retlw	100	;'d'
  6914  182E  3420               	retlw	32	;' '
  6915  182F  3420               	retlw	32	;' '
  6916  1830  3425               	retlw	37	;'%'
  6917  1831  3463               	retlw	99	;'c'
  6918  1832  3420               	retlw	32	;' '
  6919  1833  3420               	retlw	32	;' '
  6920  1834  3425               	retlw	37	;'%'
  6921  1835  3463               	retlw	99	;'c'
  6922  1836  3400               	retlw	0
  6923                           
  6924                           	psect	stringtext3
  6925  1837                     __pstringtext3:
  6926  1837                     STR_2:
  6927  1837  3425               	retlw	37	;'%'
  6928  1838  3430               	retlw	48	;'0'
  6929  1839  3432               	retlw	50	;'2'
  6930  183A  3464               	retlw	100	;'d'
  6931  183B  3420               	retlw	32	;' '
  6932  183C  3443               	retlw	67	;'C'
  6933  183D  3420               	retlw	32	;' '
  6934  183E  3420               	retlw	32	;' '
  6935  183F  3420               	retlw	32	;' '
  6936  1840  3420               	retlw	32	;' '
  6937  1841  3420               	retlw	32	;' '
  6938  1842  3420               	retlw	32	;' '
  6939  1843  3420               	retlw	32	;' '
  6940  1844  3420               	retlw	32	;' '
  6941  1845  3420               	retlw	32	;' '
  6942  1846  3425               	retlw	37	;'%'
  6943  1847  3430               	retlw	48	;'0'
  6944  1848  3431               	retlw	49	;'1'
  6945  1849  3464               	retlw	100	;'d'
  6946  184A  3420               	retlw	32	;' '
  6947  184B  346C               	retlw	108	;'l'
  6948  184C  3400               	retlw	0
  6949                           
  6950                           	psect	stringtext4
  6951  0000                     __pstringtext4:
  6952                           
  6953                           	psect	cinit
  6954  001A                     start_initialization:	
  6955                           ; #config settings
  6956                           
  6957  001A                     __initialization:
  6958                           
  6959                           ; Clear objects allocated to BANK0
  6960  001A  0020               	movlb	0	; select bank0
  6961  001B  01EE               	clrf	__pbssBANK0& (0+127)
  6962  001C  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  6963                           
  6964                           ; Clear objects allocated to BANK1
  6965  001D  30E2               	movlw	low __pbssBANK1
  6966  001E  0084               	movwf	4
  6967  001F  3000               	movlw	high __pbssBANK1
  6968  0020  0085               	movwf	5
  6969  0021  300C               	movlw	12
  6970  0022  3192  228F  3180   	fcall	clear_ram0
  6971                           
  6972                           ; Clear objects allocated to BANK2
  6973  0025  3055               	movlw	low __pbssBANK2
  6974  0026  0084               	movwf	4
  6975  0027  3001               	movlw	high __pbssBANK2
  6976  0028  0085               	movwf	5
  6977  0029  3007               	movlw	7
  6978  002A  3192  228F  3180   	fcall	clear_ram0
  6979                           
  6980                           ; Clear objects allocated to BANK3
  6981  002D  30A0               	movlw	low __pbssBANK3
  6982  002E  0084               	movwf	4
  6983  002F  3001               	movlw	high __pbssBANK3
  6984  0030  0085               	movwf	5
  6985  0031  303D               	movlw	61
  6986  0032  3192  228F  3180   	fcall	clear_ram0
  6987  0035                     end_of_initialization:	
  6988                           ;End of C runtime variable initialization code
  6989                           
  6990  0035                     __end_of__initialization:
  6991  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6992  0036  0020               	movlb	0
  6993  0037  3180  2839         	ljmp	_main	;jump to C main() function
  6994                           
  6995                           	psect	bssBANK0
  6996  006E                     __pbssBANK0:
  6997  006E                     _flags:
  6998  006E                     	ds	2
  6999                           
  7000                           	psect	bssBANK1
  7001  00E2                     __pbssBANK1:
  7002  00E2                     _width:
  7003  00E2                     	ds	2
  7004  00E4                     _prec:
  7005  00E4                     	ds	2
  7006  00E6                     _variable2:
  7007  00E6                     	ds	1
  7008  00E7                     _variable1:
  7009  00E7                     	ds	1
  7010  00E8                     _mode:
  7011  00E8                     	ds	1
  7012  00E9                     _min_temperature:
  7013  00E9                     	ds	1
  7014  00EA                     _min_luminosity:
  7015  00EA                     	ds	1
  7016  00EB                     _seconds:
  7017  00EB                     	ds	1
  7018  00EC                     _minutes:
  7019  00EC                     	ds	1
  7020  00ED                     _hours:
  7021  00ED                     	ds	1
  7022                           
  7023                           	psect	bssBANK2
  7024  0155                     __pbssBANK2:
  7025  0155                     _nout:
  7026  0155                     	ds	2
  7027  0157                     _minimode:
  7028  0157                     	ds	1
  7029  0158                     _alarm2:
  7030  0158                     	ds	1
  7031  0159                     _alarm1:
  7032  0159                     	ds	1
  7033  015A                     _l_threshold:
  7034  015A                     	ds	1
  7035  015B                     _t_threshold:
  7036  015B                     	ds	1
  7037                           
  7038                           	psect	bssBANK3
  7039  01A0                     __pbssBANK3:
  7040  01A0                     _I2C1_Status:
  7041  01A0                     	ds	29
  7042  01BD                     _dbuf:
  7043  01BD                     	ds	32
  7044                           
  7045                           	psect	clrtext
  7046  128F                     clear_ram0:	
  7047                           ;	Called with FSR0 containing the base address, and
  7048                           ;	WREG with the size to clear
  7049                           
  7050  128F  0064               	clrwdt	;clear the watchdog before getting into this loop
  7051  1290                     clrloop0:
  7052  1290  0180               	clrf	0	;clear RAM location pointed to by FSR
  7053  1291  3101               	addfsr 0,1
  7054  1292  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7055  1293  2A90               	goto	clrloop0	;have we reached the end yet?
  7056  1294  3400               	retlw	0	;all done for this memory range, return
  7057                           
  7058                           	psect	cstackBANK2
  7059  0120                     __pcstackBANK2:
  7060  0120                     ??_PMD_Initialize:
  7061  0120                     ??_I2C1_Initialize:	
  7062                           ; 1 bytes @ 0x0
  7063                           
  7064  0120                     ??_OSCILLATOR_Initialize:	
  7065                           ; 1 bytes @ 0x0
  7066                           
  7067  0120                     ??_ADCC_Initialize:	
  7068                           ; 1 bytes @ 0x0
  7069                           
  7070  0120                     ?_TMR1_SetInterruptHandler:	
  7071                           ; 1 bytes @ 0x0
  7072                           
  7073  0120                     ??_OpenI2C:	
  7074                           ; 1 bytes @ 0x0
  7075                           
  7076  0120                     ??_WriteI2C:	
  7077                           ; 1 bytes @ 0x0
  7078                           
  7079  0120                     ??_PIN_MANAGER_Initialize:	
  7080                           ; 1 bytes @ 0x0
  7081                           
  7082  0120                     ?_DATAEE_WriteByte:	
  7083                           ; 1 bytes @ 0x0
  7084                           
  7085  0120                     ?_DATAEE_ReadByte:	
  7086                           ; 1 bytes @ 0x0
  7087                           
  7088  0120                     ?_operADDR:	
  7089                           ; 1 bytes @ 0x0
  7090                           
  7091  0120                     TMR1_SetInterruptHandler@InterruptHandler:	
  7092                           ; 2 bytes @ 0x0
  7093                           
  7094  0120                     DATAEE_WriteByte@bAdd:	
  7095                           ; 2 bytes @ 0x0
  7096                           
  7097  0120                     DATAEE_ReadByte@bAdd:	
  7098                           ; 2 bytes @ 0x0
  7099                           
  7100                           
  7101                           ; 2 bytes @ 0x0
  7102  0120                     	ds	1
  7103  0121                     WriteI2C@data_out:
  7104                           
  7105                           ; 1 bytes @ 0x1
  7106  0121                     	ds	1
  7107  0122                     ??_TMR1_Initialize:
  7108  0122                     ??_TMR1_SetInterruptHandler:	
  7109                           ; 1 bytes @ 0x2
  7110                           
  7111  0122                     ?_parseEPROMInitialization:	
  7112                           ; 1 bytes @ 0x2
  7113                           
  7114  0122                     ??_LCDsend:	
  7115                           ; 1 bytes @ 0x2
  7116                           
  7117  0122                     ?_LCDsend2x4:	
  7118                           ; 1 bytes @ 0x2
  7119                           
  7120  0122                     ??_SYSTEM_Initialize:	
  7121                           ; 1 bytes @ 0x2
  7122                           
  7123  0122                     ??_DATAEE_ReadByte:	
  7124                           ; 1 bytes @ 0x2
  7125                           
  7126  0122                     ??_operADDR:	
  7127                           ; 1 bytes @ 0x2
  7128                           
  7129  0122                     LCDsend2x4@mode:	
  7130                           ; 1 bytes @ 0x2
  7131                           
  7132  0122                     DATAEE_WriteByte@bData:	
  7133                           ; 1 bytes @ 0x2
  7134                           
  7135  0122                     parseEPROMInitialization@NREG:	
  7136                           ; 1 bytes @ 0x2
  7137                           
  7138                           
  7139                           ; 1 bytes @ 0x2
  7140  0122                     	ds	1
  7141  0123                     ??_LCDsend2x4:
  7142  0123                     ??_DATAEE_WriteByte:	
  7143                           ; 1 bytes @ 0x3
  7144                           
  7145  0123                     LCDsend@c:	
  7146                           ; 1 bytes @ 0x3
  7147                           
  7148  0123                     DATAEE_WriteByte@GIEBitValue:	
  7149                           ; 1 bytes @ 0x3
  7150                           
  7151  0123                     parseEPROMInitialization@NR:	
  7152                           ; 1 bytes @ 0x3
  7153                           
  7154                           
  7155                           ; 1 bytes @ 0x3
  7156  0123                     	ds	1
  7157  0124                     ??_initializeEPROM:
  7158  0124                     ??_initializeREG:	
  7159                           ; 1 bytes @ 0x4
  7160                           
  7161  0124                     operADDR@operation:	
  7162                           ; 1 bytes @ 0x4
  7163                           
  7164  0124                     parseEPROMInitialization@WI:	
  7165                           ; 1 bytes @ 0x4
  7166                           
  7167                           
  7168                           ; 1 bytes @ 0x4
  7169  0124                     	ds	1
  7170  0125                     LCDsend2x4@c:
  7171  0125                     parseEPROMInitialization@RI:	
  7172                           ; 1 bytes @ 0x5
  7173                           
  7174  0125                     operADDR@dataAddr:	
  7175                           ; 1 bytes @ 0x5
  7176                           
  7177                           
  7178                           ; 2 bytes @ 0x5
  7179  0125                     	ds	1
  7180  0126                     LCDsend2x4@hc:
  7181  0126                     parseEPROMInitialization@PMON:	
  7182                           ; 1 bytes @ 0x6
  7183                           
  7184                           
  7185                           ; 1 bytes @ 0x6
  7186  0126                     	ds	1
  7187  0127                     ?_storeEPROMBuild:
  7188  0127                     LCDsend2x4@lc:	
  7189                           ; 1 bytes @ 0x7
  7190                           
  7191  0127                     storeEPROMBuild@minutes:	
  7192                           ; 1 bytes @ 0x7
  7193                           
  7194  0127                     parseEPROMInitialization@TALA:	
  7195                           ; 1 bytes @ 0x7
  7196                           
  7197                           
  7198                           ; 1 bytes @ 0x7
  7199  0127                     	ds	1
  7200  0128                     ??_LCDinit:
  7201  0128                     storeEPROMBuild@seconds:	
  7202                           ; 1 bytes @ 0x8
  7203                           
  7204  0128                     parseEPROMInitialization@ALAT:	
  7205                           ; 1 bytes @ 0x8
  7206                           
  7207                           
  7208                           ; 1 bytes @ 0x8
  7209  0128                     	ds	1
  7210  0129                     storeEPROMBuild@temperature:
  7211  0129                     parseEPROMInitialization@ALAL:	
  7212                           ; 1 bytes @ 0x9
  7213                           
  7214                           
  7215                           ; 1 bytes @ 0x9
  7216  0129                     	ds	1
  7217  012A                     storeEPROMBuild@luminosity:
  7218  012A                     parseEPROMInitialization@ALAF:	
  7219                           ; 1 bytes @ 0xA
  7220                           
  7221                           
  7222                           ; 1 bytes @ 0xA
  7223  012A                     	ds	1
  7224  012B                     storeEPROMBuild@operation:
  7225  012B                     parseEPROMInitialization@CLKH:	
  7226                           ; 1 bytes @ 0xB
  7227                           
  7228                           
  7229                           ; 1 bytes @ 0xB
  7230  012B                     	ds	1
  7231  012C                     ??_storeEPROMBuild:
  7232  012C                     parseEPROMInitialization@CLKM:	
  7233                           ; 1 bytes @ 0xC
  7234                           
  7235                           
  7236                           ; 1 bytes @ 0xC
  7237  012C                     	ds	1
  7238  012D                     storeEPROMBuild@hours:
  7239  012D                     parseEPROMInitialization@checksum:	
  7240                           ; 1 bytes @ 0xD
  7241                           
  7242                           
  7243                           ; 1 bytes @ 0xD
  7244  012D                     	ds	1
  7245  012E                     ??_parseEPROMInitialization:
  7246  012E                     storeEPROMBuild@dataAddr:	
  7247                           ; 1 bytes @ 0xE
  7248                           
  7249                           
  7250                           ; 2 bytes @ 0xE
  7251  012E                     	ds	1
  7252  012F                     parseEPROMInitialization@magic_word:
  7253                           
  7254                           ; 1 bytes @ 0xF
  7255  012F                     	ds	1
  7256  0130                     ??_main:
  7257                           
  7258                           ; 1 bytes @ 0x10
  7259  0130                     	ds	12
  7260  013C                     main@magic_word:
  7261                           
  7262                           ; 1 bytes @ 0x1C
  7263  013C                     	ds	1
  7264  013D                     main@NREG:
  7265                           
  7266                           ; 1 bytes @ 0x1D
  7267  013D                     	ds	1
  7268  013E                     main@NR:
  7269                           
  7270                           ; 1 bytes @ 0x1E
  7271  013E                     	ds	1
  7272  013F                     main@WI:
  7273                           
  7274                           ; 1 bytes @ 0x1F
  7275  013F                     	ds	1
  7276  0140                     main@RI:
  7277                           
  7278                           ; 1 bytes @ 0x20
  7279  0140                     	ds	1
  7280  0141                     main@PMON:
  7281                           
  7282                           ; 1 bytes @ 0x21
  7283  0141                     	ds	1
  7284  0142                     main@TALA:
  7285                           
  7286                           ; 1 bytes @ 0x22
  7287  0142                     	ds	1
  7288  0143                     main@ALAT:
  7289                           
  7290                           ; 1 bytes @ 0x23
  7291  0143                     	ds	1
  7292  0144                     main@ALAL:
  7293                           
  7294                           ; 1 bytes @ 0x24
  7295  0144                     	ds	1
  7296  0145                     main@ALAF:
  7297                           
  7298                           ; 1 bytes @ 0x25
  7299  0145                     	ds	1
  7300  0146                     main@CLKH:
  7301                           
  7302                           ; 1 bytes @ 0x26
  7303  0146                     	ds	1
  7304  0147                     main@CLKM:
  7305                           
  7306                           ; 1 bytes @ 0x27
  7307  0147                     	ds	1
  7308  0148                     main@checksum:
  7309                           
  7310                           ; 1 bytes @ 0x28
  7311  0148                     	ds	1
  7312                           
  7313                           	psect	cstackBANK1
  7314  00A0                     __pcstackBANK1:
  7315  00A0                     ?_sprintf:
  7316  00A0                     sprintf@fmt:	
  7317                           ; 2 bytes @ 0x0
  7318                           
  7319                           
  7320                           ; 2 bytes @ 0x0
  7321  00A0                     	ds	12
  7322  00AC                     sprintf@s:
  7323                           
  7324                           ; 1 bytes @ 0xC
  7325  00AC                     	ds	1
  7326  00AD                     sprintf@ap:
  7327                           
  7328                           ; 1 bytes @ 0xD
  7329  00AD                     	ds	1
  7330  00AE                     sprintf@f:
  7331                           
  7332                           ; 5 bytes @ 0xE
  7333  00AE                     	ds	5
  7334  00B3                     ??_printLCD:
  7335                           
  7336                           ; 1 bytes @ 0x13
  7337  00B3                     	ds	10
  7338  00BD                     printLCD@buf:
  7339                           
  7340                           ; 33 bytes @ 0x1D
  7341  00BD                     	ds	33
  7342  00DE                     timerInterrupt@temperature:
  7343                           
  7344                           ; 1 bytes @ 0x3E
  7345  00DE                     	ds	1
  7346  00DF                     timerInterrupt@value:
  7347                           
  7348                           ; 1 bytes @ 0x3F
  7349  00DF                     	ds	1
  7350  00E0                     timerInterrupt@lum:
  7351                           
  7352                           ; 2 bytes @ 0x40
  7353  00E0                     	ds	2
  7354                           
  7355                           	psect	cstackCOMMON
  7356  0070                     __pcstackCOMMON:
  7357  0070                     ?_PMD_Initialize:
  7358  0070                     ?_I2C1_Initialize:	
  7359                           ; 1 bytes @ 0x0
  7360                           
  7361  0070                     ?_OSCILLATOR_Initialize:	
  7362                           ; 1 bytes @ 0x0
  7363                           
  7364  0070                     ?_ADCC_Initialize:	
  7365                           ; 1 bytes @ 0x0
  7366                           
  7367  0070                     ?_TMR1_Initialize:	
  7368                           ; 1 bytes @ 0x0
  7369                           
  7370  0070                     ?_TMR1_ISR:	
  7371                           ; 1 bytes @ 0x0
  7372                           
  7373  0070                     ?_TMR1_DefaultInterruptHandler:	
  7374                           ; 1 bytes @ 0x0
  7375                           
  7376  0070                     ??_TMR1_DefaultInterruptHandler:	
  7377                           ; 1 bytes @ 0x0
  7378                           
  7379  0070                     ?_TMR1_CallBack:	
  7380                           ; 1 bytes @ 0x0
  7381                           
  7382  0070                     ?_initializeEPROM:	
  7383                           ; 1 bytes @ 0x0
  7384                           
  7385  0070                     ?_putch:	
  7386                           ; 1 bytes @ 0x0
  7387                           
  7388  0070                     ??_putch:	
  7389                           ; 1 bytes @ 0x0
  7390                           
  7391  0070                     ?_OpenI2C:	
  7392                           ; 1 bytes @ 0x0
  7393                           
  7394  0070                     ?_ReadI2C:	
  7395                           ; 1 bytes @ 0x0
  7396                           
  7397  0070                     ??_ReadI2C:	
  7398                           ; 1 bytes @ 0x0
  7399                           
  7400  0070                     ?_WriteI2C:	
  7401                           ; 1 bytes @ 0x0
  7402                           
  7403  0070                     ?_LCDsend:	
  7404                           ; 1 bytes @ 0x0
  7405                           
  7406  0070                     ?_LCDrecv:	
  7407                           ; 1 bytes @ 0x0
  7408                           
  7409  0070                     ?_LCDinit:	
  7410                           ; 1 bytes @ 0x0
  7411                           
  7412  0070                     ?_LCDcmd:	
  7413                           ; 1 bytes @ 0x0
  7414                           
  7415  0070                     ?_LCDchar:	
  7416                           ; 1 bytes @ 0x0
  7417                           
  7418  0070                     ?_LCDstr:	
  7419                           ; 1 bytes @ 0x0
  7420                           
  7421  0070                     ?_PIN_MANAGER_Initialize:	
  7422                           ; 1 bytes @ 0x0
  7423                           
  7424  0070                     ?_SYSTEM_Initialize:	
  7425                           ; 1 bytes @ 0x0
  7426                           
  7427  0070                     ?_INTERRUPT_InterruptManager:	
  7428                           ; 1 bytes @ 0x0
  7429                           
  7430  0070                     ?_TMR1_WriteTimer:	
  7431                           ; 1 bytes @ 0x0
  7432                           
  7433  0070                     ?_readTC74:	
  7434                           ; 1 bytes @ 0x0
  7435                           
  7436  0070                     ?_printLCD:	
  7437                           ; 1 bytes @ 0x0
  7438                           
  7439  0070                     ?_timerInterrupt:	
  7440                           ; 1 bytes @ 0x0
  7441                           
  7442  0070                     ?_initializeREG:	
  7443                           ; 1 bytes @ 0x0
  7444                           
  7445  0070                     ?_main:	
  7446                           ; 1 bytes @ 0x0
  7447                           
  7448  0070                     ??___aodiv:	
  7449                           ; 1 bytes @ 0x0
  7450                           
  7451  0070                     ??___aomod:	
  7452                           ; 1 bytes @ 0x0
  7453                           
  7454  0070                     ?i1_WriteI2C:	
  7455                           ; 1 bytes @ 0x0
  7456                           
  7457  0070                     ??i1_WriteI2C:	
  7458                           ; 1 bytes @ 0x0
  7459                           
  7460  0070                     ?i1_DATAEE_WriteByte:	
  7461                           ; 1 bytes @ 0x0
  7462                           
  7463  0070                     ?_fputc:	
  7464                           ; 1 bytes @ 0x0
  7465                           
  7466  0070                     ?_strlen:	
  7467                           ; 2 bytes @ 0x0
  7468                           
  7469  0070                     ?_isdigit:	
  7470                           ; 2 bytes @ 0x0
  7471                           
  7472  0070                     ?_isspace:	
  7473                           ; 2 bytes @ 0x0
  7474                           
  7475  0070                     ?_ADCC_GetSingleConversion:	
  7476                           ; 2 bytes @ 0x0
  7477                           
  7478  0070                     ?___wmul:	
  7479                           ; 2 bytes @ 0x0
  7480                           
  7481  0070                     putch@c:	
  7482                           ; 2 bytes @ 0x0
  7483                           
  7484  0070                     TMR1_WriteTimer@timerVal:	
  7485                           ; 1 bytes @ 0x0
  7486                           
  7487  0070                     ___wmul@multiplier:	
  7488                           ; 2 bytes @ 0x0
  7489                           
  7490  0070                     isdigit@c:	
  7491                           ; 2 bytes @ 0x0
  7492                           
  7493  0070                     isspace@c:	
  7494                           ; 2 bytes @ 0x0
  7495                           
  7496  0070                     fputc@c:	
  7497                           ; 2 bytes @ 0x0
  7498                           
  7499  0070                     i1DATAEE_WriteByte@bAdd:	
  7500                           ; 2 bytes @ 0x0
  7501                           
  7502                           
  7503                           ; 2 bytes @ 0x0
  7504  0070                     	ds	1
  7505  0071                     ___aodiv@counter:
  7506  0071                     ___aomod@counter:	
  7507                           ; 1 bytes @ 0x1
  7508                           
  7509  0071                     i1WriteI2C@data_out:	
  7510                           ; 1 bytes @ 0x1
  7511                           
  7512                           
  7513                           ; 1 bytes @ 0x1
  7514  0071                     	ds	1
  7515  0072                     ??_strlen:
  7516  0072                     ??_isdigit:	
  7517                           ; 1 bytes @ 0x2
  7518                           
  7519  0072                     ??_isspace:	
  7520                           ; 1 bytes @ 0x2
  7521                           
  7522  0072                     ??_LCDrecv:	
  7523                           ; 1 bytes @ 0x2
  7524                           
  7525  0072                     ??_TMR1_WriteTimer:	
  7526                           ; 1 bytes @ 0x2
  7527                           
  7528  0072                     ??_ADCC_GetSingleConversion:	
  7529                           ; 1 bytes @ 0x2
  7530                           
  7531  0072                     ??_readTC74:	
  7532                           ; 1 bytes @ 0x2
  7533                           
  7534  0072                     ?i1_LCDsend2x4:	
  7535                           ; 1 bytes @ 0x2
  7536                           
  7537  0072                     ADCC_GetSingleConversion@channel:	
  7538                           ; 1 bytes @ 0x2
  7539                           
  7540  0072                     ___aodiv@sign:	
  7541                           ; 1 bytes @ 0x2
  7542                           
  7543  0072                     ___aomod@sign:	
  7544                           ; 1 bytes @ 0x2
  7545                           
  7546  0072                     fputc@fp:	
  7547                           ; 1 bytes @ 0x2
  7548                           
  7549  0072                     i1LCDsend2x4@mode:	
  7550                           ; 1 bytes @ 0x2
  7551                           
  7552  0072                     i1DATAEE_WriteByte@bData:	
  7553                           ; 1 bytes @ 0x2
  7554                           
  7555  0072                     ___wmul@multiplicand:	
  7556                           ; 1 bytes @ 0x2
  7557                           
  7558                           
  7559                           ; 2 bytes @ 0x2
  7560  0072                     	ds	1
  7561  0073                     ??_fputc:
  7562  0073                     ??i1_LCDsend2x4:	
  7563                           ; 1 bytes @ 0x3
  7564                           
  7565  0073                     ??i1_DATAEE_WriteByte:	
  7566                           ; 1 bytes @ 0x3
  7567                           
  7568  0073                     ?_abs:	
  7569                           ; 1 bytes @ 0x3
  7570                           
  7571  0073                     readTC74@value:	
  7572                           ; 2 bytes @ 0x3
  7573                           
  7574  0073                     strlen@a:	
  7575                           ; 1 bytes @ 0x3
  7576                           
  7577  0073                     i1DATAEE_WriteByte@GIEBitValue:	
  7578                           ; 1 bytes @ 0x3
  7579                           
  7580  0073                     abs@a:	
  7581                           ; 1 bytes @ 0x3
  7582                           
  7583  0073                     ___aodiv@quotient:	
  7584                           ; 2 bytes @ 0x3
  7585                           
  7586                           
  7587                           ; 8 bytes @ 0x3
  7588  0073                     	ds	1
  7589  0074                     ?_writeRingBuffer:
  7590  0074                     ??___wmul:	
  7591                           ; 1 bytes @ 0x4
  7592                           
  7593  0074                     LCDrecv@hc:	
  7594                           ; 1 bytes @ 0x4
  7595                           
  7596  0074                     writeRingBuffer@luminosity:	
  7597                           ; 1 bytes @ 0x4
  7598                           
  7599  0074                     _isspace$2993:	
  7600                           ; 1 bytes @ 0x4
  7601                           
  7602  0074                     strlen@s:	
  7603                           ; 1 bytes @ 0x4
  7604                           
  7605  0074                     ___wmul@product:	
  7606                           ; 1 bytes @ 0x4
  7607                           
  7608                           
  7609                           ; 2 bytes @ 0x4
  7610  0074                     	ds	1
  7611  0075                     ??_abs:
  7612  0075                     ??_writeRingBuffer:	
  7613                           ; 1 bytes @ 0x5
  7614                           
  7615  0075                     LCDrecv@lc:	
  7616                           ; 1 bytes @ 0x5
  7617                           
  7618  0075                     i1LCDsend2x4@c:	
  7619                           ; 1 bytes @ 0x5
  7620                           
  7621                           
  7622                           ; 1 bytes @ 0x5
  7623  0075                     	ds	1
  7624  0076                     ?_atoi:
  7625  0076                     LCDrecv@mode:	
  7626                           ; 2 bytes @ 0x6
  7627                           
  7628  0076                     writeRingBuffer@temperature:	
  7629                           ; 1 bytes @ 0x6
  7630                           
  7631  0076                     i1LCDsend2x4@hc:	
  7632                           ; 1 bytes @ 0x6
  7633                           
  7634  0076                     atoi@s:	
  7635                           ; 1 bytes @ 0x6
  7636                           
  7637                           
  7638                           ; 2 bytes @ 0x6
  7639  0076                     	ds	1
  7640  0077                     ?_LCDbusy:
  7641  0077                     i1LCDsend2x4@lc:	
  7642                           ; 2 bytes @ 0x7
  7643                           
  7644                           
  7645                           ; 1 bytes @ 0x7
  7646  0077                     	ds	1
  7647  0078                     ??_atoi:
  7648  0078                     ??_LCDcmd:	
  7649                           ; 1 bytes @ 0x8
  7650                           
  7651  0078                     ??_LCDchar:	
  7652                           ; 1 bytes @ 0x8
  7653                           
  7654  0078                     ?_fputs:	
  7655                           ; 1 bytes @ 0x8
  7656                           
  7657  0078                     ?_ctoa:	
  7658                           ; 2 bytes @ 0x8
  7659                           
  7660  0078                     LCDcmd@c:	
  7661                           ; 2 bytes @ 0x8
  7662                           
  7663  0078                     LCDchar@c:	
  7664                           ; 1 bytes @ 0x8
  7665                           
  7666  0078                     ctoa@c:	
  7667                           ; 1 bytes @ 0x8
  7668                           
  7669  0078                     fputs@fp:	
  7670                           ; 1 bytes @ 0x8
  7671                           
  7672                           
  7673                           ; 1 bytes @ 0x8
  7674  0078                     	ds	1
  7675  0079                     ??_fputs:
  7676  0079                     ??_LCDstr:	
  7677                           ; 1 bytes @ 0x9
  7678                           
  7679  0079                     ??_LCDbusy:	
  7680                           ; 1 bytes @ 0x9
  7681                           
  7682                           
  7683                           ; 1 bytes @ 0x9
  7684  0079                     	ds	1
  7685  007A                     ??_ctoa:
  7686  007A                     LCDstr@c:	
  7687                           ; 1 bytes @ 0xA
  7688                           
  7689                           
  7690                           ; 1 bytes @ 0xA
  7691  007A                     	ds	1
  7692  007B                     LCDstr@p:
  7693                           
  7694                           ; 1 bytes @ 0xB
  7695  007B                     	ds	1
  7696  007C                     ??_pad:
  7697                           
  7698                           ; 1 bytes @ 0xC
  7699  007C                     	ds	1
  7700  007D                     ??_sprintf:
  7701                           
  7702                           ; 1 bytes @ 0xD
  7703  007D                     	ds	1
  7704  007E                     ??_TMR1_ISR:
  7705  007E                     ??_TMR1_CallBack:	
  7706                           ; 1 bytes @ 0xE
  7707                           
  7708  007E                     ??_INTERRUPT_InterruptManager:	
  7709                           ; 1 bytes @ 0xE
  7710                           
  7711                           
  7712                           	psect	cstackBANK0
  7713  0020                     __pcstackBANK0:	
  7714                           ; 1 bytes @ 0xE
  7715                           
  7716  0020                     ?___aodiv:
  7717  0020                     ?___aomod:	
  7718                           ; 8 bytes @ 0x0
  7719                           
  7720  0020                     fputs@c:	
  7721                           ; 8 bytes @ 0x0
  7722                           
  7723  0020                     ctoa@l:	
  7724                           ; 1 bytes @ 0x0
  7725                           
  7726  0020                     atoi@neg:	
  7727                           ; 2 bytes @ 0x0
  7728                           
  7729  0020                     ___aodiv@divisor:	
  7730                           ; 2 bytes @ 0x0
  7731                           
  7732  0020                     ___aomod@divisor:	
  7733                           ; 8 bytes @ 0x0
  7734                           
  7735                           
  7736                           ; 8 bytes @ 0x0
  7737  0020                     	ds	1
  7738  0021                     fputs@i:
  7739                           
  7740                           ; 2 bytes @ 0x1
  7741  0021                     	ds	1
  7742  0022                     ctoa@w:
  7743  0022                     _atoi$2975:	
  7744                           ; 2 bytes @ 0x2
  7745                           
  7746                           
  7747                           ; 2 bytes @ 0x2
  7748  0022                     	ds	1
  7749  0023                     fputs@s:
  7750                           
  7751                           ; 1 bytes @ 0x3
  7752  0023                     	ds	1
  7753  0024                     ?_pad:
  7754  0024                     pad@buf:	
  7755                           ; 2 bytes @ 0x4
  7756                           
  7757  0024                     ctoa@fp:	
  7758                           ; 1 bytes @ 0x4
  7759                           
  7760  0024                     _atoi$2977:	
  7761                           ; 1 bytes @ 0x4
  7762                           
  7763                           
  7764                           ; 2 bytes @ 0x4
  7765  0024                     	ds	1
  7766  0025                     pad@p:
  7767                           
  7768                           ; 2 bytes @ 0x5
  7769  0025                     	ds	1
  7770  0026                     _atoi$2976:
  7771                           
  7772                           ; 1 bytes @ 0x6
  7773  0026                     	ds	1
  7774  0027                     pad@i:
  7775  0027                     atoi@n:	
  7776                           ; 2 bytes @ 0x7
  7777                           
  7778                           
  7779                           ; 2 bytes @ 0x7
  7780  0027                     	ds	1
  7781  0028                     ___aodiv@dividend:
  7782  0028                     ___aomod@dividend:	
  7783                           ; 8 bytes @ 0x8
  7784                           
  7785                           
  7786                           ; 8 bytes @ 0x8
  7787  0028                     	ds	1
  7788  0029                     pad@w:
  7789                           
  7790                           ; 2 bytes @ 0x9
  7791  0029                     	ds	2
  7792  002B                     pad@fp:
  7793                           
  7794                           ; 1 bytes @ 0xB
  7795  002B                     	ds	5
  7796  0030                     ?_dtoa:
  7797  0030                     dtoa@d:	
  7798                           ; 2 bytes @ 0x10
  7799                           
  7800                           
  7801                           ; 8 bytes @ 0x10
  7802  0030                     	ds	8
  7803  0038                     ??_dtoa:
  7804                           
  7805                           ; 1 bytes @ 0x18
  7806  0038                     	ds	3
  7807  003B                     _dtoa$2939:
  7808                           
  7809                           ; 2 bytes @ 0x1B
  7810  003B                     	ds	2
  7811  003D                     dtoa@fp:
  7812                           
  7813                           ; 1 bytes @ 0x1D
  7814  003D                     	ds	1
  7815  003E                     dtoa@p:
  7816                           
  7817                           ; 2 bytes @ 0x1E
  7818  003E                     	ds	2
  7819  0040                     dtoa@w:
  7820                           
  7821                           ; 2 bytes @ 0x20
  7822  0040                     	ds	2
  7823  0042                     dtoa@s:
  7824                           
  7825                           ; 2 bytes @ 0x22
  7826  0042                     	ds	2
  7827  0044                     dtoa@n:
  7828                           
  7829                           ; 8 bytes @ 0x24
  7830  0044                     	ds	8
  7831  004C                     dtoa@i:
  7832                           
  7833                           ; 2 bytes @ 0x2C
  7834  004C                     	ds	2
  7835  004E                     ?_vfpfcnvrt:
  7836  004E                     vfpfcnvrt@fmt:	
  7837                           ; 2 bytes @ 0x2E
  7838                           
  7839                           
  7840                           ; 1 bytes @ 0x2E
  7841  004E                     	ds	1
  7842  004F                     vfpfcnvrt@ap:
  7843                           
  7844                           ; 1 bytes @ 0x2F
  7845  004F                     	ds	1
  7846  0050                     ??_vfpfcnvrt:
  7847                           
  7848                           ; 1 bytes @ 0x30
  7849  0050                     	ds	6
  7850  0056                     vfpfcnvrt@ll:
  7851                           
  7852                           ; 8 bytes @ 0x36
  7853  0056                     	ds	8
  7854  005E                     vfpfcnvrt@done:
  7855                           
  7856                           ; 2 bytes @ 0x3E
  7857  005E                     	ds	2
  7858  0060                     _vfpfcnvrt$2954:
  7859                           
  7860                           ; 2 bytes @ 0x40
  7861  0060                     	ds	2
  7862  0062                     vfpfcnvrt@c:
  7863                           
  7864                           ; 1 bytes @ 0x42
  7865  0062                     	ds	1
  7866  0063                     vfpfcnvrt@fp:
  7867                           
  7868                           ; 1 bytes @ 0x43
  7869  0063                     	ds	1
  7870  0064                     ?_vfprintf:
  7871  0064                     vfprintf@fmt:	
  7872                           ; 2 bytes @ 0x44
  7873                           
  7874                           
  7875                           ; 2 bytes @ 0x44
  7876  0064                     	ds	2
  7877  0066                     vfprintf@ap:
  7878                           
  7879                           ; 1 bytes @ 0x46
  7880  0066                     	ds	1
  7881  0067                     ??_vfprintf:
  7882                           
  7883                           ; 1 bytes @ 0x47
  7884  0067                     	ds	2
  7885  0069                     vfprintf@fp:
  7886                           
  7887                           ; 1 bytes @ 0x49
  7888  0069                     	ds	1
  7889  006A                     vfprintf@cfmt:
  7890                           
  7891                           ; 2 bytes @ 0x4A
  7892  006A                     	ds	2
  7893  006C                     ??_timerInterrupt:
  7894                           
  7895                           ; 1 bytes @ 0x4C
  7896  006C                     	ds	2
  7897                           
  7898                           	psect	maintext
  7899  0039                     __pmaintext:	
  7900 ;;
  7901 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  7902 ;;
  7903 ;; *************** function _main *****************
  7904 ;; Defined at:
  7905 ;;		line 259 in file "main.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;		None
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;  checksum        1   40[BANK2 ] unsigned char 
  7910 ;;  CLKM            1   39[BANK2 ] unsigned char 
  7911 ;;  CLKH            1   38[BANK2 ] unsigned char 
  7912 ;;  ALAF            1   37[BANK2 ] unsigned char 
  7913 ;;  ALAL            1   36[BANK2 ] unsigned char 
  7914 ;;  ALAT            1   35[BANK2 ] unsigned char 
  7915 ;;  TALA            1   34[BANK2 ] unsigned char 
  7916 ;;  PMON            1   33[BANK2 ] unsigned char 
  7917 ;;  RI              1   32[BANK2 ] unsigned char 
  7918 ;;  WI              1   31[BANK2 ] unsigned char 
  7919 ;;  NR              1   30[BANK2 ] unsigned char 
  7920 ;;  NREG            1   29[BANK2 ] unsigned char 
  7921 ;;  magic_word      1   28[BANK2 ] unsigned char 
  7922 ;; Return value:  Size  Location     Type
  7923 ;;                  1    wreg      void 
  7924 ;; Registers used:
  7925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7926 ;; Tracked objects:
  7927 ;;		On entry : B1F/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0
  7933 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
  7934 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0
  7935 ;;Total ram usage:       25 bytes
  7936 ;; Hardware stack levels required when called: 16
  7937 ;; This function calls:
  7938 ;;		_LCDinit
  7939 ;;		_OpenI2C
  7940 ;;		_SYSTEM_Initialize
  7941 ;;		_TMR1_SetInterruptHandler
  7942 ;;		_initializeEPROM
  7943 ;;		_initializeREG
  7944 ;;		_parseEPROMInitialization
  7945 ;;		_storeEPROMBuild
  7946 ;; This function is called by:
  7947 ;;		Startup code after reset
  7948 ;; This function uses a non-reentrant model
  7949 ;;
  7950                           
  7951                           
  7952                           ;psect for function _main
  7953  0039                     _main:
  7954  0039                     l6124:	
  7955                           ;incstack = 0
  7956                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7957                           
  7958                           
  7959                           ;main.c: 261:     SYSTEM_Initialize();
  7960  0039  3193  232B  3180   	fcall	_SYSTEM_Initialize
  7961  003C                     l6126:
  7962                           
  7963                           ;main.c: 263:     (INTCONbits.GIE = 1);
  7964  003C  178B               	bsf	11,7	;volatile
  7965  003D                     l6128:
  7966                           
  7967                           ;main.c: 265:     (INTCONbits.PEIE = 1);
  7968  003D  170B               	bsf	11,6	;volatile
  7969  003E                     l6130:
  7970                           
  7971                           ;main.c: 266:     hours=0;
  7972  003E  0021               	movlb	1	; select bank1
  7973  003F  01ED               	clrf	_hours^(0+128)
  7974  0040                     l6132:
  7975                           
  7976                           ;main.c: 267:     minutes=0;
  7977  0040  01EC               	clrf	_minutes^(0+128)
  7978  0041                     l6134:
  7979                           
  7980                           ;main.c: 268:     seconds=0;
  7981  0041  01EB               	clrf	_seconds^(0+128)
  7982  0042                     l6136:
  7983                           
  7984                           ;main.c: 269:     max_luminosity=3;
  7985  0042  3003               	movlw	3
  7986  0043  0022               	movlb	2	; select bank2
  7987  0044  00B0               	movwf	??_main^(0+256)
  7988  0045  0830               	movf	??_main^(0+256),w
  7989  0046  00D4               	movwf	_max_luminosity^(0+256)
  7990  0047                     l6138:
  7991                           
  7992                           ;main.c: 270:     min_luminosity=0;
  7993  0047  0021               	movlb	1	; select bank1
  7994  0048  01EA               	clrf	_min_luminosity^(0+128)
  7995  0049                     l6140:
  7996                           
  7997                           ;main.c: 271:     last_luminosity=4;
  7998  0049  3004               	movlw	4
  7999  004A  0022               	movlb	2	; select bank2
  8000  004B  00B0               	movwf	??_main^(0+256)
  8001  004C  0830               	movf	??_main^(0+256),w
  8002  004D  0021               	movlb	1	; select bank1
  8003  004E  00EF               	movwf	_last_luminosity^(0+128)
  8004  004F                     l6142:
  8005                           
  8006                           ;main.c: 272:     counter=1;
  8007  004F  0022               	movlb	2	; select bank2
  8008  0050  01D3               	clrf	_counter^(0+256)
  8009  0051  0AD3               	incf	_counter^(0+256),f
  8010  0052                     l6144:
  8011                           
  8012                           ;main.c: 274:     last_temperature=255;
  8013  0052  30FF               	movlw	255
  8014  0053  00B0               	movwf	??_main^(0+256)
  8015  0054  0830               	movf	??_main^(0+256),w
  8016  0055  0021               	movlb	1	; select bank1
  8017  0056  00EE               	movwf	_last_temperature^(0+128)
  8018  0057                     l6146:
  8019                           
  8020                           ;main.c: 275:     max_temperature=255;
  8021  0057  30FF               	movlw	255
  8022  0058  0022               	movlb	2	; select bank2
  8023  0059  00B0               	movwf	??_main^(0+256)
  8024  005A  0830               	movf	??_main^(0+256),w
  8025  005B  00D2               	movwf	_max_temperature^(0+256)
  8026  005C                     l6148:
  8027                           
  8028                           ;main.c: 276:     min_temperature=0;
  8029  005C  0021               	movlb	1	; select bank1
  8030  005D  01E9               	clrf	_min_temperature^(0+128)
  8031  005E                     l6150:
  8032                           
  8033                           ;main.c: 277:     data_address=0x7000;
  8034  005E  3000               	movlw	0
  8035  005F  0022               	movlb	2	; select bank2
  8036  0060  00C9               	movwf	_data_address^(0+256)
  8037  0061  3070               	movlw	112
  8038  0062  00CA               	movwf	(_data_address^(0+256)+1)
  8039  0063                     l6152:
  8040                           
  8041                           ;main.c: 278:     mode=0;
  8042  0063  0021               	movlb	1	; select bank1
  8043  0064  01E8               	clrf	_mode^(0+128)
  8044  0065                     l6154:
  8045                           
  8046                           ;main.c: 279:     alarm1=0;
  8047  0065  0022               	movlb	2	; select bank2
  8048  0066  01D9               	clrf	_alarm1^(0+256)
  8049  0067                     l6156:
  8050                           
  8051                           ;main.c: 280:     alarm2=0;
  8052  0067  01D8               	clrf	_alarm2^(0+256)
  8053  0068                     l6158:
  8054                           
  8055                           ;main.c: 281:     modification=1;
  8056  0068  01D1               	clrf	_modification^(0+256)
  8057  0069  0AD1               	incf	_modification^(0+256),f
  8058  006A                     l6160:
  8059                           
  8060                           ;main.c: 282:     character=' ';
  8061  006A  3020               	movlw	32
  8062  006B  00B0               	movwf	??_main^(0+256)
  8063  006C  0830               	movf	??_main^(0+256),w
  8064  006D  00D0               	movwf	_character^(0+256)
  8065  006E                     l6162:
  8066                           
  8067                           ;main.c: 283:     alarmc='a';
  8068  006E  3061               	movlw	97
  8069  006F  00B0               	movwf	??_main^(0+256)
  8070  0070  0830               	movf	??_main^(0+256),w
  8071  0071  00CF               	movwf	_alarmc^(0+256)
  8072  0072                     l6164:
  8073                           
  8074                           ;main.c: 284:     OpenI2C();
  8075  0072  3192  22CC  3180   	fcall	_OpenI2C
  8076  0075                     l6166:
  8077                           
  8078                           ;main.c: 285:     LCDinit();
  8079  0075  3188  20BA  3180   	fcall	_LCDinit
  8080  0078                     l6168:
  8081                           
  8082                           ;main.c: 286:     initializeEPROM();
  8083  0078  3189  213D  3180   	fcall	_initializeEPROM
  8084  007B                     l6170:
  8085                           
  8086                           ;main.c: 287:     initializeREG();
  8087  007B  3194  24A9  3180   	fcall	_initializeREG
  8088  007E                     l6172:
  8089                           
  8090                           ;main.c: 288:     storeEPROMBuild(0x55,0x50,0x45,0x40,0x35,101);
  8091  007E  3050               	movlw	80
  8092  007F  0022               	movlb	2	; select bank2
  8093  0080  00B0               	movwf	??_main^(0+256)
  8094  0081  0830               	movf	??_main^(0+256),w
  8095  0082  00A7               	movwf	storeEPROMBuild@minutes^(0+256)
  8096  0083  3045               	movlw	69
  8097  0084  00B1               	movwf	(??_main+1)^(0+256)
  8098  0085  0831               	movf	(??_main+1)^(0+256),w
  8099  0086  00A8               	movwf	storeEPROMBuild@seconds^(0+256)
  8100  0087  3040               	movlw	64
  8101  0088  00B2               	movwf	(??_main+2)^(0+256)
  8102  0089  0832               	movf	(??_main+2)^(0+256),w
  8103  008A  00A9               	movwf	storeEPROMBuild@temperature^(0+256)
  8104  008B  3035               	movlw	53
  8105  008C  00B3               	movwf	(??_main+3)^(0+256)
  8106  008D  0833               	movf	(??_main+3)^(0+256),w
  8107  008E  00AA               	movwf	storeEPROMBuild@luminosity^(0+256)
  8108  008F  3065               	movlw	101
  8109  0090  00B4               	movwf	(??_main+4)^(0+256)
  8110  0091  0834               	movf	(??_main+4)^(0+256),w
  8111  0092  00AB               	movwf	storeEPROMBuild@operation^(0+256)
  8112  0093  3055               	movlw	85
  8113  0094  3195  25D6  3180   	fcall	_storeEPROMBuild
  8114  0097                     l6174:
  8115                           
  8116                           ;main.c: 289:     uint8_t magic_word,NREG,NR,WI,RI,PMON,TALA,ALAT,ALAL,ALAF,CLKH,CLKM,ch
      +                          ecksum;;main.c: 292:     TMR1_SetInterruptHandler(timerInterrupt);
  8117  0097  3087               	movlw	low _timerInterrupt
  8118  0098  0022               	movlb	2	; select bank2
  8119  0099  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+256)
  8120  009A  3005               	movlw	high _timerInterrupt
  8121  009B  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+256)+1)
  8122  009C  3192  2289  3180   	fcall	_TMR1_SetInterruptHandler
  8123  009F                     l6176:
  8124                           
  8125                           ;main.c: 294:     {;main.c: 295:         parseEPROMInitialization(&magic_word,&NREG,&NR,
      +                          &WI,&RI,&PMON,&TALA,&ALAT,&ALAL,&ALAF,&CLKH,&CLKM,&checksum);
  8126  009F  303D               	movlw	(low (main@NREG| (0+256)))& (0+255)
  8127  00A0  0022               	movlb	2	; select bank2
  8128  00A1  00B0               	movwf	??_main^(0+256)
  8129  00A2  0830               	movf	??_main^(0+256),w
  8130  00A3  00A2               	movwf	parseEPROMInitialization@NREG^(0+256)
  8131  00A4  303E               	movlw	(low (main@NR| (0+256)))& (0+255)
  8132  00A5  00B1               	movwf	(??_main+1)^(0+256)
  8133  00A6  0831               	movf	(??_main+1)^(0+256),w
  8134  00A7  00A3               	movwf	parseEPROMInitialization@NR^(0+256)
  8135  00A8  303F               	movlw	(low (main@WI| (0+256)))& (0+255)
  8136  00A9  00B2               	movwf	(??_main+2)^(0+256)
  8137  00AA  0832               	movf	(??_main+2)^(0+256),w
  8138  00AB  00A4               	movwf	parseEPROMInitialization@WI^(0+256)
  8139  00AC  3040               	movlw	(low (main@RI| (0+256)))& (0+255)
  8140  00AD  00B3               	movwf	(??_main+3)^(0+256)
  8141  00AE  0833               	movf	(??_main+3)^(0+256),w
  8142  00AF  00A5               	movwf	parseEPROMInitialization@RI^(0+256)
  8143  00B0  3041               	movlw	(low (main@PMON| (0+256)))& (0+255)
  8144  00B1  00B4               	movwf	(??_main+4)^(0+256)
  8145  00B2  0834               	movf	(??_main+4)^(0+256),w
  8146  00B3  00A6               	movwf	parseEPROMInitialization@PMON^(0+256)
  8147  00B4  3042               	movlw	(low (main@TALA| (0+256)))& (0+255)
  8148  00B5  00B5               	movwf	(??_main+5)^(0+256)
  8149  00B6  0835               	movf	(??_main+5)^(0+256),w
  8150  00B7  00A7               	movwf	parseEPROMInitialization@TALA^(0+256)
  8151  00B8  3043               	movlw	(low (main@ALAT| (0+256)))& (0+255)
  8152  00B9  00B6               	movwf	(??_main+6)^(0+256)
  8153  00BA  0836               	movf	(??_main+6)^(0+256),w
  8154  00BB  00A8               	movwf	parseEPROMInitialization@ALAT^(0+256)
  8155  00BC  3044               	movlw	(low (main@ALAL| (0+256)))& (0+255)
  8156  00BD  00B7               	movwf	(??_main+7)^(0+256)
  8157  00BE  0837               	movf	(??_main+7)^(0+256),w
  8158  00BF  00A9               	movwf	parseEPROMInitialization@ALAL^(0+256)
  8159  00C0  3045               	movlw	(low (main@ALAF| (0+256)))& (0+255)
  8160  00C1  00B8               	movwf	(??_main+8)^(0+256)
  8161  00C2  0838               	movf	(??_main+8)^(0+256),w
  8162  00C3  00AA               	movwf	parseEPROMInitialization@ALAF^(0+256)
  8163  00C4  3046               	movlw	(low (main@CLKH| (0+256)))& (0+255)
  8164  00C5  00B9               	movwf	(??_main+9)^(0+256)
  8165  00C6  0839               	movf	(??_main+9)^(0+256),w
  8166  00C7  00AB               	movwf	parseEPROMInitialization@CLKH^(0+256)
  8167  00C8  3047               	movlw	(low (main@CLKM| (0+256)))& (0+255)
  8168  00C9  00BA               	movwf	(??_main+10)^(0+256)
  8169  00CA  083A               	movf	(??_main+10)^(0+256),w
  8170  00CB  00AC               	movwf	parseEPROMInitialization@CLKM^(0+256)
  8171  00CC  3048               	movlw	(low (main@checksum| (0+256)))& (0+255)
  8172  00CD  00BB               	movwf	(??_main+11)^(0+256)
  8173  00CE  083B               	movf	(??_main+11)^(0+256),w
  8174  00CF  00AD               	movwf	parseEPROMInitialization@checksum^(0+256)
  8175  00D0  303C               	movlw	(low (main@magic_word| (0+256)))& (0+255)
  8176  00D1  318B  2330  3180   	fcall	_parseEPROMInitialization
  8177  00D4                     l6178:
  8178                           
  8179                           ;main.c: 297:         if(mode==1){
  8180  00D4  0021               	movlb	1	; select bank1
  8181  00D5  0368               	decf	_mode^(0+128),w
  8182  00D6  1D03               	btfss	3,2
  8183  00D7  28D9               	goto	u5431
  8184  00D8  28DA               	goto	u5430
  8185  00D9                     u5431:
  8186  00D9  289F               	goto	l6176
  8187  00DA                     u5430:
  8188  00DA                     l6180:
  8189                           
  8190                           ;main.c: 298:             if(modification==1){
  8191  00DA  0022               	movlb	2	; select bank2
  8192  00DB  0351               	decf	_modification^(0+256),w
  8193  00DC  1D03               	btfss	3,2
  8194  00DD  28DF               	goto	u5441
  8195  00DE  28E0               	goto	u5440
  8196  00DF                     u5441:
  8197  00DF  29A3               	goto	l6260
  8198  00E0                     u5440:
  8199  00E0                     l6182:
  8200                           
  8201                           ;main.c: 299:                 if(minimode==0){
  8202  00E0  0857               	movf	_minimode^(0+256),w
  8203  00E1  1D03               	btfss	3,2
  8204  00E2  28E4               	goto	u5451
  8205  00E3  28E5               	goto	u5450
  8206  00E4                     u5451:
  8207  00E4  2907               	goto	l6194
  8208  00E5                     u5450:
  8209  00E5                     l6184:
  8210                           
  8211                           ;main.c: 302:                     if(PORTCbits.RC5==0){
  8212  00E5  0020               	movlb	0	; select bank0
  8213  00E6  1A8E               	btfsc	14,5	;volatile
  8214  00E7  28E9               	goto	u5461
  8215  00E8  28EA               	goto	u5460
  8216  00E9                     u5461:
  8217  00E9  298C               	goto	l6254
  8218  00EA                     u5460:
  8219  00EA                     l6186:
  8220                           
  8221                           ;main.c: 303:                         if(hours<23){
  8222  00EA  3017               	movlw	23
  8223  00EB  0021               	movlb	1	; select bank1
  8224  00EC  026D               	subwf	_hours^(0+128),w
  8225  00ED  1803               	skipnc
  8226  00EE  28F0               	goto	u5471
  8227  00EF  28F1               	goto	u5470
  8228  00F0                     u5471:
  8229  00F0  28F8               	goto	l6190
  8230  00F1                     u5470:
  8231  00F1                     l6188:
  8232                           
  8233                           ;main.c: 304:                             hours++;
  8234  00F1  3001               	movlw	1
  8235  00F2  0022               	movlb	2	; select bank2
  8236  00F3  00B0               	movwf	??_main^(0+256)
  8237  00F4  0830               	movf	??_main^(0+256),w
  8238  00F5  0021               	movlb	1	; select bank1
  8239  00F6  07ED               	addwf	_hours^(0+128),f
  8240                           
  8241                           ;main.c: 305:                         }else{
  8242  00F7  28F9               	goto	l6192
  8243  00F8                     l6190:
  8244                           
  8245                           ;main.c: 306:                             hours=0;
  8246  00F8  01ED               	clrf	_hours^(0+128)
  8247  00F9                     l6192:
  8248                           
  8249                           ;main.c: 308:                         _delay((unsigned long)((1000)*(1000000/4000.0)));
  8250  00F9  3002               	movlw	2
  8251  00FA  0022               	movlb	2	; select bank2
  8252  00FB  00B1               	movwf	(??_main^(0+256)+1)
  8253  00FC  3045               	movlw	69
  8254  00FD  00B0               	movwf	??_main^(0+256)
  8255  00FE  30A9               	movlw	169
  8256  00FF                     u5777:
  8257  00FF  0B89               	decfsz	9,f
  8258  0100  28FF               	goto	u5777
  8259  0101  0BB0               	decfsz	??_main^(0+256),f
  8260  0102  28FF               	goto	u5777
  8261  0103  0BB1               	decfsz	(??_main^(0+256)+1),f
  8262  0104  28FF               	goto	u5777
  8263  0105  3200               	nop2
  8264  0106  298C               	goto	l6254
  8265  0107                     l6194:
  8266  0107  0357               	decf	_minimode^(0+256),w
  8267  0108  1D03               	btfss	3,2
  8268  0109  290B               	goto	u5481
  8269  010A  290C               	goto	u5480
  8270  010B                     u5481:
  8271  010B  2921               	goto	l6206
  8272  010C                     u5480:
  8273  010C                     l6196:
  8274                           
  8275                           ;main.c: 313:                     if(PORTCbits.RC5==0){
  8276  010C  0020               	movlb	0	; select bank0
  8277  010D  1A8E               	btfsc	14,5	;volatile
  8278  010E  2910               	goto	u5491
  8279  010F  2911               	goto	u5490
  8280  0110                     u5491:
  8281  0110  298C               	goto	l6254
  8282  0111                     u5490:
  8283  0111                     l6198:
  8284                           
  8285                           ;main.c: 314:                         if(minutes<59){
  8286  0111  303B               	movlw	59
  8287  0112  0021               	movlb	1	; select bank1
  8288  0113  026C               	subwf	_minutes^(0+128),w
  8289  0114  1803               	skipnc
  8290  0115  2917               	goto	u5501
  8291  0116  2918               	goto	u5500
  8292  0117                     u5501:
  8293  0117  291F               	goto	l6202
  8294  0118                     u5500:
  8295  0118                     l6200:
  8296                           
  8297                           ;main.c: 315:                             minutes++;
  8298  0118  3001               	movlw	1
  8299  0119  0022               	movlb	2	; select bank2
  8300  011A  00B0               	movwf	??_main^(0+256)
  8301  011B  0830               	movf	??_main^(0+256),w
  8302  011C  0021               	movlb	1	; select bank1
  8303  011D  07EC               	addwf	_minutes^(0+128),f
  8304                           
  8305                           ;main.c: 316:                         }else{
  8306  011E  28F9               	goto	l6192
  8307  011F                     l6202:
  8308                           
  8309                           ;main.c: 317:                             minutes=0;
  8310  011F  01EC               	clrf	_minutes^(0+128)
  8311  0120  28F9               	goto	l6192
  8312  0121                     l6206:
  8313  0121  3002               	movlw	2
  8314  0122  0657               	xorwf	_minimode^(0+256),w
  8315  0123  1D03               	btfss	3,2
  8316  0124  2926               	goto	u5511
  8317  0125  2927               	goto	u5510
  8318  0126                     u5511:
  8319  0126  293C               	goto	l6218
  8320  0127                     u5510:
  8321  0127                     l6208:
  8322                           
  8323                           ;main.c: 324:                     if(PORTCbits.RC5==0){
  8324  0127  0020               	movlb	0	; select bank0
  8325  0128  1A8E               	btfsc	14,5	;volatile
  8326  0129  292B               	goto	u5521
  8327  012A  292C               	goto	u5520
  8328  012B                     u5521:
  8329  012B  298C               	goto	l6254
  8330  012C                     u5520:
  8331  012C                     l6210:
  8332                           
  8333                           ;main.c: 325:                         if(seconds<59){
  8334  012C  303B               	movlw	59
  8335  012D  0021               	movlb	1	; select bank1
  8336  012E  026B               	subwf	_seconds^(0+128),w
  8337  012F  1803               	skipnc
  8338  0130  2932               	goto	u5531
  8339  0131  2933               	goto	u5530
  8340  0132                     u5531:
  8341  0132  293A               	goto	l6214
  8342  0133                     u5530:
  8343  0133                     l6212:
  8344                           
  8345                           ;main.c: 326:                             seconds++;
  8346  0133  3001               	movlw	1
  8347  0134  0022               	movlb	2	; select bank2
  8348  0135  00B0               	movwf	??_main^(0+256)
  8349  0136  0830               	movf	??_main^(0+256),w
  8350  0137  0021               	movlb	1	; select bank1
  8351  0138  07EB               	addwf	_seconds^(0+128),f
  8352                           
  8353                           ;main.c: 327:                         }else{
  8354  0139  28F9               	goto	l6192
  8355  013A                     l6214:
  8356                           
  8357                           ;main.c: 328:                             seconds=0;
  8358  013A  01EB               	clrf	_seconds^(0+128)
  8359  013B  28F9               	goto	l6192
  8360  013C                     l6218:
  8361  013C  3005               	movlw	5
  8362  013D  0657               	xorwf	_minimode^(0+256),w
  8363  013E  1D03               	btfss	3,2
  8364  013F  2941               	goto	u5541
  8365  0140  2942               	goto	u5540
  8366  0141                     u5541:
  8367  0141  2955               	goto	l6230
  8368  0142                     u5540:
  8369  0142                     l6220:
  8370                           
  8371                           ;main.c: 335:                     if(PORTCbits.RC5==0){
  8372  0142  0020               	movlb	0	; select bank0
  8373  0143  1A8E               	btfsc	14,5	;volatile
  8374  0144  2946               	goto	u5551
  8375  0145  2947               	goto	u5550
  8376  0146                     u5551:
  8377  0146  298C               	goto	l6254
  8378  0147                     u5550:
  8379  0147                     l6222:
  8380                           
  8381                           ;main.c: 336:                         if(t_threshold<50){
  8382  0147  3032               	movlw	50
  8383  0148  0022               	movlb	2	; select bank2
  8384  0149  025B               	subwf	_t_threshold^(0+256),w
  8385  014A  1803               	skipnc
  8386  014B  294D               	goto	u5561
  8387  014C  294E               	goto	u5560
  8388  014D                     u5561:
  8389  014D  2953               	goto	l6226
  8390  014E                     u5560:
  8391  014E                     l6224:
  8392                           
  8393                           ;main.c: 337:                             t_threshold++;
  8394  014E  3001               	movlw	1
  8395  014F  00B0               	movwf	??_main^(0+256)
  8396  0150  0830               	movf	??_main^(0+256),w
  8397  0151  07DB               	addwf	_t_threshold^(0+256),f
  8398                           
  8399                           ;main.c: 338:                         }else{
  8400  0152  28F9               	goto	l6192
  8401  0153                     l6226:
  8402                           
  8403                           ;main.c: 339:                             t_threshold=0;
  8404  0153  01DB               	clrf	_t_threshold^(0+256)
  8405  0154  28F9               	goto	l6192
  8406  0155                     l6230:
  8407  0155  3006               	movlw	6
  8408  0156  0657               	xorwf	_minimode^(0+256),w
  8409  0157  1D03               	btfss	3,2
  8410  0158  295A               	goto	u5571
  8411  0159  295B               	goto	u5570
  8412  015A                     u5571:
  8413  015A  296E               	goto	l6242
  8414  015B                     u5570:
  8415  015B                     l6232:
  8416                           
  8417                           ;main.c: 346:                     if(PORTCbits.RC5==0){
  8418  015B  0020               	movlb	0	; select bank0
  8419  015C  1A8E               	btfsc	14,5	;volatile
  8420  015D  295F               	goto	u5581
  8421  015E  2960               	goto	u5580
  8422  015F                     u5581:
  8423  015F  298C               	goto	l6254
  8424  0160                     u5580:
  8425  0160                     l6234:
  8426                           
  8427                           ;main.c: 347:                         if(l_threshold<3){
  8428  0160  3003               	movlw	3
  8429  0161  0022               	movlb	2	; select bank2
  8430  0162  025A               	subwf	_l_threshold^(0+256),w
  8431  0163  1803               	skipnc
  8432  0164  2966               	goto	u5591
  8433  0165  2967               	goto	u5590
  8434  0166                     u5591:
  8435  0166  296C               	goto	l6238
  8436  0167                     u5590:
  8437  0167                     l6236:
  8438                           
  8439                           ;main.c: 348:                             l_threshold++;
  8440  0167  3001               	movlw	1
  8441  0168  00B0               	movwf	??_main^(0+256)
  8442  0169  0830               	movf	??_main^(0+256),w
  8443  016A  07DA               	addwf	_l_threshold^(0+256),f
  8444                           
  8445                           ;main.c: 349:                         }else{
  8446  016B  28F9               	goto	l6192
  8447  016C                     l6238:
  8448                           
  8449                           ;main.c: 350:                             l_threshold=0;
  8450  016C  01DA               	clrf	_l_threshold^(0+256)
  8451  016D  28F9               	goto	l6192
  8452  016E                     l6242:
  8453  016E  3007               	movlw	7
  8454  016F  0657               	xorwf	_minimode^(0+256),w
  8455  0170  1D03               	btfss	3,2
  8456  0171  2973               	goto	u5601
  8457  0172  2974               	goto	u5600
  8458  0173                     u5601:
  8459  0173  298C               	goto	l6254
  8460  0174                     u5600:
  8461  0174                     l6244:
  8462                           
  8463                           ;main.c: 357:                     if(PORTCbits.RC5==0){
  8464  0174  0020               	movlb	0	; select bank0
  8465  0175  1A8E               	btfsc	14,5	;volatile
  8466  0176  2978               	goto	u5611
  8467  0177  2979               	goto	u5610
  8468  0178                     u5611:
  8469  0178  298C               	goto	l6254
  8470  0179                     u5610:
  8471  0179                     l6246:
  8472                           
  8473                           ;main.c: 358:                         if(alarm1==1 || alarm2==1){
  8474  0179  0022               	movlb	2	; select bank2
  8475  017A  0359               	decf	_alarm1^(0+256),w
  8476  017B  1903               	btfsc	3,2
  8477  017C  297E               	goto	u5621
  8478  017D  297F               	goto	u5620
  8479  017E                     u5621:
  8480  017E  2984               	goto	l6250
  8481  017F                     u5620:
  8482  017F                     l6248:
  8483  017F  0358               	decf	_alarm2^(0+256),w
  8484  0180  1D03               	btfss	3,2
  8485  0181  2983               	goto	u5631
  8486  0182  2984               	goto	u5630
  8487  0183                     u5631:
  8488  0183  2987               	goto	l1399
  8489  0184                     u5630:
  8490  0184                     l6250:
  8491                           
  8492                           ;main.c: 359:                             alarm1=0;
  8493  0184  01D9               	clrf	_alarm1^(0+256)
  8494                           
  8495                           ;main.c: 360:                             alarm2=0;
  8496  0185  01D8               	clrf	_alarm2^(0+256)
  8497                           
  8498                           ;main.c: 361:                         }else{
  8499  0186  28F9               	goto	l6192
  8500  0187                     l1399:
  8501                           
  8502                           ;main.c: 362:                             alarm1=1;
  8503  0187  01D9               	clrf	_alarm1^(0+256)
  8504  0188  0AD9               	incf	_alarm1^(0+256),f
  8505                           
  8506                           ;main.c: 363:                             alarm2=1;
  8507  0189  01D8               	clrf	_alarm2^(0+256)
  8508  018A  0AD8               	incf	_alarm2^(0+256),f
  8509  018B  28F9               	goto	l6192
  8510  018C                     l6254:
  8511                           
  8512                           ;main.c: 369:             if(PORTBbits.RB4==0){
  8513  018C  0020               	movlb	0	; select bank0
  8514  018D  1A0D               	btfsc	13,4	;volatile
  8515  018E  2990               	goto	u5641
  8516  018F  2991               	goto	u5640
  8517  0190                     u5641:
  8518  0190  2A46               	goto	l1370
  8519  0191                     u5640:
  8520  0191                     l6256:
  8521                           
  8522                           ;main.c: 370:                     modification=0;
  8523  0191  0022               	movlb	2	; select bank2
  8524  0192  01D1               	clrf	_modification^(0+256)
  8525                           
  8526                           ;main.c: 371:                     mode=0;
  8527  0193  0021               	movlb	1	; select bank1
  8528  0194  01E8               	clrf	_mode^(0+128)
  8529  0195                     l6258:
  8530                           
  8531                           ;main.c: 372:                     _delay((unsigned long)((1000)*(1000000/4000.0)));
  8532  0195  3002               	movlw	2
  8533  0196  0022               	movlb	2	; select bank2
  8534  0197  00B1               	movwf	(??_main^(0+256)+1)
  8535  0198  3045               	movlw	69
  8536  0199  00B0               	movwf	??_main^(0+256)
  8537  019A  30A9               	movlw	169
  8538  019B                     u5787:
  8539  019B  0B89               	decfsz	9,f
  8540  019C  299B               	goto	u5787
  8541  019D  0BB0               	decfsz	??_main^(0+256),f
  8542  019E  299B               	goto	u5787
  8543  019F  0BB1               	decfsz	(??_main^(0+256)+1),f
  8544  01A0  299B               	goto	u5787
  8545  01A1  3200               	nop2
  8546  01A2  289F               	goto	l6176
  8547  01A3                     l6260:
  8548                           
  8549                           ;main.c: 378:                 if(minimode==0){
  8550  01A3  0857               	movf	_minimode^(0+256),w
  8551  01A4  1D03               	btfss	3,2
  8552  01A5  29A7               	goto	u5651
  8553  01A6  29A8               	goto	u5650
  8554  01A7                     u5651:
  8555  01A7  29A9               	goto	l6264
  8556  01A8                     u5650:
  8557  01A8  2A10               	goto	l1406
  8558  01A9                     l6264:
  8559  01A9  0357               	decf	_minimode^(0+256),w
  8560  01AA  1D03               	btfss	3,2
  8561  01AB  29AD               	goto	u5661
  8562  01AC  29AE               	goto	u5660
  8563  01AD                     u5661:
  8564  01AD  29AF               	goto	l6268
  8565  01AE                     u5660:
  8566  01AE  2A10               	goto	l1406
  8567  01AF                     l6268:
  8568  01AF  3002               	movlw	2
  8569  01B0  0657               	xorwf	_minimode^(0+256),w
  8570  01B1  1D03               	btfss	3,2
  8571  01B2  29B4               	goto	u5671
  8572  01B3  29B5               	goto	u5670
  8573  01B4                     u5671:
  8574  01B4  29B6               	goto	l6272
  8575  01B5                     u5670:
  8576  01B5  2A10               	goto	l1406
  8577  01B6                     l6272:
  8578  01B6  3003               	movlw	3
  8579  01B7  0657               	xorwf	_minimode^(0+256),w
  8580  01B8  1D03               	btfss	3,2
  8581  01B9  29BB               	goto	u5681
  8582  01BA  29BC               	goto	u5680
  8583  01BB                     u5681:
  8584  01BB  29CC               	goto	l6276
  8585  01BC                     u5680:
  8586  01BC                     l6274:
  8587                           
  8588                           ;main.c: 390:                     character= 'M';
  8589  01BC  304D               	movlw	77
  8590  01BD  00B0               	movwf	??_main^(0+256)
  8591  01BE  0830               	movf	??_main^(0+256),w
  8592  01BF  00D0               	movwf	_character^(0+256)
  8593                           
  8594                           ;main.c: 391:                     variable1=max_temperature;
  8595  01C0  0852               	movf	_max_temperature^(0+256),w
  8596  01C1  00B0               	movwf	??_main^(0+256)
  8597  01C2  0830               	movf	??_main^(0+256),w
  8598  01C3  0021               	movlb	1	; select bank1
  8599  01C4  00E7               	movwf	_variable1^(0+128)
  8600                           
  8601                           ;main.c: 392:                     variable2=max_luminosity;
  8602  01C5  0022               	movlb	2	; select bank2
  8603  01C6  0854               	movf	_max_luminosity^(0+256),w
  8604  01C7  00B0               	movwf	??_main^(0+256)
  8605  01C8  0830               	movf	??_main^(0+256),w
  8606  01C9  0021               	movlb	1	; select bank1
  8607  01CA  00E6               	movwf	_variable2^(0+128)
  8608                           
  8609                           ;main.c: 393:                 }else if(minimode==4){
  8610  01CB  2A10               	goto	l1406
  8611  01CC                     l6276:
  8612  01CC  3004               	movlw	4
  8613  01CD  0657               	xorwf	_minimode^(0+256),w
  8614  01CE  1D03               	btfss	3,2
  8615  01CF  29D1               	goto	u5691
  8616  01D0  29D2               	goto	u5690
  8617  01D1                     u5691:
  8618  01D1  29E4               	goto	l6280
  8619  01D2                     u5690:
  8620  01D2                     l6278:
  8621                           
  8622                           ;main.c: 396:                     character= 'm';
  8623  01D2  306D               	movlw	109
  8624  01D3  00B0               	movwf	??_main^(0+256)
  8625  01D4  0830               	movf	??_main^(0+256),w
  8626  01D5  00D0               	movwf	_character^(0+256)
  8627                           
  8628                           ;main.c: 397:                     variable1=min_temperature;
  8629  01D6  0021               	movlb	1	; select bank1
  8630  01D7  0869               	movf	_min_temperature^(0+128),w
  8631  01D8  0022               	movlb	2	; select bank2
  8632  01D9  00B0               	movwf	??_main^(0+256)
  8633  01DA  0830               	movf	??_main^(0+256),w
  8634  01DB  0021               	movlb	1	; select bank1
  8635  01DC  00E7               	movwf	_variable1^(0+128)
  8636                           
  8637                           ;main.c: 398:                     variable2=min_luminosity;
  8638  01DD  086A               	movf	_min_luminosity^(0+128),w
  8639  01DE  0022               	movlb	2	; select bank2
  8640  01DF  00B0               	movwf	??_main^(0+256)
  8641  01E0  0830               	movf	??_main^(0+256),w
  8642  01E1  0021               	movlb	1	; select bank1
  8643  01E2  00E6               	movwf	_variable2^(0+128)
  8644                           
  8645                           ;main.c: 399:                 }else if(minimode==5){
  8646  01E3  2A10               	goto	l1406
  8647  01E4                     l6280:
  8648  01E4  3005               	movlw	5
  8649  01E5  0657               	xorwf	_minimode^(0+256),w
  8650  01E6  1D03               	btfss	3,2
  8651  01E7  29E9               	goto	u5701
  8652  01E8  29EA               	goto	u5700
  8653  01E9                     u5701:
  8654  01E9  29FA               	goto	l6284
  8655  01EA                     u5700:
  8656  01EA                     l6282:
  8657                           
  8658                           ;main.c: 402:                     character= 'T';
  8659  01EA  3054               	movlw	84
  8660  01EB  00B0               	movwf	??_main^(0+256)
  8661  01EC  0830               	movf	??_main^(0+256),w
  8662  01ED  00D0               	movwf	_character^(0+256)
  8663                           
  8664                           ;main.c: 403:                     variable1=t_threshold;
  8665  01EE  085B               	movf	_t_threshold^(0+256),w
  8666  01EF  00B0               	movwf	??_main^(0+256)
  8667  01F0  0830               	movf	??_main^(0+256),w
  8668  01F1  0021               	movlb	1	; select bank1
  8669  01F2  00E7               	movwf	_variable1^(0+128)
  8670                           
  8671                           ;main.c: 404:                     variable2=l_threshold;
  8672  01F3  0022               	movlb	2	; select bank2
  8673  01F4  085A               	movf	_l_threshold^(0+256),w
  8674  01F5  00B0               	movwf	??_main^(0+256)
  8675  01F6  0830               	movf	??_main^(0+256),w
  8676  01F7  0021               	movlb	1	; select bank1
  8677  01F8  00E6               	movwf	_variable2^(0+128)
  8678                           
  8679                           ;main.c: 405:                 }else if(minimode==6){
  8680  01F9  2A10               	goto	l1406
  8681  01FA                     l6284:
  8682  01FA  3006               	movlw	6
  8683  01FB  0657               	xorwf	_minimode^(0+256),w
  8684  01FC  1D03               	btfss	3,2
  8685  01FD  29FF               	goto	u5711
  8686  01FE  2A00               	goto	u5710
  8687  01FF                     u5711:
  8688  01FF  2A10               	goto	l1418
  8689  0200                     u5710:
  8690  0200                     l6286:
  8691                           
  8692                           ;main.c: 408:                     character= 'L';
  8693  0200  304C               	movlw	76
  8694  0201  00B0               	movwf	??_main^(0+256)
  8695  0202  0830               	movf	??_main^(0+256),w
  8696  0203  00D0               	movwf	_character^(0+256)
  8697                           
  8698                           ;main.c: 409:                     variable1=t_threshold;
  8699  0204  085B               	movf	_t_threshold^(0+256),w
  8700  0205  00B0               	movwf	??_main^(0+256)
  8701  0206  0830               	movf	??_main^(0+256),w
  8702  0207  0021               	movlb	1	; select bank1
  8703  0208  00E7               	movwf	_variable1^(0+128)
  8704                           
  8705                           ;main.c: 410:                     variable2=l_threshold;
  8706  0209  0022               	movlb	2	; select bank2
  8707  020A  085A               	movf	_l_threshold^(0+256),w
  8708  020B  00B0               	movwf	??_main^(0+256)
  8709  020C  0830               	movf	??_main^(0+256),w
  8710  020D  0021               	movlb	1	; select bank1
  8711  020E  00E6               	movwf	_variable2^(0+128)
  8712                           
  8713                           ;main.c: 411:                 }else if(minimode==7){
  8714  020F  2A10               	goto	l1406
  8715  0210                     l1418:
  8716  0210                     l1406:
  8717                           
  8718                           ;main.c: 416:                 if(PORTBbits.RB4==0){
  8719  0210  0020               	movlb	0	; select bank0
  8720  0211  1A0D               	btfsc	13,4	;volatile
  8721  0212  2A14               	goto	u5721
  8722  0213  2A15               	goto	u5720
  8723  0214                     u5721:
  8724  0214  2A31               	goto	l6298
  8725  0215                     u5720:
  8726  0215                     l6290:
  8727                           
  8728                           ;main.c: 417:                     if(minimode<7){
  8729  0215  3007               	movlw	7
  8730  0216  0022               	movlb	2	; select bank2
  8731  0217  0257               	subwf	_minimode^(0+256),w
  8732  0218  1803               	skipnc
  8733  0219  2A1B               	goto	u5731
  8734  021A  2A1C               	goto	u5730
  8735  021B                     u5731:
  8736  021B  2A2E               	goto	l6296
  8737  021C                     u5730:
  8738  021C                     l6292:
  8739                           
  8740                           ;main.c: 418:                         minimode++;
  8741  021C  3001               	movlw	1
  8742  021D  00B0               	movwf	??_main^(0+256)
  8743  021E  0830               	movf	??_main^(0+256),w
  8744  021F  07D7               	addwf	_minimode^(0+256),f
  8745  0220                     l6294:
  8746                           
  8747                           ;main.c: 419:                         _delay((unsigned long)((1000)*(1000000/4000.0)));
  8748  0220  3002               	movlw	2
  8749  0221  0022               	movlb	2	; select bank2
  8750  0222  00B1               	movwf	(??_main^(0+256)+1)
  8751  0223  3045               	movlw	69
  8752  0224  00B0               	movwf	??_main^(0+256)
  8753  0225  30A9               	movlw	169
  8754  0226                     u5797:
  8755  0226  0B89               	decfsz	9,f
  8756  0227  2A26               	goto	u5797
  8757  0228  0BB0               	decfsz	??_main^(0+256),f
  8758  0229  2A26               	goto	u5797
  8759  022A  0BB1               	decfsz	(??_main^(0+256)+1),f
  8760  022B  2A26               	goto	u5797
  8761  022C  3200               	nop2
  8762                           
  8763                           ;main.c: 420:                     }else{
  8764  022D  2A31               	goto	l6298
  8765  022E                     l6296:
  8766                           
  8767                           ;main.c: 421:                         minimode=0;
  8768  022E  01D7               	clrf	_minimode^(0+256)
  8769                           
  8770                           ;main.c: 422:                         mode=0;
  8771  022F  0021               	movlb	1	; select bank1
  8772  0230  01E8               	clrf	_mode^(0+128)
  8773  0231                     l6298:
  8774                           
  8775                           ;main.c: 425:                 if(PORTCbits.RC5==0 && minimode!= 3 && minimode!=4){
  8776  0231  0020               	movlb	0	; select bank0
  8777  0232  1A8E               	btfsc	14,5	;volatile
  8778  0233  2A35               	goto	u5741
  8779  0234  2A36               	goto	u5740
  8780  0235                     u5741:
  8781  0235  2A46               	goto	l1370
  8782  0236                     u5740:
  8783  0236                     l6300:
  8784  0236  3003               	movlw	3
  8785  0237  0022               	movlb	2	; select bank2
  8786  0238  0657               	xorwf	_minimode^(0+256),w
  8787  0239  1903               	btfsc	3,2
  8788  023A  2A3C               	goto	u5751
  8789  023B  2A3D               	goto	u5750
  8790  023C                     u5751:
  8791  023C  2A46               	goto	l1370
  8792  023D                     u5750:
  8793  023D                     l6302:
  8794  023D  3004               	movlw	4
  8795  023E  0657               	xorwf	_minimode^(0+256),w
  8796  023F  1903               	btfsc	3,2
  8797  0240  2A42               	goto	u5761
  8798  0241  2A43               	goto	u5760
  8799  0242                     u5761:
  8800  0242  2A46               	goto	l1370
  8801  0243                     u5760:
  8802  0243                     l6304:
  8803                           
  8804                           ;main.c: 426:                     modification=1;
  8805  0243  01D1               	clrf	_modification^(0+256)
  8806  0244  0AD1               	incf	_modification^(0+256),f
  8807  0245  2995               	goto	l6258
  8808  0246                     l1370:	
  8809                           ;main.c: 431:         }
  8810                           
  8811  0246  289F               	goto	l6176
  8812  0247  3180  2818         	ljmp	start
  8813  0249                     __end_of_main:
  8814                           
  8815                           	psect	text1
  8816  15D6                     __ptext1:	
  8817 ;; *************** function _storeEPROMBuild *****************
  8818 ;; Defined at:
  8819 ;;		line 50 in file "EPROMlib.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;  hours           1    wreg     unsigned char 
  8822 ;;  minutes         1    7[BANK2 ] unsigned char 
  8823 ;;  seconds         1    8[BANK2 ] unsigned char 
  8824 ;;  temperature     1    9[BANK2 ] unsigned char 
  8825 ;;  luminosity      1   10[BANK2 ] unsigned char 
  8826 ;;  operation       1   11[BANK2 ] unsigned char 
  8827 ;; Auto vars:     Size  Location     Type
  8828 ;;  hours           1   13[BANK2 ] unsigned char 
  8829 ;;  dataAddr        2   14[BANK2 ] unsigned short 
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  1    wreg      void 
  8832 ;; Registers used:
  8833 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/0
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8839 ;;      Params:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  8840 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  8841 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;Total ram usage:        9 bytes
  8844 ;; Hardware stack levels used: 1
  8845 ;; Hardware stack levels required when called: 14
  8846 ;; This function calls:
  8847 ;;		_DATAEE_WriteByte
  8848 ;;		_operADDR
  8849 ;; This function is called by:
  8850 ;;		_main
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           
  8855                           ;psect for function _storeEPROMBuild
  8856  15D6                     _storeEPROMBuild:
  8857                           
  8858                           ;incstack = 0
  8859                           ; Regs used in _storeEPROMBuild: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8860                           ;storeEPROMBuild@hours stored from wreg
  8861  15D6  0022               	movlb	2	; select bank2
  8862  15D7  00AD               	movwf	storeEPROMBuild@hours^(0+256)
  8863  15D8                     l5632:
  8864                           
  8865                           ;EPROMlib.c: 51:     uint16_t dataAddr;;EPROMlib.c: 53:     dataAddr = operADDR(operatio
      +                          n);
  8866  15D8  082B               	movf	storeEPROMBuild@operation^(0+256),w
  8867  15D9  3195  2505  3195   	fcall	_operADDR
  8868  15DC  0022               	movlb	2	; select bank2
  8869  15DD  0821               	movf	(?_operADDR+1)^(0+256),w
  8870  15DE  00AF               	movwf	(storeEPROMBuild@dataAddr+1)^(0+256)
  8871  15DF  0820               	movf	?_operADDR^(0+256),w
  8872  15E0  00AE               	movwf	storeEPROMBuild@dataAddr^(0+256)
  8873  15E1                     l5634:
  8874                           
  8875                           ;EPROMlib.c: 54:     DATAEE_WriteByte(dataAddr, hours);
  8876  15E1  082F               	movf	(storeEPROMBuild@dataAddr+1)^(0+256),w
  8877  15E2  00A1               	movwf	(DATAEE_WriteByte@bAdd+1)^(0+256)
  8878  15E3  082E               	movf	storeEPROMBuild@dataAddr^(0+256),w
  8879  15E4  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  8880  15E5  082D               	movf	storeEPROMBuild@hours^(0+256),w
  8881  15E6  00AC               	movwf	??_storeEPROMBuild^(0+256)
  8882  15E7  082C               	movf	??_storeEPROMBuild^(0+256),w
  8883  15E8  00A2               	movwf	DATAEE_WriteByte@bData^(0+256)
  8884  15E9  3194  2436  3195   	fcall	_DATAEE_WriteByte
  8885  15EC                     l5636:
  8886                           
  8887                           ;EPROMlib.c: 55:     DATAEE_WriteByte(dataAddr + 1, minutes);
  8888  15EC  0022               	movlb	2	; select bank2
  8889  15ED  082E               	movf	storeEPROMBuild@dataAddr^(0+256),w
  8890  15EE  3E01               	addlw	1
  8891  15EF  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  8892  15F0  3000               	movlw	0
  8893  15F1  3D2F               	addwfc	(storeEPROMBuild@dataAddr+1)^(0+256),w
  8894  15F2  00A1               	movwf	(DATAEE_WriteByte@bAdd+1)^(0+256)
  8895  15F3  0827               	movf	storeEPROMBuild@minutes^(0+256),w
  8896  15F4  00AC               	movwf	??_storeEPROMBuild^(0+256)
  8897  15F5  082C               	movf	??_storeEPROMBuild^(0+256),w
  8898  15F6  00A2               	movwf	DATAEE_WriteByte@bData^(0+256)
  8899  15F7  3194  2436  3195   	fcall	_DATAEE_WriteByte
  8900  15FA                     l5638:
  8901                           
  8902                           ;EPROMlib.c: 56:     DATAEE_WriteByte(dataAddr + 2, seconds);
  8903  15FA  0022               	movlb	2	; select bank2
  8904  15FB  082E               	movf	storeEPROMBuild@dataAddr^(0+256),w
  8905  15FC  3E02               	addlw	2
  8906  15FD  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  8907  15FE  3000               	movlw	0
  8908  15FF  3D2F               	addwfc	(storeEPROMBuild@dataAddr+1)^(0+256),w
  8909  1600  00A1               	movwf	(DATAEE_WriteByte@bAdd+1)^(0+256)
  8910  1601  0828               	movf	storeEPROMBuild@seconds^(0+256),w
  8911  1602  00AC               	movwf	??_storeEPROMBuild^(0+256)
  8912  1603  082C               	movf	??_storeEPROMBuild^(0+256),w
  8913  1604  00A2               	movwf	DATAEE_WriteByte@bData^(0+256)
  8914  1605  3194  2436  3195   	fcall	_DATAEE_WriteByte
  8915  1608                     l5640:
  8916                           
  8917                           ;EPROMlib.c: 57:     DATAEE_WriteByte(dataAddr + 3, temperature);
  8918  1608  0022               	movlb	2	; select bank2
  8919  1609  082E               	movf	storeEPROMBuild@dataAddr^(0+256),w
  8920  160A  3E03               	addlw	3
  8921  160B  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  8922  160C  3000               	movlw	0
  8923  160D  3D2F               	addwfc	(storeEPROMBuild@dataAddr+1)^(0+256),w
  8924  160E  00A1               	movwf	(DATAEE_WriteByte@bAdd+1)^(0+256)
  8925  160F  0829               	movf	storeEPROMBuild@temperature^(0+256),w
  8926  1610  00AC               	movwf	??_storeEPROMBuild^(0+256)
  8927  1611  082C               	movf	??_storeEPROMBuild^(0+256),w
  8928  1612  00A2               	movwf	DATAEE_WriteByte@bData^(0+256)
  8929  1613  3194  2436  3195   	fcall	_DATAEE_WriteByte
  8930  1616                     l5642:
  8931                           
  8932                           ;EPROMlib.c: 58:     DATAEE_WriteByte(dataAddr + 4, luminosity);
  8933  1616  0022               	movlb	2	; select bank2
  8934  1617  082E               	movf	storeEPROMBuild@dataAddr^(0+256),w
  8935  1618  3E04               	addlw	4
  8936  1619  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  8937  161A  3000               	movlw	0
  8938  161B  3D2F               	addwfc	(storeEPROMBuild@dataAddr+1)^(0+256),w
  8939  161C  00A1               	movwf	(DATAEE_WriteByte@bAdd+1)^(0+256)
  8940  161D  082A               	movf	storeEPROMBuild@luminosity^(0+256),w
  8941  161E  00AC               	movwf	??_storeEPROMBuild^(0+256)
  8942  161F  082C               	movf	??_storeEPROMBuild^(0+256),w
  8943  1620  00A2               	movwf	DATAEE_WriteByte@bData^(0+256)
  8944  1621  3194  2436  3195   	fcall	_DATAEE_WriteByte
  8945  1624                     l1446:
  8946  1624  0008               	return
  8947  1625                     __end_of_storeEPROMBuild:
  8948                           
  8949                           	psect	text2
  8950  1505                     __ptext2:	
  8951 ;; *************** function _operADDR *****************
  8952 ;; Defined at:
  8953 ;;		line 7 in file "EPROMlib.c"
  8954 ;; Parameters:    Size  Location     Type
  8955 ;;  operation       1    wreg     unsigned char 
  8956 ;; Auto vars:     Size  Location     Type
  8957 ;;  operation       1    4[BANK2 ] unsigned char 
  8958 ;;  dataAddr        2    5[BANK2 ] unsigned short 
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  2    0[BANK2 ] unsigned short 
  8961 ;; Registers used:
  8962 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8963 ;; Tracked objects:
  8964 ;;		On entry : 0/0
  8965 ;;		On exit  : 0/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8968 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8969 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  8970 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8971 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
  8972 ;;Total ram usage:        7 bytes
  8973 ;; Hardware stack levels used: 1
  8974 ;; Hardware stack levels required when called: 13
  8975 ;; This function calls:
  8976 ;;		Nothing
  8977 ;; This function is called by:
  8978 ;;		_storeEPROMBuild
  8979 ;;		_parseEPROMReading
  8980 ;; This function uses a non-reentrant model
  8981 ;;
  8982                           
  8983                           
  8984                           ;psect for function _operADDR
  8985  1505                     _operADDR:
  8986                           
  8987                           ;incstack = 0
  8988                           ; Regs used in _operADDR: [wreg-fsr0h+status,2+status,0]
  8989                           ;operADDR@operation stored from wreg
  8990  1505  0022               	movlb	2	; select bank2
  8991  1506  00A4               	movwf	operADDR@operation^(0+256)
  8992  1507                     l5478:
  8993                           
  8994                           ;EPROMlib.c: 8:     uint16_t dataAddr;;EPROMlib.c: 9:     switch (operation){
  8995  1507  2D21               	goto	l5482
  8996  1508                     l1434:	
  8997                           ;EPROMlib.c: 10:         case 100:
  8998                           
  8999                           
  9000                           ;EPROMlib.c: 11:             dataAddr = 0x7000;
  9001  1508  3000               	movlw	0
  9002  1509  00A5               	movwf	operADDR@dataAddr^(0+256)
  9003  150A  3070               	movlw	112
  9004  150B  00A6               	movwf	(operADDR@dataAddr^(0+256)+1)
  9005                           
  9006                           ;EPROMlib.c: 12:             break;
  9007  150C  2D37               	goto	l5484
  9008  150D                     l1436:	
  9009                           ;EPROMlib.c: 14:         case 101:
  9010                           
  9011                           
  9012                           ;EPROMlib.c: 15:             dataAddr = 0x7005;
  9013  150D  3005               	movlw	5
  9014  150E  00A5               	movwf	operADDR@dataAddr^(0+256)
  9015  150F  3070               	movlw	112
  9016  1510  00A6               	movwf	(operADDR@dataAddr^(0+256)+1)
  9017                           
  9018                           ;EPROMlib.c: 16:             break;
  9019  1511  2D37               	goto	l5484
  9020  1512                     l1437:	
  9021                           ;EPROMlib.c: 18:         case 102:
  9022                           
  9023                           
  9024                           ;EPROMlib.c: 19:             dataAddr = 0x700A;
  9025  1512  300A               	movlw	10
  9026  1513  00A5               	movwf	operADDR@dataAddr^(0+256)
  9027  1514  3070               	movlw	112
  9028  1515  00A6               	movwf	(operADDR@dataAddr^(0+256)+1)
  9029                           
  9030                           ;EPROMlib.c: 20:             break;
  9031  1516  2D37               	goto	l5484
  9032  1517                     l1438:	
  9033                           ;EPROMlib.c: 22:         case 103:
  9034                           
  9035                           
  9036                           ;EPROMlib.c: 23:             dataAddr = 0x700F;
  9037  1517  300F               	movlw	15
  9038  1518  00A5               	movwf	operADDR@dataAddr^(0+256)
  9039  1519  3070               	movlw	112
  9040  151A  00A6               	movwf	(operADDR@dataAddr^(0+256)+1)
  9041                           
  9042                           ;EPROMlib.c: 24:             break;
  9043  151B  2D37               	goto	l5484
  9044  151C                     l1439:	
  9045                           ;EPROMlib.c: 26:         default:
  9046                           
  9047                           
  9048                           ;EPROMlib.c: 27:             dataAddr = 0xF0FF;
  9049  151C  30FF               	movlw	255
  9050  151D  00A5               	movwf	operADDR@dataAddr^(0+256)
  9051  151E  30F0               	movlw	240
  9052  151F  00A6               	movwf	(operADDR@dataAddr^(0+256)+1)
  9053                           
  9054                           ;EPROMlib.c: 28:             break;
  9055  1520  2D37               	goto	l5484
  9056  1521                     l5482:
  9057  1521  0824               	movf	operADDR@operation^(0+256),w
  9058  1522  00A2               	movwf	??_operADDR^(0+256)
  9059  1523  01A3               	clrf	(??_operADDR^(0+256)+1)
  9060                           
  9061                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9062                           ; Switch size 1, requested type "simple"
  9063                           ; Number of cases is 1, Range of values is 0 to 0
  9064                           ; switch strategies available:
  9065                           ; Name         Instructions Cycles
  9066                           ; simple_byte            4     3 (average)
  9067                           ; direct_byte            8     6 (fixed)
  9068                           ; jumptable            260     6 (fixed)
  9069                           ;	Chosen strategy is simple_byte
  9070  1524  0823               	movf	(??_operADDR+1)^(0+256),w
  9071  1525  3A00               	xorlw	0	; case 0
  9072  1526  1903               	skipnz
  9073  1527  2D29               	goto	l6400
  9074  1528  2D1C               	goto	l1439
  9075  1529                     l6400:
  9076                           
  9077                           ; Switch size 1, requested type "simple"
  9078                           ; Number of cases is 4, Range of values is 100 to 103
  9079                           ; switch strategies available:
  9080                           ; Name         Instructions Cycles
  9081                           ; simple_byte           13     7 (average)
  9082                           ; direct_byte           17     9 (fixed)
  9083                           ; jumptable            263     9 (fixed)
  9084                           ;	Chosen strategy is simple_byte
  9085  1529  0822               	movf	??_operADDR^(0+256),w
  9086  152A  3A64               	xorlw	100	; case 100
  9087  152B  1903               	skipnz
  9088  152C  2D08               	goto	l1434
  9089  152D  3A01               	xorlw	1	; case 101
  9090  152E  1903               	skipnz
  9091  152F  2D0D               	goto	l1436
  9092  1530  3A03               	xorlw	3	; case 102
  9093  1531  1903               	skipnz
  9094  1532  2D12               	goto	l1437
  9095  1533  3A01               	xorlw	1	; case 103
  9096  1534  1903               	skipnz
  9097  1535  2D17               	goto	l1438
  9098  1536  2D1C               	goto	l1439
  9099  1537                     l5484:
  9100                           
  9101                           ;EPROMlib.c: 31:     return dataAddr;
  9102  1537  0826               	movf	(operADDR@dataAddr+1)^(0+256),w
  9103  1538  00A1               	movwf	(?_operADDR+1)^(0+256)
  9104  1539  0825               	movf	operADDR@dataAddr^(0+256),w
  9105  153A  00A0               	movwf	?_operADDR^(0+256)
  9106  153B                     l1440:
  9107  153B  0008               	return
  9108  153C                     __end_of_operADDR:
  9109                           
  9110                           	psect	text3
  9111  0B30                     __ptext3:	
  9112 ;; *************** function _parseEPROMInitialization *****************
  9113 ;; Defined at:
  9114 ;;		line 71 in file "EPROMlib.c"
  9115 ;; Parameters:    Size  Location     Type
  9116 ;;  magic_word      1    wreg     PTR unsigned char 
  9117 ;;		 -> main@magic_word(1), 
  9118 ;;  NREG            1    2[BANK2 ] PTR unsigned char 
  9119 ;;		 -> main@NREG(1), 
  9120 ;;  NR              1    3[BANK2 ] PTR unsigned char 
  9121 ;;		 -> main@NR(1), 
  9122 ;;  WI              1    4[BANK2 ] PTR unsigned char 
  9123 ;;		 -> main@WI(1), 
  9124 ;;  RI              1    5[BANK2 ] PTR unsigned char 
  9125 ;;		 -> main@RI(1), 
  9126 ;;  PMON            1    6[BANK2 ] PTR unsigned char 
  9127 ;;		 -> main@PMON(1), 
  9128 ;;  TALA            1    7[BANK2 ] PTR unsigned char 
  9129 ;;		 -> main@TALA(1), 
  9130 ;;  ALAT            1    8[BANK2 ] PTR unsigned char 
  9131 ;;		 -> main@ALAT(1), 
  9132 ;;  ALAL            1    9[BANK2 ] PTR unsigned char 
  9133 ;;		 -> main@ALAL(1), 
  9134 ;;  ALAF            1   10[BANK2 ] PTR unsigned char 
  9135 ;;		 -> main@ALAF(1), 
  9136 ;;  CLKH            1   11[BANK2 ] PTR unsigned char 
  9137 ;;		 -> main@CLKH(1), 
  9138 ;;  CLKM            1   12[BANK2 ] PTR unsigned char 
  9139 ;;		 -> main@CLKM(1), 
  9140 ;;  checksum        1   13[BANK2 ] PTR unsigned char 
  9141 ;;		 -> main@checksum(1), 
  9142 ;; Auto vars:     Size  Location     Type
  9143 ;;  magic_word      1   15[BANK2 ] PTR unsigned char 
  9144 ;;		 -> main@magic_word(1), 
  9145 ;; Return value:  Size  Location     Type
  9146 ;;                  1    wreg      unsigned char 
  9147 ;; Registers used:
  9148 ;;		wreg, fsr1l, fsr1h, status,2, pclath, cstack
  9149 ;; Tracked objects:
  9150 ;;		On entry : 0/0
  9151 ;;		On exit  : 0/0
  9152 ;;		Unchanged: 0/0
  9153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9154 ;;      Params:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
  9155 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  9156 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  9157 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0
  9158 ;;Total ram usage:       14 bytes
  9159 ;; Hardware stack levels used: 1
  9160 ;; Hardware stack levels required when called: 14
  9161 ;; This function calls:
  9162 ;;		_DATAEE_ReadByte
  9163 ;; This function is called by:
  9164 ;;		_main
  9165 ;; This function uses a non-reentrant model
  9166 ;;
  9167                           
  9168                           
  9169                           ;psect for function _parseEPROMInitialization
  9170  0B30                     _parseEPROMInitialization:
  9171                           
  9172                           ;incstack = 0
  9173                           ; Regs used in _parseEPROMInitialization: [wreg+fsr1l+fsr1h+status,2+pclath+cstack]
  9174                           ;parseEPROMInitialization@magic_word stored from wreg
  9175  0B30  0022               	movlb	2	; select bank2
  9176  0B31  00AF               	movwf	parseEPROMInitialization@magic_word^(0+256)
  9177  0B32                     l5644:
  9178                           
  9179                           ;EPROMlib.c: 72:     *magic_word = DATAEE_ReadByte(0x7099);
  9180  0B32  3099               	movlw	153
  9181  0B33  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+256)
  9182  0B34  3070               	movlw	112
  9183  0B35  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
  9184  0B36  3192  22E7  318B   	fcall	_DATAEE_ReadByte
  9185  0B39  0022               	movlb	2	; select bank2
  9186  0B3A  00AE               	movwf	??_parseEPROMInitialization^(0+256)
  9187  0B3B  082F               	movf	parseEPROMInitialization@magic_word^(0+256),w
  9188  0B3C  0086               	movwf	6
  9189  0B3D  3001               	movlw	1	; select bank2/3
  9190  0B3E  0087               	movwf	7
  9191  0B3F  082E               	movf	??_parseEPROMInitialization^(0+256),w
  9192  0B40  0081               	movwf	1
  9193                           
  9194                           ;EPROMlib.c: 73:     *NREG = DATAEE_ReadByte(0x7099 + 1);
  9195  0B41  309A               	movlw	154
  9196  0B42  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+256)
  9197  0B43  3070               	movlw	112
  9198  0B44  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
  9199  0B45  3192  22E7  318B   	fcall	_DATAEE_ReadByte
  9200  0B48  0022               	movlb	2	; select bank2
  9201  0B49  00AE               	movwf	??_parseEPROMInitialization^(0+256)
  9202  0B4A  0822               	movf	parseEPROMInitialization@NREG^(0+256),w
  9203  0B4B  0086               	movwf	6
  9204  0B4C  3001               	movlw	1	; select bank2/3
  9205  0B4D  0087               	movwf	7
  9206  0B4E  082E               	movf	??_parseEPROMInitialization^(0+256),w
  9207  0B4F  0081               	movwf	1
  9208                           
  9209                           ;EPROMlib.c: 74:     *NR = DATAEE_ReadByte(0x7099 + 2);
  9210  0B50  309B               	movlw	155
  9211  0B51  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+256)
  9212  0B52  3070               	movlw	112
  9213  0B53  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
  9214  0B54  3192  22E7  318B   	fcall	_DATAEE_ReadByte
  9215  0B57  0022               	movlb	2	; select bank2
  9216  0B58  00AE               	movwf	??_parseEPROMInitialization^(0+256)
  9217  0B59  0823               	movf	parseEPROMInitialization@NR^(0+256),w
  9218  0B5A  0086               	movwf	6
  9219  0B5B  3001               	movlw	1	; select bank2/3
  9220  0B5C  0087               	movwf	7
  9221  0B5D  082E               	movf	??_parseEPROMInitialization^(0+256),w
  9222  0B5E  0081               	movwf	1
  9223                           
  9224                           ;EPROMlib.c: 75:     *WI = DATAEE_ReadByte(0x7099 + 3);
  9225  0B5F  309C               	movlw	156
  9226  0B60  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+256)
  9227  0B61  3070               	movlw	112
  9228  0B62  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
  9229  0B63  3192  22E7  318B   	fcall	_DATAEE_ReadByte
  9230  0B66  0022               	movlb	2	; select bank2
  9231  0B67  00AE               	movwf	??_parseEPROMInitialization^(0+256)
  9232  0B68  0824               	movf	parseEPROMInitialization@WI^(0+256),w
  9233  0B69  0086               	movwf	6
  9234  0B6A  3001               	movlw	1	; select bank2/3
  9235  0B6B  0087               	movwf	7
  9236  0B6C  082E               	movf	??_parseEPROMInitialization^(0+256),w
  9237  0B6D  0081               	movwf	1
  9238                           
  9239                           ;EPROMlib.c: 76:     *RI = DATAEE_ReadByte(0x7099 + 4);
  9240  0B6E  309D               	movlw	157
  9241  0B6F  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+256)
  9242  0B70  3070               	movlw	112
  9243  0B71  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
  9244  0B72  3192  22E7  318B   	fcall	_DATAEE_ReadByte
  9245  0B75  0022               	movlb	2	; select bank2
  9246  0B76  00AE               	movwf	??_parseEPROMInitialization^(0+256)
  9247  0B77  0825               	movf	parseEPROMInitialization@RI^(0+256),w
  9248  0B78  0086               	movwf	6
  9249  0B79  3001               	movlw	1	; select bank2/3
  9250  0B7A  0087               	movwf	7
  9251  0B7B  082E               	movf	??_parseEPROMInitialization^(0+256),w
  9252  0B7C  0081               	movwf	1
  9253                           
  9254                           ;EPROMlib.c: 77:     *PMON = DATAEE_ReadByte(0x7099 + 5);
  9255  0B7D  309E               	movlw	158
  9256  0B7E  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+256)
  9257  0B7F  3070               	movlw	112
  9258  0B80  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
  9259  0B81  3192  22E7  318B   	fcall	_DATAEE_ReadByte
  9260  0B84  0022               	movlb	2	; select bank2
  9261  0B85  00AE               	movwf	??_parseEPROMInitialization^(0+256)
  9262  0B86  0826               	movf	parseEPROMInitialization@PMON^(0+256),w
  9263  0B87  0086               	movwf	6
  9264  0B88  3001               	movlw	1	; select bank2/3
  9265  0B89  0087               	movwf	7
  9266  0B8A  082E               	movf	??_parseEPROMInitialization^(0+256),w
  9267  0B8B  0081               	movwf	1
  9268                           
  9269                           ;EPROMlib.c: 78:     *TALA = DATAEE_ReadByte(0x7099 + 6);
  9270  0B8C  309F               	movlw	159
  9271  0B8D  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+256)
  9272  0B8E  3070               	movlw	112
  9273  0B8F  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
  9274  0B90  3192  22E7  318B   	fcall	_DATAEE_ReadByte
  9275  0B93  0022               	movlb	2	; select bank2
  9276  0B94  00AE               	movwf	??_parseEPROMInitialization^(0+256)
  9277  0B95  0827               	movf	parseEPROMInitialization@TALA^(0+256),w
  9278  0B96  0086               	movwf	6
  9279  0B97  3001               	movlw	1	; select bank2/3
  9280  0B98  0087               	movwf	7
  9281  0B99  082E               	movf	??_parseEPROMInitialization^(0+256),w
  9282  0B9A  0081               	movwf	1
  9283                           
  9284                           ;EPROMlib.c: 79:     *ALAT = DATAEE_ReadByte(0x7099 + 7);
  9285  0B9B  30A0               	movlw	160
  9286  0B9C  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+256)
  9287  0B9D  3070               	movlw	112
  9288  0B9E  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
  9289  0B9F  3192  22E7  318B   	fcall	_DATAEE_ReadByte
  9290  0BA2  0022               	movlb	2	; select bank2
  9291  0BA3  00AE               	movwf	??_parseEPROMInitialization^(0+256)
  9292  0BA4  0828               	movf	parseEPROMInitialization@ALAT^(0+256),w
  9293  0BA5  0086               	movwf	6
  9294  0BA6  3001               	movlw	1	; select bank2/3
  9295  0BA7  0087               	movwf	7
  9296  0BA8  082E               	movf	??_parseEPROMInitialization^(0+256),w
  9297  0BA9  0081               	movwf	1
  9298                           
  9299                           ;EPROMlib.c: 80:     *ALAL = DATAEE_ReadByte(0x7099 + 8);
  9300  0BAA  30A1               	movlw	161
  9301  0BAB  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+256)
  9302  0BAC  3070               	movlw	112
  9303  0BAD  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
  9304  0BAE  3192  22E7  318B   	fcall	_DATAEE_ReadByte
  9305  0BB1  0022               	movlb	2	; select bank2
  9306  0BB2  00AE               	movwf	??_parseEPROMInitialization^(0+256)
  9307  0BB3  0829               	movf	parseEPROMInitialization@ALAL^(0+256),w
  9308  0BB4  0086               	movwf	6
  9309  0BB5  3001               	movlw	1	; select bank2/3
  9310  0BB6  0087               	movwf	7
  9311  0BB7  082E               	movf	??_parseEPROMInitialization^(0+256),w
  9312  0BB8  0081               	movwf	1
  9313                           
  9314                           ;EPROMlib.c: 81:     *ALAF = DATAEE_ReadByte(0x7099 + 9);
  9315  0BB9  30A2               	movlw	162
  9316  0BBA  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+256)
  9317  0BBB  3070               	movlw	112
  9318  0BBC  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
  9319  0BBD  3192  22E7  318B   	fcall	_DATAEE_ReadByte
  9320  0BC0  0022               	movlb	2	; select bank2
  9321  0BC1  00AE               	movwf	??_parseEPROMInitialization^(0+256)
  9322  0BC2  082A               	movf	parseEPROMInitialization@ALAF^(0+256),w
  9323  0BC3  0086               	movwf	6
  9324  0BC4  3001               	movlw	1	; select bank2/3
  9325  0BC5  0087               	movwf	7
  9326  0BC6  082E               	movf	??_parseEPROMInitialization^(0+256),w
  9327  0BC7  0081               	movwf	1
  9328                           
  9329                           ;EPROMlib.c: 82:     *CLKH = DATAEE_ReadByte(0x7099 + 10);
  9330  0BC8  30A3               	movlw	163
  9331  0BC9  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+256)
  9332  0BCA  3070               	movlw	112
  9333  0BCB  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
  9334  0BCC  3192  22E7  318B   	fcall	_DATAEE_ReadByte
  9335  0BCF  0022               	movlb	2	; select bank2
  9336  0BD0  00AE               	movwf	??_parseEPROMInitialization^(0+256)
  9337  0BD1  082B               	movf	parseEPROMInitialization@CLKH^(0+256),w
  9338  0BD2  0086               	movwf	6
  9339  0BD3  3001               	movlw	1	; select bank2/3
  9340  0BD4  0087               	movwf	7
  9341  0BD5  082E               	movf	??_parseEPROMInitialization^(0+256),w
  9342  0BD6  0081               	movwf	1
  9343                           
  9344                           ;EPROMlib.c: 83:     *CLKM = DATAEE_ReadByte(0x7099 + 11);
  9345  0BD7  30A4               	movlw	164
  9346  0BD8  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+256)
  9347  0BD9  3070               	movlw	112
  9348  0BDA  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
  9349  0BDB  3192  22E7  318B   	fcall	_DATAEE_ReadByte
  9350  0BDE  0022               	movlb	2	; select bank2
  9351  0BDF  00AE               	movwf	??_parseEPROMInitialization^(0+256)
  9352  0BE0  082C               	movf	parseEPROMInitialization@CLKM^(0+256),w
  9353  0BE1  0086               	movwf	6
  9354  0BE2  3001               	movlw	1	; select bank2/3
  9355  0BE3  0087               	movwf	7
  9356  0BE4  082E               	movf	??_parseEPROMInitialization^(0+256),w
  9357  0BE5  0081               	movwf	1
  9358                           
  9359                           ;EPROMlib.c: 84:     *checksum = DATAEE_ReadByte(0x7099 + 12);
  9360  0BE6  30A5               	movlw	165
  9361  0BE7  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+256)
  9362  0BE8  3070               	movlw	112
  9363  0BE9  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
  9364  0BEA  3192  22E7  318B   	fcall	_DATAEE_ReadByte
  9365  0BED  0022               	movlb	2	; select bank2
  9366  0BEE  00AE               	movwf	??_parseEPROMInitialization^(0+256)
  9367  0BEF  082D               	movf	parseEPROMInitialization@checksum^(0+256),w
  9368  0BF0  0086               	movwf	6
  9369  0BF1  3001               	movlw	1	; select bank2/3
  9370  0BF2  0087               	movwf	7
  9371  0BF3  082E               	movf	??_parseEPROMInitialization^(0+256),w
  9372  0BF4  0081               	movwf	1
  9373  0BF5                     l1453:
  9374  0BF5  0008               	return
  9375  0BF6                     __end_of_parseEPROMInitialization:
  9376                           
  9377                           	psect	text4
  9378  12E7                     __ptext4:	
  9379 ;; *************** function _DATAEE_ReadByte *****************
  9380 ;; Defined at:
  9381 ;;		line 202 in file "mcc_generated_files/memory.c"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;  bAdd            2    0[BANK2 ] unsigned short 
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;		None
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  1    wreg      unsigned char 
  9388 ;; Registers used:
  9389 ;;		wreg, status,2
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9395 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  9396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9398 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  9399 ;;Total ram usage:        2 bytes
  9400 ;; Hardware stack levels used: 1
  9401 ;; Hardware stack levels required when called: 13
  9402 ;; This function calls:
  9403 ;;		Nothing
  9404 ;; This function is called by:
  9405 ;;		_parseEPROMInitialization
  9406 ;;		_parseEPROMReading
  9407 ;; This function uses a non-reentrant model
  9408 ;;
  9409                           
  9410                           
  9411                           ;psect for function _DATAEE_ReadByte
  9412  12E7                     _DATAEE_ReadByte:
  9413  12E7                     l5460:	
  9414                           ;incstack = 0
  9415                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
  9416                           
  9417                           
  9418                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
  9419  12E7  0022               	movlb	2	; select bank2
  9420  12E8  0821               	movf	(DATAEE_ReadByte@bAdd+1)^(0+256),w
  9421  12E9  0030               	movlb	16	; select bank16
  9422  12EA  009B               	movwf	27	;volatile
  9423  12EB                     l5462:
  9424                           
  9425                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
  9426  12EB  0022               	movlb	2	; select bank2
  9427  12EC  0820               	movf	DATAEE_ReadByte@bAdd^(0+256),w
  9428  12ED  0030               	movlb	16	; select bank16
  9429  12EE  009A               	movwf	26	;volatile
  9430  12EF                     l5464:
  9431                           
  9432                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
  9433  12EF  171E               	bsf	30,6	;volsfr
  9434  12F0                     l5466:
  9435                           
  9436                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
  9437  12F0  141E               	bsf	30,0	;volsfr
  9438  12F1                     l5468:
  9439                           
  9440                           ;mcc_generated_files/memory.c: 208:     __nop();
  9441  12F1  0000               	nop
  9442  12F2                     l5470:
  9443                           
  9444                           ;mcc_generated_files/memory.c: 209:     __nop();
  9445  12F2  0000               	nop
  9446  12F3                     l5472:
  9447                           
  9448                           ;mcc_generated_files/memory.c: 211:     NVMCON1|=0x80;
  9449  12F3  0030               	movlb	16	; select bank16
  9450  12F4  179E               	bsf	30,7	;volsfr
  9451  12F5                     l5474:
  9452                           
  9453                           ;mcc_generated_files/memory.c: 213:     return (NVMDATL);
  9454  12F5  081C               	movf	28,w	;volatile
  9455  12F6                     l773:
  9456  12F6  0008               	return
  9457  12F7                     __end_of_DATAEE_ReadByte:
  9458                           
  9459                           	psect	text5
  9460  14A9                     __ptext5:	
  9461 ;; *************** function _initializeREG *****************
  9462 ;; Defined at:
  9463 ;;		line 245 in file "main.c"
  9464 ;; Parameters:    Size  Location     Type
  9465 ;;		None
  9466 ;; Auto vars:     Size  Location     Type
  9467 ;;		None
  9468 ;; Return value:  Size  Location     Type
  9469 ;;                  1    wreg      void 
  9470 ;; Registers used:
  9471 ;;		wreg, status,2, status,0, pclath, cstack
  9472 ;; Tracked objects:
  9473 ;;		On entry : 0/0
  9474 ;;		On exit  : 0/0
  9475 ;;		Unchanged: 0/0
  9476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9479 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  9480 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  9481 ;;Total ram usage:        1 bytes
  9482 ;; Hardware stack levels used: 1
  9483 ;; Hardware stack levels required when called: 14
  9484 ;; This function calls:
  9485 ;;		_DATAEE_WriteByte
  9486 ;; This function is called by:
  9487 ;;		_main
  9488 ;; This function uses a non-reentrant model
  9489 ;;
  9490                           
  9491                           
  9492                           ;psect for function _initializeREG
  9493  14A9                     _initializeREG:
  9494  14A9                     l5628:	
  9495                           ;incstack = 0
  9496                           ; Regs used in _initializeREG: [wreg+status,2+status,0+pclath+cstack]
  9497                           
  9498                           
  9499                           ;main.c: 247:     DATAEE_WriteByte(0x7053,(uint8_t) 255);
  9500  14A9  3053               	movlw	83
  9501  14AA  0022               	movlb	2	; select bank2
  9502  14AB  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  9503  14AC  3070               	movlw	112
  9504  14AD  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
  9505  14AE  30FF               	movlw	255
  9506  14AF  00A4               	movwf	??_initializeREG^(0+256)
  9507  14B0  0824               	movf	??_initializeREG^(0+256),w
  9508  14B1  00A2               	movwf	DATAEE_WriteByte@bData^(0+256)
  9509  14B2  3194  2436  3194   	fcall	_DATAEE_WriteByte
  9510                           
  9511                           ;main.c: 248:     DATAEE_WriteByte(0x7054,(uint8_t) 0);
  9512  14B5  3054               	movlw	84
  9513  14B6  0022               	movlb	2	; select bank2
  9514  14B7  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  9515  14B8  3070               	movlw	112
  9516  14B9  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
  9517  14BA  01A2               	clrf	DATAEE_WriteByte@bData^(0+256)
  9518  14BB  3194  2436  3194   	fcall	_DATAEE_WriteByte
  9519                           
  9520                           ;main.c: 249:     DATAEE_WriteByte(0x7055 + 2,(uint8_t) 3);
  9521  14BE  3057               	movlw	87
  9522  14BF  0022               	movlb	2	; select bank2
  9523  14C0  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  9524  14C1  3070               	movlw	112
  9525  14C2  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
  9526  14C3  3003               	movlw	3
  9527  14C4  00A4               	movwf	??_initializeREG^(0+256)
  9528  14C5  0824               	movf	??_initializeREG^(0+256),w
  9529  14C6  00A2               	movwf	DATAEE_WriteByte@bData^(0+256)
  9530  14C7  3194  2436  3194   	fcall	_DATAEE_WriteByte
  9531                           
  9532                           ;main.c: 250:     DATAEE_WriteByte(0x7056 + 3,(uint8_t) 0);
  9533  14CA  3059               	movlw	89
  9534  14CB  0022               	movlb	2	; select bank2
  9535  14CC  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  9536  14CD  3070               	movlw	112
  9537  14CE  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
  9538  14CF  01A2               	clrf	DATAEE_WriteByte@bData^(0+256)
  9539  14D0  3194  2436  3194   	fcall	_DATAEE_WriteByte
  9540  14D3                     l1364:
  9541  14D3  0008               	return
  9542  14D4                     __end_of_initializeREG:
  9543                           
  9544                           	psect	text6
  9545  093D                     __ptext6:	
  9546 ;; *************** function _initializeEPROM *****************
  9547 ;; Defined at:
  9548 ;;		line 34 in file "EPROMlib.c"
  9549 ;; Parameters:    Size  Location     Type
  9550 ;;		None
  9551 ;; Auto vars:     Size  Location     Type
  9552 ;;		None
  9553 ;; Return value:  Size  Location     Type
  9554 ;;                  1    wreg      void 
  9555 ;; Registers used:
  9556 ;;		wreg, status,2, status,0, pclath, cstack
  9557 ;; Tracked objects:
  9558 ;;		On entry : 0/0
  9559 ;;		On exit  : 0/0
  9560 ;;		Unchanged: 0/0
  9561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9564 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  9565 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  9566 ;;Total ram usage:        1 bytes
  9567 ;; Hardware stack levels used: 1
  9568 ;; Hardware stack levels required when called: 14
  9569 ;; This function calls:
  9570 ;;		_DATAEE_WriteByte
  9571 ;; This function is called by:
  9572 ;;		_main
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576                           
  9577                           ;psect for function _initializeEPROM
  9578  093D                     _initializeEPROM:
  9579  093D                     l5630:	
  9580                           ;incstack = 0
  9581                           ; Regs used in _initializeEPROM: [wreg+status,2+status,0+pclath+cstack]
  9582                           
  9583                           
  9584                           ;EPROMlib.c: 35:     DATAEE_WriteByte(0x7099,(uint8_t) 0xAA);
  9585  093D  3099               	movlw	153
  9586  093E  0022               	movlb	2	; select bank2
  9587  093F  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  9588  0940  3070               	movlw	112
  9589  0941  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
  9590  0942  30AA               	movlw	170
  9591  0943  00A4               	movwf	??_initializeEPROM^(0+256)
  9592  0944  0824               	movf	??_initializeEPROM^(0+256),w
  9593  0945  00A2               	movwf	DATAEE_WriteByte@bData^(0+256)
  9594  0946  3194  2436  3189   	fcall	_DATAEE_WriteByte
  9595                           
  9596                           ;EPROMlib.c: 36:     DATAEE_WriteByte(0x7099 + 1,(uint8_t) 0xA);
  9597  0949  309A               	movlw	154
  9598  094A  0022               	movlb	2	; select bank2
  9599  094B  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  9600  094C  3070               	movlw	112
  9601  094D  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
  9602  094E  300A               	movlw	10
  9603  094F  00A4               	movwf	??_initializeEPROM^(0+256)
  9604  0950  0824               	movf	??_initializeEPROM^(0+256),w
  9605  0951  00A2               	movwf	DATAEE_WriteByte@bData^(0+256)
  9606  0952  3194  2436  3189   	fcall	_DATAEE_WriteByte
  9607                           
  9608                           ;EPROMlib.c: 37:     DATAEE_WriteByte(0x7099 + 2,(uint8_t) 0x0);
  9609  0955  309B               	movlw	155
  9610  0956  0022               	movlb	2	; select bank2
  9611  0957  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  9612  0958  3070               	movlw	112
  9613  0959  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
  9614  095A  01A2               	clrf	DATAEE_WriteByte@bData^(0+256)
  9615  095B  3194  2436  3189   	fcall	_DATAEE_WriteByte
  9616                           
  9617                           ;EPROMlib.c: 38:     DATAEE_WriteByte(0x7099 + 3,(uint8_t) 0x0);
  9618  095E  309C               	movlw	156
  9619  095F  0022               	movlb	2	; select bank2
  9620  0960  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  9621  0961  3070               	movlw	112
  9622  0962  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
  9623  0963  01A2               	clrf	DATAEE_WriteByte@bData^(0+256)
  9624  0964  3194  2436  3189   	fcall	_DATAEE_WriteByte
  9625                           
  9626                           ;EPROMlib.c: 39:     DATAEE_WriteByte(0x7099 + 4,(uint8_t) 0x0);
  9627  0967  309D               	movlw	157
  9628  0968  0022               	movlb	2	; select bank2
  9629  0969  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  9630  096A  3070               	movlw	112
  9631  096B  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
  9632  096C  01A2               	clrf	DATAEE_WriteByte@bData^(0+256)
  9633  096D  3194  2436  3189   	fcall	_DATAEE_WriteByte
  9634                           
  9635                           ;EPROMlib.c: 40:     DATAEE_WriteByte(0x7099 + 5,(uint8_t) 0x5);
  9636  0970  309E               	movlw	158
  9637  0971  0022               	movlb	2	; select bank2
  9638  0972  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  9639  0973  3070               	movlw	112
  9640  0974  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
  9641  0975  3005               	movlw	5
  9642  0976  00A4               	movwf	??_initializeEPROM^(0+256)
  9643  0977  0824               	movf	??_initializeEPROM^(0+256),w
  9644  0978  00A2               	movwf	DATAEE_WriteByte@bData^(0+256)
  9645  0979  3194  2436  3189   	fcall	_DATAEE_WriteByte
  9646                           
  9647                           ;EPROMlib.c: 41:     DATAEE_WriteByte(0x7099 + 6,(uint8_t) 0x3);
  9648  097C  309F               	movlw	159
  9649  097D  0022               	movlb	2	; select bank2
  9650  097E  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  9651  097F  3070               	movlw	112
  9652  0980  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
  9653  0981  3003               	movlw	3
  9654  0982  00A4               	movwf	??_initializeEPROM^(0+256)
  9655  0983  0824               	movf	??_initializeEPROM^(0+256),w
  9656  0984  00A2               	movwf	DATAEE_WriteByte@bData^(0+256)
  9657  0985  3194  2436  3189   	fcall	_DATAEE_WriteByte
  9658                           
  9659                           ;EPROMlib.c: 42:     DATAEE_WriteByte(0x7099 + 7,(uint8_t) 0x19);
  9660  0988  30A0               	movlw	160
  9661  0989  0022               	movlb	2	; select bank2
  9662  098A  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  9663  098B  3070               	movlw	112
  9664  098C  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
  9665  098D  3019               	movlw	25
  9666  098E  00A4               	movwf	??_initializeEPROM^(0+256)
  9667  098F  0824               	movf	??_initializeEPROM^(0+256),w
  9668  0990  00A2               	movwf	DATAEE_WriteByte@bData^(0+256)
  9669  0991  3194  2436  3189   	fcall	_DATAEE_WriteByte
  9670                           
  9671                           ;EPROMlib.c: 43:     DATAEE_WriteByte(0x7099 + 8,(uint8_t) 0x2);
  9672  0994  30A1               	movlw	161
  9673  0995  0022               	movlb	2	; select bank2
  9674  0996  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  9675  0997  3070               	movlw	112
  9676  0998  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
  9677  0999  3002               	movlw	2
  9678  099A  00A4               	movwf	??_initializeEPROM^(0+256)
  9679  099B  0824               	movf	??_initializeEPROM^(0+256),w
  9680  099C  00A2               	movwf	DATAEE_WriteByte@bData^(0+256)
  9681  099D  3194  2436  3189   	fcall	_DATAEE_WriteByte
  9682                           
  9683                           ;EPROMlib.c: 44:     DATAEE_WriteByte(0x7099 + 9,(uint8_t) 0x0);
  9684  09A0  30A2               	movlw	162
  9685  09A1  0022               	movlb	2	; select bank2
  9686  09A2  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  9687  09A3  3070               	movlw	112
  9688  09A4  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
  9689  09A5  01A2               	clrf	DATAEE_WriteByte@bData^(0+256)
  9690  09A6  3194  2436  3189   	fcall	_DATAEE_WriteByte
  9691                           
  9692                           ;EPROMlib.c: 45:     DATAEE_WriteByte(0x7099 + 10,(uint8_t) 0xC);
  9693  09A9  30A3               	movlw	163
  9694  09AA  0022               	movlb	2	; select bank2
  9695  09AB  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  9696  09AC  3070               	movlw	112
  9697  09AD  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
  9698  09AE  300C               	movlw	12
  9699  09AF  00A4               	movwf	??_initializeEPROM^(0+256)
  9700  09B0  0824               	movf	??_initializeEPROM^(0+256),w
  9701  09B1  00A2               	movwf	DATAEE_WriteByte@bData^(0+256)
  9702  09B2  3194  2436  3189   	fcall	_DATAEE_WriteByte
  9703                           
  9704                           ;EPROMlib.c: 46:     DATAEE_WriteByte(0x7099 + 11,(uint8_t) 0x0);
  9705  09B5  30A4               	movlw	164
  9706  09B6  0022               	movlb	2	; select bank2
  9707  09B7  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  9708  09B8  3070               	movlw	112
  9709  09B9  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
  9710  09BA  01A2               	clrf	DATAEE_WriteByte@bData^(0+256)
  9711  09BB  3194  2436  3189   	fcall	_DATAEE_WriteByte
  9712                           
  9713                           ;EPROMlib.c: 47:     DATAEE_WriteByte(0x7099 + 12,(uint8_t) 0xE3);
  9714  09BE  30A5               	movlw	165
  9715  09BF  0022               	movlb	2	; select bank2
  9716  09C0  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+256)
  9717  09C1  3070               	movlw	112
  9718  09C2  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
  9719  09C3  30E3               	movlw	227
  9720  09C4  00A4               	movwf	??_initializeEPROM^(0+256)
  9721  09C5  0824               	movf	??_initializeEPROM^(0+256),w
  9722  09C6  00A2               	movwf	DATAEE_WriteByte@bData^(0+256)
  9723  09C7  3194  2436  3189   	fcall	_DATAEE_WriteByte
  9724  09CA                     l1443:
  9725  09CA  0008               	return
  9726  09CB                     __end_of_initializeEPROM:
  9727                           
  9728                           	psect	text7
  9729  1436                     __ptext7:	
  9730 ;; *************** function _DATAEE_WriteByte *****************
  9731 ;; Defined at:
  9732 ;;		line 180 in file "mcc_generated_files/memory.c"
  9733 ;; Parameters:    Size  Location     Type
  9734 ;;  bAdd            2    0[BANK2 ] unsigned short 
  9735 ;;  bData           1    2[BANK2 ] unsigned char 
  9736 ;; Auto vars:     Size  Location     Type
  9737 ;;  GIEBitValue     1    3[BANK2 ] unsigned char 
  9738 ;; Return value:  Size  Location     Type
  9739 ;;                  1    wreg      void 
  9740 ;; Registers used:
  9741 ;;		wreg, status,2, status,0
  9742 ;; Tracked objects:
  9743 ;;		On entry : 0/0
  9744 ;;		On exit  : 0/0
  9745 ;;		Unchanged: 0/0
  9746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9747 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  9748 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  9749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9750 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9751 ;;Total ram usage:        4 bytes
  9752 ;; Hardware stack levels used: 1
  9753 ;; Hardware stack levels required when called: 13
  9754 ;; This function calls:
  9755 ;;		Nothing
  9756 ;; This function is called by:
  9757 ;;		_initializeREG
  9758 ;;		_initializeEPROM
  9759 ;;		_storeEPROMBuild
  9760 ;; This function uses a non-reentrant model
  9761 ;;
  9762                           
  9763                           
  9764                           ;psect for function _DATAEE_WriteByte
  9765  1436                     _DATAEE_WriteByte:
  9766  1436                     l5440:	
  9767                           ;incstack = 0
  9768                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  9769                           
  9770                           
  9771                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
  9772  1436  3000               	movlw	0
  9773  1437  1B8B               	btfsc	11,7	;volatile
  9774  1438  3001               	movlw	1
  9775  1439  0022               	movlb	2	; select bank2
  9776  143A  00A3               	movwf	DATAEE_WriteByte@GIEBitValue^(0+256)
  9777                           
  9778                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
  9779  143B  0821               	movf	(DATAEE_WriteByte@bAdd+1)^(0+256),w
  9780  143C  0030               	movlb	16	; select bank16
  9781  143D  009B               	movwf	27	;volatile
  9782  143E                     l5442:
  9783                           
  9784                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
  9785  143E  0022               	movlb	2	; select bank2
  9786  143F  0820               	movf	DATAEE_WriteByte@bAdd^(0+256),w
  9787  1440  0030               	movlb	16	; select bank16
  9788  1441  009A               	movwf	26	;volatile
  9789  1442                     l5444:
  9790                           
  9791                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
  9792  1442  0022               	movlb	2	; select bank2
  9793  1443  0822               	movf	DATAEE_WriteByte@bData^(0+256),w
  9794  1444  0030               	movlb	16	; select bank16
  9795  1445  009C               	movwf	28	;volatile
  9796  1446                     l5446:
  9797                           
  9798                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
  9799  1446  171E               	bsf	30,6	;volsfr
  9800  1447                     l5448:
  9801                           
  9802                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
  9803  1447  151E               	bsf	30,2	;volsfr
  9804  1448                     l5450:
  9805                           
  9806                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
  9807  1448  138B               	bcf	11,7	;volatile
  9808  1449                     l5452:
  9809                           
  9810                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
  9811  1449  3055               	movlw	85
  9812  144A  009F               	movwf	31	;volsfr
  9813  144B                     l5454:
  9814                           
  9815                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
  9816  144B  30AA               	movlw	170
  9817  144C  009F               	movwf	31	;volsfr
  9818  144D                     l5456:
  9819                           
  9820                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
  9821  144D  149E               	bsf	30,1	;volsfr
  9822  144E                     l767:	
  9823                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
  9824                           
  9825                           
  9826                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
  9827  144E  189E               	btfsc	30,1	;volsfr
  9828  144F  2C51               	goto	u5111
  9829  1450  2C52               	goto	u5110
  9830  1451                     u5111:
  9831  1451  2C4E               	goto	l767
  9832  1452                     u5110:
  9833  1452                     l769:
  9834                           
  9835                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
  9836  1452  111E               	bcf	30,2	;volsfr
  9837  1453                     l5458:
  9838                           
  9839                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
  9840  1453  0022               	movlb	2	; select bank2
  9841  1454  0C23               	rrf	DATAEE_WriteByte@GIEBitValue^(0+256),w
  9842  1455  1C03               	skipc
  9843  1456  138B               	bcf	11,7	;volatile
  9844  1457  1803               	skipnc
  9845  1458  178B               	bsf	11,7	;volatile
  9846  1459                     l770:
  9847  1459  0008               	return
  9848  145A                     __end_of_DATAEE_WriteByte:
  9849                           
  9850                           	psect	text8
  9851  132B                     __ptext8:	
  9852 ;; *************** function _SYSTEM_Initialize *****************
  9853 ;; Defined at:
  9854 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9855 ;; Parameters:    Size  Location     Type
  9856 ;;		None
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;		None
  9859 ;; Return value:  Size  Location     Type
  9860 ;;                  1    wreg      void 
  9861 ;; Registers used:
  9862 ;;		wreg, status,2, status,0, pclath, cstack
  9863 ;; Tracked objects:
  9864 ;;		On entry : 0/0
  9865 ;;		On exit  : 0/0
  9866 ;;		Unchanged: 0/0
  9867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9872 ;;Total ram usage:        0 bytes
  9873 ;; Hardware stack levels used: 1
  9874 ;; Hardware stack levels required when called: 15
  9875 ;; This function calls:
  9876 ;;		_ADCC_Initialize
  9877 ;;		_I2C1_Initialize
  9878 ;;		_OSCILLATOR_Initialize
  9879 ;;		_PIN_MANAGER_Initialize
  9880 ;;		_PMD_Initialize
  9881 ;;		_TMR1_Initialize
  9882 ;; This function is called by:
  9883 ;;		_main
  9884 ;; This function uses a non-reentrant model
  9885 ;;
  9886                           
  9887                           
  9888                           ;psect for function _SYSTEM_Initialize
  9889  132B                     _SYSTEM_Initialize:
  9890  132B                     l5578:	
  9891                           ;incstack = 0
  9892                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9893                           
  9894                           
  9895                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  9896  132B  3192  22A4  3193   	fcall	_PMD_Initialize
  9897  132E                     l5580:
  9898                           
  9899                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  9900  132E  3192  22B5  3193   	fcall	_I2C1_Initialize
  9901  1331                     l5582:
  9902                           
  9903                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  9904  1331  3188  2002  3193   	fcall	_PIN_MANAGER_Initialize
  9905  1334                     l5584:
  9906                           
  9907                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  9908  1334  3192  22AC  3193   	fcall	_OSCILLATOR_Initialize
  9909  1337                     l5586:
  9910                           
  9911                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  9912  1337  3193  2352  3193   	fcall	_ADCC_Initialize
  9913  133A                     l5588:
  9914                           
  9915                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  9916  133A  3194  2415  3193   	fcall	_TMR1_Initialize
  9917  133D                     l476:
  9918  133D  0008               	return
  9919  133E                     __end_of_SYSTEM_Initialize:
  9920                           
  9921                           	psect	text9
  9922  1415                     __ptext9:	
  9923 ;; *************** function _TMR1_Initialize *****************
  9924 ;; Defined at:
  9925 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;		None
  9928 ;; Auto vars:     Size  Location     Type
  9929 ;;		None
  9930 ;; Return value:  Size  Location     Type
  9931 ;;                  1    wreg      void 
  9932 ;; Registers used:
  9933 ;;		wreg, status,2, status,0, pclath, cstack
  9934 ;; Tracked objects:
  9935 ;;		On entry : 0/0
  9936 ;;		On exit  : 0/0
  9937 ;;		Unchanged: 0/0
  9938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9943 ;;Total ram usage:        0 bytes
  9944 ;; Hardware stack levels used: 1
  9945 ;; Hardware stack levels required when called: 14
  9946 ;; This function calls:
  9947 ;;		_TMR1_SetInterruptHandler
  9948 ;; This function is called by:
  9949 ;;		_SYSTEM_Initialize
  9950 ;; This function uses a non-reentrant model
  9951 ;;
  9952                           
  9953                           
  9954                           ;psect for function _TMR1_Initialize
  9955  1415                     _TMR1_Initialize:
  9956  1415                     l5404:	
  9957                           ;incstack = 0
  9958                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9959                           
  9960                           
  9961                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  9962  1415  0024               	movlb	4	; select bank4
  9963  1416  018F               	clrf	15	;volatile
  9964                           
  9965                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  9966  1417  0190               	clrf	16	;volatile
  9967  1418                     l5406:
  9968                           
  9969                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
  9970  1418  3004               	movlw	4
  9971  1419  0091               	movwf	17	;volatile
  9972  141A                     l5408:
  9973                           
  9974                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x86;
  9975  141A  3086               	movlw	134
  9976  141B  008D               	movwf	13	;volatile
  9977  141C                     l5410:
  9978                           
  9979                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xE8;
  9980  141C  30E8               	movlw	232
  9981  141D  008C               	movwf	12	;volatile
  9982  141E                     l5412:
  9983                           
  9984                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
  9985  141E  002E               	movlb	14	; select bank14
  9986  141F  1010               	bcf	16,0	;volatile
  9987  1420                     l5414:
  9988                           
  9989                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  9990  1420  0024               	movlb	4	; select bank4
  9991  1421  080D               	movf	13,w	;volatile
  9992  1422  0022               	movlb	2	; select bank2
  9993  1423  00CE               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
  9994  1424  0024               	movlb	4	; select bank4
  9995  1425  080C               	movf	12,w	;volatile
  9996  1426  0022               	movlb	2	; select bank2
  9997  1427  00CD               	movwf	_timer1ReloadVal^(0+256)	;volatile
  9998  1428                     l5416:
  9999                           
 10000                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 10001  1428  002E               	movlb	14	; select bank14
 10002  1429  141A               	bsf	26,0	;volatile
 10003  142A                     l5418:
 10004                           
 10005                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 10006  142A  30FF               	movlw	low _TMR1_DefaultInterruptHandler
 10007  142B  0022               	movlb	2	; select bank2
 10008  142C  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+256)
 10009  142D  3007               	movlw	high _TMR1_DefaultInterruptHandler
 10010  142E  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+256)+1)
 10011  142F  3192  2289  3194   	fcall	_TMR1_SetInterruptHandler
 10012  1432                     l5420:
 10013                           
 10014                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x01;
 10015  1432  3001               	movlw	1
 10016  1433  0024               	movlb	4	; select bank4
 10017  1434  008E               	movwf	14	;volatile
 10018  1435                     l532:
 10019  1435  0008               	return
 10020  1436                     __end_of_TMR1_Initialize:
 10021                           
 10022                           	psect	text10
 10023  1289                     __ptext10:	
 10024 ;; *************** function _TMR1_SetInterruptHandler *****************
 10025 ;; Defined at:
 10026 ;;		line 185 in file "mcc_generated_files/tmr1.c"
 10027 ;; Parameters:    Size  Location     Type
 10028 ;;  InterruptHan    2    0[BANK2 ] PTR FTN()void 
 10029 ;;		 -> timerInterrupt(1), TMR1_DefaultInterruptHandler(1), 
 10030 ;; Auto vars:     Size  Location     Type
 10031 ;;		None
 10032 ;; Return value:  Size  Location     Type
 10033 ;;                  1    wreg      void 
 10034 ;; Registers used:
 10035 ;;		wreg
 10036 ;; Tracked objects:
 10037 ;;		On entry : 0/0
 10038 ;;		On exit  : 0/0
 10039 ;;		Unchanged: 0/0
 10040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10041 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 10042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10044 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 10045 ;;Total ram usage:        2 bytes
 10046 ;; Hardware stack levels used: 1
 10047 ;; Hardware stack levels required when called: 13
 10048 ;; This function calls:
 10049 ;;		Nothing
 10050 ;; This function is called by:
 10051 ;;		_TMR1_Initialize
 10052 ;;		_main
 10053 ;; This function uses a non-reentrant model
 10054 ;;
 10055                           
 10056                           
 10057                           ;psect for function _TMR1_SetInterruptHandler
 10058  1289                     _TMR1_SetInterruptHandler:
 10059  1289                     l5170:	
 10060                           ;incstack = 0
 10061                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 10062                           
 10063                           
 10064                           ;mcc_generated_files/tmr1.c: 186:     TMR1_InterruptHandler = InterruptHandler;
 10065  1289  0022               	movlb	2	; select bank2
 10066  128A  0821               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+256),w
 10067  128B  00CC               	movwf	(_TMR1_InterruptHandler+1)^(0+256)
 10068  128C  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+256),w
 10069  128D  00CB               	movwf	_TMR1_InterruptHandler^(0+256)
 10070  128E                     l565:
 10071  128E  0008               	return
 10072  128F                     __end_of_TMR1_SetInterruptHandler:
 10073                           
 10074                           	psect	text11
 10075  12A4                     __ptext11:	
 10076 ;; *************** function _PMD_Initialize *****************
 10077 ;; Defined at:
 10078 ;;		line 74 in file "mcc_generated_files/mcc.c"
 10079 ;; Parameters:    Size  Location     Type
 10080 ;;		None
 10081 ;; Auto vars:     Size  Location     Type
 10082 ;;		None
 10083 ;; Return value:  Size  Location     Type
 10084 ;;                  1    wreg      void 
 10085 ;; Registers used:
 10086 ;;		status,2
 10087 ;; Tracked objects:
 10088 ;;		On entry : 0/0
 10089 ;;		On exit  : 0/0
 10090 ;;		Unchanged: 0/0
 10091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10096 ;;Total ram usage:        0 bytes
 10097 ;; Hardware stack levels used: 1
 10098 ;; Hardware stack levels required when called: 13
 10099 ;; This function calls:
 10100 ;;		Nothing
 10101 ;; This function is called by:
 10102 ;;		_SYSTEM_Initialize
 10103 ;; This function uses a non-reentrant model
 10104 ;;
 10105                           
 10106                           
 10107                           ;psect for function _PMD_Initialize
 10108  12A4                     _PMD_Initialize:
 10109  12A4                     l5380:	
 10110                           ;incstack = 0
 10111                           ; Regs used in _PMD_Initialize: [status,2]
 10112                           
 10113                           
 10114                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
 10115  12A4  002F               	movlb	15	; select bank15
 10116  12A5  0196               	clrf	22	;volatile
 10117                           
 10118                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
 10119  12A6  0197               	clrf	23	;volatile
 10120                           
 10121                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
 10122  12A7  0198               	clrf	24	;volatile
 10123                           
 10124                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
 10125  12A8  0199               	clrf	25	;volatile
 10126                           
 10127                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
 10128  12A9  019A               	clrf	26	;volatile
 10129                           
 10130                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
 10131  12AA  019B               	clrf	27	;volatile
 10132  12AB                     l482:
 10133  12AB  0008               	return
 10134  12AC                     __end_of_PMD_Initialize:
 10135                           
 10136                           	psect	text12
 10137  0802                     __ptext12:	
 10138 ;; *************** function _PIN_MANAGER_Initialize *****************
 10139 ;; Defined at:
 10140 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 10141 ;; Parameters:    Size  Location     Type
 10142 ;;		None
 10143 ;; Auto vars:     Size  Location     Type
 10144 ;;		None
 10145 ;; Return value:  Size  Location     Type
 10146 ;;                  1    wreg      void 
 10147 ;; Registers used:
 10148 ;;		wreg, status,2
 10149 ;; Tracked objects:
 10150 ;;		On entry : 0/0
 10151 ;;		On exit  : 0/0
 10152 ;;		Unchanged: 0/0
 10153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10158 ;;Total ram usage:        0 bytes
 10159 ;; Hardware stack levels used: 1
 10160 ;; Hardware stack levels required when called: 13
 10161 ;; This function calls:
 10162 ;;		Nothing
 10163 ;; This function is called by:
 10164 ;;		_SYSTEM_Initialize
 10165 ;; This function uses a non-reentrant model
 10166 ;;
 10167                           
 10168                           
 10169                           ;psect for function _PIN_MANAGER_Initialize
 10170  0802                     _PIN_MANAGER_Initialize:
 10171  0802                     l5330:	
 10172                           ;incstack = 0
 10173                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10174                           
 10175                           
 10176                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 10177  0802  0020               	movlb	0	; select bank0
 10178  0803  019A               	clrf	26	;volatile
 10179                           
 10180                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 10181  0804  0199               	clrf	25	;volatile
 10182                           
 10183                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 10184  0805  0196               	clrf	22	;volatile
 10185                           
 10186                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 10187  0806  0197               	clrf	23	;volatile
 10188                           
 10189                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 10190  0807  0198               	clrf	24	;volatile
 10191  0808                     l5332:
 10192                           
 10193                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 10194  0808  3007               	movlw	7
 10195  0809  0095               	movwf	21	;volatile
 10196  080A                     l5334:
 10197                           
 10198                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 10199  080A  300F               	movlw	15
 10200  080B  0091               	movwf	17	;volatile
 10201  080C                     l5336:
 10202                           
 10203                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 10204  080C  30FF               	movlw	255
 10205  080D  0092               	movwf	18	;volatile
 10206  080E                     l5338:
 10207                           
 10208                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 10209  080E  30FF               	movlw	255
 10210  080F  0093               	movwf	19	;volatile
 10211  0810                     l5340:
 10212                           
 10213                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 10214  0810  30FF               	movlw	255
 10215  0811  0094               	movwf	20	;volatile
 10216  0812                     l5342:
 10217                           
 10218                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 10219  0812  30FF               	movlw	255
 10220  0813  003E               	movlb	30	; select bank30
 10221  0814  00D9               	movwf	89	;volatile
 10222  0815                     l5344:
 10223                           
 10224                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 10225  0815  30C7               	movlw	199
 10226  0816  00CE               	movwf	78	;volatile
 10227  0817                     l5346:
 10228                           
 10229                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 10230  0817  30EF               	movlw	239
 10231  0818  00C3               	movwf	67	;volatile
 10232  0819                     l5348:
 10233                           
 10234                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 10235  0819  3007               	movlw	7
 10236  081A  00E4               	movwf	100	;volatile
 10237  081B                     l5350:
 10238                           
 10239                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x0F;
 10240  081B  300F               	movlw	15
 10241  081C  00B8               	movwf	56	;volatile
 10242                           
 10243                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 10244  081D  01DA               	clrf	90	;volatile
 10245                           
 10246                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 10247  081E  01E5               	clrf	101	;volatile
 10248                           
 10249                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 10250  081F  01C4               	clrf	68	;volatile
 10251                           
 10252                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 10253  0820  01B9               	clrf	57	;volatile
 10254                           
 10255                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 10256  0821  01CF               	clrf	79	;volatile
 10257                           
 10258                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 10259  0822  01E6               	clrf	102	;volatile
 10260                           
 10261                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 10262  0823  01BA               	clrf	58	;volatile
 10263                           
 10264                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 10265  0824  01C5               	clrf	69	;volatile
 10266                           
 10267                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 10268  0825  01D0               	clrf	80	;volatile
 10269                           
 10270                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 10271  0826  01DB               	clrf	91	;volatile
 10272  0827                     l5352:
 10273                           
 10274                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 10275  0827  30FF               	movlw	255
 10276  0828  00BB               	movwf	59	;volatile
 10277  0829                     l5354:
 10278                           
 10279                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 10280  0829  30FF               	movlw	255
 10281  082A  00C6               	movwf	70	;volatile
 10282  082B                     l5356:
 10283                           
 10284                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 10285  082B  30FF               	movlw	255
 10286  082C  00D1               	movwf	81	;volatile
 10287  082D                     l5358:
 10288                           
 10289                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 10290  082D  30FF               	movlw	255
 10291  082E  00DC               	movwf	92	;volatile
 10292  082F                     l5360:
 10293                           
 10294                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 10295  082F  3007               	movlw	7
 10296  0830  00E7               	movwf	103	;volatile
 10297  0831                     l5362:
 10298                           
 10299                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 10300  0831  30FF               	movlw	255
 10301  0832  00BC               	movwf	60	;volatile
 10302  0833                     l5364:
 10303                           
 10304                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 10305  0833  30FF               	movlw	255
 10306  0834  00C7               	movwf	71	;volatile
 10307  0835                     l5366:
 10308                           
 10309                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 10310  0835  30FF               	movlw	255
 10311  0836  00D2               	movwf	82	;volatile
 10312  0837                     l5368:
 10313                           
 10314                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 10315  0837  30FF               	movlw	255
 10316  0838  00DD               	movwf	93	;volatile
 10317  0839                     l5370:
 10318                           
 10319                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 10320  0839  3007               	movlw	7
 10321  083A  00E8               	movwf	104	;volatile
 10322  083B                     l5372:
 10323                           
 10324                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 10325  083B  3013               	movlw	19
 10326  083C  003D               	movlb	29	; select bank29
 10327  083D  00C5               	movwf	69	;volatile
 10328  083E                     l5374:
 10329                           
 10330                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x14;
 10331  083E  3014               	movlw	20
 10332  083F  003E               	movlb	30	; select bank30
 10333  0840  00A3               	movwf	35	;volatile
 10334  0841                     l5376:
 10335                           
 10336                           ;mcc_generated_files/pin_manager.c: 129:     RC4PPS = 0x15;
 10337  0841  3015               	movlw	21
 10338  0842  00A4               	movwf	36	;volatile
 10339  0843                     l5378:
 10340                           
 10341                           ;mcc_generated_files/pin_manager.c: 130:     SSP1DATPPS = 0x14;
 10342  0843  3014               	movlw	20
 10343  0844  003D               	movlb	29	; select bank29
 10344  0845  00C6               	movwf	70	;volatile
 10345  0846                     l436:
 10346  0846  0008               	return
 10347  0847                     __end_of_PIN_MANAGER_Initialize:
 10348                           
 10349                           	psect	text13
 10350  12AC                     __ptext13:	
 10351 ;; *************** function _OSCILLATOR_Initialize *****************
 10352 ;; Defined at:
 10353 ;;		line 60 in file "mcc_generated_files/mcc.c"
 10354 ;; Parameters:    Size  Location     Type
 10355 ;;		None
 10356 ;; Auto vars:     Size  Location     Type
 10357 ;;		None
 10358 ;; Return value:  Size  Location     Type
 10359 ;;                  1    wreg      void 
 10360 ;; Registers used:
 10361 ;;		wreg, status,2
 10362 ;; Tracked objects:
 10363 ;;		On entry : 0/0
 10364 ;;		On exit  : 0/0
 10365 ;;		Unchanged: 0/0
 10366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10371 ;;Total ram usage:        0 bytes
 10372 ;; Hardware stack levels used: 1
 10373 ;; Hardware stack levels required when called: 13
 10374 ;; This function calls:
 10375 ;;		Nothing
 10376 ;; This function is called by:
 10377 ;;		_SYSTEM_Initialize
 10378 ;; This function uses a non-reentrant model
 10379 ;;
 10380                           
 10381                           
 10382                           ;psect for function _OSCILLATOR_Initialize
 10383  12AC                     _OSCILLATOR_Initialize:
 10384  12AC                     l5390:	
 10385                           ;incstack = 0
 10386                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10387                           
 10388                           
 10389                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
 10390  12AC  3062               	movlw	98
 10391  12AD  0031               	movlb	17	; select bank17
 10392  12AE  008D               	movwf	13	;volatile
 10393  12AF                     l5392:
 10394                           
 10395                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
 10396  12AF  018F               	clrf	15	;volatile
 10397  12B0                     l5394:
 10398                           
 10399                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
 10400  12B0  0191               	clrf	17	;volatile
 10401                           
 10402                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x02;
 10403  12B1  3002               	movlw	2
 10404  12B2  0093               	movwf	19	;volatile
 10405  12B3                     l5396:
 10406                           
 10407                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
 10408  12B3  0192               	clrf	18	;volatile
 10409  12B4                     l479:
 10410  12B4  0008               	return
 10411  12B5                     __end_of_OSCILLATOR_Initialize:
 10412                           
 10413                           	psect	text14
 10414  12B5                     __ptext14:	
 10415 ;; *************** function _I2C1_Initialize *****************
 10416 ;; Defined at:
 10417 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 10418 ;; Parameters:    Size  Location     Type
 10419 ;;		None
 10420 ;; Auto vars:     Size  Location     Type
 10421 ;;		None
 10422 ;; Return value:  Size  Location     Type
 10423 ;;                  1    wreg      void 
 10424 ;; Registers used:
 10425 ;;		wreg, status,2
 10426 ;; Tracked objects:
 10427 ;;		On entry : 0/0
 10428 ;;		On exit  : 0/0
 10429 ;;		Unchanged: 0/0
 10430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10435 ;;Total ram usage:        0 bytes
 10436 ;; Hardware stack levels used: 1
 10437 ;; Hardware stack levels required when called: 13
 10438 ;; This function calls:
 10439 ;;		Nothing
 10440 ;; This function is called by:
 10441 ;;		_SYSTEM_Initialize
 10442 ;; This function uses a non-reentrant model
 10443 ;;
 10444                           
 10445                           
 10446                           ;psect for function _I2C1_Initialize
 10447  12B5                     _I2C1_Initialize:
 10448  12B5                     l5382:	
 10449                           ;incstack = 0
 10450                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 10451                           
 10452                           
 10453                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 10454  12B5  3080               	movlw	128
 10455  12B6  0023               	movlb	3	; select bank3
 10456  12B7  008F               	movwf	15	;volatile
 10457                           
 10458                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 10459  12B8  3008               	movlw	8
 10460  12B9  0090               	movwf	16	;volatile
 10461  12BA                     l5384:
 10462                           
 10463                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 10464  12BA  0191               	clrf	17	;volatile
 10465  12BB                     l5386:
 10466                           
 10467                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x03;
 10468  12BB  3003               	movlw	3
 10469  12BC  008D               	movwf	13	;volatile
 10470  12BD                     l5388:
 10471                           
 10472                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 10473  12BD  1290               	bcf	16,5	;volatile
 10474  12BE                     l878:
 10475  12BE  0008               	return
 10476  12BF                     __end_of_I2C1_Initialize:
 10477                           
 10478                           	psect	text15
 10479  1352                     __ptext15:	
 10480 ;; *************** function _ADCC_Initialize *****************
 10481 ;; Defined at:
 10482 ;;		line 63 in file "mcc_generated_files/adcc.c"
 10483 ;; Parameters:    Size  Location     Type
 10484 ;;		None
 10485 ;; Auto vars:     Size  Location     Type
 10486 ;;		None
 10487 ;; Return value:  Size  Location     Type
 10488 ;;                  1    wreg      void 
 10489 ;; Registers used:
 10490 ;;		wreg, status,2
 10491 ;; Tracked objects:
 10492 ;;		On entry : 0/0
 10493 ;;		On exit  : 0/0
 10494 ;;		Unchanged: 0/0
 10495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10500 ;;Total ram usage:        0 bytes
 10501 ;; Hardware stack levels used: 1
 10502 ;; Hardware stack levels required when called: 13
 10503 ;; This function calls:
 10504 ;;		Nothing
 10505 ;; This function is called by:
 10506 ;;		_SYSTEM_Initialize
 10507 ;; This function uses a non-reentrant model
 10508 ;;
 10509                           
 10510                           
 10511                           ;psect for function _ADCC_Initialize
 10512  1352                     _ADCC_Initialize:
 10513  1352                     l5398:	
 10514                           ;incstack = 0
 10515                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10516                           
 10517                           
 10518                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 10519  1352  0022               	movlb	2	; select bank2
 10520  1353  018E               	clrf	14	;volatile
 10521                           
 10522                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 10523  1354  018F               	clrf	15	;volatile
 10524                           
 10525                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 10526  1355  0190               	clrf	16	;volatile
 10527                           
 10528                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 10529  1356  0191               	clrf	17	;volatile
 10530                           
 10531                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 10532  1357  0192               	clrf	18	;volatile
 10533                           
 10534                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 10535  1358  0193               	clrf	19	;volatile
 10536                           
 10537                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 10538  1359  018D               	clrf	13	;volatile
 10539                           
 10540                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 10541  135A  0021               	movlb	1	; select bank1
 10542  135B  019E               	clrf	30	;volatile
 10543                           
 10544                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 10545  135C  019B               	clrf	27	;volatile
 10546                           
 10547                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
 10548  135D  019C               	clrf	28	;volatile
 10549                           
 10550                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
 10551  135E  0194               	clrf	20	;volatile
 10552                           
 10553                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
 10554  135F  0195               	clrf	21	;volatile
 10555                           
 10556                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
 10557  1360  0196               	clrf	22	;volatile
 10558                           
 10559                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
 10560  1361  0197               	clrf	23	;volatile
 10561                           
 10562                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
 10563  1362  019A               	clrf	26	;volatile
 10564                           
 10565                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
 10566  1363  0199               	clrf	25	;volatile
 10567                           
 10568                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x00;
 10569  1364  0198               	clrf	24	;volatile
 10570  1365                     l5400:
 10571                           
 10572                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
 10573  1365  3084               	movlw	132
 10574  1366  0093               	movwf	19	;volatile
 10575  1367                     l5402:
 10576                           
 10577                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
 10578  1367  019D               	clrf	29	;volatile
 10579  1368                     l643:
 10580  1368  0008               	return
 10581  1369                     __end_of_ADCC_Initialize:
 10582                           
 10583                           	psect	text16
 10584  12CC                     __ptext16:	
 10585 ;; *************** function _OpenI2C *****************
 10586 ;; Defined at:
 10587 ;;		line 26 in file "I2C/i2c.c"
 10588 ;; Parameters:    Size  Location     Type
 10589 ;;		None
 10590 ;; Auto vars:     Size  Location     Type
 10591 ;;		None
 10592 ;; Return value:  Size  Location     Type
 10593 ;;                  1    wreg      void 
 10594 ;; Registers used:
 10595 ;;		wreg, status,2
 10596 ;; Tracked objects:
 10597 ;;		On entry : 0/0
 10598 ;;		On exit  : 0/0
 10599 ;;		Unchanged: 0/0
 10600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10605 ;;Total ram usage:        0 bytes
 10606 ;; Hardware stack levels used: 1
 10607 ;; Hardware stack levels required when called: 13
 10608 ;; This function calls:
 10609 ;;		Nothing
 10610 ;; This function is called by:
 10611 ;;		_main
 10612 ;; This function uses a non-reentrant model
 10613 ;;
 10614                           
 10615                           
 10616                           ;psect for function _OpenI2C
 10617  12CC                     _OpenI2C:
 10618  12CC                     l5494:	
 10619                           ;incstack = 0
 10620                           ; Regs used in _OpenI2C: [wreg+status,2]
 10621                           
 10622                           
 10623                           ;I2C/i2c.c: 28:   SSP1STAT = 0x80;
 10624  12CC  3080               	movlw	128
 10625  12CD  0023               	movlb	3	; select bank3
 10626  12CE  008F               	movwf	15	;volatile
 10627                           
 10628                           ;I2C/i2c.c: 29:   SSP1CON1 = 0x08;
 10629  12CF  3008               	movlw	8
 10630  12D0  0090               	movwf	16	;volatile
 10631  12D1                     l5496:
 10632                           
 10633                           ;I2C/i2c.c: 30:   SSP1CON2 = 0x00;
 10634  12D1  0191               	clrf	17	;volatile
 10635  12D2                     l5498:
 10636                           
 10637                           ;I2C/i2c.c: 31:   SSP1ADD = 0x03;
 10638  12D2  3003               	movlw	3
 10639  12D3  008D               	movwf	13	;volatile
 10640  12D4                     l5500:
 10641                           
 10642                           ;I2C/i2c.c: 32:   SSP1CON1bits.SSPEN = 1;
 10643  12D4  1690               	bsf	16,5	;volatile
 10644  12D5                     l5502:
 10645                           
 10646                           ;I2C/i2c.c: 34:   TRISCbits.TRISC3 = 1;
 10647  12D5  0020               	movlb	0	; select bank0
 10648  12D6  1593               	bsf	19,3	;volatile
 10649  12D7                     l5504:
 10650                           
 10651                           ;I2C/i2c.c: 35:   TRISCbits.TRISC4 = 1;
 10652  12D7  1613               	bsf	19,4	;volatile
 10653  12D8                     l23:
 10654  12D8  0008               	return
 10655  12D9                     __end_of_OpenI2C:
 10656                           
 10657                           	psect	text17
 10658  08BA                     __ptext17:	
 10659 ;; *************** function _LCDinit *****************
 10660 ;; Defined at:
 10661 ;;		line 79 in file "LCD/lcd.c"
 10662 ;; Parameters:    Size  Location     Type
 10663 ;;		None
 10664 ;; Auto vars:     Size  Location     Type
 10665 ;;		None
 10666 ;; Return value:  Size  Location     Type
 10667 ;;                  1    wreg      void 
 10668 ;; Registers used:
 10669 ;;		wreg, status,2, status,0, pclath, cstack
 10670 ;; Tracked objects:
 10671 ;;		On entry : 0/0
 10672 ;;		On exit  : 0/0
 10673 ;;		Unchanged: 0/0
 10674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10677 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 10678 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 10679 ;;Total ram usage:        1 bytes
 10680 ;; Hardware stack levels used: 1
 10681 ;; Hardware stack levels required when called: 15
 10682 ;; This function calls:
 10683 ;;		_LCDsend
 10684 ;;		_LCDsend2x4
 10685 ;; This function is called by:
 10686 ;;		_main
 10687 ;; This function uses a non-reentrant model
 10688 ;;
 10689                           
 10690                           
 10691                           ;psect for function _LCDinit
 10692  08BA                     _LCDinit:
 10693  08BA                     l5506:	
 10694                           ;incstack = 0
 10695                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 10696                           
 10697                           
 10698                           ;LCD/lcd.c: 81:   _delay((unsigned long)((50)*(4000000/4000.0)));
 10699  08BA  3041               	movlw	65
 10700  08BB  0022               	movlb	2	; select bank2
 10701  08BC  00A8               	movwf	??_LCDinit^(0+256)
 10702  08BD  30EE               	movlw	238
 10703  08BE                     u5807:
 10704  08BE  0B89               	decfsz	9,f
 10705  08BF  28BE               	goto	u5807
 10706  08C0  0BA8               	decfsz	??_LCDinit^(0+256),f
 10707  08C1  28BE               	goto	u5807
 10708  08C2  0000               	nop
 10709  08C3                     l5508:
 10710                           
 10711                           ;LCD/lcd.c: 82:   LCDsend(0x30);
 10712  08C3  3030               	movlw	48
 10713  08C4  3196  2625  3188   	fcall	_LCDsend
 10714  08C7                     l5510:
 10715                           
 10716                           ;LCD/lcd.c: 83:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 10717  08C7  3034               	movlw	52
 10718  08C8  3196  2625  3188   	fcall	_LCDsend
 10719  08CB  30A6               	movlw	166
 10720  08CC                     u5817:
 10721  08CC  0B89               	decfsz	9,f
 10722  08CD  28CC               	goto	u5817
 10723  08CE  3200               	nop2
 10724  08CF                     l5512:
 10725  08CF  3030               	movlw	48
 10726  08D0  3196  2625  3188   	fcall	_LCDsend
 10727  08D3                     l5514:
 10728                           
 10729                           ;LCD/lcd.c: 84:   _delay((unsigned long)((5)*(4000000/4000.0)));
 10730  08D3  3007               	movlw	7
 10731  08D4  0022               	movlb	2	; select bank2
 10732  08D5  00A8               	movwf	??_LCDinit^(0+256)
 10733  08D6  307D               	movlw	125
 10734  08D7                     u5827:
 10735  08D7  0B89               	decfsz	9,f
 10736  08D8  28D7               	goto	u5827
 10737  08D9  0BA8               	decfsz	??_LCDinit^(0+256),f
 10738  08DA  28D7               	goto	u5827
 10739                           
 10740                           ;LCD/lcd.c: 85:   LCDsend(0x30);
 10741  08DB  3030               	movlw	48
 10742  08DC  3196  2625  3188   	fcall	_LCDsend
 10743                           
 10744                           ;LCD/lcd.c: 86:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 10745  08DF  3034               	movlw	52
 10746  08E0  3196  2625  3188   	fcall	_LCDsend
 10747  08E3                     l5516:
 10748  08E3  30A6               	movlw	166
 10749  08E4                     u5837:
 10750  08E4  0B89               	decfsz	9,f
 10751  08E5  28E4               	goto	u5837
 10752  08E6  3200               	nop2
 10753  08E7                     l5518:
 10754  08E7  3030               	movlw	48
 10755  08E8  3196  2625  3188   	fcall	_LCDsend
 10756                           
 10757                           ;LCD/lcd.c: 87:   _delay((unsigned long)((100)*(4000000/4000000.0)));
 10758  08EB  3021               	movlw	33
 10759  08EC                     u5847:
 10760  08EC  0B89               	decfsz	9,f
 10761  08ED  28EC               	goto	u5847
 10762  08EE  0000               	nop
 10763  08EF                     l5520:
 10764                           
 10765                           ;LCD/lcd.c: 88:   LCDsend(0x30);
 10766  08EF  3030               	movlw	48
 10767  08F0  3196  2625  3188   	fcall	_LCDsend
 10768  08F3                     l5522:
 10769                           
 10770                           ;LCD/lcd.c: 89:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 10771  08F3  3034               	movlw	52
 10772  08F4  3196  2625  3188   	fcall	_LCDsend
 10773  08F7  30A6               	movlw	166
 10774  08F8                     u5857:
 10775  08F8  0B89               	decfsz	9,f
 10776  08F9  28F8               	goto	u5857
 10777  08FA  3200               	nop2
 10778  08FB                     l5524:
 10779  08FB  3030               	movlw	48
 10780  08FC  3196  2625  3188   	fcall	_LCDsend
 10781  08FF                     l5526:
 10782                           
 10783                           ;LCD/lcd.c: 90:   _delay((unsigned long)((100)*(4000000/4000000.0)));
 10784  08FF  3021               	movlw	33
 10785  0900                     u5867:
 10786  0900  0B89               	decfsz	9,f
 10787  0901  2900               	goto	u5867
 10788  0902  0000               	nop
 10789                           
 10790                           ;LCD/lcd.c: 91:   LCDsend(0x20);
 10791  0903  3020               	movlw	32
 10792  0904  3196  2625  3188   	fcall	_LCDsend
 10793                           
 10794                           ;LCD/lcd.c: 92:   LCDsend(0x24); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x20);
 10795  0907  3024               	movlw	36
 10796  0908  3196  2625  3188   	fcall	_LCDsend
 10797  090B                     l5528:
 10798  090B  30A6               	movlw	166
 10799  090C                     u5877:
 10800  090C  0B89               	decfsz	9,f
 10801  090D  290C               	goto	u5877
 10802  090E  3200               	nop2
 10803  090F                     l5530:
 10804  090F  3020               	movlw	32
 10805  0910  3196  2625  3188   	fcall	_LCDsend
 10806                           
 10807                           ;LCD/lcd.c: 93:   _delay((unsigned long)((5)*(4000000/4000.0)));
 10808  0913  3007               	movlw	7
 10809  0914  0022               	movlb	2	; select bank2
 10810  0915  00A8               	movwf	??_LCDinit^(0+256)
 10811  0916  307D               	movlw	125
 10812  0917                     u5887:
 10813  0917  0B89               	decfsz	9,f
 10814  0918  2917               	goto	u5887
 10815  0919  0BA8               	decfsz	??_LCDinit^(0+256),f
 10816  091A  2917               	goto	u5887
 10817  091B                     l5532:
 10818                           
 10819                           ;LCD/lcd.c: 95:   LCDsend2x4(0x28, 0);
 10820  091B  0022               	movlb	2	; select bank2
 10821  091C  01A2               	clrf	LCDsend2x4@mode^(0+256)
 10822  091D  3028               	movlw	40
 10823  091E  318B  23F6  3188   	fcall	_LCDsend2x4
 10824  0921                     l5534:
 10825                           
 10826                           ;LCD/lcd.c: 96:   LCDsend2x4(0x06, 0);
 10827  0921  0022               	movlb	2	; select bank2
 10828  0922  01A2               	clrf	LCDsend2x4@mode^(0+256)
 10829  0923  3006               	movlw	6
 10830  0924  318B  23F6  3188   	fcall	_LCDsend2x4
 10831  0927                     l5536:
 10832                           
 10833                           ;LCD/lcd.c: 97:   LCDsend2x4(0x0f, 0);
 10834  0927  0022               	movlb	2	; select bank2
 10835  0928  01A2               	clrf	LCDsend2x4@mode^(0+256)
 10836  0929  300F               	movlw	15
 10837  092A  318B  23F6  3188   	fcall	_LCDsend2x4
 10838  092D                     l5538:
 10839                           
 10840                           ;LCD/lcd.c: 98:   LCDsend2x4(0x01, 0);
 10841  092D  0022               	movlb	2	; select bank2
 10842  092E  01A2               	clrf	LCDsend2x4@mode^(0+256)
 10843  092F  3001               	movlw	1
 10844  0930  318B  23F6  3188   	fcall	_LCDsend2x4
 10845                           
 10846                           ;LCD/lcd.c: 99:   _delay((unsigned long)((2)*(4000000/4000.0)));
 10847  0933  3003               	movlw	3
 10848  0934  0022               	movlb	2	; select bank2
 10849  0935  00A8               	movwf	??_LCDinit^(0+256)
 10850  0936  3097               	movlw	151
 10851  0937                     u5897:
 10852  0937  0B89               	decfsz	9,f
 10853  0938  2937               	goto	u5897
 10854  0939  0BA8               	decfsz	??_LCDinit^(0+256),f
 10855  093A  2937               	goto	u5897
 10856  093B  3200               	nop2
 10857  093C                     l232:
 10858  093C  0008               	return
 10859  093D                     __end_of_LCDinit:
 10860                           
 10861                           	psect	text18
 10862  0BF6                     __ptext18:	
 10863 ;; *************** function _LCDsend2x4 *****************
 10864 ;; Defined at:
 10865 ;;		line 56 in file "LCD/lcd.c"
 10866 ;; Parameters:    Size  Location     Type
 10867 ;;  c               1    wreg     unsigned char 
 10868 ;;  mode            1    2[BANK2 ] unsigned char 
 10869 ;; Auto vars:     Size  Location     Type
 10870 ;;  c               1    5[BANK2 ] unsigned char 
 10871 ;;  lc              1    7[BANK2 ] unsigned char 
 10872 ;;  hc              1    6[BANK2 ] unsigned char 
 10873 ;; Return value:  Size  Location     Type
 10874 ;;                  1    wreg      void 
 10875 ;; Registers used:
 10876 ;;		wreg, status,2, status,0, pclath, cstack
 10877 ;; Tracked objects:
 10878 ;;		On entry : 0/0
 10879 ;;		On exit  : 0/0
 10880 ;;		Unchanged: 0/0
 10881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10882 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 10883 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
 10884 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 10885 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
 10886 ;;Total ram usage:        6 bytes
 10887 ;; Hardware stack levels used: 1
 10888 ;; Hardware stack levels required when called: 14
 10889 ;; This function calls:
 10890 ;;		_WriteI2C
 10891 ;; This function is called by:
 10892 ;;		_LCDinit
 10893 ;; This function uses a non-reentrant model
 10894 ;;
 10895                           
 10896                           
 10897                           ;psect for function _LCDsend2x4
 10898  0BF6                     _LCDsend2x4:
 10899                           
 10900                           ;incstack = 0
 10901                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 10902                           ;LCDsend2x4@c stored from wreg
 10903  0BF6  0022               	movlb	2	; select bank2
 10904  0BF7  00A5               	movwf	LCDsend2x4@c^(0+256)
 10905  0BF8                     l5284:
 10906                           
 10907                           ;LCD/lcd.c: 56: void LCDsend2x4(unsigned char c, unsigned char mode);LCD/lcd.c: 57: {;LC
      +                          D/lcd.c: 58:   unsigned char hc;;LCD/lcd.c: 59:   unsigned char lc;;LCD/lcd.c: 61:   hc 
      +                          = c & 0xf0;
 10908  0BF8  0825               	movf	LCDsend2x4@c^(0+256),w
 10909  0BF9  39F0               	andlw	240
 10910  0BFA  00A3               	movwf	??_LCDsend2x4^(0+256)
 10911  0BFB  0823               	movf	??_LCDsend2x4^(0+256),w
 10912  0BFC  00A6               	movwf	LCDsend2x4@hc^(0+256)
 10913  0BFD                     l5286:
 10914                           
 10915                           ;LCD/lcd.c: 62:   lc = (c << 4) & 0xf0;
 10916  0BFD  0825               	movf	LCDsend2x4@c^(0+256),w
 10917  0BFE  00A3               	movwf	??_LCDsend2x4^(0+256)
 10918  0BFF  3003               	movlw	3
 10919  0C00                     u4965:
 10920  0C00  35A3               	lslf	??_LCDsend2x4^(0+256),f
 10921  0C01  3EFF               	addlw	-1
 10922  0C02  1D03               	skipz
 10923  0C03  2C00               	goto	u4965
 10924  0C04  3523               	lslf	??_LCDsend2x4^(0+256),w
 10925  0C05  39F0               	andlw	240
 10926  0C06  00A4               	movwf	(??_LCDsend2x4+1)^(0+256)
 10927  0C07  0824               	movf	(??_LCDsend2x4+1)^(0+256),w
 10928  0C08  00A7               	movwf	LCDsend2x4@lc^(0+256)
 10929  0C09                     l5288:	
 10930                           ;LCD/lcd.c: 64:   while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10931                           
 10932  0C09  0023               	movlb	3	; select bank3
 10933  0C0A  0C0F               	rrf	15,w	;volatile
 10934  0C0B  0C89               	rrf	9,f
 10935  0C0C  3901               	andlw	1
 10936  0C0D  0022               	movlb	2	; select bank2
 10937  0C0E  00A3               	movwf	??_LCDsend2x4^(0+256)
 10938  0C0F  0023               	movlb	3	; select bank3
 10939  0C10  0811               	movf	17,w	;volatile
 10940  0C11  391F               	andlw	31
 10941  0C12  0022               	movlb	2	; select bank2
 10942  0C13  0423               	iorwf	??_LCDsend2x4^(0+256),w
 10943  0C14  1D03               	btfss	3,2
 10944  0C15  2C17               	goto	u4971
 10945  0C16  2C18               	goto	u4970
 10946  0C17                     u4971:
 10947  0C17  2C09               	goto	l5288
 10948  0C18                     u4970:
 10949  0C18                     l195:	
 10950                           ;LCD/lcd.c: 65:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10951                           
 10952  0C18  0023               	movlb	3	; select bank3
 10953  0C19  1411               	bsf	17,0	;volatile
 10954  0C1A                     l196:
 10955  0C1A  1811               	btfsc	17,0	;volatile
 10956  0C1B  2C1D               	goto	u4981
 10957  0C1C  2C1E               	goto	u4980
 10958  0C1D                     u4981:
 10959  0C1D  2C1A               	goto	l196
 10960  0C1E                     u4980:
 10961  0C1E                     l5290:
 10962  0C1E  0023               	movlb	3	; select bank3
 10963  0C1F  0C0F               	rrf	15,w	;volatile
 10964  0C20  0C89               	rrf	9,f
 10965  0C21  3901               	andlw	1
 10966  0C22  0022               	movlb	2	; select bank2
 10967  0C23  00A3               	movwf	??_LCDsend2x4^(0+256)
 10968  0C24  0023               	movlb	3	; select bank3
 10969  0C25  0811               	movf	17,w	;volatile
 10970  0C26  391F               	andlw	31
 10971  0C27  0022               	movlb	2	; select bank2
 10972  0C28  0423               	iorwf	??_LCDsend2x4^(0+256),w
 10973  0C29  1D03               	btfss	3,2
 10974  0C2A  2C2C               	goto	u4991
 10975  0C2B  2C2D               	goto	u4990
 10976  0C2C                     u4991:
 10977  0C2C  2C1E               	goto	l5290
 10978  0C2D                     u4990:
 10979  0C2D                     l5292:
 10980                           
 10981                           ;LCD/lcd.c: 66:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10982  0C2D  304E               	movlw	78
 10983  0C2E  3196  26CE  318B   	fcall	_WriteI2C
 10984  0C31                     l5294:
 10985  0C31  0023               	movlb	3	; select bank3
 10986  0C32  0C0F               	rrf	15,w	;volatile
 10987  0C33  0C89               	rrf	9,f
 10988  0C34  3901               	andlw	1
 10989  0C35  0022               	movlb	2	; select bank2
 10990  0C36  00A3               	movwf	??_LCDsend2x4^(0+256)
 10991  0C37  0023               	movlb	3	; select bank3
 10992  0C38  0811               	movf	17,w	;volatile
 10993  0C39  391F               	andlw	31
 10994  0C3A  0022               	movlb	2	; select bank2
 10995  0C3B  0423               	iorwf	??_LCDsend2x4^(0+256),w
 10996  0C3C  1D03               	btfss	3,2
 10997  0C3D  2C3F               	goto	u5001
 10998  0C3E  2C40               	goto	u5000
 10999  0C3F                     u5001:
 11000  0C3F  2C31               	goto	l5294
 11001  0C40                     u5000:
 11002  0C40                     l5296:
 11003                           
 11004                           ;LCD/lcd.c: 67:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 11005  0C40  0826               	movf	LCDsend2x4@hc^(0+256),w
 11006  0C41  0422               	iorwf	LCDsend2x4@mode^(0+256),w
 11007  0C42  3808               	iorlw	8
 11008  0C43  3196  26CE  318B   	fcall	_WriteI2C
 11009  0C46                     l5298:
 11010  0C46  0023               	movlb	3	; select bank3
 11011  0C47  0C0F               	rrf	15,w	;volatile
 11012  0C48  0C89               	rrf	9,f
 11013  0C49  3901               	andlw	1
 11014  0C4A  0022               	movlb	2	; select bank2
 11015  0C4B  00A3               	movwf	??_LCDsend2x4^(0+256)
 11016  0C4C  0023               	movlb	3	; select bank3
 11017  0C4D  0811               	movf	17,w	;volatile
 11018  0C4E  391F               	andlw	31
 11019  0C4F  0022               	movlb	2	; select bank2
 11020  0C50  0423               	iorwf	??_LCDsend2x4^(0+256),w
 11021  0C51  1D03               	btfss	3,2
 11022  0C52  2C54               	goto	u5011
 11023  0C53  2C55               	goto	u5010
 11024  0C54                     u5011:
 11025  0C54  2C46               	goto	l5298
 11026  0C55                     u5010:
 11027  0C55                     l5300:
 11028                           
 11029                           ;LCD/lcd.c: 68:   WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 11030  0C55  0826               	movf	LCDsend2x4@hc^(0+256),w
 11031  0C56  0422               	iorwf	LCDsend2x4@mode^(0+256),w
 11032  0C57  380C               	iorlw	12
 11033  0C58  3196  26CE  318B   	fcall	_WriteI2C
 11034  0C5B                     l5302:
 11035  0C5B  0023               	movlb	3	; select bank3
 11036  0C5C  0C0F               	rrf	15,w	;volatile
 11037  0C5D  0C89               	rrf	9,f
 11038  0C5E  3901               	andlw	1
 11039  0C5F  0022               	movlb	2	; select bank2
 11040  0C60  00A3               	movwf	??_LCDsend2x4^(0+256)
 11041  0C61  0023               	movlb	3	; select bank3
 11042  0C62  0811               	movf	17,w	;volatile
 11043  0C63  391F               	andlw	31
 11044  0C64  0022               	movlb	2	; select bank2
 11045  0C65  0423               	iorwf	??_LCDsend2x4^(0+256),w
 11046  0C66  1D03               	btfss	3,2
 11047  0C67  2C69               	goto	u5021
 11048  0C68  2C6A               	goto	u5020
 11049  0C69                     u5021:
 11050  0C69  2C5B               	goto	l5302
 11051  0C6A                     u5020:
 11052  0C6A                     l211:
 11053                           
 11054                           ;LCD/lcd.c: 69:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 11055  0C6A  0000               	nop
 11056  0C6B                     l5304:
 11057                           
 11058                           ;LCD/lcd.c: 70:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 11059  0C6B  0022               	movlb	2	; select bank2
 11060  0C6C  0826               	movf	LCDsend2x4@hc^(0+256),w
 11061  0C6D  0422               	iorwf	LCDsend2x4@mode^(0+256),w
 11062  0C6E  3808               	iorlw	8
 11063  0C6F  3196  26CE  318B   	fcall	_WriteI2C
 11064  0C72                     l5306:
 11065  0C72  0023               	movlb	3	; select bank3
 11066  0C73  0C0F               	rrf	15,w	;volatile
 11067  0C74  0C89               	rrf	9,f
 11068  0C75  3901               	andlw	1
 11069  0C76  0022               	movlb	2	; select bank2
 11070  0C77  00A3               	movwf	??_LCDsend2x4^(0+256)
 11071  0C78  0023               	movlb	3	; select bank3
 11072  0C79  0811               	movf	17,w	;volatile
 11073  0C7A  391F               	andlw	31
 11074  0C7B  0022               	movlb	2	; select bank2
 11075  0C7C  0423               	iorwf	??_LCDsend2x4^(0+256),w
 11076  0C7D  1D03               	btfss	3,2
 11077  0C7E  2C80               	goto	u5031
 11078  0C7F  2C81               	goto	u5030
 11079  0C80                     u5031:
 11080  0C80  2C72               	goto	l5306
 11081  0C81                     u5030:
 11082  0C81                     l5308:
 11083                           
 11084                           ;LCD/lcd.c: 71:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 11085  0C81  0827               	movf	LCDsend2x4@lc^(0+256),w
 11086  0C82  0422               	iorwf	LCDsend2x4@mode^(0+256),w
 11087  0C83  3808               	iorlw	8
 11088  0C84  3196  26CE  318B   	fcall	_WriteI2C
 11089  0C87                     l5310:
 11090  0C87  0023               	movlb	3	; select bank3
 11091  0C88  0C0F               	rrf	15,w	;volatile
 11092  0C89  0C89               	rrf	9,f
 11093  0C8A  3901               	andlw	1
 11094  0C8B  0022               	movlb	2	; select bank2
 11095  0C8C  00A3               	movwf	??_LCDsend2x4^(0+256)
 11096  0C8D  0023               	movlb	3	; select bank3
 11097  0C8E  0811               	movf	17,w	;volatile
 11098  0C8F  391F               	andlw	31
 11099  0C90  0022               	movlb	2	; select bank2
 11100  0C91  0423               	iorwf	??_LCDsend2x4^(0+256),w
 11101  0C92  1D03               	btfss	3,2
 11102  0C93  2C95               	goto	u5041
 11103  0C94  2C96               	goto	u5040
 11104  0C95                     u5041:
 11105  0C95  2C87               	goto	l5310
 11106  0C96                     u5040:
 11107  0C96                     l5312:
 11108                           
 11109                           ;LCD/lcd.c: 72:   WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 11110  0C96  0827               	movf	LCDsend2x4@lc^(0+256),w
 11111  0C97  0422               	iorwf	LCDsend2x4@mode^(0+256),w
 11112  0C98  380C               	iorlw	12
 11113  0C99  3196  26CE  318B   	fcall	_WriteI2C
 11114  0C9C                     l5314:
 11115  0C9C  0023               	movlb	3	; select bank3
 11116  0C9D  0C0F               	rrf	15,w	;volatile
 11117  0C9E  0C89               	rrf	9,f
 11118  0C9F  3901               	andlw	1
 11119  0CA0  0022               	movlb	2	; select bank2
 11120  0CA1  00A3               	movwf	??_LCDsend2x4^(0+256)
 11121  0CA2  0023               	movlb	3	; select bank3
 11122  0CA3  0811               	movf	17,w	;volatile
 11123  0CA4  391F               	andlw	31
 11124  0CA5  0022               	movlb	2	; select bank2
 11125  0CA6  0423               	iorwf	??_LCDsend2x4^(0+256),w
 11126  0CA7  1D03               	btfss	3,2
 11127  0CA8  2CAA               	goto	u5051
 11128  0CA9  2CAB               	goto	u5050
 11129  0CAA                     u5051:
 11130  0CAA  2C9C               	goto	l5314
 11131  0CAB                     u5050:
 11132  0CAB                     l220:
 11133                           
 11134                           ;LCD/lcd.c: 73:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 11135  0CAB  0000               	nop
 11136  0CAC                     l5316:
 11137                           
 11138                           ;LCD/lcd.c: 74:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 11139  0CAC  0022               	movlb	2	; select bank2
 11140  0CAD  0827               	movf	LCDsend2x4@lc^(0+256),w
 11141  0CAE  0422               	iorwf	LCDsend2x4@mode^(0+256),w
 11142  0CAF  3808               	iorlw	8
 11143  0CB0  3196  26CE  318B   	fcall	_WriteI2C
 11144  0CB3                     l5318:
 11145  0CB3  0023               	movlb	3	; select bank3
 11146  0CB4  0C0F               	rrf	15,w	;volatile
 11147  0CB5  0C89               	rrf	9,f
 11148  0CB6  3901               	andlw	1
 11149  0CB7  0022               	movlb	2	; select bank2
 11150  0CB8  00A3               	movwf	??_LCDsend2x4^(0+256)
 11151  0CB9  0023               	movlb	3	; select bank3
 11152  0CBA  0811               	movf	17,w	;volatile
 11153  0CBB  391F               	andlw	31
 11154  0CBC  0022               	movlb	2	; select bank2
 11155  0CBD  0423               	iorwf	??_LCDsend2x4^(0+256),w
 11156  0CBE  1D03               	btfss	3,2
 11157  0CBF  2CC1               	goto	u5061
 11158  0CC0  2CC2               	goto	u5060
 11159  0CC1                     u5061:
 11160  0CC1  2CB3               	goto	l5318
 11161  0CC2                     u5060:
 11162  0CC2                     l224:	
 11163                           ;LCD/lcd.c: 75:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 11164                           
 11165  0CC2  0023               	movlb	3	; select bank3
 11166  0CC3  1511               	bsf	17,2	;volatile
 11167  0CC4                     l225:
 11168  0CC4  1911               	btfsc	17,2	;volatile
 11169  0CC5  2CC7               	goto	u5071
 11170  0CC6  2CC8               	goto	u5070
 11171  0CC7                     u5071:
 11172  0CC7  2CC4               	goto	l225
 11173  0CC8                     u5070:
 11174  0CC8                     l5320:
 11175                           
 11176                           ;LCD/lcd.c: 76:   _delay((unsigned long)((50)*(4000000/4000000.0)));
 11177  0CC8  3010               	movlw	16
 11178  0CC9                     u5907:
 11179  0CC9  0B89               	decfsz	9,f
 11180  0CCA  2CC9               	goto	u5907
 11181  0CCB  3200               	nop2
 11182  0CCC                     l229:
 11183  0CCC  0008               	return
 11184  0CCD                     __end_of_LCDsend2x4:
 11185                           
 11186                           	psect	text19
 11187  1625                     __ptext19:	
 11188 ;; *************** function _LCDsend *****************
 11189 ;; Defined at:
 11190 ;;		line 17 in file "LCD/lcd.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;  c               1    wreg     unsigned char 
 11193 ;; Auto vars:     Size  Location     Type
 11194 ;;  c               1    3[BANK2 ] unsigned char 
 11195 ;; Return value:  Size  Location     Type
 11196 ;;                  1    wreg      void 
 11197 ;; Registers used:
 11198 ;;		wreg, status,2, status,0, pclath, cstack
 11199 ;; Tracked objects:
 11200 ;;		On entry : 0/0
 11201 ;;		On exit  : 0/0
 11202 ;;		Unchanged: 0/0
 11203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11205 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 11206 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 11207 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 11208 ;;Total ram usage:        2 bytes
 11209 ;; Hardware stack levels used: 1
 11210 ;; Hardware stack levels required when called: 14
 11211 ;; This function calls:
 11212 ;;		_WriteI2C
 11213 ;; This function is called by:
 11214 ;;		_LCDinit
 11215 ;; This function uses a non-reentrant model
 11216 ;;
 11217                           
 11218                           
 11219                           ;psect for function _LCDsend
 11220  1625                     _LCDsend:
 11221                           
 11222                           ;incstack = 0
 11223                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 11224                           ;LCDsend@c stored from wreg
 11225  1625  0022               	movlb	2	; select bank2
 11226  1626  00A3               	movwf	LCDsend@c^(0+256)
 11227  1627                     l5270:
 11228  1627                     l5272:	
 11229                           ;LCD/lcd.c: 17: void LCDsend(unsigned char c);LCD/lcd.c: 18: {;LCD/lcd.c: 19:   while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11230                           
 11231  1627  0023               	movlb	3	; select bank3
 11232  1628  0C0F               	rrf	15,w	;volatile
 11233  1629  0C89               	rrf	9,f
 11234  162A  3901               	andlw	1
 11235  162B  0022               	movlb	2	; select bank2
 11236  162C  00A2               	movwf	??_LCDsend^(0+256)
 11237  162D  0023               	movlb	3	; select bank3
 11238  162E  0811               	movf	17,w	;volatile
 11239  162F  391F               	andlw	31
 11240  1630  0022               	movlb	2	; select bank2
 11241  1631  0422               	iorwf	??_LCDsend^(0+256),w
 11242  1632  1D03               	btfss	3,2
 11243  1633  2E35               	goto	u4901
 11244  1634  2E36               	goto	u4900
 11245  1635                     u4901:
 11246  1635  2E27               	goto	l5272
 11247  1636                     u4900:
 11248  1636                     l73:	
 11249                           ;LCD/lcd.c: 20:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11250                           
 11251  1636  0023               	movlb	3	; select bank3
 11252  1637  1411               	bsf	17,0	;volatile
 11253  1638                     l74:
 11254  1638  1811               	btfsc	17,0	;volatile
 11255  1639  2E3B               	goto	u4911
 11256  163A  2E3C               	goto	u4910
 11257  163B                     u4911:
 11258  163B  2E38               	goto	l74
 11259  163C                     u4910:
 11260  163C                     l5274:
 11261  163C  0023               	movlb	3	; select bank3
 11262  163D  0C0F               	rrf	15,w	;volatile
 11263  163E  0C89               	rrf	9,f
 11264  163F  3901               	andlw	1
 11265  1640  0022               	movlb	2	; select bank2
 11266  1641  00A2               	movwf	??_LCDsend^(0+256)
 11267  1642  0023               	movlb	3	; select bank3
 11268  1643  0811               	movf	17,w	;volatile
 11269  1644  391F               	andlw	31
 11270  1645  0022               	movlb	2	; select bank2
 11271  1646  0422               	iorwf	??_LCDsend^(0+256),w
 11272  1647  1D03               	btfss	3,2
 11273  1648  2E4A               	goto	u4921
 11274  1649  2E4B               	goto	u4920
 11275  164A                     u4921:
 11276  164A  2E3C               	goto	l5274
 11277  164B                     u4920:
 11278  164B                     l5276:
 11279                           
 11280                           ;LCD/lcd.c: 21:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11281  164B  304E               	movlw	78
 11282  164C  3196  26CE  3196   	fcall	_WriteI2C
 11283  164F                     l5278:
 11284  164F  0023               	movlb	3	; select bank3
 11285  1650  0C0F               	rrf	15,w	;volatile
 11286  1651  0C89               	rrf	9,f
 11287  1652  3901               	andlw	1
 11288  1653  0022               	movlb	2	; select bank2
 11289  1654  00A2               	movwf	??_LCDsend^(0+256)
 11290  1655  0023               	movlb	3	; select bank3
 11291  1656  0811               	movf	17,w	;volatile
 11292  1657  391F               	andlw	31
 11293  1658  0022               	movlb	2	; select bank2
 11294  1659  0422               	iorwf	??_LCDsend^(0+256),w
 11295  165A  1D03               	btfss	3,2
 11296  165B  2E5D               	goto	u4931
 11297  165C  2E5E               	goto	u4930
 11298  165D                     u4931:
 11299  165D  2E4F               	goto	l5278
 11300  165E                     u4930:
 11301  165E                     l5280:
 11302                           
 11303                           ;LCD/lcd.c: 22:   WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11304  165E  0823               	movf	LCDsend@c^(0+256),w
 11305  165F  3196  26CE  3196   	fcall	_WriteI2C
 11306  1662                     l5282:
 11307  1662  0023               	movlb	3	; select bank3
 11308  1663  0C0F               	rrf	15,w	;volatile
 11309  1664  0C89               	rrf	9,f
 11310  1665  3901               	andlw	1
 11311  1666  0022               	movlb	2	; select bank2
 11312  1667  00A2               	movwf	??_LCDsend^(0+256)
 11313  1668  0023               	movlb	3	; select bank3
 11314  1669  0811               	movf	17,w	;volatile
 11315  166A  391F               	andlw	31
 11316  166B  0022               	movlb	2	; select bank2
 11317  166C  0422               	iorwf	??_LCDsend^(0+256),w
 11318  166D  1D03               	btfss	3,2
 11319  166E  2E70               	goto	u4941
 11320  166F  2E71               	goto	u4940
 11321  1670                     u4941:
 11322  1670  2E62               	goto	l5282
 11323  1671                     u4940:
 11324  1671                     l87:	
 11325                           ;LCD/lcd.c: 23:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 11326                           
 11327  1671  0023               	movlb	3	; select bank3
 11328  1672  1511               	bsf	17,2	;volatile
 11329  1673                     l88:
 11330  1673  1911               	btfsc	17,2	;volatile
 11331  1674  2E76               	goto	u4951
 11332  1675  2E77               	goto	u4950
 11333  1676                     u4951:
 11334  1676  2E73               	goto	l88
 11335  1677                     u4950:
 11336  1677                     l92:
 11337  1677  0008               	return
 11338  1678                     __end_of_LCDsend:
 11339                           
 11340                           	psect	text20
 11341  16CE                     __ptext20:	
 11342 ;; *************** function _WriteI2C *****************
 11343 ;; Defined at:
 11344 ;;		line 59 in file "I2C/i2c.c"
 11345 ;; Parameters:    Size  Location     Type
 11346 ;;  data_out        1    wreg     unsigned char 
 11347 ;; Auto vars:     Size  Location     Type
 11348 ;;  data_out        1    1[BANK2 ] unsigned char 
 11349 ;; Return value:  Size  Location     Type
 11350 ;;                  1    wreg      char 
 11351 ;; Registers used:
 11352 ;;		wreg, status,2, status,0
 11353 ;; Tracked objects:
 11354 ;;		On entry : 0/0
 11355 ;;		On exit  : 0/0
 11356 ;;		Unchanged: 0/0
 11357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11359 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 11360 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 11361 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 11362 ;;Total ram usage:        2 bytes
 11363 ;; Hardware stack levels used: 1
 11364 ;; Hardware stack levels required when called: 13
 11365 ;; This function calls:
 11366 ;;		Nothing
 11367 ;; This function is called by:
 11368 ;;		_LCDsend
 11369 ;;		_LCDsend2x4
 11370 ;; This function uses a non-reentrant model
 11371 ;;
 11372                           
 11373                           
 11374                           ;psect for function _WriteI2C
 11375  16CE                     _WriteI2C:
 11376                           
 11377                           ;incstack = 0
 11378                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 11379                           ;WriteI2C@data_out stored from wreg
 11380  16CE  0022               	movlb	2	; select bank2
 11381  16CF  00A1               	movwf	WriteI2C@data_out^(0+256)
 11382  16D0                     l5140:
 11383                           
 11384                           ;I2C/i2c.c: 59: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 60: {;I2C/i2c.
      +                          c: 61:   SSP1BUF = data_out;
 11385  16D0  0821               	movf	WriteI2C@data_out^(0+256),w
 11386  16D1  0023               	movlb	3	; select bank3
 11387  16D2  008C               	movwf	12	;volatile
 11388  16D3                     l5142:
 11389                           
 11390                           ;I2C/i2c.c: 62:   if ( SSP1CON1bits.WCOL )
 11391  16D3  1F90               	btfss	16,7	;volatile
 11392  16D4  2ED6               	goto	u4571
 11393  16D5  2ED7               	goto	u4570
 11394  16D6                     u4571:
 11395  16D6  2ED8               	goto	l5148
 11396  16D7                     u4570:
 11397  16D7  2F27               	goto	l36
 11398  16D8                     l5148:
 11399                           
 11400                           ;I2C/i2c.c: 65:   {;I2C/i2c.c: 66:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 11401  16D8  300F               	movlw	15
 11402  16D9  0510               	andwf	16,w	;volatile
 11403  16DA  0022               	movlb	2	; select bank2
 11404  16DB  00A0               	movwf	??_WriteI2C^(0+256)
 11405  16DC  3008               	movlw	8
 11406  16DD  0620               	xorwf	??_WriteI2C^(0+256),w
 11407  16DE  1903               	btfsc	3,2
 11408  16DF  2EE1               	goto	u4581
 11409  16E0  2EE2               	goto	u4580
 11410  16E1                     u4581:
 11411  16E1  2EFB               	goto	l5160
 11412  16E2                     u4580:
 11413  16E2                     l5150:
 11414  16E2  300F               	movlw	15
 11415  16E3  0023               	movlb	3	; select bank3
 11416  16E4  0510               	andwf	16,w	;volatile
 11417  16E5  0022               	movlb	2	; select bank2
 11418  16E6  00A0               	movwf	??_WriteI2C^(0+256)
 11419  16E7  300B               	movlw	11
 11420  16E8  0620               	xorwf	??_WriteI2C^(0+256),w
 11421  16E9  1903               	btfsc	3,2
 11422  16EA  2EEC               	goto	u4591
 11423  16EB  2EED               	goto	u4590
 11424  16EC                     u4591:
 11425  16EC  2EFB               	goto	l5160
 11426  16ED                     u4590:
 11427  16ED                     l5152:
 11428                           
 11429                           ;I2C/i2c.c: 67:  {;I2C/i2c.c: 68:        SSP1CON1bits.CKP = 1;
 11430  16ED  0023               	movlb	3	; select bank3
 11431  16EE  1610               	bsf	16,4	;volatile
 11432  16EF                     l39:	
 11433                           ;I2C/i2c.c: 69:        while ( !PIR3bits.SSP1IF );
 11434                           
 11435  16EF  002E               	movlb	14	; select bank14
 11436  16F0  1C0F               	btfss	15,0	;volatile
 11437  16F1  2EF3               	goto	u4601
 11438  16F2  2EF4               	goto	u4600
 11439  16F3                     u4601:
 11440  16F3  2EEF               	goto	l39
 11441  16F4                     u4600:
 11442  16F4                     l41:
 11443                           
 11444                           ;I2C/i2c.c: 71:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 11445  16F4  0023               	movlb	3	; select bank3
 11446  16F5  190F               	btfsc	15,2	;volatile
 11447  16F6  2EF8               	goto	u4611
 11448  16F7  2EF9               	goto	u4610
 11449  16F8                     u4611:
 11450  16F8  2F27               	goto	l36
 11451  16F9                     u4610:
 11452  16F9                     l5154:
 11453  16F9  080F               	movf	15,w	;volatile
 11454  16FA  2F27               	goto	l36
 11455  16FB                     l5160:
 11456  16FB  300F               	movlw	15
 11457  16FC  0023               	movlb	3	; select bank3
 11458  16FD  0510               	andwf	16,w	;volatile
 11459  16FE  0022               	movlb	2	; select bank2
 11460  16FF  00A0               	movwf	??_WriteI2C^(0+256)
 11461  1700  3008               	movlw	8
 11462  1701  0620               	xorwf	??_WriteI2C^(0+256),w
 11463  1702  1903               	btfsc	3,2
 11464  1703  2F05               	goto	u4621
 11465  1704  2F06               	goto	u4620
 11466  1705                     u4621:
 11467  1705  2F11               	goto	l48
 11468  1706                     u4620:
 11469  1706                     l5162:
 11470  1706  300F               	movlw	15
 11471  1707  0023               	movlb	3	; select bank3
 11472  1708  0510               	andwf	16,w	;volatile
 11473  1709  0022               	movlb	2	; select bank2
 11474  170A  00A0               	movwf	??_WriteI2C^(0+256)
 11475  170B  300B               	movlw	11
 11476  170C  0620               	xorwf	??_WriteI2C^(0+256),w
 11477  170D  1D03               	btfss	3,2
 11478  170E  2F10               	goto	u4631
 11479  170F  2F11               	goto	u4630
 11480  1710                     u4631:
 11481  1710  2F27               	goto	l36
 11482  1711                     u4630:
 11483  1711                     l48:
 11484  1711  0023               	movlb	3	; select bank3
 11485  1712  180F               	btfsc	15,0	;volatile
 11486  1713  2F15               	goto	u4641
 11487  1714  2F16               	goto	u4640
 11488  1715                     u4641:
 11489  1715  2F11               	goto	l48
 11490  1716                     u4640:
 11491  1716                     l5164:
 11492  1716  0023               	movlb	3	; select bank3
 11493  1717  0C0F               	rrf	15,w	;volatile
 11494  1718  0C89               	rrf	9,f
 11495  1719  3901               	andlw	1
 11496  171A  0022               	movlb	2	; select bank2
 11497  171B  00A0               	movwf	??_WriteI2C^(0+256)
 11498  171C  0023               	movlb	3	; select bank3
 11499  171D  0811               	movf	17,w	;volatile
 11500  171E  391F               	andlw	31
 11501  171F  0022               	movlb	2	; select bank2
 11502  1720  0420               	iorwf	??_WriteI2C^(0+256),w
 11503  1721  1D03               	btfss	3,2
 11504  1722  2F24               	goto	u4651
 11505  1723  2F25               	goto	u4650
 11506  1724                     u4651:
 11507  1724  2F16               	goto	l5164
 11508  1725                     u4650:
 11509  1725                     l53:
 11510                           
 11511                           ;I2C/i2c.c: 84:      if ( SSP1CON2bits.ACKSTAT )
 11512  1725  0023               	movlb	3	; select bank3
 11513  1726  0811               	movf	17,w	;volatile
 11514  1727                     l36:
 11515  1727  0008               	return
 11516  1728                     __end_of_WriteI2C:
 11517                           
 11518                           	psect	intentry
 11519  0004                     __pintentry:	
 11520 ;; *************** function _INTERRUPT_InterruptManager *****************
 11521 ;; Defined at:
 11522 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11523 ;; Parameters:    Size  Location     Type
 11524 ;;		None
 11525 ;; Auto vars:     Size  Location     Type
 11526 ;;		None
 11527 ;; Return value:  Size  Location     Type
 11528 ;;                  1    wreg      void 
 11529 ;; Registers used:
 11530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11531 ;; Tracked objects:
 11532 ;;		On entry : 0/0
 11533 ;;		On exit  : 0/0
 11534 ;;		Unchanged: 0/0
 11535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11540 ;;Total ram usage:        0 bytes
 11541 ;; Hardware stack levels used: 1
 11542 ;; Hardware stack levels required when called: 12
 11543 ;; This function calls:
 11544 ;;		_TMR1_ISR
 11545 ;; This function is called by:
 11546 ;;		Interrupt level 1
 11547 ;; This function uses a non-reentrant model
 11548 ;;
 11549                           
 11550  0004                     _INTERRUPT_InterruptManager:
 11551                           
 11552                           ;incstack = 0
 11553  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11554                           
 11555                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11556  0005  3180               	pagesel	$
 11557  0006                     i1l5812:
 11558                           
 11559                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 11560  0006  1F0B               	btfss	11,6	;volatile
 11561  0007  2809               	goto	u531_21
 11562  0008  280A               	goto	u531_20
 11563  0009                     u531_21:
 11564  0009  2816               	goto	i1l499
 11565  000A                     u531_20:
 11566  000A                     i1l5814:
 11567                           
 11568                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 11569  000A  002E               	movlb	14	; select bank14
 11570  000B  1C1A               	btfss	26,0	;volatile
 11571  000C  280E               	goto	u532_21
 11572  000D  280F               	goto	u532_20
 11573  000E                     u532_21:
 11574  000E  2816               	goto	i1l499
 11575  000F                     u532_20:
 11576  000F                     i1l5816:
 11577  000F  1C10               	btfss	16,0	;volatile
 11578  0010  2812               	goto	u533_21
 11579  0011  2813               	goto	u533_20
 11580  0012                     u533_21:
 11581  0012  2816               	goto	i1l499
 11582  0013                     u533_20:
 11583  0013                     i1l5818:
 11584                           
 11585                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
 11586  0013  3192  22D9  3180   	fcall	_TMR1_ISR
 11587  0016                     i1l499:	
 11588                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 11589                           
 11590  0016  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11591  0017  0009               	retfie
 11592  0018                     __end_of_INTERRUPT_InterruptManager:
 11593                           
 11594                           	psect	text22
 11595  12D9                     __ptext22:	
 11596 ;; *************** function _TMR1_ISR *****************
 11597 ;; Defined at:
 11598 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 11599 ;; Parameters:    Size  Location     Type
 11600 ;;		None
 11601 ;; Auto vars:     Size  Location     Type
 11602 ;;		None
 11603 ;; Return value:  Size  Location     Type
 11604 ;;                  1    wreg      void 
 11605 ;; Registers used:
 11606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11607 ;; Tracked objects:
 11608 ;;		On entry : 0/0
 11609 ;;		On exit  : 0/0
 11610 ;;		Unchanged: 0/0
 11611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11616 ;;Total ram usage:        0 bytes
 11617 ;; Hardware stack levels used: 1
 11618 ;; Hardware stack levels required when called: 11
 11619 ;; This function calls:
 11620 ;;		_TMR1_CallBack
 11621 ;;		_TMR1_WriteTimer
 11622 ;; This function is called by:
 11623 ;;		_INTERRUPT_InterruptManager
 11624 ;; This function uses a non-reentrant model
 11625 ;;
 11626                           
 11627                           
 11628                           ;psect for function _TMR1_ISR
 11629  12D9                     _TMR1_ISR:
 11630  12D9                     i1l5590:	
 11631                           ;incstack = 0
 11632                           ; Regs used in _TMR1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11633                           
 11634                           
 11635                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 11636  12D9  002E               	movlb	14	; select bank14
 11637  12DA  1010               	bcf	16,0	;volatile
 11638  12DB                     i1l5592:
 11639                           
 11640                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 11641  12DB  0022               	movlb	2	; select bank2
 11642  12DC  084E               	movf	(_timer1ReloadVal+1)^(0+256),w	;volatile
 11643  12DD  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 11644  12DE  084D               	movf	_timer1ReloadVal^(0+256),w	;volatile
 11645  12DF  00F0               	movwf	TMR1_WriteTimer@timerVal
 11646  12E0  3193  2308  3192   	fcall	_TMR1_WriteTimer
 11647  12E3                     i1l5594:
 11648                           
 11649                           ;mcc_generated_files/tmr1.c: 173:     TMR1_CallBack();
 11650  12E3  3192  22BF  3192   	fcall	_TMR1_CallBack
 11651  12E6                     i1l558:
 11652  12E6  0008               	return
 11653  12E7                     __end_of_TMR1_ISR:
 11654                           
 11655                           	psect	text23
 11656  1308                     __ptext23:	
 11657 ;; *************** function _TMR1_WriteTimer *****************
 11658 ;; Defined at:
 11659 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 11660 ;; Parameters:    Size  Location     Type
 11661 ;;  timerVal        2    0[COMMON] unsigned short 
 11662 ;; Auto vars:     Size  Location     Type
 11663 ;;		None
 11664 ;; Return value:  Size  Location     Type
 11665 ;;                  1    wreg      void 
 11666 ;; Registers used:
 11667 ;;		wreg, status,2
 11668 ;; Tracked objects:
 11669 ;;		On entry : 0/0
 11670 ;;		On exit  : 0/0
 11671 ;;		Unchanged: 0/0
 11672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11673 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11676 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11677 ;;Total ram usage:        2 bytes
 11678 ;; Hardware stack levels used: 1
 11679 ;; This function calls:
 11680 ;;		Nothing
 11681 ;; This function is called by:
 11682 ;;		_TMR1_ISR
 11683 ;;		_TMR1_Reload
 11684 ;; This function uses a non-reentrant model
 11685 ;;
 11686                           
 11687                           
 11688                           ;psect for function _TMR1_WriteTimer
 11689  1308                     _TMR1_WriteTimer:
 11690  1308                     i1l5422:	
 11691                           ;incstack = 0
 11692                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 11693                           
 11694                           
 11695                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 11696  1308  0024               	movlb	4	; select bank4
 11697  1309  1D0E               	btfss	14,2	;volatile
 11698  130A  2B0C               	goto	u509_21
 11699  130B  2B0D               	goto	u509_20
 11700  130C                     u509_21:
 11701  130C  2B14               	goto	i1l5432
 11702  130D                     u509_20:
 11703  130D                     i1l5424:
 11704                           
 11705                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 11706  130D  100E               	bcf	14,0	;volatile
 11707  130E                     i1l5426:
 11708                           
 11709                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (uint8_t)(timerVal >> 8);
 11710  130E  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11711  130F  008D               	movwf	13	;volatile
 11712  1310                     i1l5428:
 11713                           
 11714                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
 11715  1310  0870               	movf	TMR1_WriteTimer@timerVal,w
 11716  1311  008C               	movwf	12	;volatile
 11717  1312                     i1l5430:
 11718                           
 11719                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 11720  1312  140E               	bsf	14,0	;volatile
 11721                           
 11722                           ;mcc_generated_files/tmr1.c: 140:     }
 11723  1313  2B18               	goto	i1l546
 11724  1314                     i1l5432:
 11725                           
 11726                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 11727  1314  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11728  1315  008D               	movwf	13	;volatile
 11729  1316                     i1l5434:
 11730                           
 11731                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = (uint8_t)timerVal;
 11732  1316  0870               	movf	TMR1_WriteTimer@timerVal,w
 11733  1317  008C               	movwf	12	;volatile
 11734  1318                     i1l546:
 11735  1318  0008               	return
 11736  1319                     __end_of_TMR1_WriteTimer:
 11737                           
 11738                           	psect	text24
 11739  12BF                     __ptext24:	
 11740 ;; *************** function _TMR1_CallBack *****************
 11741 ;; Defined at:
 11742 ;;		line 176 in file "mcc_generated_files/tmr1.c"
 11743 ;; Parameters:    Size  Location     Type
 11744 ;;		None
 11745 ;; Auto vars:     Size  Location     Type
 11746 ;;		None
 11747 ;; Return value:  Size  Location     Type
 11748 ;;                  1    wreg      void 
 11749 ;; Registers used:
 11750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11751 ;; Tracked objects:
 11752 ;;		On entry : 0/0
 11753 ;;		On exit  : 0/0
 11754 ;;		Unchanged: 0/0
 11755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11760 ;;Total ram usage:        0 bytes
 11761 ;; Hardware stack levels used: 1
 11762 ;; Hardware stack levels required when called: 10
 11763 ;; This function calls:
 11764 ;;		Absolute function
 11765 ;;		_TMR1_DefaultInterruptHandler
 11766 ;;		_timerInterrupt
 11767 ;; This function is called by:
 11768 ;;		_TMR1_ISR
 11769 ;; This function uses a non-reentrant model
 11770 ;;
 11771                           
 11772                           
 11773                           ;psect for function _TMR1_CallBack
 11774  12BF                     _TMR1_CallBack:
 11775  12BF                     i1l5436:	
 11776                           ;incstack = 0
 11777                           ; Regs used in _TMR1_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11778                           
 11779                           
 11780                           ;mcc_generated_files/tmr1.c: 179:     if(TMR1_InterruptHandler)
 11781  12BF  0022               	movlb	2	; select bank2
 11782  12C0  084B               	movf	_TMR1_InterruptHandler^(0+256),w
 11783  12C1  044C               	iorwf	(_TMR1_InterruptHandler+1)^(0+256),w
 11784  12C2  1903               	btfsc	3,2
 11785  12C3  2AC5               	goto	u510_21
 11786  12C4  2AC6               	goto	u510_20
 11787  12C5                     u510_21:
 11788  12C5  2ACB               	goto	i1l562
 11789  12C6                     u510_20:
 11790  12C6                     i1l5438:
 11791                           
 11792                           ;mcc_generated_files/tmr1.c: 180:     {;mcc_generated_files/tmr1.c: 181:         TMR1_In
      +                          terruptHandler();
 11793  12C6  084C               	movf	(_TMR1_InterruptHandler+1)^(0+256),w
 11794  12C7  008A               	movwf	10
 11795  12C8  084B               	movf	_TMR1_InterruptHandler^(0+256),w
 11796  12C9  000A               	callw
 11797  12CA  3192               	pagesel	$
 11798  12CB                     i1l562:
 11799  12CB  0008               	return
 11800  12CC                     __end_of_TMR1_CallBack:
 11801                           
 11802                           	psect	text25
 11803  07FF                     __ptext25:	
 11804 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 11805 ;; Defined at:
 11806 ;;		line 189 in file "mcc_generated_files/tmr1.c"
 11807 ;; Parameters:    Size  Location     Type
 11808 ;;		None
 11809 ;; Auto vars:     Size  Location     Type
 11810 ;;		None
 11811 ;; Return value:  Size  Location     Type
 11812 ;;                  1    wreg      void 
 11813 ;; Registers used:
 11814 ;;		None
 11815 ;; Tracked objects:
 11816 ;;		On entry : 0/0
 11817 ;;		On exit  : 0/0
 11818 ;;		Unchanged: 0/0
 11819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11824 ;;Total ram usage:        0 bytes
 11825 ;; Hardware stack levels used: 1
 11826 ;; This function calls:
 11827 ;;		Nothing
 11828 ;; This function is called by:
 11829 ;;		_TMR1_Initialize
 11830 ;;		_TMR1_CallBack
 11831 ;; This function uses a non-reentrant model
 11832 ;;
 11833                           
 11834                           
 11835                           ;psect for function _TMR1_DefaultInterruptHandler
 11836  07FF                     _TMR1_DefaultInterruptHandler:
 11837  07FF                     i1l568:	
 11838                           ;incstack = 0
 11839                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 11840                           
 11841  07FF  0008               	return
 11842  0800                     __end_of_TMR1_DefaultInterruptHandler:
 11843                           
 11844                           	psect	text26
 11845  0587                     __ptext26:	
 11846 ;; *************** function _timerInterrupt *****************
 11847 ;; Defined at:
 11848 ;;		line 150 in file "main.c"
 11849 ;; Parameters:    Size  Location     Type
 11850 ;;		None
 11851 ;; Auto vars:     Size  Location     Type
 11852 ;;  lum             2   64[BANK1 ] unsigned short 
 11853 ;;  value           1   63[BANK1 ] unsigned char 
 11854 ;;  temperature     1   62[BANK1 ] unsigned char 
 11855 ;; Return value:  Size  Location     Type
 11856 ;;                  1    wreg      void 
 11857 ;; Registers used:
 11858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11859 ;; Tracked objects:
 11860 ;;		On entry : 0/0
 11861 ;;		On exit  : 0/0
 11862 ;;		Unchanged: 0/0
 11863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11865 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11866 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11867 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11868 ;;Total ram usage:        6 bytes
 11869 ;; Hardware stack levels used: 1
 11870 ;; Hardware stack levels required when called: 9
 11871 ;; This function calls:
 11872 ;;		_ADCC_GetSingleConversion
 11873 ;;		_printLCD
 11874 ;;		_readTC74
 11875 ;;		_writeRingBuffer
 11876 ;;		i1_DATAEE_WriteByte
 11877 ;; This function is called by:
 11878 ;;		_main
 11879 ;;		_TMR1_CallBack
 11880 ;; This function uses a non-reentrant model
 11881 ;;
 11882                           
 11883                           
 11884                           ;psect for function _timerInterrupt
 11885  0587                     _timerInterrupt:
 11886  0587                     i1l5178:	
 11887                           ;incstack = 0
 11888                           ; Regs used in _timerInterrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11889                           
 11890                           
 11891                           ;main.c: 151:     if(mode==0){
 11892  0587  0021               	movlb	1	; select bank1
 11893  0588  0868               	movf	_mode^(0+128),w
 11894  0589  1D03               	btfss	3,2
 11895  058A  2D8C               	goto	u467_21
 11896  058B  2D8D               	goto	u467_20
 11897  058C                     u467_21:
 11898  058C  2DBA               	goto	i1l5198
 11899  058D                     u467_20:
 11900  058D                     i1l5180:
 11901                           
 11902                           ;main.c: 152:     if(seconds<59){
 11903  058D  303B               	movlw	59
 11904  058E  026B               	subwf	_seconds^(0+128),w
 11905  058F  1803               	skipnc
 11906  0590  2D92               	goto	u468_21
 11907  0591  2D93               	goto	u468_20
 11908  0592                     u468_21:
 11909  0592  2D9A               	goto	i1l5184
 11910  0593                     u468_20:
 11911  0593                     i1l5182:
 11912                           
 11913                           ;main.c: 153:         seconds++;
 11914  0593  3001               	movlw	1
 11915  0594  0020               	movlb	0	; select bank0
 11916  0595  00EC               	movwf	??_timerInterrupt
 11917  0596  086C               	movf	??_timerInterrupt,w
 11918  0597  0021               	movlb	1	; select bank1
 11919  0598  07EB               	addwf	_seconds^(0+128),f
 11920                           
 11921                           ;main.c: 154:     }else if(minutes<59){
 11922  0599  2DBA               	goto	i1l5198
 11923  059A                     i1l5184:
 11924  059A  303B               	movlw	59
 11925  059B  026C               	subwf	_minutes^(0+128),w
 11926  059C  1803               	skipnc
 11927  059D  2D9F               	goto	u469_21
 11928  059E  2DA0               	goto	u469_20
 11929  059F                     u469_21:
 11930  059F  2DA8               	goto	i1l5190
 11931  05A0                     u469_20:
 11932  05A0                     i1l5186:
 11933                           
 11934                           ;main.c: 155:         seconds=0;
 11935  05A0  01EB               	clrf	_seconds^(0+128)
 11936  05A1                     i1l5188:
 11937                           
 11938                           ;main.c: 156:         minutes++;
 11939  05A1  3001               	movlw	1
 11940  05A2  0020               	movlb	0	; select bank0
 11941  05A3  00EC               	movwf	??_timerInterrupt
 11942  05A4  086C               	movf	??_timerInterrupt,w
 11943  05A5  0021               	movlb	1	; select bank1
 11944  05A6  07EC               	addwf	_minutes^(0+128),f
 11945                           
 11946                           ;main.c: 157:     }else if(hours<24){
 11947  05A7  2DBA               	goto	i1l5198
 11948  05A8                     i1l5190:
 11949  05A8  3018               	movlw	24
 11950  05A9  026D               	subwf	_hours^(0+128),w
 11951  05AA  1803               	skipnc
 11952  05AB  2DAD               	goto	u470_21
 11953  05AC  2DAE               	goto	u470_20
 11954  05AD                     u470_21:
 11955  05AD  2DB7               	goto	i1l5196
 11956  05AE                     u470_20:
 11957  05AE                     i1l5192:
 11958                           
 11959                           ;main.c: 158:         seconds=0;
 11960  05AE  01EB               	clrf	_seconds^(0+128)
 11961                           
 11962                           ;main.c: 159:         minutes=0;
 11963  05AF  01EC               	clrf	_minutes^(0+128)
 11964  05B0                     i1l5194:
 11965                           
 11966                           ;main.c: 160:         hours++;
 11967  05B0  3001               	movlw	1
 11968  05B1  0020               	movlb	0	; select bank0
 11969  05B2  00EC               	movwf	??_timerInterrupt
 11970  05B3  086C               	movf	??_timerInterrupt,w
 11971  05B4  0021               	movlb	1	; select bank1
 11972  05B5  07ED               	addwf	_hours^(0+128),f
 11973                           
 11974                           ;main.c: 161:     }else{
 11975  05B6  2DBA               	goto	i1l5198
 11976  05B7                     i1l5196:
 11977                           
 11978                           ;main.c: 162:         seconds=0;
 11979  05B7  01EB               	clrf	_seconds^(0+128)
 11980                           
 11981                           ;main.c: 163:         minutes=0;
 11982  05B8  01EC               	clrf	_minutes^(0+128)
 11983                           
 11984                           ;main.c: 164:         hours=0;
 11985  05B9  01ED               	clrf	_hours^(0+128)
 11986  05BA                     i1l5198:
 11987                           
 11988                           ;main.c: 167:     adc_result_t lum = ADCC_GetSingleConversion(channel_ANA0);
 11989  05BA  3000               	movlw	0
 11990  05BB  3193  2319  3185   	fcall	_ADCC_GetSingleConversion
 11991  05BE  0871               	movf	?_ADCC_GetSingleConversion+1,w
 11992  05BF  0021               	movlb	1	; select bank1
 11993  05C0  00E1               	movwf	(timerInterrupt@lum+1)^(0+128)
 11994  05C1  0870               	movf	?_ADCC_GetSingleConversion,w
 11995  05C2  00E0               	movwf	timerInterrupt@lum^(0+128)
 11996  05C3                     i1l5200:
 11997                           
 11998                           ;main.c: 168:     uint8_t value;;main.c: 169:     if(lum>0x2FD){
 11999  05C3  3002               	movlw	2
 12000  05C4  0261               	subwf	(timerInterrupt@lum+1)^(0+128),w
 12001  05C5  30FE               	movlw	254
 12002  05C6  1903               	skipnz
 12003  05C7  0260               	subwf	timerInterrupt@lum^(0+128),w
 12004  05C8  1C03               	skipc
 12005  05C9  2DCB               	goto	u471_21
 12006  05CA  2DCC               	goto	u471_20
 12007  05CB                     u471_21:
 12008  05CB  2DD3               	goto	i1l5204
 12009  05CC                     u471_20:
 12010  05CC                     i1l5202:
 12011                           
 12012                           ;main.c: 170:         value=3;
 12013  05CC  3003               	movlw	3
 12014  05CD  0020               	movlb	0	; select bank0
 12015  05CE  00EC               	movwf	??_timerInterrupt
 12016  05CF  086C               	movf	??_timerInterrupt,w
 12017  05D0  0021               	movlb	1	; select bank1
 12018  05D1  00DF               	movwf	timerInterrupt@value^(0+128)
 12019                           
 12020                           ;main.c: 171:     }else if(lum<0x2FD && lum>0x1FE){
 12021  05D2  2E02               	goto	i1l5218
 12022  05D3                     i1l5204:
 12023  05D3  3002               	movlw	2
 12024  05D4  0261               	subwf	(timerInterrupt@lum+1)^(0+128),w
 12025  05D5  30FD               	movlw	253
 12026  05D6  1903               	skipnz
 12027  05D7  0260               	subwf	timerInterrupt@lum^(0+128),w
 12028  05D8  1803               	skipnc
 12029  05D9  2DDB               	goto	u472_21
 12030  05DA  2DDC               	goto	u472_20
 12031  05DB                     u472_21:
 12032  05DB  2DEC               	goto	i1l5210
 12033  05DC                     u472_20:
 12034  05DC                     i1l5206:
 12035  05DC  3001               	movlw	1
 12036  05DD  0261               	subwf	(timerInterrupt@lum+1)^(0+128),w
 12037  05DE  30FF               	movlw	255
 12038  05DF  1903               	skipnz
 12039  05E0  0260               	subwf	timerInterrupt@lum^(0+128),w
 12040  05E1  1C03               	skipc
 12041  05E2  2DE4               	goto	u473_21
 12042  05E3  2DE5               	goto	u473_20
 12043  05E4                     u473_21:
 12044  05E4  2DEC               	goto	i1l5210
 12045  05E5                     u473_20:
 12046  05E5                     i1l5208:
 12047                           
 12048                           ;main.c: 172:         value=2;
 12049  05E5  3002               	movlw	2
 12050  05E6  0020               	movlb	0	; select bank0
 12051  05E7  00EC               	movwf	??_timerInterrupt
 12052  05E8  086C               	movf	??_timerInterrupt,w
 12053  05E9  0021               	movlb	1	; select bank1
 12054  05EA  00DF               	movwf	timerInterrupt@value^(0+128)
 12055                           
 12056                           ;main.c: 173:     }else if(lum<0x1FE && lum>0xFF){
 12057  05EB  2E02               	goto	i1l5218
 12058  05EC                     i1l5210:
 12059  05EC  3001               	movlw	1
 12060  05ED  0261               	subwf	(timerInterrupt@lum+1)^(0+128),w
 12061  05EE  30FE               	movlw	254
 12062  05EF  1903               	skipnz
 12063  05F0  0260               	subwf	timerInterrupt@lum^(0+128),w
 12064  05F1  1803               	skipnc
 12065  05F2  2DF4               	goto	u474_21
 12066  05F3  2DF5               	goto	u474_20
 12067  05F4                     u474_21:
 12068  05F4  2E01               	goto	i1l5216
 12069  05F5                     u474_20:
 12070  05F5                     i1l5212:
 12071  05F5  3001               	movlw	1
 12072  05F6  0261               	subwf	(timerInterrupt@lum+1)^(0+128),w
 12073  05F7  3000               	movlw	0
 12074  05F8  1903               	skipnz
 12075  05F9  0260               	subwf	timerInterrupt@lum^(0+128),w
 12076  05FA  1C03               	skipc
 12077  05FB  2DFD               	goto	u475_21
 12078  05FC  2DFE               	goto	u475_20
 12079  05FD                     u475_21:
 12080  05FD  2E01               	goto	i1l5216
 12081  05FE                     u475_20:
 12082  05FE                     i1l5214:
 12083                           
 12084                           ;main.c: 174:         value=1;
 12085  05FE  01DF               	clrf	timerInterrupt@value^(0+128)
 12086  05FF  0ADF               	incf	timerInterrupt@value^(0+128),f
 12087                           
 12088                           ;main.c: 175:     }else{
 12089  0600  2E02               	goto	i1l5218
 12090  0601                     i1l5216:
 12091                           
 12092                           ;main.c: 176:         value=0;
 12093  0601  01DF               	clrf	timerInterrupt@value^(0+128)
 12094  0602                     i1l5218:
 12095                           
 12096                           ;main.c: 179:     unsigned char temperature = readTC74();
 12097  0602  3186  26DA  3185   	fcall	_readTC74
 12098  0605  0020               	movlb	0	; select bank0
 12099  0606  00EC               	movwf	??_timerInterrupt
 12100  0607  086C               	movf	??_timerInterrupt,w
 12101  0608  0021               	movlb	1	; select bank1
 12102  0609  00DE               	movwf	timerInterrupt@temperature^(0+128)
 12103  060A                     i1l5220:
 12104                           
 12105                           ;main.c: 180:     if(mode==0){
 12106  060A  0868               	movf	_mode^(0+128),w
 12107  060B  1D03               	btfss	3,2
 12108  060C  2E0E               	goto	u476_21
 12109  060D  2E0F               	goto	u476_20
 12110  060E                     u476_21:
 12111  060E  2E1B               	goto	i1l5224
 12112  060F                     u476_20:
 12113  060F                     i1l5222:
 12114                           
 12115                           ;main.c: 181:         variable1=temperature;
 12116  060F  085E               	movf	timerInterrupt@temperature^(0+128),w
 12117  0610  0020               	movlb	0	; select bank0
 12118  0611  00EC               	movwf	??_timerInterrupt
 12119  0612  086C               	movf	??_timerInterrupt,w
 12120  0613  0021               	movlb	1	; select bank1
 12121  0614  00E7               	movwf	_variable1^(0+128)
 12122                           
 12123                           ;main.c: 182:         variable2=value;
 12124  0615  085F               	movf	timerInterrupt@value^(0+128),w
 12125  0616  0020               	movlb	0	; select bank0
 12126  0617  00EC               	movwf	??_timerInterrupt
 12127  0618  086C               	movf	??_timerInterrupt,w
 12128  0619  0021               	movlb	1	; select bank1
 12129  061A  00E6               	movwf	_variable2^(0+128)
 12130  061B                     i1l5224:
 12131                           
 12132                           ;main.c: 185:     printLCD();
 12133  061B  3188  2047  3185   	fcall	_printLCD
 12134  061E                     i1l5226:
 12135                           
 12136                           ;main.c: 187:     if(counter == 5){
 12137  061E  3005               	movlw	5
 12138  061F  0022               	movlb	2	; select bank2
 12139  0620  0653               	xorwf	_counter^(0+256),w
 12140  0621  1D03               	btfss	3,2
 12141  0622  2E24               	goto	u477_21
 12142  0623  2E25               	goto	u477_20
 12143  0624                     u477_21:
 12144  0624  2E8E               	goto	i1l5250
 12145  0625                     u477_20:
 12146  0625                     i1l5228:
 12147                           
 12148                           ;main.c: 189:         if(last_temperature > max_temperature){
 12149  0625  0021               	movlb	1	; select bank1
 12150  0626  086E               	movf	_last_temperature^(0+128),w
 12151  0627  0022               	movlb	2	; select bank2
 12152  0628  0252               	subwf	_max_temperature^(0+256),w
 12153  0629  1803               	skipnc
 12154  062A  2E2C               	goto	u478_21
 12155  062B  2E2D               	goto	u478_20
 12156  062C                     u478_21:
 12157  062C  2E3B               	goto	i1l5232
 12158  062D                     u478_20:
 12159  062D                     i1l5230:
 12160                           
 12161                           ;main.c: 191:             DATAEE_WriteByte(0x7053, last_temperature);
 12162  062D  3053               	movlw	83
 12163  062E  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 12164  062F  3070               	movlw	112
 12165  0630  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 12166  0631  0021               	movlb	1	; select bank1
 12167  0632  086E               	movf	_last_temperature^(0+128),w
 12168  0633  0020               	movlb	0	; select bank0
 12169  0634  00EC               	movwf	??_timerInterrupt
 12170  0635  086C               	movf	??_timerInterrupt,w
 12171  0636  00F2               	movwf	i1DATAEE_WriteByte@bData
 12172  0637  3193  23B7  3185   	fcall	i1_DATAEE_WriteByte
 12173                           
 12174                           ;main.c: 194:         }else if(last_temperature < min_temperature){
 12175  063A  2E4E               	goto	i1l5236
 12176  063B                     i1l5232:
 12177  063B  0021               	movlb	1	; select bank1
 12178  063C  0869               	movf	_min_temperature^(0+128),w
 12179  063D  026E               	subwf	_last_temperature^(0+128),w
 12180  063E  1803               	skipnc
 12181  063F  2E41               	goto	u479_21
 12182  0640  2E42               	goto	u479_20
 12183  0641                     u479_21:
 12184  0641  2E4E               	goto	i1l5236
 12185  0642                     u479_20:
 12186  0642                     i1l5234:
 12187                           
 12188                           ;main.c: 196:             DATAEE_WriteByte(0x7054, last_temperature);
 12189  0642  3054               	movlw	84
 12190  0643  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 12191  0644  3070               	movlw	112
 12192  0645  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 12193  0646  086E               	movf	_last_temperature^(0+128),w
 12194  0647  0020               	movlb	0	; select bank0
 12195  0648  00EC               	movwf	??_timerInterrupt
 12196  0649  086C               	movf	??_timerInterrupt,w
 12197  064A  00F2               	movwf	i1DATAEE_WriteByte@bData
 12198  064B  3193  23B7  3185   	fcall	i1_DATAEE_WriteByte
 12199  064E                     i1l5236:
 12200                           
 12201                           ;main.c: 199:         if(last_luminosity > max_luminosity){
 12202  064E  0021               	movlb	1	; select bank1
 12203  064F  086F               	movf	_last_luminosity^(0+128),w
 12204  0650  0022               	movlb	2	; select bank2
 12205  0651  0254               	subwf	_max_luminosity^(0+256),w
 12206  0652  1803               	skipnc
 12207  0653  2E55               	goto	u480_21
 12208  0654  2E56               	goto	u480_20
 12209  0655                     u480_21:
 12210  0655  2E64               	goto	i1l5240
 12211  0656                     u480_20:
 12212  0656                     i1l5238:
 12213                           
 12214                           ;main.c: 201:             DATAEE_WriteByte(0x7055, last_luminosity);
 12215  0656  3055               	movlw	85
 12216  0657  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 12217  0658  3070               	movlw	112
 12218  0659  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 12219  065A  0021               	movlb	1	; select bank1
 12220  065B  086F               	movf	_last_luminosity^(0+128),w
 12221  065C  0020               	movlb	0	; select bank0
 12222  065D  00EC               	movwf	??_timerInterrupt
 12223  065E  086C               	movf	??_timerInterrupt,w
 12224  065F  00F2               	movwf	i1DATAEE_WriteByte@bData
 12225  0660  3193  23B7  3185   	fcall	i1_DATAEE_WriteByte
 12226                           
 12227                           ;main.c: 204:         }else if(last_luminosity < min_luminosity){
 12228  0663  2E77               	goto	i1l5244
 12229  0664                     i1l5240:
 12230  0664  0021               	movlb	1	; select bank1
 12231  0665  086A               	movf	_min_luminosity^(0+128),w
 12232  0666  026F               	subwf	_last_luminosity^(0+128),w
 12233  0667  1803               	skipnc
 12234  0668  2E6A               	goto	u481_21
 12235  0669  2E6B               	goto	u481_20
 12236  066A                     u481_21:
 12237  066A  2E77               	goto	i1l5244
 12238  066B                     u481_20:
 12239  066B                     i1l5242:
 12240                           
 12241                           ;main.c: 206:             DATAEE_WriteByte(0x7056, last_luminosity);
 12242  066B  3056               	movlw	86
 12243  066C  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 12244  066D  3070               	movlw	112
 12245  066E  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 12246  066F  086F               	movf	_last_luminosity^(0+128),w
 12247  0670  0020               	movlb	0	; select bank0
 12248  0671  00EC               	movwf	??_timerInterrupt
 12249  0672  086C               	movf	??_timerInterrupt,w
 12250  0673  00F2               	movwf	i1DATAEE_WriteByte@bData
 12251  0674  3193  23B7  3185   	fcall	i1_DATAEE_WriteByte
 12252  0677                     i1l5244:
 12253                           
 12254                           ;main.c: 210:         if(temperature!= last_temperature || value!= last_luminosity){
 12255  0677  0021               	movlb	1	; select bank1
 12256  0678  085E               	movf	timerInterrupt@temperature^(0+128),w
 12257  0679  066E               	xorwf	_last_temperature^(0+128),w
 12258  067A  1D03               	skipz
 12259  067B  2E7D               	goto	u482_21
 12260  067C  2E7E               	goto	u482_20
 12261  067D                     u482_21:
 12262  067D  2E84               	goto	i1l5248
 12263  067E                     u482_20:
 12264  067E                     i1l5246:
 12265  067E  085F               	movf	timerInterrupt@value^(0+128),w
 12266  067F  066F               	xorwf	_last_luminosity^(0+128),w
 12267  0680  1903               	skipnz
 12268  0681  2E83               	goto	u483_21
 12269  0682  2E84               	goto	u483_20
 12270  0683                     u483_21:
 12271  0683  2E8E               	goto	i1l5250
 12272  0684                     u483_20:
 12273  0684                     i1l5248:
 12274                           
 12275                           ;main.c: 211:             writeRingBuffer(temperature, value);
 12276  0684  085F               	movf	timerInterrupt@value^(0+128),w
 12277  0685  0020               	movlb	0	; select bank0
 12278  0686  00EC               	movwf	??_timerInterrupt
 12279  0687  086C               	movf	??_timerInterrupt,w
 12280  0688  00F4               	movwf	writeRingBuffer@luminosity
 12281  0689  0021               	movlb	1	; select bank1
 12282  068A  085E               	movf	timerInterrupt@temperature^(0+128),w
 12283  068B  3197  2728  3185   	fcall	_writeRingBuffer
 12284  068E                     i1l5250:
 12285                           
 12286                           ;main.c: 215:     if(counter == 5){
 12287  068E  3005               	movlw	5
 12288  068F  0022               	movlb	2	; select bank2
 12289  0690  0653               	xorwf	_counter^(0+256),w
 12290  0691  1D03               	btfss	3,2
 12291  0692  2E94               	goto	u484_21
 12292  0693  2E95               	goto	u484_20
 12293  0694                     u484_21:
 12294  0694  2E98               	goto	i1l5254
 12295  0695                     u484_20:
 12296  0695                     i1l5252:
 12297                           
 12298                           ;main.c: 217:         counter = 1;
 12299  0695  01D3               	clrf	_counter^(0+256)
 12300  0696  0AD3               	incf	_counter^(0+256),f
 12301                           
 12302                           ;main.c: 218:     }else{
 12303  0697  2E9E               	goto	i1l5256
 12304  0698                     i1l5254:
 12305                           
 12306                           ;main.c: 219:         counter ++;
 12307  0698  3001               	movlw	1
 12308  0699  0020               	movlb	0	; select bank0
 12309  069A  00EC               	movwf	??_timerInterrupt
 12310  069B  086C               	movf	??_timerInterrupt,w
 12311  069C  0022               	movlb	2	; select bank2
 12312  069D  07D3               	addwf	_counter^(0+256),f
 12313  069E                     i1l5256:
 12314                           
 12315                           ;main.c: 222:     if(PORTAbits.RA7==0){
 12316  069E  0020               	movlb	0	; select bank0
 12317  069F  1B8C               	btfsc	12,7	;volatile
 12318  06A0  2EA2               	goto	u485_21
 12319  06A1  2EA3               	goto	u485_20
 12320  06A2                     u485_21:
 12321  06A2  2EA5               	goto	i1l1349
 12322  06A3                     u485_20:
 12323  06A3                     i1l1346:	
 12324                           ;main.c: 223:         do { LATAbits.LATA7 = 1; } while(0);
 12325                           
 12326  06A3  1796               	bsf	22,7	;volatile
 12327  06A4  2EA6               	goto	i1l5258
 12328  06A5                     i1l1349:	
 12329                           ;main.c: 225:         do { LATAbits.LATA7 = 0; } while(0);
 12330                           
 12331  06A5  1396               	bcf	22,7	;volatile
 12332  06A6                     i1l5258:
 12333                           
 12334                           ;main.c: 228:     if(lum > 0x2FD || lum < 0xFF){
 12335  06A6  3002               	movlw	2
 12336  06A7  0021               	movlb	1	; select bank1
 12337  06A8  0261               	subwf	(timerInterrupt@lum+1)^(0+128),w
 12338  06A9  30FE               	movlw	254
 12339  06AA  1903               	skipnz
 12340  06AB  0260               	subwf	timerInterrupt@lum^(0+128),w
 12341  06AC  1803               	skipnc
 12342  06AD  2EAF               	goto	u486_21
 12343  06AE  2EB0               	goto	u486_20
 12344  06AF                     u486_21:
 12345  06AF  2EB9               	goto	i1l1354
 12346  06B0                     u486_20:
 12347  06B0                     i1l5260:
 12348  06B0  3000               	movlw	0
 12349  06B1  0261               	subwf	(timerInterrupt@lum+1)^(0+128),w
 12350  06B2  30FF               	movlw	255
 12351  06B3  1903               	skipnz
 12352  06B4  0260               	subwf	timerInterrupt@lum^(0+128),w
 12353  06B5  1803               	skipnc
 12354  06B6  2EB8               	goto	u487_21
 12355  06B7  2EB9               	goto	u487_20
 12356  06B8                     u487_21:
 12357  06B8  2EBC               	goto	i1l1357
 12358  06B9                     u487_20:
 12359  06B9                     i1l1354:	
 12360                           ;main.c: 229:         do { LATAbits.LATA4 = 1; } while(0);
 12361                           
 12362  06B9  0020               	movlb	0	; select bank0
 12363  06BA  1616               	bsf	22,4	;volatile
 12364  06BB  2EBE               	goto	i1l5262
 12365  06BC                     i1l1357:	
 12366                           ;main.c: 231:         do { LATAbits.LATA4 = 0; } while(0);
 12367                           
 12368  06BC  0020               	movlb	0	; select bank0
 12369  06BD  1216               	bcf	22,4	;volatile
 12370  06BE                     i1l5262:
 12371                           
 12372                           ;main.c: 233:     if(mode==0){
 12373  06BE  0021               	movlb	1	; select bank1
 12374  06BF  0868               	movf	_mode^(0+128),w
 12375  06C0  1D03               	btfss	3,2
 12376  06C1  2EC3               	goto	u488_21
 12377  06C2  2EC4               	goto	u488_20
 12378  06C3                     u488_21:
 12379  06C3  2ED9               	goto	i1l1361
 12380  06C4                     u488_20:
 12381  06C4                     i1l5264:
 12382                           
 12383                           ;main.c: 234:     if(PORTBbits.RB4==0){
 12384  06C4  0020               	movlb	0	; select bank0
 12385  06C5  1A0D               	btfsc	13,4	;volatile
 12386  06C6  2EC8               	goto	u489_21
 12387  06C7  2EC9               	goto	u489_20
 12388  06C8                     u489_21:
 12389  06C8  2ED9               	goto	i1l1361
 12390  06C9                     u489_20:
 12391  06C9                     i1l5266:
 12392                           
 12393                           ;main.c: 235:         mode=1;
 12394  06C9  0021               	movlb	1	; select bank1
 12395  06CA  01E8               	clrf	_mode^(0+128)
 12396  06CB  0AE8               	incf	_mode^(0+128),f
 12397  06CC                     i1l5268:
 12398                           
 12399                           ;main.c: 236:         _delay((unsigned long)((1000)*(1000000/4000.0)));
 12400  06CC  3002               	movlw	2
 12401  06CD  0020               	movlb	0	; select bank0
 12402  06CE  00ED               	movwf	??_timerInterrupt+1
 12403  06CF  3045               	movlw	69
 12404  06D0  00EC               	movwf	??_timerInterrupt
 12405  06D1  30A9               	movlw	169
 12406  06D2                     u591_27:
 12407  06D2  0B89               	decfsz	9,f
 12408  06D3  2ED2               	goto	u591_27
 12409  06D4  0BEC               	decfsz	??_timerInterrupt,f
 12410  06D5  2ED2               	goto	u591_27
 12411  06D6  0BED               	decfsz	??_timerInterrupt+1,f
 12412  06D7  2ED2               	goto	u591_27
 12413  06D8  3200               	nop2
 12414  06D9                     i1l1361:
 12415  06D9  0008               	return
 12416  06DA                     __end_of_timerInterrupt:
 12417                           
 12418                           	psect	text27
 12419  1728                     __ptext27:	
 12420 ;; *************** function _writeRingBuffer *****************
 12421 ;; Defined at:
 12422 ;;		line 109 in file "main.c"
 12423 ;; Parameters:    Size  Location     Type
 12424 ;;  temperature     1    wreg     unsigned char 
 12425 ;;  luminosity      1    4[COMMON] unsigned char 
 12426 ;; Auto vars:     Size  Location     Type
 12427 ;;  temperature     1    6[COMMON] unsigned char 
 12428 ;; Return value:  Size  Location     Type
 12429 ;;                  1    wreg      void 
 12430 ;; Registers used:
 12431 ;;		wreg, status,2, status,0, pclath, cstack
 12432 ;; Tracked objects:
 12433 ;;		On entry : 0/0
 12434 ;;		On exit  : 0/0
 12435 ;;		Unchanged: 0/0
 12436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12437 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12440 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12441 ;;Total ram usage:        3 bytes
 12442 ;; Hardware stack levels used: 1
 12443 ;; Hardware stack levels required when called: 1
 12444 ;; This function calls:
 12445 ;;		i1_DATAEE_WriteByte
 12446 ;; This function is called by:
 12447 ;;		_timerInterrupt
 12448 ;; This function uses a non-reentrant model
 12449 ;;
 12450                           
 12451                           
 12452                           ;psect for function _writeRingBuffer
 12453  1728                     _writeRingBuffer:
 12454                           
 12455                           ;incstack = 0
 12456                           ; Regs used in _writeRingBuffer: [wreg+status,2+status,0+pclath+cstack]
 12457                           ;writeRingBuffer@temperature stored from wreg
 12458  1728  00F6               	movwf	writeRingBuffer@temperature
 12459  1729                     i1l5110:
 12460                           
 12461                           ;main.c: 111:     DATAEE_WriteByte(data_address, hours);
 12462  1729  0022               	movlb	2	; select bank2
 12463  172A  084A               	movf	(_data_address+1)^(0+256),w
 12464  172B  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 12465  172C  0849               	movf	_data_address^(0+256),w
 12466  172D  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 12467  172E  0021               	movlb	1	; select bank1
 12468  172F  086D               	movf	_hours^(0+128),w
 12469  1730  00F5               	movwf	??_writeRingBuffer
 12470  1731  0875               	movf	??_writeRingBuffer,w
 12471  1732  00F2               	movwf	i1DATAEE_WriteByte@bData
 12472  1733  3193  23B7  3197   	fcall	i1_DATAEE_WriteByte
 12473                           
 12474                           ;main.c: 112:     DATAEE_WriteByte(data_address + 1, minutes);
 12475  1736  0022               	movlb	2	; select bank2
 12476  1737  0849               	movf	_data_address^(0+256),w
 12477  1738  3E01               	addlw	1
 12478  1739  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 12479  173A  3000               	movlw	0
 12480  173B  3D4A               	addwfc	(_data_address+1)^(0+256),w
 12481  173C  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 12482  173D  0021               	movlb	1	; select bank1
 12483  173E  086C               	movf	_minutes^(0+128),w
 12484  173F  00F5               	movwf	??_writeRingBuffer
 12485  1740  0875               	movf	??_writeRingBuffer,w
 12486  1741  00F2               	movwf	i1DATAEE_WriteByte@bData
 12487  1742  3193  23B7  3197   	fcall	i1_DATAEE_WriteByte
 12488                           
 12489                           ;main.c: 113:     DATAEE_WriteByte(data_address + 2, seconds);
 12490  1745  0022               	movlb	2	; select bank2
 12491  1746  0849               	movf	_data_address^(0+256),w
 12492  1747  3E02               	addlw	2
 12493  1748  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 12494  1749  3000               	movlw	0
 12495  174A  3D4A               	addwfc	(_data_address+1)^(0+256),w
 12496  174B  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 12497  174C  0021               	movlb	1	; select bank1
 12498  174D  086B               	movf	_seconds^(0+128),w
 12499  174E  00F5               	movwf	??_writeRingBuffer
 12500  174F  0875               	movf	??_writeRingBuffer,w
 12501  1750  00F2               	movwf	i1DATAEE_WriteByte@bData
 12502  1751  3193  23B7  3197   	fcall	i1_DATAEE_WriteByte
 12503                           
 12504                           ;main.c: 114:     DATAEE_WriteByte(data_address + 3, temperature);
 12505  1754  0022               	movlb	2	; select bank2
 12506  1755  0849               	movf	_data_address^(0+256),w
 12507  1756  3E03               	addlw	3
 12508  1757  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 12509  1758  3000               	movlw	0
 12510  1759  3D4A               	addwfc	(_data_address+1)^(0+256),w
 12511  175A  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 12512  175B  0876               	movf	writeRingBuffer@temperature,w
 12513  175C  00F5               	movwf	??_writeRingBuffer
 12514  175D  0875               	movf	??_writeRingBuffer,w
 12515  175E  00F2               	movwf	i1DATAEE_WriteByte@bData
 12516  175F  3193  23B7  3197   	fcall	i1_DATAEE_WriteByte
 12517                           
 12518                           ;main.c: 115:     DATAEE_WriteByte(data_address + 4, luminosity);
 12519  1762  0022               	movlb	2	; select bank2
 12520  1763  0849               	movf	_data_address^(0+256),w
 12521  1764  3E04               	addlw	4
 12522  1765  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 12523  1766  3000               	movlw	0
 12524  1767  3D4A               	addwfc	(_data_address+1)^(0+256),w
 12525  1768  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 12526  1769  0874               	movf	writeRingBuffer@luminosity,w
 12527  176A  00F5               	movwf	??_writeRingBuffer
 12528  176B  0875               	movf	??_writeRingBuffer,w
 12529  176C  00F2               	movwf	i1DATAEE_WriteByte@bData
 12530  176D  3193  23B7  3197   	fcall	i1_DATAEE_WriteByte
 12531  1770                     i1l5112:
 12532                           
 12533                           ;main.c: 117:     last_temperature = temperature;
 12534  1770  0876               	movf	writeRingBuffer@temperature,w
 12535  1771  00F5               	movwf	??_writeRingBuffer
 12536  1772  0875               	movf	??_writeRingBuffer,w
 12537  1773  0021               	movlb	1	; select bank1
 12538  1774  00EE               	movwf	_last_temperature^(0+128)
 12539  1775                     i1l5114:
 12540                           
 12541                           ;main.c: 118:     last_luminosity = luminosity;
 12542  1775  0874               	movf	writeRingBuffer@luminosity,w
 12543  1776  00F5               	movwf	??_writeRingBuffer
 12544  1777  0875               	movf	??_writeRingBuffer,w
 12545  1778  00EF               	movwf	_last_luminosity^(0+128)
 12546  1779                     i1l5116:
 12547                           
 12548                           ;main.c: 121:     if(data_address == (0x7000 + 20)){
 12549  1779  3014               	movlw	20
 12550  177A  0022               	movlb	2	; select bank2
 12551  177B  0649               	xorwf	_data_address^(0+256),w
 12552  177C  3070               	movlw	112
 12553  177D  1903               	skipnz
 12554  177E  064A               	xorwf	(_data_address+1)^(0+256),w
 12555  177F  1D03               	btfss	3,2
 12556  1780  2F82               	goto	u453_21
 12557  1781  2F83               	goto	u453_20
 12558  1782                     u453_21:
 12559  1782  2F88               	goto	i1l5120
 12560  1783                     u453_20:
 12561  1783                     i1l5118:
 12562                           
 12563                           ;main.c: 123:         data_address = 0x7000;
 12564  1783  3000               	movlw	0
 12565  1784  00C9               	movwf	_data_address^(0+256)
 12566  1785  3070               	movlw	112
 12567  1786  00CA               	movwf	(_data_address^(0+256)+1)
 12568                           
 12569                           ;main.c: 125:     }else{
 12570  1787  2F8E               	goto	i1l1298
 12571  1788                     i1l5120:
 12572                           
 12573                           ;main.c: 127:         data_address = data_address + 5;
 12574  1788  0849               	movf	_data_address^(0+256),w
 12575  1789  3E05               	addlw	5
 12576  178A  00C9               	movwf	_data_address^(0+256)
 12577  178B  3000               	movlw	0
 12578  178C  3D4A               	addwfc	(_data_address+1)^(0+256),w
 12579  178D  00CA               	movwf	(_data_address+1)^(0+256)
 12580  178E                     i1l1298:
 12581  178E  0008               	return
 12582  178F                     __end_of_writeRingBuffer:
 12583                           
 12584                           	psect	text28
 12585  13B7                     __ptext28:	
 12586 ;; *************** function i1_DATAEE_WriteByte *****************
 12587 ;; Defined at:
 12588 ;;		line 180 in file "mcc_generated_files/memory.c"
 12589 ;; Parameters:    Size  Location     Type
 12590 ;;  bAdd            2    0[COMMON] unsigned short 
 12591 ;;  bData           1    2[COMMON] unsigned char 
 12592 ;; Auto vars:     Size  Location     Type
 12593 ;;  GIEBitValue     1    3[COMMON] unsigned char 
 12594 ;; Return value:  Size  Location     Type
 12595 ;;                  1    wreg      void 
 12596 ;; Registers used:
 12597 ;;		wreg, status,2, status,0
 12598 ;; Tracked objects:
 12599 ;;		On entry : 0/0
 12600 ;;		On exit  : 0/0
 12601 ;;		Unchanged: 0/0
 12602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12603 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12606 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12607 ;;Total ram usage:        4 bytes
 12608 ;; Hardware stack levels used: 1
 12609 ;; This function calls:
 12610 ;;		Nothing
 12611 ;; This function is called by:
 12612 ;;		_writeRingBuffer
 12613 ;;		_timerInterrupt
 12614 ;; This function uses a non-reentrant model
 12615 ;;
 12616                           
 12617                           
 12618                           ;psect for function i1_DATAEE_WriteByte
 12619  13B7                     i1_DATAEE_WriteByte:
 12620  13B7                     i1l5024:	
 12621                           ;incstack = 0
 12622                           ; Regs used in i1_DATAEE_WriteByte: [wreg+status,2+status,0]
 12623                           
 12624                           
 12625                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 12626  13B7  3000               	movlw	0
 12627  13B8  1B8B               	btfsc	11,7	;volatile
 12628  13B9  3001               	movlw	1
 12629  13BA  00F3               	movwf	i1DATAEE_WriteByte@GIEBitValue
 12630                           
 12631                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 12632  13BB  0871               	movf	i1DATAEE_WriteByte@bAdd+1,w
 12633  13BC  0030               	movlb	16	; select bank16
 12634  13BD  009B               	movwf	27	;volatile
 12635  13BE                     i1l5026:
 12636                           
 12637                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 12638  13BE  0870               	movf	i1DATAEE_WriteByte@bAdd,w
 12639  13BF  009A               	movwf	26	;volatile
 12640  13C0                     i1l5028:
 12641                           
 12642                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 12643  13C0  0872               	movf	i1DATAEE_WriteByte@bData,w
 12644  13C1  009C               	movwf	28	;volatile
 12645  13C2                     i1l5030:
 12646                           
 12647                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 12648  13C2  171E               	bsf	30,6	;volsfr
 12649  13C3                     i1l5032:
 12650                           
 12651                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 12652  13C3  151E               	bsf	30,2	;volsfr
 12653  13C4                     i1l5034:
 12654                           
 12655                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 12656  13C4  138B               	bcf	11,7	;volatile
 12657  13C5                     i1l5036:
 12658                           
 12659                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 12660  13C5  3055               	movlw	85
 12661  13C6  009F               	movwf	31	;volsfr
 12662  13C7                     i1l5038:
 12663                           
 12664                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 12665  13C7  30AA               	movlw	170
 12666  13C8  009F               	movwf	31	;volsfr
 12667  13C9                     i1l5040:
 12668                           
 12669                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 12670  13C9  149E               	bsf	30,1	;volsfr
 12671  13CA                     i1l767:	
 12672                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 12673                           
 12674                           
 12675                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 12676  13CA  189E               	btfsc	30,1	;volsfr
 12677  13CB  2BCD               	goto	u426_21
 12678  13CC  2BCE               	goto	u426_20
 12679  13CD                     u426_21:
 12680  13CD  2BCA               	goto	i1l767
 12681  13CE                     u426_20:
 12682  13CE                     i1l769:
 12683                           
 12684                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 12685  13CE  111E               	bcf	30,2	;volsfr
 12686  13CF                     i1l5042:
 12687                           
 12688                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 12689  13CF  0C73               	rrf	i1DATAEE_WriteByte@GIEBitValue,w
 12690  13D0  1C03               	skipc
 12691  13D1  138B               	bcf	11,7	;volatile
 12692  13D2  1803               	skipnc
 12693  13D3  178B               	bsf	11,7	;volatile
 12694  13D4                     i1l770:
 12695  13D4  0008               	return
 12696  13D5                     __end_ofi1_DATAEE_WriteByte:
 12697                           
 12698                           	psect	text29
 12699  06DA                     __ptext29:	
 12700 ;; *************** function _readTC74 *****************
 12701 ;; Defined at:
 12702 ;;		line 80 in file "main.c"
 12703 ;; Parameters:    Size  Location     Type
 12704 ;;		None
 12705 ;; Auto vars:     Size  Location     Type
 12706 ;;  value           1    3[COMMON] unsigned char 
 12707 ;; Return value:  Size  Location     Type
 12708 ;;                  1    wreg      unsigned char 
 12709 ;; Registers used:
 12710 ;;		wreg, status,2, status,0, pclath, cstack
 12711 ;; Tracked objects:
 12712 ;;		On entry : 0/0
 12713 ;;		On exit  : 0/0
 12714 ;;		Unchanged: 0/0
 12715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12718 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12719 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12720 ;;Total ram usage:        2 bytes
 12721 ;; Hardware stack levels used: 1
 12722 ;; Hardware stack levels required when called: 1
 12723 ;; This function calls:
 12724 ;;		_ReadI2C
 12725 ;;		i1_WriteI2C
 12726 ;; This function is called by:
 12727 ;;		_timerInterrupt
 12728 ;; This function uses a non-reentrant model
 12729 ;;
 12730                           
 12731                           
 12732                           ;psect for function _readTC74
 12733  06DA                     _readTC74:
 12734  06DA                     i1l1203:	
 12735                           ;incstack = 0
 12736                           ; Regs used in _readTC74: [wreg+status,2+status,0+pclath+cstack]
 12737                           ;main.c: 82:  unsigned char value;;main.c: 83: do{
 12738                           
 12739  06DA                     i1l5058:	
 12740                           ;main.c: 84:  while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12741                           
 12742  06DA  0023               	movlb	3	; select bank3
 12743  06DB  0C0F               	rrf	15,w	;volatile
 12744  06DC  0C89               	rrf	9,f
 12745  06DD  3901               	andlw	1
 12746  06DE  00F2               	movwf	??_readTC74
 12747  06DF  0811               	movf	17,w	;volatile
 12748  06E0  391F               	andlw	31
 12749  06E1  0472               	iorwf	??_readTC74,w
 12750  06E2  1D03               	btfss	3,2
 12751  06E3  2EE5               	goto	u428_21
 12752  06E4  2EE6               	goto	u428_20
 12753  06E5                     u428_21:
 12754  06E5  2EDA               	goto	i1l5058
 12755  06E6                     u428_20:
 12756  06E6                     i1l1207:	
 12757                           ;main.c: 85:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
 12758                           
 12759  06E6  1411               	bsf	17,0	;volatile
 12760  06E7                     i1l1208:
 12761  06E7  1811               	btfsc	17,0	;volatile
 12762  06E8  2EEA               	goto	u429_21
 12763  06E9  2EEB               	goto	u429_20
 12764  06EA                     u429_21:
 12765  06EA  2EE7               	goto	i1l1208
 12766  06EB                     u429_20:
 12767  06EB                     i1l5060:
 12768  06EB  0C0F               	rrf	15,w	;volatile
 12769  06EC  0C89               	rrf	9,f
 12770  06ED  3901               	andlw	1
 12771  06EE  00F2               	movwf	??_readTC74
 12772  06EF  0811               	movf	17,w	;volatile
 12773  06F0  391F               	andlw	31
 12774  06F1  0472               	iorwf	??_readTC74,w
 12775  06F2  1D03               	btfss	3,2
 12776  06F3  2EF5               	goto	u430_21
 12777  06F4  2EF6               	goto	u430_20
 12778  06F5                     u430_21:
 12779  06F5  2EEB               	goto	i1l5060
 12780  06F6                     u430_20:
 12781  06F6                     i1l5062:
 12782                           
 12783                           ;main.c: 87:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12784  06F6  309A               	movlw	154
 12785  06F7  3195  253C  3186   	fcall	i1_WriteI2C
 12786  06FA                     i1l5064:
 12787  06FA  0023               	movlb	3	; select bank3
 12788  06FB  0C0F               	rrf	15,w	;volatile
 12789  06FC  0C89               	rrf	9,f
 12790  06FD  3901               	andlw	1
 12791  06FE  00F2               	movwf	??_readTC74
 12792  06FF  0811               	movf	17,w	;volatile
 12793  0700  391F               	andlw	31
 12794  0701  0472               	iorwf	??_readTC74,w
 12795  0702  1D03               	btfss	3,2
 12796  0703  2F05               	goto	u431_21
 12797  0704  2F06               	goto	u431_20
 12798  0705                     u431_21:
 12799  0705  2EFA               	goto	i1l5064
 12800  0706                     u431_20:
 12801  0706                     i1l5066:
 12802                           
 12803                           ;main.c: 88:  WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12804  0706  3001               	movlw	1
 12805  0707  3195  253C  3186   	fcall	i1_WriteI2C
 12806  070A                     i1l5068:
 12807  070A  0023               	movlb	3	; select bank3
 12808  070B  0C0F               	rrf	15,w	;volatile
 12809  070C  0C89               	rrf	9,f
 12810  070D  3901               	andlw	1
 12811  070E  00F2               	movwf	??_readTC74
 12812  070F  0811               	movf	17,w	;volatile
 12813  0710  391F               	andlw	31
 12814  0711  0472               	iorwf	??_readTC74,w
 12815  0712  1D03               	btfss	3,2
 12816  0713  2F15               	goto	u432_21
 12817  0714  2F16               	goto	u432_20
 12818  0715                     u432_21:
 12819  0715  2F0A               	goto	i1l5068
 12820  0716                     u432_20:
 12821  0716                     i1l1221:	
 12822                           ;main.c: 89:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12823                           
 12824  0716  1491               	bsf	17,1	;volatile
 12825  0717                     i1l1222:
 12826  0717  1891               	btfsc	17,1	;volatile
 12827  0718  2F1A               	goto	u433_21
 12828  0719  2F1B               	goto	u433_20
 12829  071A                     u433_21:
 12830  071A  2F17               	goto	i1l1222
 12831  071B                     u433_20:
 12832  071B                     i1l5070:
 12833  071B  0C0F               	rrf	15,w	;volatile
 12834  071C  0C89               	rrf	9,f
 12835  071D  3901               	andlw	1
 12836  071E  00F2               	movwf	??_readTC74
 12837  071F  0811               	movf	17,w	;volatile
 12838  0720  391F               	andlw	31
 12839  0721  0472               	iorwf	??_readTC74,w
 12840  0722  1D03               	btfss	3,2
 12841  0723  2F25               	goto	u434_21
 12842  0724  2F26               	goto	u434_20
 12843  0725                     u434_21:
 12844  0725  2F1B               	goto	i1l5070
 12845  0726                     u434_20:
 12846  0726                     i1l5072:
 12847                           
 12848                           ;main.c: 90:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12849  0726  309B               	movlw	155
 12850  0727  3195  253C  3186   	fcall	i1_WriteI2C
 12851  072A                     i1l5074:
 12852  072A  0023               	movlb	3	; select bank3
 12853  072B  0C0F               	rrf	15,w	;volatile
 12854  072C  0C89               	rrf	9,f
 12855  072D  3901               	andlw	1
 12856  072E  00F2               	movwf	??_readTC74
 12857  072F  0811               	movf	17,w	;volatile
 12858  0730  391F               	andlw	31
 12859  0731  0472               	iorwf	??_readTC74,w
 12860  0732  1D03               	btfss	3,2
 12861  0733  2F35               	goto	u435_21
 12862  0734  2F36               	goto	u435_20
 12863  0735                     u435_21:
 12864  0735  2F2A               	goto	i1l5074
 12865  0736                     u435_20:
 12866  0736                     i1l5076:
 12867                           
 12868                           ;main.c: 91:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12869  0736  3193  2369  3186   	fcall	_ReadI2C
 12870  0739  00F2               	movwf	??_readTC74
 12871  073A  0872               	movf	??_readTC74,w
 12872  073B  00F3               	movwf	readTC74@value
 12873  073C                     i1l5078:
 12874  073C  0023               	movlb	3	; select bank3
 12875  073D  0C0F               	rrf	15,w	;volatile
 12876  073E  0C89               	rrf	9,f
 12877  073F  3901               	andlw	1
 12878  0740  00F2               	movwf	??_readTC74
 12879  0741  0811               	movf	17,w	;volatile
 12880  0742  391F               	andlw	31
 12881  0743  0472               	iorwf	??_readTC74,w
 12882  0744  1D03               	btfss	3,2
 12883  0745  2F47               	goto	u436_21
 12884  0746  2F48               	goto	u436_20
 12885  0747                     u436_21:
 12886  0747  2F3C               	goto	i1l5078
 12887  0748                     u436_20:
 12888  0748                     i1l1235:	
 12889                           ;main.c: 92:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); 
      +                          } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12890                           
 12891  0748  1691               	bsf	17,5	;volatile
 12892  0749  1611               	bsf	17,4	;volatile
 12893  074A                     i1l1236:
 12894  074A  1A11               	btfsc	17,4	;volatile
 12895  074B  2F4D               	goto	u437_21
 12896  074C  2F4E               	goto	u437_20
 12897  074D                     u437_21:
 12898  074D  2F4A               	goto	i1l1236
 12899  074E                     u437_20:
 12900  074E                     i1l5080:
 12901  074E  0C0F               	rrf	15,w	;volatile
 12902  074F  0C89               	rrf	9,f
 12903  0750  3901               	andlw	1
 12904  0751  00F2               	movwf	??_readTC74
 12905  0752  0811               	movf	17,w	;volatile
 12906  0753  391F               	andlw	31
 12907  0754  0472               	iorwf	??_readTC74,w
 12908  0755  1D03               	btfss	3,2
 12909  0756  2F58               	goto	u438_21
 12910  0757  2F59               	goto	u438_20
 12911  0758                     u438_21:
 12912  0758  2F4E               	goto	i1l5080
 12913  0759                     u438_20:
 12914  0759                     i1l1243:	
 12915                           ;main.c: 93:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 12916                           
 12917  0759  1511               	bsf	17,2	;volatile
 12918  075A                     i1l1244:
 12919  075A  1911               	btfsc	17,2	;volatile
 12920  075B  2F5D               	goto	u439_21
 12921  075C  2F5E               	goto	u439_20
 12922  075D                     u439_21:
 12923  075D  2F5A               	goto	i1l1244
 12924  075E                     u439_20:
 12925  075E                     i1l1247:
 12926                           
 12927                           ;main.c: 94: } while (!(value & 0x40));
 12928  075E  1F73               	btfss	readTC74@value,6
 12929  075F  2F61               	goto	u440_21
 12930  0760  2F62               	goto	u440_20
 12931  0761                     u440_21:
 12932  0761  2EDA               	goto	i1l1203
 12933  0762                     u440_20:
 12934  0762                     i1l5082:
 12935  0762  0C0F               	rrf	15,w	;volatile
 12936  0763  0C89               	rrf	9,f
 12937  0764  3901               	andlw	1
 12938  0765  00F2               	movwf	??_readTC74
 12939  0766  0811               	movf	17,w	;volatile
 12940  0767  391F               	andlw	31
 12941  0768  0472               	iorwf	??_readTC74,w
 12942  0769  1D03               	btfss	3,2
 12943  076A  2F6C               	goto	u441_21
 12944  076B  2F6D               	goto	u441_20
 12945  076C                     u441_21:
 12946  076C  2F62               	goto	i1l5082
 12947  076D                     u441_20:
 12948  076D                     i1l1252:	
 12949                           ;main.c: 97:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
 12950                           
 12951  076D  1411               	bsf	17,0	;volatile
 12952  076E                     i1l1253:
 12953  076E  1811               	btfsc	17,0	;volatile
 12954  076F  2F71               	goto	u442_21
 12955  0770  2F72               	goto	u442_20
 12956  0771                     u442_21:
 12957  0771  2F6E               	goto	i1l1253
 12958  0772                     u442_20:
 12959  0772                     i1l5084:
 12960  0772  0C0F               	rrf	15,w	;volatile
 12961  0773  0C89               	rrf	9,f
 12962  0774  3901               	andlw	1
 12963  0775  00F2               	movwf	??_readTC74
 12964  0776  0811               	movf	17,w	;volatile
 12965  0777  391F               	andlw	31
 12966  0778  0472               	iorwf	??_readTC74,w
 12967  0779  1D03               	btfss	3,2
 12968  077A  2F7C               	goto	u443_21
 12969  077B  2F7D               	goto	u443_20
 12970  077C                     u443_21:
 12971  077C  2F72               	goto	i1l5084
 12972  077D                     u443_20:
 12973  077D                     i1l5086:
 12974                           
 12975                           ;main.c: 98:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12976  077D  309A               	movlw	154
 12977  077E  3195  253C  3186   	fcall	i1_WriteI2C
 12978  0781                     i1l5088:
 12979  0781  0023               	movlb	3	; select bank3
 12980  0782  0C0F               	rrf	15,w	;volatile
 12981  0783  0C89               	rrf	9,f
 12982  0784  3901               	andlw	1
 12983  0785  00F2               	movwf	??_readTC74
 12984  0786  0811               	movf	17,w	;volatile
 12985  0787  391F               	andlw	31
 12986  0788  0472               	iorwf	??_readTC74,w
 12987  0789  1D03               	btfss	3,2
 12988  078A  2F8C               	goto	u444_21
 12989  078B  2F8D               	goto	u444_20
 12990  078C                     u444_21:
 12991  078C  2F81               	goto	i1l5088
 12992  078D                     u444_20:
 12993  078D                     i1l5090:
 12994                           
 12995                           ;main.c: 99:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12996  078D  3000               	movlw	0
 12997  078E  3195  253C  3186   	fcall	i1_WriteI2C
 12998  0791                     i1l5092:
 12999  0791  0023               	movlb	3	; select bank3
 13000  0792  0C0F               	rrf	15,w	;volatile
 13001  0793  0C89               	rrf	9,f
 13002  0794  3901               	andlw	1
 13003  0795  00F2               	movwf	??_readTC74
 13004  0796  0811               	movf	17,w	;volatile
 13005  0797  391F               	andlw	31
 13006  0798  0472               	iorwf	??_readTC74,w
 13007  0799  1D03               	btfss	3,2
 13008  079A  2F9C               	goto	u445_21
 13009  079B  2F9D               	goto	u445_20
 13010  079C                     u445_21:
 13011  079C  2F91               	goto	i1l5092
 13012  079D                     u445_20:
 13013  079D                     i1l1266:	
 13014                           ;main.c: 100:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((S
      +                          SP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13015                           
 13016  079D  1491               	bsf	17,1	;volatile
 13017  079E                     i1l1267:
 13018  079E  1891               	btfsc	17,1	;volatile
 13019  079F  2FA1               	goto	u446_21
 13020  07A0  2FA2               	goto	u446_20
 13021  07A1                     u446_21:
 13022  07A1  2F9E               	goto	i1l1267
 13023  07A2                     u446_20:
 13024  07A2                     i1l5094:
 13025  07A2  0C0F               	rrf	15,w	;volatile
 13026  07A3  0C89               	rrf	9,f
 13027  07A4  3901               	andlw	1
 13028  07A5  00F2               	movwf	??_readTC74
 13029  07A6  0811               	movf	17,w	;volatile
 13030  07A7  391F               	andlw	31
 13031  07A8  0472               	iorwf	??_readTC74,w
 13032  07A9  1D03               	btfss	3,2
 13033  07AA  2FAC               	goto	u447_21
 13034  07AB  2FAD               	goto	u447_20
 13035  07AC                     u447_21:
 13036  07AC  2FA2               	goto	i1l5094
 13037  07AD                     u447_20:
 13038  07AD                     i1l5096:
 13039                           
 13040                           ;main.c: 101:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13041  07AD  309B               	movlw	155
 13042  07AE  3195  253C  3186   	fcall	i1_WriteI2C
 13043  07B1                     i1l5098:
 13044  07B1  0023               	movlb	3	; select bank3
 13045  07B2  0C0F               	rrf	15,w	;volatile
 13046  07B3  0C89               	rrf	9,f
 13047  07B4  3901               	andlw	1
 13048  07B5  00F2               	movwf	??_readTC74
 13049  07B6  0811               	movf	17,w	;volatile
 13050  07B7  391F               	andlw	31
 13051  07B8  0472               	iorwf	??_readTC74,w
 13052  07B9  1D03               	btfss	3,2
 13053  07BA  2FBC               	goto	u448_21
 13054  07BB  2FBD               	goto	u448_20
 13055  07BC                     u448_21:
 13056  07BC  2FB1               	goto	i1l5098
 13057  07BD                     u448_20:
 13058  07BD                     i1l5100:
 13059                           
 13060                           ;main.c: 102:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13061  07BD  3193  2369  3186   	fcall	_ReadI2C
 13062  07C0  00F2               	movwf	??_readTC74
 13063  07C1  0872               	movf	??_readTC74,w
 13064  07C2  00F3               	movwf	readTC74@value
 13065  07C3                     i1l5102:
 13066  07C3  0023               	movlb	3	; select bank3
 13067  07C4  0C0F               	rrf	15,w	;volatile
 13068  07C5  0C89               	rrf	9,f
 13069  07C6  3901               	andlw	1
 13070  07C7  00F2               	movwf	??_readTC74
 13071  07C8  0811               	movf	17,w	;volatile
 13072  07C9  391F               	andlw	31
 13073  07CA  0472               	iorwf	??_readTC74,w
 13074  07CB  1D03               	btfss	3,2
 13075  07CC  2FCE               	goto	u449_21
 13076  07CD  2FCF               	goto	u449_20
 13077  07CE                     u449_21:
 13078  07CE  2FC3               	goto	i1l5102
 13079  07CF                     u449_20:
 13080  07CF                     i1l1280:	
 13081                           ;main.c: 103:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
      +                           } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13082                           
 13083  07CF  1691               	bsf	17,5	;volatile
 13084  07D0  1611               	bsf	17,4	;volatile
 13085  07D1                     i1l1281:
 13086  07D1  1A11               	btfsc	17,4	;volatile
 13087  07D2  2FD4               	goto	u450_21
 13088  07D3  2FD5               	goto	u450_20
 13089  07D4                     u450_21:
 13090  07D4  2FD1               	goto	i1l1281
 13091  07D5                     u450_20:
 13092  07D5                     i1l5104:
 13093  07D5  0C0F               	rrf	15,w	;volatile
 13094  07D6  0C89               	rrf	9,f
 13095  07D7  3901               	andlw	1
 13096  07D8  00F2               	movwf	??_readTC74
 13097  07D9  0811               	movf	17,w	;volatile
 13098  07DA  391F               	andlw	31
 13099  07DB  0472               	iorwf	??_readTC74,w
 13100  07DC  1D03               	btfss	3,2
 13101  07DD  2FDF               	goto	u451_21
 13102  07DE  2FE0               	goto	u451_20
 13103  07DF                     u451_21:
 13104  07DF  2FD5               	goto	i1l5104
 13105  07E0                     u451_20:
 13106  07E0                     i1l1288:	
 13107                           ;main.c: 104:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 13108                           
 13109  07E0  1511               	bsf	17,2	;volatile
 13110  07E1                     i1l1289:
 13111  07E1  1911               	btfsc	17,2	;volatile
 13112  07E2  2FE4               	goto	u452_21
 13113  07E3  2FE5               	goto	u452_20
 13114  07E4                     u452_21:
 13115  07E4  2FE1               	goto	i1l1289
 13116  07E5                     u452_20:
 13117  07E5                     i1l5106:
 13118                           
 13119                           ;main.c: 106:  return value;
 13120  07E5  0873               	movf	readTC74@value,w
 13121  07E6                     i1l1293:
 13122  07E6  0008               	return
 13123  07E7                     __end_of_readTC74:
 13124                           
 13125                           	psect	text30
 13126  0847                     __ptext30:	
 13127 ;; *************** function _printLCD *****************
 13128 ;; Defined at:
 13129 ;;		line 136 in file "main.c"
 13130 ;; Parameters:    Size  Location     Type
 13131 ;;		None
 13132 ;; Auto vars:     Size  Location     Type
 13133 ;;  buf            33   29[BANK1 ] unsigned char [33]
 13134 ;; Return value:  Size  Location     Type
 13135 ;;                  1    wreg      void 
 13136 ;; Registers used:
 13137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13138 ;; Tracked objects:
 13139 ;;		On entry : 0/0
 13140 ;;		On exit  : 0/0
 13141 ;;		Unchanged: 0/0
 13142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13144 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
 13145 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 13146 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0
 13147 ;;Total ram usage:       43 bytes
 13148 ;; Hardware stack levels used: 1
 13149 ;; Hardware stack levels required when called: 8
 13150 ;; This function calls:
 13151 ;;		_LCDbusy
 13152 ;;		_LCDcmd
 13153 ;;		_LCDstr
 13154 ;;		_sprintf
 13155 ;; This function is called by:
 13156 ;;		_timerInterrupt
 13157 ;; This function uses a non-reentrant model
 13158 ;;
 13159                           
 13160                           
 13161                           ;psect for function _printLCD
 13162  0847                     _printLCD:
 13163  0847                     i1l5122:	
 13164                           ;incstack = 0
 13165                           ; Regs used in _printLCD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13166                           
 13167                           
 13168                           ;main.c: 138:     char buf[33];;main.c: 139:     LCDcmd(0x80);
 13169  0847  3080               	movlw	128
 13170  0848  3192  2295  3188   	fcall	_LCDcmd
 13171  084B                     i1l5124:	
 13172                           ;main.c: 140:     while (LCDbusy());
 13173                           
 13174  084B  3192  22F7  3188   	fcall	_LCDbusy
 13175  084E  0877               	movf	?_LCDbusy,w
 13176  084F  0478               	iorwf	?_LCDbusy+1,w
 13177  0850  1D03               	btfss	3,2
 13178  0851  2853               	goto	u454_21
 13179  0852  2854               	goto	u454_20
 13180  0853                     u454_21:
 13181  0853  284B               	goto	i1l5124
 13182  0854                     u454_20:
 13183  0854                     i1l5126:
 13184                           
 13185                           ;main.c: 141:     sprintf(buf, "%02d:%02d:%02d  %c  %c", hours, minutes, seconds, charac
      +                          ter, alarmc);
 13186  0854  3020               	movlw	low (STR_1| (0+32768))
 13187  0855  0021               	movlb	1	; select bank1
 13188  0856  00A0               	movwf	sprintf@fmt^(0+128)
 13189  0857  3098               	movlw	high (STR_1| (0+32768))
 13190  0858  00A1               	movwf	(sprintf@fmt^(0+128)+1)
 13191  0859  086D               	movf	_hours^(0+128),w
 13192  085A  00B3               	movwf	??_printLCD^(0+128)
 13193  085B  01B4               	clrf	(??_printLCD^(0+128)+1)
 13194  085C  0833               	movf	??_printLCD^(0+128),w
 13195  085D  00A2               	movwf	(?_sprintf^(0+128)+2)
 13196  085E  0834               	movf	(??_printLCD+1)^(0+128),w
 13197  085F  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
 13198  0860  086C               	movf	_minutes^(0+128),w
 13199  0861  00B5               	movwf	(??_printLCD+2)^(0+128)
 13200  0862  01B6               	clrf	((??_printLCD+2)^(0+128)+1)
 13201  0863  0835               	movf	(??_printLCD+2)^(0+128),w
 13202  0864  00A4               	movwf	(?_sprintf^(0+128)+4)
 13203  0865  0836               	movf	(??_printLCD+3)^(0+128),w
 13204  0866  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
 13205  0867  086B               	movf	_seconds^(0+128),w
 13206  0868  00B7               	movwf	(??_printLCD+4)^(0+128)
 13207  0869  01B8               	clrf	((??_printLCD+4)^(0+128)+1)
 13208  086A  0837               	movf	(??_printLCD+4)^(0+128),w
 13209  086B  00A6               	movwf	(?_sprintf^(0+128)+6)
 13210  086C  0838               	movf	(??_printLCD+5)^(0+128),w
 13211  086D  00A7               	movwf	((?_sprintf+1)^(0+128)+6)
 13212  086E  0022               	movlb	2	; select bank2
 13213  086F  0850               	movf	_character^(0+256),w
 13214  0870  0021               	movlb	1	; select bank1
 13215  0871  00B9               	movwf	(??_printLCD+6)^(0+128)
 13216  0872  01BA               	clrf	((??_printLCD+6)^(0+128)+1)
 13217  0873  0839               	movf	(??_printLCD+6)^(0+128),w
 13218  0874  00A8               	movwf	(?_sprintf^(0+128)+8)
 13219  0875  083A               	movf	(??_printLCD+7)^(0+128),w
 13220  0876  00A9               	movwf	((?_sprintf+1)^(0+128)+8)
 13221  0877  0022               	movlb	2	; select bank2
 13222  0878  084F               	movf	_alarmc^(0+256),w
 13223  0879  0021               	movlb	1	; select bank1
 13224  087A  00BB               	movwf	(??_printLCD+8)^(0+128)
 13225  087B  01BC               	clrf	((??_printLCD+8)^(0+128)+1)
 13226  087C  083B               	movf	(??_printLCD+8)^(0+128),w
 13227  087D  00AA               	movwf	(?_sprintf^(0+128)+10)
 13228  087E  083C               	movf	(??_printLCD+9)^(0+128),w
 13229  087F  00AB               	movwf	((?_sprintf+1)^(0+128)+10)
 13230  0880  30BD               	movlw	(low (printLCD@buf| 0))& (0+255)
 13231  0881  3194  245A  3188   	fcall	_sprintf
 13232  0884                     i1l5128:
 13233                           
 13234                           ;main.c: 142:     LCDstr(buf);
 13235  0884  30BD               	movlw	(low (printLCD@buf| 0))& (0+255)
 13236  0885  3193  233E  3188   	fcall	_LCDstr
 13237  0888                     i1l5130:	
 13238                           ;main.c: 143:     while (LCDbusy());
 13239                           
 13240  0888  3192  22F7  3188   	fcall	_LCDbusy
 13241  088B  0877               	movf	?_LCDbusy,w
 13242  088C  0478               	iorwf	?_LCDbusy+1,w
 13243  088D  1D03               	btfss	3,2
 13244  088E  2890               	goto	u455_21
 13245  088F  2891               	goto	u455_20
 13246  0890                     u455_21:
 13247  0890  2888               	goto	i1l5130
 13248  0891                     u455_20:
 13249  0891                     i1l5132:
 13250                           
 13251                           ;main.c: 144:     LCDcmd(0xc0);
 13252  0891  30C0               	movlw	192
 13253  0892  3192  2295  3188   	fcall	_LCDcmd
 13254  0895                     i1l5134:
 13255                           
 13256                           ;main.c: 145:     sprintf(buf, "%02d C         %01d l", variable1, variable2);
 13257  0895  3037               	movlw	low (STR_2| (0+32768))
 13258  0896  0021               	movlb	1	; select bank1
 13259  0897  00A0               	movwf	sprintf@fmt^(0+128)
 13260  0898  3098               	movlw	high (STR_2| (0+32768))
 13261  0899  00A1               	movwf	(sprintf@fmt^(0+128)+1)
 13262  089A  0867               	movf	_variable1^(0+128),w
 13263  089B  00B3               	movwf	??_printLCD^(0+128)
 13264  089C  01B4               	clrf	(??_printLCD^(0+128)+1)
 13265  089D  0833               	movf	??_printLCD^(0+128),w
 13266  089E  00A2               	movwf	(?_sprintf^(0+128)+2)
 13267  089F  0834               	movf	(??_printLCD+1)^(0+128),w
 13268  08A0  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
 13269  08A1  0866               	movf	_variable2^(0+128),w
 13270  08A2  00B5               	movwf	(??_printLCD+2)^(0+128)
 13271  08A3  01B6               	clrf	((??_printLCD+2)^(0+128)+1)
 13272  08A4  0835               	movf	(??_printLCD+2)^(0+128),w
 13273  08A5  00A4               	movwf	(?_sprintf^(0+128)+4)
 13274  08A6  0836               	movf	(??_printLCD+3)^(0+128),w
 13275  08A7  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
 13276  08A8  30BD               	movlw	(low (printLCD@buf| 0))& (0+255)
 13277  08A9  3194  245A  3188   	fcall	_sprintf
 13278  08AC                     i1l5136:	
 13279                           ;main.c: 146:     while (LCDbusy());
 13280                           
 13281  08AC  3192  22F7  3188   	fcall	_LCDbusy
 13282  08AF  0877               	movf	?_LCDbusy,w
 13283  08B0  0478               	iorwf	?_LCDbusy+1,w
 13284  08B1  1D03               	btfss	3,2
 13285  08B2  28B4               	goto	u456_21
 13286  08B3  28B5               	goto	u456_20
 13287  08B4                     u456_21:
 13288  08B4  28AC               	goto	i1l5136
 13289  08B5                     u456_20:
 13290  08B5                     i1l5138:
 13291                           
 13292                           ;main.c: 147:     LCDstr(buf);
 13293  08B5  30BD               	movlw	(low (printLCD@buf| 0))& (0+255)
 13294  08B6  3193  233E  3188   	fcall	_LCDstr
 13295  08B9                     i1l1316:
 13296  08B9  0008               	return
 13297  08BA                     __end_of_printLCD:
 13298                           
 13299                           	psect	text31
 13300  145A                     __ptext31:	
 13301 ;; *************** function _sprintf *****************
 13302 ;; Defined at:
 13303 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
 13304 ;; Parameters:    Size  Location     Type
 13305 ;;  s               1    wreg     PTR unsigned char 
 13306 ;;		 -> printLCD@buf(33), 
 13307 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 13308 ;;		 -> STR_2(22), STR_1(23), 
 13309 ;; Auto vars:     Size  Location     Type
 13310 ;;  s               1   12[BANK1 ] PTR unsigned char 
 13311 ;;		 -> printLCD@buf(33), 
 13312 ;;  f               5   14[BANK1 ] struct _IO_FILE
 13313 ;;  ret             2    0        int 
 13314 ;;  ap              1   13[BANK1 ] PTR void [1]
 13315 ;;		 -> ?_sprintf(2), 
 13316 ;; Return value:  Size  Location     Type
 13317 ;;                  2    0[BANK1 ] int 
 13318 ;; Registers used:
 13319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13320 ;; Tracked objects:
 13321 ;;		On entry : 0/0
 13322 ;;		On exit  : 0/0
 13323 ;;		Unchanged: 0/0
 13324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13325 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 13326 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 13327 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13328 ;;      Totals:         1       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
 13329 ;;Total ram usage:       20 bytes
 13330 ;; Hardware stack levels used: 1
 13331 ;; Hardware stack levels required when called: 7
 13332 ;; This function calls:
 13333 ;;		_vfprintf
 13334 ;; This function is called by:
 13335 ;;		_printLCD
 13336 ;; This function uses a non-reentrant model
 13337 ;;
 13338                           
 13339                           
 13340                           ;psect for function _sprintf
 13341  145A                     _sprintf:
 13342                           
 13343                           ;incstack = 0
 13344                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13345                           ;sprintf@s stored from wreg
 13346  145A  0021               	movlb	1	; select bank1
 13347  145B  00AC               	movwf	sprintf@s^(0+128)
 13348  145C                     i1l5012:
 13349  145C  30A2               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 13350  145D  00FD               	movwf	??_sprintf
 13351  145E  087D               	movf	??_sprintf,w
 13352  145F  00AD               	movwf	sprintf@ap^(0+128)
 13353  1460  082C               	movf	sprintf@s^(0+128),w
 13354  1461  00FD               	movwf	??_sprintf
 13355  1462  087D               	movf	??_sprintf,w
 13356  1463  00AE               	movwf	sprintf@f^(0+128)
 13357  1464                     i1l5014:
 13358  1464  01AF               	clrf	(sprintf@f^(0+128)+1)
 13359  1465  01B0               	clrf	((sprintf@f+1)^(0+128)+1)
 13360  1466                     i1l5016:
 13361  1466  01B1               	clrf	(sprintf@f^(0+128)+3)
 13362  1467  01B2               	clrf	((sprintf@f+1)^(0+128)+3)
 13363  1468                     i1l5018:
 13364  1468  0821               	movf	(sprintf@fmt+1)^(0+128),w
 13365  1469  0020               	movlb	0	; select bank0
 13366  146A  00E5               	movwf	vfprintf@fmt+1
 13367  146B  0021               	movlb	1	; select bank1
 13368  146C  0820               	movf	sprintf@fmt^(0+128),w
 13369  146D  0020               	movlb	0	; select bank0
 13370  146E  00E4               	movwf	vfprintf@fmt
 13371  146F  30AD               	movlw	(low (sprintf@ap| 0))& (0+255)
 13372  1470  00FD               	movwf	??_sprintf
 13373  1471  087D               	movf	??_sprintf,w
 13374  1472  00E6               	movwf	vfprintf@ap
 13375  1473  30AE               	movlw	(low (sprintf@f| 0))& (0+255)
 13376  1474  3194  24D4  3194   	fcall	_vfprintf
 13377  1477                     i1l5020:
 13378  1477  0021               	movlb	1	; select bank1
 13379  1478  082F               	movf	(sprintf@f^(0+128)+1),w
 13380  1479  072C               	addwf	sprintf@s^(0+128),w
 13381  147A  00FD               	movwf	??_sprintf
 13382  147B  087D               	movf	??_sprintf,w
 13383  147C  0086               	movwf	6
 13384  147D  0187               	clrf	7
 13385  147E  0181               	clrf	1
 13386  147F                     i1l2068:
 13387  147F  0008               	return
 13388  1480                     __end_of_sprintf:
 13389                           
 13390                           	psect	text32
 13391  14D4                     __ptext32:	
 13392 ;; *************** function _vfprintf *****************
 13393 ;; Defined at:
 13394 ;;		line 1390 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 13395 ;; Parameters:    Size  Location     Type
 13396 ;;  fp              1    wreg     PTR struct _IO_FILE
 13397 ;;		 -> sprintf@f(5), 
 13398 ;;  fmt             2   68[BANK0 ] PTR const unsigned char 
 13399 ;;		 -> STR_2(22), STR_1(23), 
 13400 ;;  ap              1   70[BANK0 ] PTR PTR void 
 13401 ;;		 -> sprintf@ap(1), 
 13402 ;; Auto vars:     Size  Location     Type
 13403 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
 13404 ;;		 -> sprintf@f(5), 
 13405 ;;  cfmt            2   74[BANK0 ] PTR unsigned char 
 13406 ;;		 -> STR_2(22), STR_1(23), 
 13407 ;; Return value:  Size  Location     Type
 13408 ;;                  2   68[BANK0 ] int 
 13409 ;; Registers used:
 13410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13411 ;; Tracked objects:
 13412 ;;		On entry : 0/0
 13413 ;;		On exit  : 0/0
 13414 ;;		Unchanged: 0/0
 13415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13416 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13417 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13418 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13419 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13420 ;;Total ram usage:        8 bytes
 13421 ;; Hardware stack levels used: 1
 13422 ;; Hardware stack levels required when called: 6
 13423 ;; This function calls:
 13424 ;;		_vfpfcnvrt
 13425 ;; This function is called by:
 13426 ;;		_sprintf
 13427 ;; This function uses a non-reentrant model
 13428 ;;
 13429                           
 13430                           
 13431                           ;psect for function _vfprintf
 13432  14D4                     _vfprintf:
 13433                           
 13434                           ;incstack = 0
 13435                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13436                           ;vfprintf@fp stored from wreg
 13437  14D4  0020               	movlb	0	; select bank0
 13438  14D5  00E9               	movwf	vfprintf@fp
 13439  14D6                     i1l4982:
 13440                           
 13441                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 13442  14D6  0865               	movf	vfprintf@fmt+1,w
 13443  14D7  00EB               	movwf	vfprintf@cfmt+1
 13444  14D8  0864               	movf	vfprintf@fmt,w
 13445  14D9  00EA               	movwf	vfprintf@cfmt
 13446  14DA                     i1l4984:
 13447                           
 13448                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 13449  14DA  0022               	movlb	2	; select bank2
 13450  14DB  01D5               	clrf	_nout^(0+256)
 13451  14DC  01D6               	clrf	(_nout+1)^(0+256)
 13452                           
 13453                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 13454  14DD  2CF2               	goto	i1l4988
 13455  14DE                     i1l4986:
 13456                           
 13457                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 13458  14DE  306A               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 13459  14DF  00E7               	movwf	??_vfprintf
 13460  14E0  0867               	movf	??_vfprintf,w
 13461  14E1  00CE               	movwf	vfpfcnvrt@fmt
 13462  14E2  0866               	movf	vfprintf@ap,w
 13463  14E3  00E8               	movwf	??_vfprintf+1
 13464  14E4  0868               	movf	??_vfprintf+1,w
 13465  14E5  00CF               	movwf	vfpfcnvrt@ap
 13466  14E6  0869               	movf	vfprintf@fp,w
 13467  14E7  3182  2249  3194   	fcall	_vfpfcnvrt
 13468  14EA  0020               	movlb	0	; select bank0
 13469  14EB  084E               	movf	?_vfpfcnvrt,w
 13470  14EC  0022               	movlb	2	; select bank2
 13471  14ED  07D5               	addwf	_nout^(0+256),f
 13472  14EE  0020               	movlb	0	; select bank0
 13473  14EF  084F               	movf	?_vfpfcnvrt+1,w
 13474  14F0  0022               	movlb	2	; select bank2
 13475  14F1  3DD6               	addwfc	(_nout+1)^(0+256),f
 13476  14F2                     i1l4988:
 13477                           
 13478                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 13479  14F2  0020               	movlb	0	; select bank0
 13480  14F3  086A               	movf	vfprintf@cfmt,w
 13481  14F4  0084               	movwf	4
 13482  14F5  086B               	movf	vfprintf@cfmt+1,w
 13483  14F6  0085               	movwf	5
 13484  14F7  0012               	moviw fsr0++
 13485  14F8  1D03               	btfss	3,2
 13486  14F9  2CFB               	goto	u423_21
 13487  14FA  2CFC               	goto	u423_20
 13488  14FB                     u423_21:
 13489  14FB  2CDE               	goto	i1l4986
 13490  14FC                     u423_20:
 13491  14FC                     i1l4990:
 13492                           
 13493                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 13494  14FC  0022               	movlb	2	; select bank2
 13495  14FD  0856               	movf	(_nout+1)^(0+256),w
 13496  14FE  0020               	movlb	0	; select bank0
 13497  14FF  00E5               	movwf	?_vfprintf+1
 13498  1500  0022               	movlb	2	; select bank2
 13499  1501  0855               	movf	_nout^(0+256),w
 13500  1502  0020               	movlb	0	; select bank0
 13501  1503  00E4               	movwf	?_vfprintf
 13502  1504                     i1l2183:
 13503  1504  0008               	return
 13504  1505                     __end_of_vfprintf:
 13505                           
 13506                           	psect	text33
 13507  0249                     __ptext33:	
 13508 ;; *************** function _vfpfcnvrt *****************
 13509 ;; Defined at:
 13510 ;;		line 692 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 13511 ;; Parameters:    Size  Location     Type
 13512 ;;  fp              1    wreg     PTR struct _IO_FILE
 13513 ;;		 -> sprintf@f(5), 
 13514 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
 13515 ;;		 -> vfprintf@cfmt(2), 
 13516 ;;  ap              1   47[BANK0 ] PTR PTR void 
 13517 ;;		 -> sprintf@ap(1), 
 13518 ;; Auto vars:     Size  Location     Type
 13519 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
 13520 ;;		 -> sprintf@f(5), 
 13521 ;;  ll              8   54[BANK0 ] long long 
 13522 ;;  llu             8    0        unsigned long long 
 13523 ;;  f               4    0        unsigned long long 
 13524 ;;  ct              3    0        unsigned char [3]
 13525 ;;  done            2   62[BANK0 ] int 
 13526 ;;  vp              2    0        PTR void 
 13527 ;;  i               2    0        int 
 13528 ;;  cp              2    0        PTR unsigned char 
 13529 ;;  c               1   66[BANK0 ] unsigned char 
 13530 ;; Return value:  Size  Location     Type
 13531 ;;                  2   46[BANK0 ] int 
 13532 ;; Registers used:
 13533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13534 ;; Tracked objects:
 13535 ;;		On entry : 0/0
 13536 ;;		On exit  : 0/0
 13537 ;;		Unchanged: 0/0
 13538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13539 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13540 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13541 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13542 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13543 ;;Total ram usage:       22 bytes
 13544 ;; Hardware stack levels used: 1
 13545 ;; Hardware stack levels required when called: 5
 13546 ;; This function calls:
 13547 ;;		_atoi
 13548 ;;		_ctoa
 13549 ;;		_dtoa
 13550 ;;		_fputc
 13551 ;;		_isdigit
 13552 ;; This function is called by:
 13553 ;;		_vfprintf
 13554 ;; This function uses a non-reentrant model
 13555 ;;
 13556                           
 13557                           
 13558                           ;psect for function _vfpfcnvrt
 13559  0249                     _vfpfcnvrt:
 13560                           
 13561                           ;incstack = 0
 13562                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13563                           ;vfpfcnvrt@fp stored from wreg
 13564  0249  0020               	movlb	0	; select bank0
 13565  024A  00E3               	movwf	vfpfcnvrt@fp
 13566  024B                     i1l4774:
 13567                           
 13568                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;D:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;D:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;D:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 13569  024B  084E               	movf	vfpfcnvrt@fmt,w
 13570  024C  0086               	movwf	6
 13571  024D  0187               	clrf	7
 13572  024E  3F40               	moviw [0]fsr1
 13573  024F  00D0               	movwf	??_vfpfcnvrt
 13574  0250  3F41               	moviw [1]fsr1
 13575  0251  00D1               	movwf	??_vfpfcnvrt+1
 13576  0252  0850               	movf	??_vfpfcnvrt,w
 13577  0253  0084               	movwf	4
 13578  0254  0851               	movf	??_vfpfcnvrt+1,w
 13579  0255  0085               	movwf	5
 13580  0256  0012               	moviw fsr0++
 13581  0257  3A25               	xorlw	37
 13582  0258  1D03               	btfss	3,2
 13583  0259  2A5B               	goto	u372_21
 13584  025A  2A5C               	goto	u372_20
 13585  025B                     u372_21:
 13586  025B  2BF7               	goto	i1l4864
 13587  025C                     u372_20:
 13588  025C                     i1l4776:
 13589                           
 13590                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 13591  025C  084E               	movf	vfpfcnvrt@fmt,w
 13592  025D  0086               	movwf	6
 13593  025E  0187               	clrf	7
 13594  025F  3001               	movlw	1
 13595  0260  0781               	addwf	1,f
 13596  0261  3141               	addfsr 1,1
 13597  0262  1803               	skipnc
 13598  0263  0A81               	incf	1,f
 13599  0264                     i1l4778:
 13600                           
 13601                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 13602  0264  0021               	movlb	1	; select bank1
 13603  0265  01E2               	clrf	_width^(0+128)
 13604  0266  01E3               	clrf	(_width+1)^(0+128)
 13605  0267  0020               	movlb	0	; select bank0
 13606  0268  01EE               	clrf	_flags
 13607  0269  01EF               	clrf	_flags+1
 13608  026A                     i1l4780:
 13609                           
 13610                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 13611  026A  30FF               	movlw	255
 13612  026B  0021               	movlb	1	; select bank1
 13613  026C  00E4               	movwf	_prec^(0+128)
 13614  026D  30FF               	movlw	255
 13615  026E  00E5               	movwf	(_prec^(0+128)+1)
 13616  026F                     i1l4782:
 13617                           
 13618                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
 13619  026F  0020               	movlb	0	; select bank0
 13620  0270  01DE               	clrf	vfpfcnvrt@done
 13621  0271  01DF               	clrf	vfpfcnvrt@done+1
 13622                           
 13623                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
 13624  0272  2AAE               	goto	i1l4800
 13625  0273                     i1l2153:	
 13626                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 713:             
      +                              case '-' :
 13627                           
 13628                           
 13629                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
 13630  0273  146E               	bsf	_flags,0
 13631  0274                     i1l4784:
 13632                           
 13633                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
 13634  0274  084E               	movf	vfpfcnvrt@fmt,w
 13635  0275  0086               	movwf	6
 13636  0276  0187               	clrf	7
 13637  0277  3001               	movlw	1
 13638  0278  0781               	addwf	1,f
 13639  0279  3141               	addfsr 1,1
 13640  027A  1803               	skipnc
 13641  027B  0A81               	incf	1,f
 13642                           
 13643                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
 13644  027C  2AAE               	goto	i1l4800
 13645  027D                     i1l2155:	
 13646                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 717:             
      +                              case '0' :
 13647                           
 13648                           
 13649                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
 13650  027D  14EE               	bsf	_flags,1
 13651  027E  2A74               	goto	i1l4784
 13652  027F                     i1l2156:	
 13653                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 721:             
      +                              case '+' :
 13654                           
 13655                           
 13656                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
 13657  027F  156E               	bsf	_flags,2
 13658  0280  2A74               	goto	i1l4784
 13659  0281                     i1l2157:	
 13660                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 725:             
      +                              case ' ' :
 13661                           
 13662                           
 13663                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
 13664  0281  15EE               	bsf	_flags,3
 13665  0282  2A74               	goto	i1l4784
 13666  0283                     i1l2158:	
 13667                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 729:             
      +                              case '#' :
 13668                           
 13669                           
 13670                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
 13671  0283  166E               	bsf	_flags,4
 13672  0284  2A74               	goto	i1l4784
 13673  0285                     i1l4794:
 13674                           
 13675                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
 13676  0285  3001               	movlw	1
 13677  0286  00DE               	movwf	vfpfcnvrt@done
 13678  0287  3000               	movlw	0
 13679  0288  00DF               	movwf	vfpfcnvrt@done+1
 13680                           
 13681                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
 13682  0289  2AAE               	goto	i1l4800
 13683  028A                     i1l4798:
 13684  028A  084E               	movf	vfpfcnvrt@fmt,w
 13685  028B  0086               	movwf	6
 13686  028C  0187               	clrf	7
 13687  028D  3F40               	moviw [0]fsr1
 13688  028E  00D0               	movwf	??_vfpfcnvrt
 13689  028F  3F41               	moviw [1]fsr1
 13690  0290  00D1               	movwf	??_vfpfcnvrt+1
 13691  0291  0850               	movf	??_vfpfcnvrt,w
 13692  0292  0084               	movwf	4
 13693  0293  0851               	movf	??_vfpfcnvrt+1,w
 13694  0294  0085               	movwf	5
 13695  0295  0800               	movf	0,w	;code access
 13696  0296  00D2               	movwf	??_vfpfcnvrt+2
 13697  0297  01D3               	clrf	??_vfpfcnvrt+3
 13698                           
 13699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13700                           ; Switch size 1, requested type "simple"
 13701                           ; Number of cases is 1, Range of values is 0 to 0
 13702                           ; switch strategies available:
 13703                           ; Name         Instructions Cycles
 13704                           ; simple_byte            4     3 (average)
 13705                           ; direct_byte            8     6 (fixed)
 13706                           ; jumptable            260     6 (fixed)
 13707                           ;	Chosen strategy is simple_byte
 13708  0298  0853               	movf	??_vfpfcnvrt+3,w
 13709  0299  3A00               	xorlw	0	; case 0
 13710  029A  1903               	skipnz
 13711  029B  2A9D               	goto	i1l6402
 13712  029C  2A85               	goto	i1l4794
 13713  029D                     i1l6402:
 13714                           
 13715                           ; Switch size 1, requested type "simple"
 13716                           ; Number of cases is 5, Range of values is 32 to 48
 13717                           ; switch strategies available:
 13718                           ; Name         Instructions Cycles
 13719                           ; simple_byte           16     9 (average)
 13720                           ; direct_byte           43     9 (fixed)
 13721                           ; jumptable            263     9 (fixed)
 13722                           ;	Chosen strategy is simple_byte
 13723  029D  0852               	movf	??_vfpfcnvrt+2,w
 13724  029E  3A20               	xorlw	32	; case 32
 13725  029F  1903               	skipnz
 13726  02A0  2A81               	goto	i1l2157
 13727  02A1  3A03               	xorlw	3	; case 35
 13728  02A2  1903               	skipnz
 13729  02A3  2A83               	goto	i1l2158
 13730  02A4  3A08               	xorlw	8	; case 43
 13731  02A5  1903               	skipnz
 13732  02A6  2A7F               	goto	i1l2156
 13733  02A7  3A06               	xorlw	6	; case 45
 13734  02A8  1903               	skipnz
 13735  02A9  2A73               	goto	i1l2153
 13736  02AA  3A1D               	xorlw	29	; case 48
 13737  02AB  1903               	skipnz
 13738  02AC  2A7D               	goto	i1l2155
 13739  02AD  2A85               	goto	i1l4794
 13740  02AE                     i1l4800:
 13741                           
 13742                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
 13743  02AE  085E               	movf	vfpfcnvrt@done,w
 13744  02AF  045F               	iorwf	vfpfcnvrt@done+1,w
 13745  02B0  1903               	btfsc	3,2
 13746  02B1  2AB3               	goto	u373_21
 13747  02B2  2AB4               	goto	u373_20
 13748  02B3                     u373_21:
 13749  02B3  2A8A               	goto	i1l4798
 13750  02B4                     u373_20:
 13751  02B4                     i1l2160:
 13752                           
 13753                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
 13754  02B4  1C6E               	btfss	_flags,0
 13755  02B5  2AB7               	goto	u374_21
 13756  02B6  2AB8               	goto	u374_20
 13757  02B7                     u374_21:
 13758  02B7  2ABC               	goto	i1l4804
 13759  02B8                     u374_20:
 13760  02B8                     i1l4802:
 13761                           
 13762                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
 13763  02B8  30FD               	movlw	253
 13764  02B9  05EE               	andwf	_flags,f
 13765  02BA  30FF               	movlw	255
 13766  02BB  05EF               	andwf	_flags+1,f
 13767  02BC                     i1l4804:
 13768                           
 13769                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
 13770  02BC  084E               	movf	vfpfcnvrt@fmt,w
 13771  02BD  0086               	movwf	6
 13772  02BE  0187               	clrf	7
 13773  02BF  3F40               	moviw [0]fsr1
 13774  02C0  00D0               	movwf	??_vfpfcnvrt
 13775  02C1  3F41               	moviw [1]fsr1
 13776  02C2  00D1               	movwf	??_vfpfcnvrt+1
 13777  02C3  0850               	movf	??_vfpfcnvrt,w
 13778  02C4  0084               	movwf	4
 13779  02C5  0851               	movf	??_vfpfcnvrt+1,w
 13780  02C6  0085               	movwf	5
 13781  02C7  0012               	moviw fsr0++
 13782  02C8  3A2A               	xorlw	42
 13783  02C9  1D03               	btfss	3,2
 13784  02CA  2ACC               	goto	u375_21
 13785  02CB  2ACD               	goto	u375_20
 13786  02CC                     u375_21:
 13787  02CC  2AEF               	goto	i1l4816
 13788  02CD                     u375_20:
 13789  02CD                     i1l4806:
 13790                           
 13791                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
 13792  02CD  084E               	movf	vfpfcnvrt@fmt,w
 13793  02CE  0086               	movwf	6
 13794  02CF  0187               	clrf	7
 13795  02D0  3001               	movlw	1
 13796  02D1  0781               	addwf	1,f
 13797  02D2  3141               	addfsr 1,1
 13798  02D3  1803               	skipnc
 13799  02D4  0A81               	incf	1,f
 13800  02D5                     i1l4808:
 13801                           
 13802                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
 13803  02D5  084F               	movf	vfpfcnvrt@ap,w
 13804  02D6  0086               	movwf	6
 13805  02D7  0187               	clrf	7
 13806  02D8  0801               	movf	1,w
 13807  02D9  0084               	movwf	4
 13808  02DA  0185               	clrf	5
 13809  02DB  3002               	movlw	2
 13810  02DC  0781               	addwf	1,f
 13811  02DD  3F00               	moviw [0]fsr0
 13812  02DE  0021               	movlb	1	; select bank1
 13813  02DF  00E2               	movwf	_width^(0+128)
 13814  02E0  3F01               	moviw [1]fsr0
 13815  02E1  00E3               	movwf	(_width+1)^(0+128)
 13816  02E2                     i1l4810:
 13817                           
 13818                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
 13819  02E2  1FE3               	btfss	(_width+1)^(0+128),7
 13820  02E3  2AE5               	goto	u376_21
 13821  02E4  2AE6               	goto	u376_20
 13822  02E5                     u376_21:
 13823  02E5  2B31               	goto	i1l4826
 13824  02E6                     u376_20:
 13825  02E6                     i1l4812:
 13826                           
 13827                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
 13828  02E6  0020               	movlb	0	; select bank0
 13829  02E7  146E               	bsf	_flags,0
 13830  02E8                     i1l4814:
 13831                           
 13832                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
 13833  02E8  0021               	movlb	1	; select bank1
 13834  02E9  09E2               	comf	_width^(0+128),f
 13835  02EA  09E3               	comf	(_width+1)^(0+128),f
 13836  02EB  0AE2               	incf	_width^(0+128),f
 13837  02EC  1903               	skipnz
 13838  02ED  0AE3               	incf	(_width+1)^(0+128),f
 13839  02EE  2B31               	goto	i1l4826
 13840  02EF                     i1l4816:
 13841                           
 13842                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
 13843  02EF  084E               	movf	vfpfcnvrt@fmt,w
 13844  02F0  0086               	movwf	6
 13845  02F1  0187               	clrf	7
 13846  02F2  3F40               	moviw [0]fsr1
 13847  02F3  00F6               	movwf	atoi@s
 13848  02F4  3F41               	moviw [1]fsr1
 13849  02F5  00F7               	movwf	atoi@s+1
 13850  02F6  3189  21CB  3182   	fcall	_atoi
 13851  02F9  0877               	movf	?_atoi+1,w
 13852  02FA  0021               	movlb	1	; select bank1
 13853  02FB  00E3               	movwf	(_width+1)^(0+128)
 13854  02FC  0876               	movf	?_atoi,w
 13855  02FD  00E2               	movwf	_width^(0+128)
 13856                           
 13857                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 13858  02FE  2B07               	goto	i1l4820
 13859  02FF                     i1l4818:
 13860                           
 13861                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
 13862  02FF  084E               	movf	vfpfcnvrt@fmt,w
 13863  0300  0086               	movwf	6
 13864  0301  0187               	clrf	7
 13865  0302  3001               	movlw	1
 13866  0303  0781               	addwf	1,f
 13867  0304  3141               	addfsr 1,1
 13868  0305  1803               	skipnc
 13869  0306  0A81               	incf	1,f
 13870  0307                     i1l4820:
 13871  0307  0020               	movlb	0	; select bank0
 13872  0308  084E               	movf	vfpfcnvrt@fmt,w
 13873  0309  0086               	movwf	6
 13874  030A  0187               	clrf	7
 13875  030B  3F40               	moviw [0]fsr1
 13876  030C  00D0               	movwf	??_vfpfcnvrt
 13877  030D  3F41               	moviw [1]fsr1
 13878  030E  00D1               	movwf	??_vfpfcnvrt+1
 13879  030F  0850               	movf	??_vfpfcnvrt,w
 13880  0310  0084               	movwf	4
 13881  0311  0851               	movf	??_vfpfcnvrt+1,w
 13882  0312  0085               	movwf	5
 13883  0313  0800               	movf	0,w	;code access
 13884  0314  3ED0               	addlw	208
 13885  0315  00D2               	movwf	??_vfpfcnvrt+2
 13886  0316  30FF               	movlw	255
 13887  0317  1803               	skipnc
 13888  0318  3000               	movlw	0
 13889  0319  00D3               	movwf	??_vfpfcnvrt+3
 13890  031A  3000               	movlw	0
 13891  031B  0253               	subwf	??_vfpfcnvrt+3,w
 13892  031C  300A               	movlw	10
 13893  031D  1903               	skipnz
 13894  031E  0252               	subwf	??_vfpfcnvrt+2,w
 13895  031F  1C03               	skipc
 13896  0320  2B22               	goto	u377_21
 13897  0321  2B24               	goto	u377_20
 13898  0322                     u377_21:
 13899  0322  3001               	movlw	1
 13900  0323  2B25               	goto	u378_20
 13901  0324                     u377_20:
 13902  0324  3000               	movlw	0
 13903  0325                     u378_20:
 13904  0325  00D4               	movwf	??_vfpfcnvrt+4
 13905  0326  01D5               	clrf	??_vfpfcnvrt+5
 13906  0327  0854               	movf	??_vfpfcnvrt+4,w
 13907  0328  00E0               	movwf	_vfpfcnvrt$2954
 13908  0329  0855               	movf	??_vfpfcnvrt+5,w
 13909  032A  00E1               	movwf	_vfpfcnvrt$2954+1
 13910  032B                     i1l4824:
 13911  032B  0860               	movf	_vfpfcnvrt$2954,w
 13912  032C  0461               	iorwf	_vfpfcnvrt$2954+1,w
 13913  032D  1D03               	btfss	3,2
 13914  032E  2B30               	goto	u379_21
 13915  032F  2B31               	goto	u379_20
 13916  0330                     u379_21:
 13917  0330  2AFF               	goto	i1l4818
 13918  0331                     u379_20:
 13919  0331                     i1l4826:
 13920                           
 13921                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
 13922  0331  0020               	movlb	0	; select bank0
 13923  0332  084E               	movf	vfpfcnvrt@fmt,w
 13924  0333  0086               	movwf	6
 13925  0334  0187               	clrf	7
 13926  0335  3F40               	moviw [0]fsr1
 13927  0336  00D0               	movwf	??_vfpfcnvrt
 13928  0337  3F41               	moviw [1]fsr1
 13929  0338  00D1               	movwf	??_vfpfcnvrt+1
 13930  0339  0850               	movf	??_vfpfcnvrt,w
 13931  033A  0084               	movwf	4
 13932  033B  0851               	movf	??_vfpfcnvrt+1,w
 13933  033C  0085               	movwf	5
 13934  033D  0012               	moviw fsr0++
 13935  033E  3A63               	xorlw	99
 13936  033F  1D03               	btfss	3,2
 13937  0340  2B42               	goto	u380_21
 13938  0341  2B43               	goto	u380_20
 13939  0342                     u380_21:
 13940  0342  2B65               	goto	i1l4836
 13941  0343                     u380_20:
 13942  0343                     i1l4828:
 13943                           
 13944                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
 13945  0343  084E               	movf	vfpfcnvrt@fmt,w
 13946  0344  0086               	movwf	6
 13947  0345  0187               	clrf	7
 13948  0346  3001               	movlw	1
 13949  0347  0781               	addwf	1,f
 13950  0348  3141               	addfsr 1,1
 13951  0349  1803               	skipnc
 13952  034A  0A81               	incf	1,f
 13953  034B                     i1l4830:
 13954                           
 13955                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 13956  034B  084F               	movf	vfpfcnvrt@ap,w
 13957  034C  0086               	movwf	6
 13958  034D  0187               	clrf	7
 13959  034E  0801               	movf	1,w
 13960  034F  0084               	movwf	4
 13961  0350  0185               	clrf	5
 13962  0351  3002               	movlw	2
 13963  0352  0781               	addwf	1,f
 13964  0353  0800               	movf	0,w
 13965  0354  00D0               	movwf	??_vfpfcnvrt
 13966  0355  0850               	movf	??_vfpfcnvrt,w
 13967  0356  00E2               	movwf	vfpfcnvrt@c
 13968  0357                     i1l4832:
 13969                           
 13970                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
 13971  0357  0862               	movf	vfpfcnvrt@c,w
 13972  0358  00D0               	movwf	??_vfpfcnvrt
 13973  0359  0850               	movf	??_vfpfcnvrt,w
 13974  035A  00F8               	movwf	ctoa@c
 13975  035B  0863               	movf	vfpfcnvrt@fp,w
 13976  035C  3197  278F  3182   	fcall	_ctoa
 13977  035F  0879               	movf	?_ctoa+1,w
 13978  0360  0020               	movlb	0	; select bank0
 13979  0361  00CF               	movwf	?_vfpfcnvrt+1
 13980  0362  0878               	movf	?_ctoa,w
 13981  0363  00CE               	movwf	?_vfpfcnvrt
 13982  0364  2C1A               	goto	i1l2173
 13983  0365                     i1l4836:
 13984                           
 13985                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 13986  0365  084E               	movf	vfpfcnvrt@fmt,w
 13987  0366  0086               	movwf	6
 13988  0367  0187               	clrf	7
 13989  0368  3F40               	moviw [0]fsr1
 13990  0369  00D0               	movwf	??_vfpfcnvrt
 13991  036A  3F41               	moviw [1]fsr1
 13992  036B  00D1               	movwf	??_vfpfcnvrt+1
 13993  036C  0850               	movf	??_vfpfcnvrt,w
 13994  036D  0084               	movwf	4
 13995  036E  0851               	movf	??_vfpfcnvrt+1,w
 13996  036F  0085               	movwf	5
 13997  0370  0012               	moviw fsr0++
 13998  0371  3A64               	xorlw	100
 13999  0372  1903               	btfsc	3,2
 14000  0373  2B75               	goto	u381_21
 14001  0374  2B76               	goto	u381_20
 14002  0375                     u381_21:
 14003  0375  2B87               	goto	i1l4840
 14004  0376                     u381_20:
 14005  0376                     i1l4838:
 14006  0376  084E               	movf	vfpfcnvrt@fmt,w
 14007  0377  0086               	movwf	6
 14008  0378  0187               	clrf	7
 14009  0379  3F40               	moviw [0]fsr1
 14010  037A  00D0               	movwf	??_vfpfcnvrt
 14011  037B  3F41               	moviw [1]fsr1
 14012  037C  00D1               	movwf	??_vfpfcnvrt+1
 14013  037D  0850               	movf	??_vfpfcnvrt,w
 14014  037E  0084               	movwf	4
 14015  037F  0851               	movf	??_vfpfcnvrt+1,w
 14016  0380  0085               	movwf	5
 14017  0381  0012               	moviw fsr0++
 14018  0382  3A69               	xorlw	105
 14019  0383  1D03               	btfss	3,2
 14020  0384  2B86               	goto	u382_21
 14021  0385  2B87               	goto	u382_20
 14022  0386                     u382_21:
 14023  0386  2BC2               	goto	i1l4848
 14024  0387                     u382_20:
 14025  0387                     i1l4840:
 14026                           
 14027                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 14028  0387  084E               	movf	vfpfcnvrt@fmt,w
 14029  0388  0086               	movwf	6
 14030  0389  0187               	clrf	7
 14031  038A  3001               	movlw	1
 14032  038B  0781               	addwf	1,f
 14033  038C  3141               	addfsr 1,1
 14034  038D  1803               	skipnc
 14035  038E  0A81               	incf	1,f
 14036  038F                     i1l4842:
 14037                           
 14038                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 14039  038F  084F               	movf	vfpfcnvrt@ap,w
 14040  0390  0086               	movwf	6
 14041  0391  0187               	clrf	7
 14042  0392  0801               	movf	1,w
 14043  0393  0084               	movwf	4
 14044  0394  0185               	clrf	5
 14045  0395  3002               	movlw	2
 14046  0396  0781               	addwf	1,f
 14047  0397  3F00               	moviw [0]fsr0
 14048  0398  00D0               	movwf	??_vfpfcnvrt
 14049  0399  3F01               	moviw [1]fsr0
 14050  039A  00D1               	movwf	??_vfpfcnvrt+1
 14051  039B  0850               	movf	??_vfpfcnvrt,w
 14052  039C  00D6               	movwf	vfpfcnvrt@ll
 14053  039D  0851               	movf	??_vfpfcnvrt+1,w
 14054  039E  00D7               	movwf	vfpfcnvrt@ll+1
 14055  039F  0D89               	rlf	9,f
 14056  03A0  3B89               	subwfb	9,f
 14057  03A1  0989               	comf	9,f
 14058  03A2  00D8               	movwf	vfpfcnvrt@ll+2
 14059  03A3  00D9               	movwf	vfpfcnvrt@ll+3
 14060  03A4  00DA               	movwf	vfpfcnvrt@ll+4
 14061  03A5  00DB               	movwf	vfpfcnvrt@ll+5
 14062  03A6  00DC               	movwf	vfpfcnvrt@ll+6
 14063  03A7  00DD               	movwf	vfpfcnvrt@ll+7
 14064  03A8                     i1l4844:
 14065                           
 14066                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 14067  03A8  0856               	movf	vfpfcnvrt@ll,w
 14068  03A9  00B0               	movwf	dtoa@d
 14069  03AA  0857               	movf	vfpfcnvrt@ll+1,w
 14070  03AB  00B1               	movwf	dtoa@d+1
 14071  03AC  0858               	movf	vfpfcnvrt@ll+2,w
 14072  03AD  00B2               	movwf	dtoa@d+2
 14073  03AE  0859               	movf	vfpfcnvrt@ll+3,w
 14074  03AF  00B3               	movwf	dtoa@d+3
 14075  03B0  085A               	movf	vfpfcnvrt@ll+4,w
 14076  03B1  00B4               	movwf	dtoa@d+4
 14077  03B2  085B               	movf	vfpfcnvrt@ll+5,w
 14078  03B3  00B5               	movwf	dtoa@d+5
 14079  03B4  085C               	movf	vfpfcnvrt@ll+6,w
 14080  03B5  00B6               	movwf	dtoa@d+6
 14081  03B6  085D               	movf	vfpfcnvrt@ll+7,w
 14082  03B7  00B7               	movwf	dtoa@d+7
 14083  03B8  0863               	movf	vfpfcnvrt@fp,w
 14084  03B9  3184  241B  3182   	fcall	_dtoa
 14085  03BC  0020               	movlb	0	; select bank0
 14086  03BD  0831               	movf	?_dtoa+1,w
 14087  03BE  00CF               	movwf	?_vfpfcnvrt+1
 14088  03BF  0830               	movf	?_dtoa,w
 14089  03C0  00CE               	movwf	?_vfpfcnvrt
 14090  03C1  2C1A               	goto	i1l2173
 14091  03C2                     i1l4848:
 14092                           
 14093                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 14094  03C2  084E               	movf	vfpfcnvrt@fmt,w
 14095  03C3  0086               	movwf	6
 14096  03C4  0187               	clrf	7
 14097  03C5  3F40               	moviw [0]fsr1
 14098  03C6  00D0               	movwf	??_vfpfcnvrt
 14099  03C7  3F41               	moviw [1]fsr1
 14100  03C8  00D1               	movwf	??_vfpfcnvrt+1
 14101  03C9  0850               	movf	??_vfpfcnvrt,w
 14102  03CA  0084               	movwf	4
 14103  03CB  0851               	movf	??_vfpfcnvrt+1,w
 14104  03CC  0085               	movwf	5
 14105  03CD  0012               	moviw fsr0++
 14106  03CE  3A25               	xorlw	37
 14107  03CF  1D03               	btfss	3,2
 14108  03D0  2BD2               	goto	u383_21
 14109  03D1  2BD3               	goto	u383_20
 14110  03D2                     u383_21:
 14111  03D2  2BEC               	goto	i1l4858
 14112  03D3                     u383_20:
 14113  03D3                     i1l4850:
 14114                           
 14115                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 14116  03D3  084E               	movf	vfpfcnvrt@fmt,w
 14117  03D4  0086               	movwf	6
 14118  03D5  0187               	clrf	7
 14119  03D6  3001               	movlw	1
 14120  03D7  0781               	addwf	1,f
 14121  03D8  3141               	addfsr 1,1
 14122  03D9  1803               	skipnc
 14123  03DA  0A81               	incf	1,f
 14124  03DB                     i1l4852:
 14125                           
 14126                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 14127  03DB  3025               	movlw	37
 14128  03DC  00F0               	movwf	fputc@c
 14129  03DD  3000               	movlw	0
 14130  03DE  00F1               	movwf	fputc@c+1
 14131  03DF  0863               	movf	vfpfcnvrt@fp,w
 14132  03E0  00D0               	movwf	??_vfpfcnvrt
 14133  03E1  0850               	movf	??_vfpfcnvrt,w
 14134  03E2  00F2               	movwf	fputc@fp
 14135  03E3  3195  2587  3182   	fcall	_fputc
 14136  03E6                     i1l4854:
 14137                           
 14138                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 14139  03E6  3001               	movlw	1
 14140  03E7  0020               	movlb	0	; select bank0
 14141  03E8  00CE               	movwf	?_vfpfcnvrt
 14142  03E9  3000               	movlw	0
 14143  03EA  00CF               	movwf	?_vfpfcnvrt+1
 14144  03EB  2C1A               	goto	i1l2173
 14145  03EC                     i1l4858:
 14146                           
 14147                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 14148  03EC  084E               	movf	vfpfcnvrt@fmt,w
 14149  03ED  0086               	movwf	6
 14150  03EE  0187               	clrf	7
 14151  03EF  3001               	movlw	1
 14152  03F0  0781               	addwf	1,f
 14153  03F1  3141               	addfsr 1,1
 14154  03F2  1803               	skipnc
 14155  03F3  0A81               	incf	1,f
 14156  03F4                     i1l4860:
 14157                           
 14158                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 14159  03F4  01CE               	clrf	?_vfpfcnvrt
 14160  03F5  01CF               	clrf	?_vfpfcnvrt+1
 14161  03F6  2C1A               	goto	i1l2173
 14162  03F7                     i1l4864:
 14163                           
 14164                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 14165  03F7  084E               	movf	vfpfcnvrt@fmt,w
 14166  03F8  0086               	movwf	6
 14167  03F9  0187               	clrf	7
 14168  03FA  3F40               	moviw [0]fsr1
 14169  03FB  00D0               	movwf	??_vfpfcnvrt
 14170  03FC  3F41               	moviw [1]fsr1
 14171  03FD  00D1               	movwf	??_vfpfcnvrt+1
 14172  03FE  0850               	movf	??_vfpfcnvrt,w
 14173  03FF  0084               	movwf	4
 14174  0400  0851               	movf	??_vfpfcnvrt+1,w
 14175  0401  0085               	movwf	5
 14176  0402  0800               	movf	0,w	;code access
 14177  0403  00D2               	movwf	??_vfpfcnvrt+2
 14178  0404  01D3               	clrf	??_vfpfcnvrt+3
 14179  0405  0852               	movf	??_vfpfcnvrt+2,w
 14180  0406  00F0               	movwf	fputc@c
 14181  0407  0853               	movf	??_vfpfcnvrt+3,w
 14182  0408  00F1               	movwf	fputc@c+1
 14183  0409  0863               	movf	vfpfcnvrt@fp,w
 14184  040A  00D4               	movwf	??_vfpfcnvrt+4
 14185  040B  0854               	movf	??_vfpfcnvrt+4,w
 14186  040C  00F2               	movwf	fputc@fp
 14187  040D  3195  2587  3182   	fcall	_fputc
 14188  0410                     i1l4866:
 14189                           
 14190                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 14191  0410  0020               	movlb	0	; select bank0
 14192  0411  084E               	movf	vfpfcnvrt@fmt,w
 14193  0412  0086               	movwf	6
 14194  0413  0187               	clrf	7
 14195  0414  3001               	movlw	1
 14196  0415  0781               	addwf	1,f
 14197  0416  3141               	addfsr 1,1
 14198  0417  1803               	skipnc
 14199  0418  0A81               	incf	1,f
 14200  0419  2BE6               	goto	i1l4854
 14201  041A                     i1l2173:
 14202  041A  0008               	return
 14203  041B                     __end_of_vfpfcnvrt:
 14204                           
 14205                           	psect	text34
 14206  041B                     __ptext34:	
 14207 ;; *************** function _dtoa *****************
 14208 ;; Defined at:
 14209 ;;		line 287 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 14210 ;; Parameters:    Size  Location     Type
 14211 ;;  fp              1    wreg     PTR struct _IO_FILE
 14212 ;;		 -> sprintf@f(5), 
 14213 ;;  d               8   16[BANK0 ] long long 
 14214 ;; Auto vars:     Size  Location     Type
 14215 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
 14216 ;;		 -> sprintf@f(5), 
 14217 ;;  n               8   36[BANK0 ] long long 
 14218 ;;  i               2   44[BANK0 ] int 
 14219 ;;  s               2   34[BANK0 ] int 
 14220 ;;  w               2   32[BANK0 ] int 
 14221 ;;  p               2   30[BANK0 ] int 
 14222 ;; Return value:  Size  Location     Type
 14223 ;;                  2   16[BANK0 ] int 
 14224 ;; Registers used:
 14225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14226 ;; Tracked objects:
 14227 ;;		On entry : 0/0
 14228 ;;		On exit  : 0/0
 14229 ;;		Unchanged: 0/0
 14230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14231 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14232 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14233 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14234 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14235 ;;Total ram usage:       30 bytes
 14236 ;; Hardware stack levels used: 1
 14237 ;; Hardware stack levels required when called: 4
 14238 ;; This function calls:
 14239 ;;		___aodiv
 14240 ;;		___aomod
 14241 ;;		_abs
 14242 ;;		_pad
 14243 ;; This function is called by:
 14244 ;;		_vfpfcnvrt
 14245 ;; This function uses a non-reentrant model
 14246 ;;
 14247                           
 14248                           
 14249                           ;psect for function _dtoa
 14250  041B                     _dtoa:
 14251                           
 14252                           ;incstack = 0
 14253                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14254                           ;dtoa@fp stored from wreg
 14255  041B  0020               	movlb	0	; select bank0
 14256  041C  00BD               	movwf	dtoa@fp
 14257  041D                     i1l4632:
 14258                           
 14259                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 14260  041D  0830               	movf	dtoa@d,w
 14261  041E  00C4               	movwf	dtoa@n
 14262  041F  0831               	movf	dtoa@d+1,w
 14263  0420  00C5               	movwf	dtoa@n+1
 14264  0421  0832               	movf	dtoa@d+2,w
 14265  0422  00C6               	movwf	dtoa@n+2
 14266  0423  0833               	movf	dtoa@d+3,w
 14267  0424  00C7               	movwf	dtoa@n+3
 14268  0425  0834               	movf	dtoa@d+4,w
 14269  0426  00C8               	movwf	dtoa@n+4
 14270  0427  0835               	movf	dtoa@d+5,w
 14271  0428  00C9               	movwf	dtoa@n+5
 14272  0429  0836               	movf	dtoa@d+6,w
 14273  042A  00CA               	movwf	dtoa@n+6
 14274  042B  0837               	movf	dtoa@d+7,w
 14275  042C  00CB               	movwf	dtoa@n+7
 14276  042D                     i1l4634:
 14277                           
 14278                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 14279  042D  3044               	movlw	low dtoa@n
 14280  042E  0086               	movwf	6
 14281  042F  3000               	movlw	high dtoa@n
 14282  0430  0087               	movwf	7
 14283  0431  3F47               	moviw [7]fsr1
 14284  0432  00B8               	movwf	??_dtoa
 14285  0433  1BB8               	btfsc	??_dtoa,7
 14286  0434  2C36               	goto	u337_21
 14287  0435  2C38               	goto	u337_20
 14288  0436                     u337_21:
 14289  0436  3001               	movlw	1
 14290  0437  2C39               	goto	u338_20
 14291  0438                     u337_20:
 14292  0438  3000               	movlw	0
 14293  0439                     u338_20:
 14294  0439  0020               	movlb	0	; select bank0
 14295  043A  00B9               	movwf	??_dtoa+1
 14296  043B  01BA               	clrf	??_dtoa+2
 14297  043C  0839               	movf	??_dtoa+1,w
 14298  043D  00C2               	movwf	dtoa@s
 14299  043E  083A               	movf	??_dtoa+2,w
 14300  043F  00C3               	movwf	dtoa@s+1
 14301  0440                     i1l4636:
 14302                           
 14303                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 14304  0440  0842               	movf	dtoa@s,w
 14305  0441  0443               	iorwf	dtoa@s+1,w
 14306  0442  1903               	btfsc	3,2
 14307  0443  2C45               	goto	u339_21
 14308  0444  2C46               	goto	u339_20
 14309  0445                     u339_21:
 14310  0445  2C64               	goto	i1l2123
 14311  0446                     u339_20:
 14312  0446                     i1l4638:
 14313                           
 14314                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 14315  0446  09C4               	comf	dtoa@n,f
 14316  0447  09C5               	comf	dtoa@n+1,f
 14317  0448  09C6               	comf	dtoa@n+2,f
 14318  0449  09C7               	comf	dtoa@n+3,f
 14319  044A  09C8               	comf	dtoa@n+4,f
 14320  044B  09C9               	comf	dtoa@n+5,f
 14321  044C  09CA               	comf	dtoa@n+6,f
 14322  044D  09CB               	comf	dtoa@n+7,f
 14323  044E  0AC4               	incf	dtoa@n,f
 14324  044F  1D03               	skipz
 14325  0450  2C64               	goto	u340_2lld
 14326  0451  0AC5               	incf	dtoa@n+1,f
 14327  0452  1D03               	skipz
 14328  0453  2C64               	goto	u340_2lld
 14329  0454  0AC6               	incf	dtoa@n+2,f
 14330  0455  1D03               	skipz
 14331  0456  2C64               	goto	u340_2lld
 14332  0457  0AC7               	incf	dtoa@n+3,f
 14333  0458  1D03               	skipz
 14334  0459  2C64               	goto	u340_2lld
 14335  045A  0AC8               	incf	dtoa@n+4,f
 14336  045B  1D03               	skipz
 14337  045C  2C64               	goto	u340_2lld
 14338  045D  0AC9               	incf	dtoa@n+5,f
 14339  045E  1D03               	skipz
 14340  045F  2C64               	goto	u340_2lld
 14341  0460  0ACA               	incf	dtoa@n+6,f
 14342  0461  1D03               	skipz
 14343  0462  2C64               	goto	u340_2lld
 14344  0463  0ACB               	incf	dtoa@n+7,f
 14345  0464                     u340_2lld:
 14346  0464                     i1l2123:	
 14347                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
 14348                           
 14349                           
 14350                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 14351  0464  0021               	movlb	1	; select bank1
 14352  0465  1BE5               	btfsc	(_prec+1)^(0+128),7
 14353  0466  2C68               	goto	u341_21
 14354  0467  2C69               	goto	u341_20
 14355  0468                     u341_21:
 14356  0468  2C6E               	goto	i1l2124
 14357  0469                     u341_20:
 14358  0469                     i1l4640:
 14359                           
 14360                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 14361  0469  30FD               	movlw	253
 14362  046A  0020               	movlb	0	; select bank0
 14363  046B  05EE               	andwf	_flags,f
 14364  046C  30FF               	movlw	255
 14365  046D  05EF               	andwf	_flags+1,f
 14366  046E                     i1l2124:	
 14367                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
 14368                           
 14369                           
 14370                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 14371  046E  0021               	movlb	1	; select bank1
 14372  046F  0865               	movf	(_prec+1)^(0+128),w
 14373  0470  3A80               	xorlw	128
 14374  0471  0020               	movlb	0	; select bank0
 14375  0472  00B8               	movwf	??_dtoa
 14376  0473  3080               	movlw	128
 14377  0474  0238               	subwf	??_dtoa,w
 14378  0475  1D03               	skipz
 14379  0476  2C7A               	goto	u342_25
 14380  0477  3001               	movlw	1
 14381  0478  0021               	movlb	1	; select bank1
 14382  0479  0264               	subwf	_prec^(0+128),w
 14383  047A                     u342_25:
 14384  047A  1803               	skipnc
 14385  047B  2C7D               	goto	u342_21
 14386  047C  2C7E               	goto	u342_20
 14387  047D                     u342_21:
 14388  047D  2C84               	goto	i1l4644
 14389  047E                     u342_20:
 14390  047E                     i1l4642:
 14391  047E  3001               	movlw	1
 14392  047F  0020               	movlb	0	; select bank0
 14393  0480  00BE               	movwf	dtoa@p
 14394  0481  3000               	movlw	0
 14395  0482  00BF               	movwf	dtoa@p+1
 14396  0483  2C8C               	goto	i1l2128
 14397  0484                     i1l4644:
 14398  0484  0021               	movlb	1	; select bank1
 14399  0485  0865               	movf	(_prec+1)^(0+128),w
 14400  0486  0020               	movlb	0	; select bank0
 14401  0487  00BF               	movwf	dtoa@p+1
 14402  0488  0021               	movlb	1	; select bank1
 14403  0489  0864               	movf	_prec^(0+128),w
 14404  048A  0020               	movlb	0	; select bank0
 14405  048B  00BE               	movwf	dtoa@p
 14406  048C                     i1l2128:
 14407                           
 14408                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 14409  048C  0021               	movlb	1	; select bank1
 14410  048D  0863               	movf	(_width+1)^(0+128),w
 14411  048E  0020               	movlb	0	; select bank0
 14412  048F  00C1               	movwf	dtoa@w+1
 14413  0490  0021               	movlb	1	; select bank1
 14414  0491  0862               	movf	_width^(0+128),w
 14415  0492  0020               	movlb	0	; select bank0
 14416  0493  00C0               	movwf	dtoa@w
 14417  0494                     i1l4646:
 14418                           
 14419                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 14420  0494  0842               	movf	dtoa@s,w
 14421  0495  0443               	iorwf	dtoa@s+1,w
 14422  0496  1D03               	btfss	3,2
 14423  0497  2C99               	goto	u343_21
 14424  0498  2C9A               	goto	u343_20
 14425  0499                     u343_21:
 14426  0499  2C9E               	goto	i1l4650
 14427  049A                     u343_20:
 14428  049A                     i1l4648:
 14429  049A  1D6E               	btfss	_flags,2
 14430  049B  2C9D               	goto	u344_21
 14431  049C  2C9E               	goto	u344_20
 14432  049D                     u344_21:
 14433  049D  2CA2               	goto	i1l2129
 14434  049E                     u344_20:
 14435  049E                     i1l4650:
 14436                           
 14437                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
 14438  049E  30FF               	movlw	255
 14439  049F  07C0               	addwf	dtoa@w,f
 14440  04A0  30FF               	movlw	255
 14441  04A1  3DC1               	addwfc	dtoa@w+1,f
 14442  04A2                     i1l2129:	
 14443                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
 14444                           
 14445                           
 14446                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 14447  04A2  301F               	movlw	31
 14448  04A3  00CC               	movwf	dtoa@i
 14449  04A4  3000               	movlw	0
 14450  04A5  00CD               	movwf	dtoa@i+1
 14451  04A6                     i1l4652:
 14452                           
 14453                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 14454  04A6  0023               	movlb	3	; select bank3
 14455  04A7  01DC               	clrf	(_dbuf^(0+384)+31)
 14456                           
 14457                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14458  04A8  2D12               	goto	i1l2132
 14459  04A9                     i1l4654:
 14460                           
 14461                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
 14462  04A9  30FF               	movlw	255
 14463  04AA  0020               	movlb	0	; select bank0
 14464  04AB  07CC               	addwf	dtoa@i,f
 14465  04AC  30FF               	movlw	255
 14466  04AD  3DCD               	addwfc	dtoa@i+1,f
 14467  04AE                     i1l4656:
 14468                           
 14469                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 14470  04AE  300A               	movlw	10
 14471  04AF  00A0               	movwf	___aomod@divisor
 14472  04B0  01A1               	clrf	___aomod@divisor+1
 14473  04B1  01A2               	clrf	___aomod@divisor+2
 14474  04B2  01A3               	clrf	___aomod@divisor+3
 14475  04B3  01A4               	clrf	___aomod@divisor+4
 14476  04B4  01A5               	clrf	___aomod@divisor+5
 14477  04B5  01A6               	clrf	___aomod@divisor+6
 14478  04B6  01A7               	clrf	___aomod@divisor+7
 14479  04B7  0844               	movf	dtoa@n,w
 14480  04B8  00A8               	movwf	___aomod@dividend
 14481  04B9  0845               	movf	dtoa@n+1,w
 14482  04BA  00A9               	movwf	___aomod@dividend+1
 14483  04BB  0846               	movf	dtoa@n+2,w
 14484  04BC  00AA               	movwf	___aomod@dividend+2
 14485  04BD  0847               	movf	dtoa@n+3,w
 14486  04BE  00AB               	movwf	___aomod@dividend+3
 14487  04BF  0848               	movf	dtoa@n+4,w
 14488  04C0  00AC               	movwf	___aomod@dividend+4
 14489  04C1  0849               	movf	dtoa@n+5,w
 14490  04C2  00AD               	movwf	___aomod@dividend+5
 14491  04C3  084A               	movf	dtoa@n+6,w
 14492  04C4  00AE               	movwf	___aomod@dividend+6
 14493  04C5  084B               	movf	dtoa@n+7,w
 14494  04C6  00AF               	movwf	___aomod@dividend+7
 14495  04C7  318C  24CD  3184   	fcall	___aomod
 14496  04CA  0020               	movlb	0	; select bank0
 14497  04CB  0821               	movf	?___aomod+1,w
 14498  04CC  00F4               	movwf	abs@a+1
 14499  04CD  0820               	movf	?___aomod,w
 14500  04CE  00F3               	movwf	abs@a
 14501  04CF  3193  2383  3184   	fcall	_abs
 14502  04D2  0873               	movf	?_abs,w
 14503  04D3  3E30               	addlw	48
 14504  04D4  0020               	movlb	0	; select bank0
 14505  04D5  00B8               	movwf	??_dtoa
 14506  04D6  084C               	movf	dtoa@i,w
 14507  04D7  3EBD               	addlw	(low (_dbuf| (0+256)))& (0+255)
 14508  04D8  0086               	movwf	6
 14509  04D9  3001               	movlw	1	; select bank3/4
 14510  04DA  0087               	movwf	7
 14511  04DB  0838               	movf	??_dtoa,w
 14512  04DC  0081               	movwf	1
 14513  04DD                     i1l4658:
 14514                           
 14515                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
 14516  04DD  30FF               	movlw	255
 14517  04DE  07BE               	addwf	dtoa@p,f
 14518  04DF  30FF               	movlw	255
 14519  04E0  3DBF               	addwfc	dtoa@p+1,f
 14520  04E1                     i1l4660:
 14521                           
 14522                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
 14523  04E1  30FF               	movlw	255
 14524  04E2  07C0               	addwf	dtoa@w,f
 14525  04E3  30FF               	movlw	255
 14526  04E4  3DC1               	addwfc	dtoa@w+1,f
 14527  04E5                     i1l4662:
 14528                           
 14529                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 14530  04E5  300A               	movlw	10
 14531  04E6  00A0               	movwf	___aodiv@divisor
 14532  04E7  01A1               	clrf	___aodiv@divisor+1
 14533  04E8  01A2               	clrf	___aodiv@divisor+2
 14534  04E9  01A3               	clrf	___aodiv@divisor+3
 14535  04EA  01A4               	clrf	___aodiv@divisor+4
 14536  04EB  01A5               	clrf	___aodiv@divisor+5
 14537  04EC  01A6               	clrf	___aodiv@divisor+6
 14538  04ED  01A7               	clrf	___aodiv@divisor+7
 14539  04EE  0844               	movf	dtoa@n,w
 14540  04EF  00A8               	movwf	___aodiv@dividend
 14541  04F0  0845               	movf	dtoa@n+1,w
 14542  04F1  00A9               	movwf	___aodiv@dividend+1
 14543  04F2  0846               	movf	dtoa@n+2,w
 14544  04F3  00AA               	movwf	___aodiv@dividend+2
 14545  04F4  0847               	movf	dtoa@n+3,w
 14546  04F5  00AB               	movwf	___aodiv@dividend+3
 14547  04F6  0848               	movf	dtoa@n+4,w
 14548  04F7  00AC               	movwf	___aodiv@dividend+4
 14549  04F8  0849               	movf	dtoa@n+5,w
 14550  04F9  00AD               	movwf	___aodiv@dividend+5
 14551  04FA  084A               	movf	dtoa@n+6,w
 14552  04FB  00AE               	movwf	___aodiv@dividend+6
 14553  04FC  084B               	movf	dtoa@n+7,w
 14554  04FD  00AF               	movwf	___aodiv@dividend+7
 14555  04FE  318D  25B7  3184   	fcall	___aodiv
 14556  0501  0020               	movlb	0	; select bank0
 14557  0502  0820               	movf	?___aodiv,w
 14558  0503  00C4               	movwf	dtoa@n
 14559  0504  0821               	movf	?___aodiv+1,w
 14560  0505  00C5               	movwf	dtoa@n+1
 14561  0506  0822               	movf	?___aodiv+2,w
 14562  0507  00C6               	movwf	dtoa@n+2
 14563  0508  0823               	movf	?___aodiv+3,w
 14564  0509  00C7               	movwf	dtoa@n+3
 14565  050A  0824               	movf	?___aodiv+4,w
 14566  050B  00C8               	movwf	dtoa@n+4
 14567  050C  0825               	movf	?___aodiv+5,w
 14568  050D  00C9               	movwf	dtoa@n+5
 14569  050E  0826               	movf	?___aodiv+6,w
 14570  050F  00CA               	movwf	dtoa@n+6
 14571  0510  0827               	movf	?___aodiv+7,w
 14572  0511  00CB               	movwf	dtoa@n+7
 14573  0512                     i1l2132:	
 14574                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
 14575                           
 14576                           
 14577                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14578  0512  0020               	movlb	0	; select bank0
 14579  0513  084D               	movf	dtoa@i+1,w
 14580  0514  3A80               	xorlw	128
 14581  0515  00B8               	movwf	??_dtoa
 14582  0516  3080               	movlw	128
 14583  0517  0238               	subwf	??_dtoa,w
 14584  0518  1D03               	skipz
 14585  0519  2D1C               	goto	u345_25
 14586  051A  3001               	movlw	1
 14587  051B  024C               	subwf	dtoa@i,w
 14588  051C                     u345_25:
 14589  051C  1C03               	skipc
 14590  051D  2D1F               	goto	u345_21
 14591  051E  2D20               	goto	u345_20
 14592  051F                     u345_21:
 14593  051F  2D4D               	goto	i1l4672
 14594  0520                     u345_20:
 14595  0520                     i1l4664:
 14596  0520  0020               	movlb	0	; select bank0
 14597  0521  0844               	movf	dtoa@n,w
 14598  0522  0445               	iorwf	dtoa@n+1,w
 14599  0523  0446               	iorwf	dtoa@n+2,w
 14600  0524  0447               	iorwf	dtoa@n+3,w
 14601  0525  0448               	iorwf	dtoa@n+4,w
 14602  0526  0449               	iorwf	dtoa@n+5,w
 14603  0527  044A               	iorwf	dtoa@n+6,w
 14604  0528  044B               	iorwf	dtoa@n+7,w
 14605  0529  1D03               	skipz
 14606  052A  2D2C               	goto	u346_21
 14607  052B  2D2D               	goto	u346_20
 14608  052C                     u346_21:
 14609  052C  2CA9               	goto	i1l4654
 14610  052D                     u346_20:
 14611  052D                     i1l4666:
 14612  052D  083F               	movf	dtoa@p+1,w
 14613  052E  3A80               	xorlw	128
 14614  052F  00B8               	movwf	??_dtoa
 14615  0530  3080               	movlw	128
 14616  0531  0238               	subwf	??_dtoa,w
 14617  0532  1D03               	skipz
 14618  0533  2D36               	goto	u347_25
 14619  0534  3001               	movlw	1
 14620  0535  023E               	subwf	dtoa@p,w
 14621  0536                     u347_25:
 14622  0536  1803               	skipnc
 14623  0537  2D39               	goto	u347_21
 14624  0538  2D3A               	goto	u347_20
 14625  0539                     u347_21:
 14626  0539  2CA9               	goto	i1l4654
 14627  053A                     u347_20:
 14628  053A                     i1l4668:
 14629  053A  0020               	movlb	0	; select bank0
 14630  053B  0841               	movf	dtoa@w+1,w
 14631  053C  3A80               	xorlw	128
 14632  053D  00B8               	movwf	??_dtoa
 14633  053E  3080               	movlw	128
 14634  053F  0238               	subwf	??_dtoa,w
 14635  0540  1D03               	skipz
 14636  0541  2D44               	goto	u348_25
 14637  0542  3001               	movlw	1
 14638  0543  0240               	subwf	dtoa@w,w
 14639  0544                     u348_25:
 14640  0544  1C03               	skipc
 14641  0545  2D47               	goto	u348_21
 14642  0546  2D48               	goto	u348_20
 14643  0547                     u348_21:
 14644  0547  2D4D               	goto	i1l4672
 14645  0548                     u348_20:
 14646  0548                     i1l4670:
 14647  0548  0020               	movlb	0	; select bank0
 14648  0549  18EE               	btfsc	_flags,1
 14649  054A  2D4C               	goto	u349_21
 14650  054B  2D4D               	goto	u349_20
 14651  054C                     u349_21:
 14652  054C  2CA9               	goto	i1l4654
 14653  054D                     u349_20:
 14654  054D                     i1l4672:
 14655                           
 14656                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 14657  054D  0020               	movlb	0	; select bank0
 14658  054E  0842               	movf	dtoa@s,w
 14659  054F  0443               	iorwf	dtoa@s+1,w
 14660  0550  1D03               	btfss	3,2
 14661  0551  2D53               	goto	u350_21
 14662  0552  2D54               	goto	u350_20
 14663  0553                     u350_21:
 14664  0553  2D58               	goto	i1l4676
 14665  0554                     u350_20:
 14666  0554                     i1l4674:
 14667  0554  1D6E               	btfss	_flags,2
 14668  0555  2D57               	goto	u351_21
 14669  0556  2D58               	goto	u351_20
 14670  0557                     u351_21:
 14671  0557  2D74               	goto	i1l4686
 14672  0558                     u351_20:
 14673  0558                     i1l4676:
 14674                           
 14675                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 14676  0558  30FF               	movlw	255
 14677  0559  07CC               	addwf	dtoa@i,f
 14678  055A  30FF               	movlw	255
 14679  055B  3DCD               	addwfc	dtoa@i+1,f
 14680  055C                     i1l4678:
 14681                           
 14682                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 14683  055C  0842               	movf	dtoa@s,w
 14684  055D  0443               	iorwf	dtoa@s+1,w
 14685  055E  1D03               	btfss	3,2
 14686  055F  2D61               	goto	u352_21
 14687  0560  2D62               	goto	u352_20
 14688  0561                     u352_21:
 14689  0561  2D67               	goto	i1l4682
 14690  0562                     u352_20:
 14691  0562                     i1l4680:
 14692  0562  302B               	movlw	43
 14693  0563  00BB               	movwf	_dtoa$2939
 14694  0564  3000               	movlw	0
 14695  0565  00BC               	movwf	_dtoa$2939+1
 14696  0566  2D6B               	goto	i1l4684
 14697  0567                     i1l4682:
 14698  0567  302D               	movlw	45
 14699  0568  00BB               	movwf	_dtoa$2939
 14700  0569  3000               	movlw	0
 14701  056A  00BC               	movwf	_dtoa$2939+1
 14702  056B                     i1l4684:
 14703  056B  083B               	movf	_dtoa$2939,w
 14704  056C  00B8               	movwf	??_dtoa
 14705  056D  084C               	movf	dtoa@i,w
 14706  056E  3EBD               	addlw	(low (_dbuf| (0+256)))& (0+255)
 14707  056F  0086               	movwf	6
 14708  0570  3001               	movlw	1	; select bank3/4
 14709  0571  0087               	movwf	7
 14710  0572  0838               	movf	??_dtoa,w
 14711  0573  0081               	movwf	1
 14712  0574                     i1l4686:
 14713                           
 14714                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 14715  0574  084C               	movf	dtoa@i,w
 14716  0575  3EBD               	addlw	(low (_dbuf| (0+256)))& (0+255)
 14717  0576  00B8               	movwf	??_dtoa
 14718  0577  0838               	movf	??_dtoa,w
 14719  0578  00A4               	movwf	pad@buf
 14720  0579  0841               	movf	dtoa@w+1,w
 14721  057A  00A6               	movwf	pad@p+1
 14722  057B  0840               	movf	dtoa@w,w
 14723  057C  00A5               	movwf	pad@p
 14724  057D  083D               	movf	dtoa@fp,w
 14725  057E  3196  2678  3184   	fcall	_pad
 14726  0581  0020               	movlb	0	; select bank0
 14727  0582  0825               	movf	?_pad+1,w
 14728  0583  00B1               	movwf	?_dtoa+1
 14729  0584  0824               	movf	?_pad,w
 14730  0585  00B0               	movwf	?_dtoa
 14731  0586                     i1l2146:
 14732  0586  0008               	return
 14733  0587                     __end_of_dtoa:
 14734                           
 14735                           	psect	text35
 14736  1678                     __ptext35:	
 14737 ;; *************** function _pad *****************
 14738 ;; Defined at:
 14739 ;;		line 72 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 14740 ;; Parameters:    Size  Location     Type
 14741 ;;  fp              1    wreg     PTR struct _IO_FILE
 14742 ;;		 -> sprintf@f(5), 
 14743 ;;  buf             1    4[BANK0 ] PTR unsigned char 
 14744 ;;		 -> dbuf(32), 
 14745 ;;  p               2    5[BANK0 ] int 
 14746 ;; Auto vars:     Size  Location     Type
 14747 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
 14748 ;;		 -> sprintf@f(5), 
 14749 ;;  w               2    9[BANK0 ] int 
 14750 ;;  i               2    7[BANK0 ] int 
 14751 ;; Return value:  Size  Location     Type
 14752 ;;                  2    4[BANK0 ] int 
 14753 ;; Registers used:
 14754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14755 ;; Tracked objects:
 14756 ;;		On entry : 0/0
 14757 ;;		On exit  : 0/0
 14758 ;;		Unchanged: 0/0
 14759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14760 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14761 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14763 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14764 ;;Total ram usage:        9 bytes
 14765 ;; Hardware stack levels used: 1
 14766 ;; Hardware stack levels required when called: 3
 14767 ;; This function calls:
 14768 ;;		_fputc
 14769 ;;		_fputs
 14770 ;;		_strlen
 14771 ;; This function is called by:
 14772 ;;		_dtoa
 14773 ;; This function uses a non-reentrant model
 14774 ;;
 14775                           
 14776                           
 14777                           ;psect for function _pad
 14778  1678                     _pad:
 14779                           
 14780                           ;incstack = 0
 14781                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14782                           ;pad@fp stored from wreg
 14783  1678  0020               	movlb	0	; select bank0
 14784  1679  00AB               	movwf	pad@fp
 14785  167A                     i1l4562:
 14786                           
 14787                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 14788  167A  1C6E               	btfss	_flags,0
 14789  167B  2E7D               	goto	u323_21
 14790  167C  2E7E               	goto	u323_20
 14791  167D                     u323_21:
 14792  167D  2E86               	goto	i1l4566
 14793  167E                     u323_20:
 14794  167E                     i1l4564:
 14795                           
 14796                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 14797  167E  082B               	movf	pad@fp,w
 14798  167F  00FC               	movwf	??_pad
 14799  1680  087C               	movf	??_pad,w
 14800  1681  00F8               	movwf	fputs@fp
 14801  1682  0824               	movf	pad@buf,w
 14802  1683  3194  2480  3196   	fcall	_fputs
 14803  1686                     i1l4566:
 14804                           
 14805                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 14806  1686  0020               	movlb	0	; select bank0
 14807  1687  1BA6               	btfsc	pad@p+1,7
 14808  1688  2E8A               	goto	u324_21
 14809  1689  2E8B               	goto	u324_20
 14810  168A                     u324_21:
 14811  168A  2E90               	goto	i1l4570
 14812  168B                     u324_20:
 14813  168B                     i1l4568:
 14814  168B  0826               	movf	pad@p+1,w
 14815  168C  00AA               	movwf	pad@w+1
 14816  168D  0825               	movf	pad@p,w
 14817  168E  00A9               	movwf	pad@w
 14818  168F  2E92               	goto	i1l2099
 14819  1690                     i1l4570:
 14820  1690  01A9               	clrf	pad@w
 14821  1691  01AA               	clrf	pad@w+1
 14822  1692                     i1l2099:
 14823                           
 14824                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 14825  1692  01A7               	clrf	pad@i
 14826  1693  01A8               	clrf	pad@i+1
 14827                           
 14828                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 14829  1694  2EA6               	goto	i1l4576
 14830  1695                     i1l4572:
 14831                           
 14832                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 14833  1695  3020               	movlw	32
 14834  1696  00F0               	movwf	fputc@c
 14835  1697  3000               	movlw	0
 14836  1698  00F1               	movwf	fputc@c+1
 14837  1699  0020               	movlb	0	; select bank0
 14838  169A  082B               	movf	pad@fp,w
 14839  169B  00FC               	movwf	??_pad
 14840  169C  087C               	movf	??_pad,w
 14841  169D  00F2               	movwf	fputc@fp
 14842  169E  3195  2587  3196   	fcall	_fputc
 14843  16A1                     i1l4574:
 14844                           
 14845                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 14846  16A1  3001               	movlw	1
 14847  16A2  0020               	movlb	0	; select bank0
 14848  16A3  07A7               	addwf	pad@i,f
 14849  16A4  3000               	movlw	0
 14850  16A5  3DA8               	addwfc	pad@i+1,f
 14851  16A6                     i1l4576:
 14852                           
 14853                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 14854  16A6  0828               	movf	pad@i+1,w
 14855  16A7  3A80               	xorlw	128
 14856  16A8  00FC               	movwf	??_pad
 14857  16A9  082A               	movf	pad@w+1,w
 14858  16AA  3A80               	xorlw	128
 14859  16AB  027C               	subwf	??_pad,w
 14860  16AC  1D03               	skipz
 14861  16AD  2EB0               	goto	u325_25
 14862  16AE  0829               	movf	pad@w,w
 14863  16AF  0227               	subwf	pad@i,w
 14864  16B0                     u325_25:
 14865  16B0  1C03               	skipc
 14866  16B1  2EB3               	goto	u325_21
 14867  16B2  2EB4               	goto	u325_20
 14868  16B3                     u325_21:
 14869  16B3  2E95               	goto	i1l4572
 14870  16B4                     u325_20:
 14871  16B4                     i1l2102:
 14872                           
 14873                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 14874  16B4  0020               	movlb	0	; select bank0
 14875  16B5  186E               	btfsc	_flags,0
 14876  16B6  2EB8               	goto	u326_21
 14877  16B7  2EB9               	goto	u326_20
 14878  16B8                     u326_21:
 14879  16B8  2EC1               	goto	i1l4580
 14880  16B9                     u326_20:
 14881  16B9                     i1l4578:
 14882                           
 14883                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 14884  16B9  082B               	movf	pad@fp,w
 14885  16BA  00FC               	movwf	??_pad
 14886  16BB  087C               	movf	??_pad,w
 14887  16BC  00F8               	movwf	fputs@fp
 14888  16BD  0824               	movf	pad@buf,w
 14889  16BE  3194  2480  3196   	fcall	_fputs
 14890  16C1                     i1l4580:
 14891                           
 14892                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 14893  16C1  0020               	movlb	0	; select bank0
 14894  16C2  0824               	movf	pad@buf,w
 14895  16C3  3193  239D  3196   	fcall	_strlen
 14896  16C6  0020               	movlb	0	; select bank0
 14897  16C7  0829               	movf	pad@w,w
 14898  16C8  0770               	addwf	?_strlen,w
 14899  16C9  00A4               	movwf	?_pad
 14900  16CA  082A               	movf	pad@w+1,w
 14901  16CB  3D71               	addwfc	?_strlen+1,w
 14902  16CC  00A5               	movwf	?_pad+1
 14903  16CD                     i1l2104:
 14904  16CD  0008               	return
 14905  16CE                     __end_of_pad:
 14906                           
 14907                           	psect	text36
 14908  139D                     __ptext36:	
 14909 ;; *************** function _strlen *****************
 14910 ;; Defined at:
 14911 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 14912 ;; Parameters:    Size  Location     Type
 14913 ;;  s               1    wreg     PTR const unsigned char 
 14914 ;;		 -> dbuf(32), 
 14915 ;; Auto vars:     Size  Location     Type
 14916 ;;  s               1    4[COMMON] PTR const unsigned char 
 14917 ;;		 -> dbuf(32), 
 14918 ;;  a               1    3[COMMON] PTR const unsigned char 
 14919 ;;		 -> dbuf(32), 
 14920 ;; Return value:  Size  Location     Type
 14921 ;;                  2    0[COMMON] unsigned int 
 14922 ;; Registers used:
 14923 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14924 ;; Tracked objects:
 14925 ;;		On entry : 0/0
 14926 ;;		On exit  : 0/0
 14927 ;;		Unchanged: 0/0
 14928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14930 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14931 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14932 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14933 ;;Total ram usage:        5 bytes
 14934 ;; Hardware stack levels used: 1
 14935 ;; This function calls:
 14936 ;;		Nothing
 14937 ;; This function is called by:
 14938 ;;		_pad
 14939 ;; This function uses a non-reentrant model
 14940 ;;
 14941                           
 14942                           
 14943                           ;psect for function _strlen
 14944  139D                     _strlen:
 14945                           
 14946                           ;incstack = 0
 14947                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 14948                           ;strlen@s stored from wreg
 14949  139D  00F4               	movwf	strlen@s
 14950  139E                     i1l4470:
 14951  139E  0874               	movf	strlen@s,w
 14952  139F  00F2               	movwf	??_strlen
 14953  13A0  0872               	movf	??_strlen,w
 14954  13A1  00F3               	movwf	strlen@a
 14955  13A2  2BA7               	goto	i1l4474
 14956  13A3                     i1l4472:
 14957  13A3  3001               	movlw	1
 14958  13A4  00F2               	movwf	??_strlen
 14959  13A5  0872               	movf	??_strlen,w
 14960  13A6  07F4               	addwf	strlen@s,f
 14961  13A7                     i1l4474:
 14962  13A7  0874               	movf	strlen@s,w
 14963  13A8  0086               	movwf	6
 14964  13A9  3001               	movlw	1	; select bank2/3
 14965  13AA  0087               	movwf	7
 14966  13AB  0801               	movf	1,w
 14967  13AC  1D03               	btfss	3,2
 14968  13AD  2BAF               	goto	u297_21
 14969  13AE  2BB0               	goto	u297_20
 14970  13AF                     u297_21:
 14971  13AF  2BA3               	goto	i1l4472
 14972  13B0                     u297_20:
 14973  13B0                     i1l4476:
 14974  13B0  0873               	movf	strlen@a,w
 14975  13B1  0274               	subwf	strlen@s,w
 14976  13B2  00F0               	movwf	?_strlen
 14977  13B3  01F1               	clrf	?_strlen+1
 14978  13B4  1BF0               	btfsc	?_strlen,7
 14979  13B5  03F1               	decf	?_strlen+1,f
 14980  13B6                     i1l2264:
 14981  13B6  0008               	return
 14982  13B7                     __end_of_strlen:
 14983                           
 14984                           	psect	text37
 14985  1480                     __ptext37:	
 14986 ;; *************** function _fputs *****************
 14987 ;; Defined at:
 14988 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 14989 ;; Parameters:    Size  Location     Type
 14990 ;;  s               1    wreg     PTR const unsigned char 
 14991 ;;		 -> dbuf(32), 
 14992 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
 14993 ;;		 -> sprintf@f(5), 
 14994 ;; Auto vars:     Size  Location     Type
 14995 ;;  s               1    3[BANK0 ] PTR const unsigned char 
 14996 ;;		 -> dbuf(32), 
 14997 ;;  i               2    1[BANK0 ] int 
 14998 ;;  c               1    0[BANK0 ] unsigned char 
 14999 ;; Return value:  Size  Location     Type
 15000 ;;                  2    8[COMMON] int 
 15001 ;; Registers used:
 15002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15003 ;; Tracked objects:
 15004 ;;		On entry : 0/0
 15005 ;;		On exit  : 0/0
 15006 ;;		Unchanged: 0/0
 15007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15008 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15009 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15010 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15011 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15012 ;;Total ram usage:        8 bytes
 15013 ;; Hardware stack levels used: 1
 15014 ;; Hardware stack levels required when called: 2
 15015 ;; This function calls:
 15016 ;;		_fputc
 15017 ;; This function is called by:
 15018 ;;		_pad
 15019 ;; This function uses a non-reentrant model
 15020 ;;
 15021                           
 15022                           
 15023                           ;psect for function _fputs
 15024  1480                     _fputs:
 15025                           
 15026                           ;incstack = 0
 15027                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15028                           ;fputs@s stored from wreg
 15029  1480  0020               	movlb	0	; select bank0
 15030  1481  00A3               	movwf	fputs@s
 15031  1482                     i1l4462:
 15032  1482  01A1               	clrf	fputs@i
 15033  1483  01A2               	clrf	fputs@i+1
 15034  1484  2C98               	goto	i1l4468
 15035  1485                     i1l4464:
 15036  1485  0820               	movf	fputs@c,w
 15037  1486  00F9               	movwf	??_fputs
 15038  1487  01FA               	clrf	??_fputs+1
 15039  1488  0879               	movf	??_fputs,w
 15040  1489  00F0               	movwf	fputc@c
 15041  148A  087A               	movf	??_fputs+1,w
 15042  148B  00F1               	movwf	fputc@c+1
 15043  148C  0878               	movf	fputs@fp,w
 15044  148D  00FB               	movwf	??_fputs+2
 15045  148E  087B               	movf	??_fputs+2,w
 15046  148F  00F2               	movwf	fputc@fp
 15047  1490  3195  2587  3194   	fcall	_fputc
 15048  1493                     i1l4466:
 15049  1493  3001               	movlw	1
 15050  1494  0020               	movlb	0	; select bank0
 15051  1495  07A1               	addwf	fputs@i,f
 15052  1496  3000               	movlw	0
 15053  1497  3DA2               	addwfc	fputs@i+1,f
 15054  1498                     i1l4468:
 15055  1498  0821               	movf	fputs@i,w
 15056  1499  0723               	addwf	fputs@s,w
 15057  149A  00F9               	movwf	??_fputs
 15058  149B  0879               	movf	??_fputs,w
 15059  149C  0086               	movwf	6
 15060  149D  3001               	movlw	1	; select bank2/3
 15061  149E  0087               	movwf	7
 15062  149F  0801               	movf	1,w
 15063  14A0  00FA               	movwf	??_fputs+1
 15064  14A1  087A               	movf	??_fputs+1,w
 15065  14A2  00A0               	movwf	fputs@c
 15066  14A3  0820               	movf	fputs@c,w
 15067  14A4  1D03               	btfss	3,2
 15068  14A5  2CA7               	goto	u296_21
 15069  14A6  2CA8               	goto	u296_20
 15070  14A7                     u296_21:
 15071  14A7  2C85               	goto	i1l4464
 15072  14A8                     u296_20:
 15073  14A8                     i1l2255:
 15074  14A8  0008               	return
 15075  14A9                     __end_of_fputs:
 15076                           
 15077                           	psect	text38
 15078  1383                     __ptext38:	
 15079 ;; *************** function _abs *****************
 15080 ;; Defined at:
 15081 ;;		line 1 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 15082 ;; Parameters:    Size  Location     Type
 15083 ;;  a               2    3[COMMON] int 
 15084 ;; Auto vars:     Size  Location     Type
 15085 ;;		None
 15086 ;; Return value:  Size  Location     Type
 15087 ;;                  2    3[COMMON] int 
 15088 ;; Registers used:
 15089 ;;		wreg, status,2, status,0
 15090 ;; Tracked objects:
 15091 ;;		On entry : 0/0
 15092 ;;		On exit  : 0/0
 15093 ;;		Unchanged: 0/0
 15094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15097 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15098 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15099 ;;Total ram usage:        4 bytes
 15100 ;; Hardware stack levels used: 1
 15101 ;; This function calls:
 15102 ;;		Nothing
 15103 ;; This function is called by:
 15104 ;;		_dtoa
 15105 ;; This function uses a non-reentrant model
 15106 ;;
 15107                           
 15108                           
 15109                           ;psect for function _abs
 15110  1383                     _abs:
 15111  1383                     i1l4584:	
 15112                           ;incstack = 0
 15113                           ; Regs used in _abs: [wreg+status,2+status,0]
 15114                           
 15115  1383  0874               	movf	abs@a+1,w
 15116  1384  3A80               	xorlw	128
 15117  1385  00F5               	movwf	??_abs
 15118  1386  3080               	movlw	128
 15119  1387  0275               	subwf	??_abs,w
 15120  1388  1D03               	skipz
 15121  1389  2B8C               	goto	u327_25
 15122  138A  3001               	movlw	1
 15123  138B  0273               	subwf	abs@a,w
 15124  138C                     u327_25:
 15125  138C  1803               	skipnc
 15126  138D  2B8F               	goto	u327_21
 15127  138E  2B90               	goto	u327_20
 15128  138F                     u327_21:
 15129  138F  2B9C               	goto	i1l2187
 15130  1390                     u327_20:
 15131  1390                     i1l4586:
 15132  1390  0973               	comf	abs@a,w
 15133  1391  00F5               	movwf	??_abs
 15134  1392  0974               	comf	abs@a+1,w
 15135  1393  00F6               	movwf	??_abs+1
 15136  1394  0AF5               	incf	??_abs,f
 15137  1395  1903               	skipnz
 15138  1396  0AF6               	incf	??_abs+1,f
 15139  1397  0875               	movf	??_abs,w
 15140  1398  00F3               	movwf	?_abs
 15141  1399  0876               	movf	??_abs+1,w
 15142  139A  00F4               	movwf	?_abs+1
 15143  139B  2B9C               	goto	i1l2190
 15144  139C                     i1l2187:
 15145  139C                     i1l2190:
 15146  139C  0008               	return
 15147  139D                     __end_of_abs:
 15148                           
 15149                           	psect	text39
 15150  0CCD                     __ptext39:	
 15151 ;; *************** function ___aomod *****************
 15152 ;; Defined at:
 15153 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 15154 ;; Parameters:    Size  Location     Type
 15155 ;;  divisor         8    0[BANK0 ] long long 
 15156 ;;  dividend        8    8[BANK0 ] long long 
 15157 ;; Auto vars:     Size  Location     Type
 15158 ;;  sign            1    2[COMMON] unsigned char 
 15159 ;;  counter         1    1[COMMON] unsigned char 
 15160 ;; Return value:  Size  Location     Type
 15161 ;;                  8    0[BANK0 ] long long 
 15162 ;; Registers used:
 15163 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15164 ;; Tracked objects:
 15165 ;;		On entry : 0/0
 15166 ;;		On exit  : 0/0
 15167 ;;		Unchanged: 0/0
 15168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15169 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15170 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15171 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15172 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15173 ;;Total ram usage:       19 bytes
 15174 ;; Hardware stack levels used: 1
 15175 ;; This function calls:
 15176 ;;		Nothing
 15177 ;; This function is called by:
 15178 ;;		_dtoa
 15179 ;; This function uses a non-reentrant model
 15180 ;;
 15181                           
 15182                           
 15183                           ;psect for function ___aomod
 15184  0CCD                     ___aomod:
 15185  0CCD                     i1l4532:	
 15186                           ;incstack = 0
 15187                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 15188                           
 15189  0CCD  01F2               	clrf	___aomod@sign
 15190  0CCE                     i1l4534:
 15191  0CCE  3028               	movlw	low ___aomod@dividend
 15192  0CCF  0086               	movwf	6
 15193  0CD0  3000               	movlw	high ___aomod@dividend
 15194  0CD1  0087               	movwf	7
 15195  0CD2  3F47               	moviw [7]fsr1
 15196  0CD3  00F0               	movwf	??___aomod
 15197  0CD4  1FF0               	btfss	??___aomod,7
 15198  0CD5  2CD7               	goto	u313_21
 15199  0CD6  2CD8               	goto	u313_20
 15200  0CD7                     u313_21:
 15201  0CD7  2CF9               	goto	i1l4538
 15202  0CD8                     u313_20:
 15203  0CD8                     i1l4536:
 15204  0CD8  0020               	movlb	0	; select bank0
 15205  0CD9  09A8               	comf	___aomod@dividend,f
 15206  0CDA  09A9               	comf	___aomod@dividend+1,f
 15207  0CDB  09AA               	comf	___aomod@dividend+2,f
 15208  0CDC  09AB               	comf	___aomod@dividend+3,f
 15209  0CDD  09AC               	comf	___aomod@dividend+4,f
 15210  0CDE  09AD               	comf	___aomod@dividend+5,f
 15211  0CDF  09AE               	comf	___aomod@dividend+6,f
 15212  0CE0  09AF               	comf	___aomod@dividend+7,f
 15213  0CE1  0AA8               	incf	___aomod@dividend,f
 15214  0CE2  1D03               	skipz
 15215  0CE3  2CF7               	goto	u314_2lld
 15216  0CE4  0AA9               	incf	___aomod@dividend+1,f
 15217  0CE5  1D03               	skipz
 15218  0CE6  2CF7               	goto	u314_2lld
 15219  0CE7  0AAA               	incf	___aomod@dividend+2,f
 15220  0CE8  1D03               	skipz
 15221  0CE9  2CF7               	goto	u314_2lld
 15222  0CEA  0AAB               	incf	___aomod@dividend+3,f
 15223  0CEB  1D03               	skipz
 15224  0CEC  2CF7               	goto	u314_2lld
 15225  0CED  0AAC               	incf	___aomod@dividend+4,f
 15226  0CEE  1D03               	skipz
 15227  0CEF  2CF7               	goto	u314_2lld
 15228  0CF0  0AAD               	incf	___aomod@dividend+5,f
 15229  0CF1  1D03               	skipz
 15230  0CF2  2CF7               	goto	u314_2lld
 15231  0CF3  0AAE               	incf	___aomod@dividend+6,f
 15232  0CF4  1D03               	skipz
 15233  0CF5  2CF7               	goto	u314_2lld
 15234  0CF6  0AAF               	incf	___aomod@dividend+7,f
 15235  0CF7                     u314_2lld:
 15236  0CF7  01F2               	clrf	___aomod@sign
 15237  0CF8  0AF2               	incf	___aomod@sign,f
 15238  0CF9                     i1l4538:
 15239  0CF9  3020               	movlw	low ___aomod@divisor
 15240  0CFA  0086               	movwf	6
 15241  0CFB  3000               	movlw	high ___aomod@divisor
 15242  0CFC  0087               	movwf	7
 15243  0CFD  3F47               	moviw [7]fsr1
 15244  0CFE  00F0               	movwf	??___aomod
 15245  0CFF  1FF0               	btfss	??___aomod,7
 15246  0D00  2D02               	goto	u315_21
 15247  0D01  2D03               	goto	u315_20
 15248  0D02                     u315_21:
 15249  0D02  2D22               	goto	i1l4542
 15250  0D03                     u315_20:
 15251  0D03                     i1l4540:
 15252  0D03  0020               	movlb	0	; select bank0
 15253  0D04  09A0               	comf	___aomod@divisor,f
 15254  0D05  09A1               	comf	___aomod@divisor+1,f
 15255  0D06  09A2               	comf	___aomod@divisor+2,f
 15256  0D07  09A3               	comf	___aomod@divisor+3,f
 15257  0D08  09A4               	comf	___aomod@divisor+4,f
 15258  0D09  09A5               	comf	___aomod@divisor+5,f
 15259  0D0A  09A6               	comf	___aomod@divisor+6,f
 15260  0D0B  09A7               	comf	___aomod@divisor+7,f
 15261  0D0C  0AA0               	incf	___aomod@divisor,f
 15262  0D0D  1D03               	skipz
 15263  0D0E  2D22               	goto	u316_2lld
 15264  0D0F  0AA1               	incf	___aomod@divisor+1,f
 15265  0D10  1D03               	skipz
 15266  0D11  2D22               	goto	u316_2lld
 15267  0D12  0AA2               	incf	___aomod@divisor+2,f
 15268  0D13  1D03               	skipz
 15269  0D14  2D22               	goto	u316_2lld
 15270  0D15  0AA3               	incf	___aomod@divisor+3,f
 15271  0D16  1D03               	skipz
 15272  0D17  2D22               	goto	u316_2lld
 15273  0D18  0AA4               	incf	___aomod@divisor+4,f
 15274  0D19  1D03               	skipz
 15275  0D1A  2D22               	goto	u316_2lld
 15276  0D1B  0AA5               	incf	___aomod@divisor+5,f
 15277  0D1C  1D03               	skipz
 15278  0D1D  2D22               	goto	u316_2lld
 15279  0D1E  0AA6               	incf	___aomod@divisor+6,f
 15280  0D1F  1D03               	skipz
 15281  0D20  2D22               	goto	u316_2lld
 15282  0D21  0AA7               	incf	___aomod@divisor+7,f
 15283  0D22                     u316_2lld:
 15284  0D22                     i1l4542:
 15285  0D22  0020               	movlb	0	; select bank0
 15286  0D23  0820               	movf	___aomod@divisor,w
 15287  0D24  0421               	iorwf	___aomod@divisor+1,w
 15288  0D25  0422               	iorwf	___aomod@divisor+2,w
 15289  0D26  0423               	iorwf	___aomod@divisor+3,w
 15290  0D27  0424               	iorwf	___aomod@divisor+4,w
 15291  0D28  0425               	iorwf	___aomod@divisor+5,w
 15292  0D29  0426               	iorwf	___aomod@divisor+6,w
 15293  0D2A  0427               	iorwf	___aomod@divisor+7,w
 15294  0D2B  1903               	skipnz
 15295  0D2C  2D2E               	goto	u317_21
 15296  0D2D  2D2F               	goto	u317_20
 15297  0D2E                     u317_21:
 15298  0D2E  2D82               	goto	i1l4558
 15299  0D2F                     u317_20:
 15300  0D2F                     i1l4544:
 15301  0D2F  01F1               	clrf	___aomod@counter
 15302  0D30  0AF1               	incf	___aomod@counter,f
 15303  0D31  2D3E               	goto	i1l4550
 15304  0D32                     i1l4546:
 15305  0D32  35A0               	lslf	___aomod@divisor,f
 15306  0D33  0DA1               	rlf	___aomod@divisor+1,f
 15307  0D34  0DA2               	rlf	___aomod@divisor+2,f
 15308  0D35  0DA3               	rlf	___aomod@divisor+3,f
 15309  0D36  0DA4               	rlf	___aomod@divisor+4,f
 15310  0D37  0DA5               	rlf	___aomod@divisor+5,f
 15311  0D38  0DA6               	rlf	___aomod@divisor+6,f
 15312  0D39  0DA7               	rlf	___aomod@divisor+7,f
 15313  0D3A                     i1l4548:
 15314  0D3A  3001               	movlw	1
 15315  0D3B  00F0               	movwf	??___aomod
 15316  0D3C  0870               	movf	??___aomod,w
 15317  0D3D  07F1               	addwf	___aomod@counter,f
 15318  0D3E                     i1l4550:
 15319  0D3E  1FA7               	btfss	___aomod@divisor+7,7
 15320  0D3F  2D41               	goto	u318_21
 15321  0D40  2D42               	goto	u318_20
 15322  0D41                     u318_21:
 15323  0D41  2D32               	goto	i1l4546
 15324  0D42                     u318_20:
 15325  0D42                     i1l4552:
 15326  0D42  0827               	movf	___aomod@divisor+7,w
 15327  0D43  022F               	subwf	___aomod@dividend+7,w
 15328  0D44  1D03               	skipz
 15329  0D45  2D60               	goto	u319_25
 15330  0D46  0826               	movf	___aomod@divisor+6,w
 15331  0D47  022E               	subwf	___aomod@dividend+6,w
 15332  0D48  1D03               	skipz
 15333  0D49  2D60               	goto	u319_25
 15334  0D4A  0825               	movf	___aomod@divisor+5,w
 15335  0D4B  022D               	subwf	___aomod@dividend+5,w
 15336  0D4C  1D03               	skipz
 15337  0D4D  2D60               	goto	u319_25
 15338  0D4E  0824               	movf	___aomod@divisor+4,w
 15339  0D4F  022C               	subwf	___aomod@dividend+4,w
 15340  0D50  1D03               	skipz
 15341  0D51  2D60               	goto	u319_25
 15342  0D52  0823               	movf	___aomod@divisor+3,w
 15343  0D53  022B               	subwf	___aomod@dividend+3,w
 15344  0D54  1D03               	skipz
 15345  0D55  2D60               	goto	u319_25
 15346  0D56  0822               	movf	___aomod@divisor+2,w
 15347  0D57  022A               	subwf	___aomod@dividend+2,w
 15348  0D58  1D03               	skipz
 15349  0D59  2D60               	goto	u319_25
 15350  0D5A  0821               	movf	___aomod@divisor+1,w
 15351  0D5B  0229               	subwf	___aomod@dividend+1,w
 15352  0D5C  1D03               	skipz
 15353  0D5D  2D60               	goto	u319_25
 15354  0D5E  0820               	movf	___aomod@divisor,w
 15355  0D5F  0228               	subwf	___aomod@dividend,w
 15356  0D60                     u319_25:
 15357  0D60  1C03               	skipc
 15358  0D61  2D63               	goto	u319_21
 15359  0D62  2D64               	goto	u319_20
 15360  0D63                     u319_21:
 15361  0D63  2D74               	goto	i1l4556
 15362  0D64                     u319_20:
 15363  0D64                     i1l4554:
 15364  0D64  0820               	movf	___aomod@divisor,w
 15365  0D65  02A8               	subwf	___aomod@dividend,f
 15366  0D66  0821               	movf	___aomod@divisor+1,w
 15367  0D67  3BA9               	subwfb	___aomod@dividend+1,f
 15368  0D68  0822               	movf	___aomod@divisor+2,w
 15369  0D69  3BAA               	subwfb	___aomod@dividend+2,f
 15370  0D6A  0823               	movf	___aomod@divisor+3,w
 15371  0D6B  3BAB               	subwfb	___aomod@dividend+3,f
 15372  0D6C  0824               	movf	___aomod@divisor+4,w
 15373  0D6D  3BAC               	subwfb	___aomod@dividend+4,f
 15374  0D6E  0825               	movf	___aomod@divisor+5,w
 15375  0D6F  3BAD               	subwfb	___aomod@dividend+5,f
 15376  0D70  0826               	movf	___aomod@divisor+6,w
 15377  0D71  3BAE               	subwfb	___aomod@dividend+6,f
 15378  0D72  0827               	movf	___aomod@divisor+7,w
 15379  0D73  3BAF               	subwfb	___aomod@dividend+7,f
 15380  0D74                     i1l4556:
 15381  0D74  36A7               	lsrf	___aomod@divisor+7,f
 15382  0D75  0CA6               	rrf	___aomod@divisor+6,f
 15383  0D76  0CA5               	rrf	___aomod@divisor+5,f
 15384  0D77  0CA4               	rrf	___aomod@divisor+4,f
 15385  0D78  0CA3               	rrf	___aomod@divisor+3,f
 15386  0D79  0CA2               	rrf	___aomod@divisor+2,f
 15387  0D7A  0CA1               	rrf	___aomod@divisor+1,f
 15388  0D7B  0CA0               	rrf	___aomod@divisor,f
 15389  0D7C  3001               	movlw	1
 15390  0D7D  02F1               	subwf	___aomod@counter,f
 15391  0D7E  1D03               	btfss	3,2
 15392  0D7F  2D81               	goto	u320_21
 15393  0D80  2D82               	goto	u320_20
 15394  0D81                     u320_21:
 15395  0D81  2D42               	goto	i1l4552
 15396  0D82                     u320_20:
 15397  0D82                     i1l4558:
 15398  0D82  0872               	movf	___aomod@sign,w
 15399  0D83  1903               	btfsc	3,2
 15400  0D84  2D86               	goto	u321_21
 15401  0D85  2D87               	goto	u321_20
 15402  0D86                     u321_21:
 15403  0D86  2DA5               	goto	i1l1718
 15404  0D87                     u321_20:
 15405  0D87                     i1l4560:
 15406  0D87  09A8               	comf	___aomod@dividend,f
 15407  0D88  09A9               	comf	___aomod@dividend+1,f
 15408  0D89  09AA               	comf	___aomod@dividend+2,f
 15409  0D8A  09AB               	comf	___aomod@dividend+3,f
 15410  0D8B  09AC               	comf	___aomod@dividend+4,f
 15411  0D8C  09AD               	comf	___aomod@dividend+5,f
 15412  0D8D  09AE               	comf	___aomod@dividend+6,f
 15413  0D8E  09AF               	comf	___aomod@dividend+7,f
 15414  0D8F  0AA8               	incf	___aomod@dividend,f
 15415  0D90  1D03               	skipz
 15416  0D91  2DA5               	goto	u322_2lld
 15417  0D92  0AA9               	incf	___aomod@dividend+1,f
 15418  0D93  1D03               	skipz
 15419  0D94  2DA5               	goto	u322_2lld
 15420  0D95  0AAA               	incf	___aomod@dividend+2,f
 15421  0D96  1D03               	skipz
 15422  0D97  2DA5               	goto	u322_2lld
 15423  0D98  0AAB               	incf	___aomod@dividend+3,f
 15424  0D99  1D03               	skipz
 15425  0D9A  2DA5               	goto	u322_2lld
 15426  0D9B  0AAC               	incf	___aomod@dividend+4,f
 15427  0D9C  1D03               	skipz
 15428  0D9D  2DA5               	goto	u322_2lld
 15429  0D9E  0AAD               	incf	___aomod@dividend+5,f
 15430  0D9F  1D03               	skipz
 15431  0DA0  2DA5               	goto	u322_2lld
 15432  0DA1  0AAE               	incf	___aomod@dividend+6,f
 15433  0DA2  1D03               	skipz
 15434  0DA3  2DA5               	goto	u322_2lld
 15435  0DA4  0AAF               	incf	___aomod@dividend+7,f
 15436  0DA5                     u322_2lld:
 15437  0DA5                     i1l1718:
 15438  0DA5  0020               	movlb	0	; select bank0
 15439  0DA6  0828               	movf	___aomod@dividend,w
 15440  0DA7  00A0               	movwf	?___aomod
 15441  0DA8  0829               	movf	___aomod@dividend+1,w
 15442  0DA9  00A1               	movwf	?___aomod+1
 15443  0DAA  082A               	movf	___aomod@dividend+2,w
 15444  0DAB  00A2               	movwf	?___aomod+2
 15445  0DAC  082B               	movf	___aomod@dividend+3,w
 15446  0DAD  00A3               	movwf	?___aomod+3
 15447  0DAE  082C               	movf	___aomod@dividend+4,w
 15448  0DAF  00A4               	movwf	?___aomod+4
 15449  0DB0  082D               	movf	___aomod@dividend+5,w
 15450  0DB1  00A5               	movwf	?___aomod+5
 15451  0DB2  082E               	movf	___aomod@dividend+6,w
 15452  0DB3  00A6               	movwf	?___aomod+6
 15453  0DB4  082F               	movf	___aomod@dividend+7,w
 15454  0DB5  00A7               	movwf	?___aomod+7
 15455  0DB6                     i1l1719:
 15456  0DB6  0008               	return
 15457  0DB7                     __end_of___aomod:
 15458                           
 15459                           	psect	text40
 15460  0DB7                     __ptext40:	
 15461 ;; *************** function ___aodiv *****************
 15462 ;; Defined at:
 15463 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 15464 ;; Parameters:    Size  Location     Type
 15465 ;;  divisor         8    0[BANK0 ] long long 
 15466 ;;  dividend        8    8[BANK0 ] long long 
 15467 ;; Auto vars:     Size  Location     Type
 15468 ;;  quotient        8    3[COMMON] long long 
 15469 ;;  sign            1    2[COMMON] unsigned char 
 15470 ;;  counter         1    1[COMMON] unsigned char 
 15471 ;; Return value:  Size  Location     Type
 15472 ;;                  8    0[BANK0 ] long long 
 15473 ;; Registers used:
 15474 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15475 ;; Tracked objects:
 15476 ;;		On entry : 0/0
 15477 ;;		On exit  : 0/0
 15478 ;;		Unchanged: 0/0
 15479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15480 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15481 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15482 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15483 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15484 ;;Total ram usage:       27 bytes
 15485 ;; Hardware stack levels used: 1
 15486 ;; This function calls:
 15487 ;;		Nothing
 15488 ;; This function is called by:
 15489 ;;		_dtoa
 15490 ;; This function uses a non-reentrant model
 15491 ;;
 15492                           
 15493                           
 15494                           ;psect for function ___aodiv
 15495  0DB7                     ___aodiv:
 15496  0DB7                     i1l4494:	
 15497                           ;incstack = 0
 15498                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 15499                           
 15500  0DB7  01F2               	clrf	___aodiv@sign
 15501  0DB8                     i1l4496:
 15502  0DB8  3020               	movlw	low ___aodiv@divisor
 15503  0DB9  0086               	movwf	6
 15504  0DBA  3000               	movlw	high ___aodiv@divisor
 15505  0DBB  0087               	movwf	7
 15506  0DBC  3F47               	moviw [7]fsr1
 15507  0DBD  00F0               	movwf	??___aodiv
 15508  0DBE  1FF0               	btfss	??___aodiv,7
 15509  0DBF  2DC1               	goto	u302_21
 15510  0DC0  2DC2               	goto	u302_20
 15511  0DC1                     u302_21:
 15512  0DC1  2DE3               	goto	i1l4500
 15513  0DC2                     u302_20:
 15514  0DC2                     i1l4498:
 15515  0DC2  0020               	movlb	0	; select bank0
 15516  0DC3  09A0               	comf	___aodiv@divisor,f
 15517  0DC4  09A1               	comf	___aodiv@divisor+1,f
 15518  0DC5  09A2               	comf	___aodiv@divisor+2,f
 15519  0DC6  09A3               	comf	___aodiv@divisor+3,f
 15520  0DC7  09A4               	comf	___aodiv@divisor+4,f
 15521  0DC8  09A5               	comf	___aodiv@divisor+5,f
 15522  0DC9  09A6               	comf	___aodiv@divisor+6,f
 15523  0DCA  09A7               	comf	___aodiv@divisor+7,f
 15524  0DCB  0AA0               	incf	___aodiv@divisor,f
 15525  0DCC  1D03               	skipz
 15526  0DCD  2DE1               	goto	u303_2lld
 15527  0DCE  0AA1               	incf	___aodiv@divisor+1,f
 15528  0DCF  1D03               	skipz
 15529  0DD0  2DE1               	goto	u303_2lld
 15530  0DD1  0AA2               	incf	___aodiv@divisor+2,f
 15531  0DD2  1D03               	skipz
 15532  0DD3  2DE1               	goto	u303_2lld
 15533  0DD4  0AA3               	incf	___aodiv@divisor+3,f
 15534  0DD5  1D03               	skipz
 15535  0DD6  2DE1               	goto	u303_2lld
 15536  0DD7  0AA4               	incf	___aodiv@divisor+4,f
 15537  0DD8  1D03               	skipz
 15538  0DD9  2DE1               	goto	u303_2lld
 15539  0DDA  0AA5               	incf	___aodiv@divisor+5,f
 15540  0DDB  1D03               	skipz
 15541  0DDC  2DE1               	goto	u303_2lld
 15542  0DDD  0AA6               	incf	___aodiv@divisor+6,f
 15543  0DDE  1D03               	skipz
 15544  0DDF  2DE1               	goto	u303_2lld
 15545  0DE0  0AA7               	incf	___aodiv@divisor+7,f
 15546  0DE1                     u303_2lld:
 15547  0DE1  01F2               	clrf	___aodiv@sign
 15548  0DE2  0AF2               	incf	___aodiv@sign,f
 15549  0DE3                     i1l4500:
 15550  0DE3  3028               	movlw	low ___aodiv@dividend
 15551  0DE4  0086               	movwf	6
 15552  0DE5  3000               	movlw	high ___aodiv@dividend
 15553  0DE6  0087               	movwf	7
 15554  0DE7  3F47               	moviw [7]fsr1
 15555  0DE8  00F0               	movwf	??___aodiv
 15556  0DE9  1FF0               	btfss	??___aodiv,7
 15557  0DEA  2DEC               	goto	u304_21
 15558  0DEB  2DED               	goto	u304_20
 15559  0DEC                     u304_21:
 15560  0DEC  2E10               	goto	i1l4506
 15561  0DED                     u304_20:
 15562  0DED                     i1l4502:
 15563  0DED  0020               	movlb	0	; select bank0
 15564  0DEE  09A8               	comf	___aodiv@dividend,f
 15565  0DEF  09A9               	comf	___aodiv@dividend+1,f
 15566  0DF0  09AA               	comf	___aodiv@dividend+2,f
 15567  0DF1  09AB               	comf	___aodiv@dividend+3,f
 15568  0DF2  09AC               	comf	___aodiv@dividend+4,f
 15569  0DF3  09AD               	comf	___aodiv@dividend+5,f
 15570  0DF4  09AE               	comf	___aodiv@dividend+6,f
 15571  0DF5  09AF               	comf	___aodiv@dividend+7,f
 15572  0DF6  0AA8               	incf	___aodiv@dividend,f
 15573  0DF7  1D03               	skipz
 15574  0DF8  2E0C               	goto	u305_2lld
 15575  0DF9  0AA9               	incf	___aodiv@dividend+1,f
 15576  0DFA  1D03               	skipz
 15577  0DFB  2E0C               	goto	u305_2lld
 15578  0DFC  0AAA               	incf	___aodiv@dividend+2,f
 15579  0DFD  1D03               	skipz
 15580  0DFE  2E0C               	goto	u305_2lld
 15581  0DFF  0AAB               	incf	___aodiv@dividend+3,f
 15582  0E00  1D03               	skipz
 15583  0E01  2E0C               	goto	u305_2lld
 15584  0E02  0AAC               	incf	___aodiv@dividend+4,f
 15585  0E03  1D03               	skipz
 15586  0E04  2E0C               	goto	u305_2lld
 15587  0E05  0AAD               	incf	___aodiv@dividend+5,f
 15588  0E06  1D03               	skipz
 15589  0E07  2E0C               	goto	u305_2lld
 15590  0E08  0AAE               	incf	___aodiv@dividend+6,f
 15591  0E09  1D03               	skipz
 15592  0E0A  2E0C               	goto	u305_2lld
 15593  0E0B  0AAF               	incf	___aodiv@dividend+7,f
 15594  0E0C                     u305_2lld:
 15595  0E0C                     i1l4504:
 15596  0E0C  3001               	movlw	1
 15597  0E0D  00F0               	movwf	??___aodiv
 15598  0E0E  0870               	movf	??___aodiv,w
 15599  0E0F  06F2               	xorwf	___aodiv@sign,f
 15600  0E10                     i1l4506:
 15601  0E10  3073               	movlw	low ___aodiv@quotient
 15602  0E11  0086               	movwf	6
 15603  0E12  3000               	movlw	high ___aodiv@quotient
 15604  0E13  0087               	movwf	7
 15605  0E14  3008               	movlw	8
 15606  0E15  00F0               	movwf	??___aodiv
 15607  0E16  3000               	movlw	0
 15608  0E17                     u306_20:
 15609  0E17  001E               	movwi fsr1++
 15610  0E18  0BF0               	decfsz	??___aodiv,f
 15611  0E19  2E17               	goto	u306_20
 15612  0E1A                     i1l4508:
 15613  0E1A  0020               	movlb	0	; select bank0
 15614  0E1B  0820               	movf	___aodiv@divisor,w
 15615  0E1C  0421               	iorwf	___aodiv@divisor+1,w
 15616  0E1D  0422               	iorwf	___aodiv@divisor+2,w
 15617  0E1E  0423               	iorwf	___aodiv@divisor+3,w
 15618  0E1F  0424               	iorwf	___aodiv@divisor+4,w
 15619  0E20  0425               	iorwf	___aodiv@divisor+5,w
 15620  0E21  0426               	iorwf	___aodiv@divisor+6,w
 15621  0E22  0427               	iorwf	___aodiv@divisor+7,w
 15622  0E23  1903               	skipnz
 15623  0E24  2E26               	goto	u307_21
 15624  0E25  2E27               	goto	u307_20
 15625  0E26                     u307_21:
 15626  0E26  2E83               	goto	i1l4528
 15627  0E27                     u307_20:
 15628  0E27                     i1l4510:
 15629  0E27  01F1               	clrf	___aodiv@counter
 15630  0E28  0AF1               	incf	___aodiv@counter,f
 15631  0E29  2E36               	goto	i1l4516
 15632  0E2A                     i1l4512:
 15633  0E2A  35A0               	lslf	___aodiv@divisor,f
 15634  0E2B  0DA1               	rlf	___aodiv@divisor+1,f
 15635  0E2C  0DA2               	rlf	___aodiv@divisor+2,f
 15636  0E2D  0DA3               	rlf	___aodiv@divisor+3,f
 15637  0E2E  0DA4               	rlf	___aodiv@divisor+4,f
 15638  0E2F  0DA5               	rlf	___aodiv@divisor+5,f
 15639  0E30  0DA6               	rlf	___aodiv@divisor+6,f
 15640  0E31  0DA7               	rlf	___aodiv@divisor+7,f
 15641  0E32                     i1l4514:
 15642  0E32  3001               	movlw	1
 15643  0E33  00F0               	movwf	??___aodiv
 15644  0E34  0870               	movf	??___aodiv,w
 15645  0E35  07F1               	addwf	___aodiv@counter,f
 15646  0E36                     i1l4516:
 15647  0E36  1FA7               	btfss	___aodiv@divisor+7,7
 15648  0E37  2E39               	goto	u308_21
 15649  0E38  2E3A               	goto	u308_20
 15650  0E39                     u308_21:
 15651  0E39  2E2A               	goto	i1l4512
 15652  0E3A                     u308_20:
 15653  0E3A                     i1l4518:
 15654  0E3A  35F3               	lslf	___aodiv@quotient,f
 15655  0E3B  0DF4               	rlf	___aodiv@quotient+1,f
 15656  0E3C  0DF5               	rlf	___aodiv@quotient+2,f
 15657  0E3D  0DF6               	rlf	___aodiv@quotient+3,f
 15658  0E3E  0DF7               	rlf	___aodiv@quotient+4,f
 15659  0E3F  0DF8               	rlf	___aodiv@quotient+5,f
 15660  0E40  0DF9               	rlf	___aodiv@quotient+6,f
 15661  0E41  0DFA               	rlf	___aodiv@quotient+7,f
 15662  0E42                     i1l4520:
 15663  0E42  0827               	movf	___aodiv@divisor+7,w
 15664  0E43  022F               	subwf	___aodiv@dividend+7,w
 15665  0E44  1D03               	skipz
 15666  0E45  2E60               	goto	u309_25
 15667  0E46  0826               	movf	___aodiv@divisor+6,w
 15668  0E47  022E               	subwf	___aodiv@dividend+6,w
 15669  0E48  1D03               	skipz
 15670  0E49  2E60               	goto	u309_25
 15671  0E4A  0825               	movf	___aodiv@divisor+5,w
 15672  0E4B  022D               	subwf	___aodiv@dividend+5,w
 15673  0E4C  1D03               	skipz
 15674  0E4D  2E60               	goto	u309_25
 15675  0E4E  0824               	movf	___aodiv@divisor+4,w
 15676  0E4F  022C               	subwf	___aodiv@dividend+4,w
 15677  0E50  1D03               	skipz
 15678  0E51  2E60               	goto	u309_25
 15679  0E52  0823               	movf	___aodiv@divisor+3,w
 15680  0E53  022B               	subwf	___aodiv@dividend+3,w
 15681  0E54  1D03               	skipz
 15682  0E55  2E60               	goto	u309_25
 15683  0E56  0822               	movf	___aodiv@divisor+2,w
 15684  0E57  022A               	subwf	___aodiv@dividend+2,w
 15685  0E58  1D03               	skipz
 15686  0E59  2E60               	goto	u309_25
 15687  0E5A  0821               	movf	___aodiv@divisor+1,w
 15688  0E5B  0229               	subwf	___aodiv@dividend+1,w
 15689  0E5C  1D03               	skipz
 15690  0E5D  2E60               	goto	u309_25
 15691  0E5E  0820               	movf	___aodiv@divisor,w
 15692  0E5F  0228               	subwf	___aodiv@dividend,w
 15693  0E60                     u309_25:
 15694  0E60  1C03               	skipc
 15695  0E61  2E63               	goto	u309_21
 15696  0E62  2E64               	goto	u309_20
 15697  0E63                     u309_21:
 15698  0E63  2E75               	goto	i1l4526
 15699  0E64                     u309_20:
 15700  0E64                     i1l4522:
 15701  0E64  0820               	movf	___aodiv@divisor,w
 15702  0E65  02A8               	subwf	___aodiv@dividend,f
 15703  0E66  0821               	movf	___aodiv@divisor+1,w
 15704  0E67  3BA9               	subwfb	___aodiv@dividend+1,f
 15705  0E68  0822               	movf	___aodiv@divisor+2,w
 15706  0E69  3BAA               	subwfb	___aodiv@dividend+2,f
 15707  0E6A  0823               	movf	___aodiv@divisor+3,w
 15708  0E6B  3BAB               	subwfb	___aodiv@dividend+3,f
 15709  0E6C  0824               	movf	___aodiv@divisor+4,w
 15710  0E6D  3BAC               	subwfb	___aodiv@dividend+4,f
 15711  0E6E  0825               	movf	___aodiv@divisor+5,w
 15712  0E6F  3BAD               	subwfb	___aodiv@dividend+5,f
 15713  0E70  0826               	movf	___aodiv@divisor+6,w
 15714  0E71  3BAE               	subwfb	___aodiv@dividend+6,f
 15715  0E72  0827               	movf	___aodiv@divisor+7,w
 15716  0E73  3BAF               	subwfb	___aodiv@dividend+7,f
 15717  0E74                     i1l4524:
 15718  0E74  1473               	bsf	___aodiv@quotient,0
 15719  0E75                     i1l4526:
 15720  0E75  36A7               	lsrf	___aodiv@divisor+7,f
 15721  0E76  0CA6               	rrf	___aodiv@divisor+6,f
 15722  0E77  0CA5               	rrf	___aodiv@divisor+5,f
 15723  0E78  0CA4               	rrf	___aodiv@divisor+4,f
 15724  0E79  0CA3               	rrf	___aodiv@divisor+3,f
 15725  0E7A  0CA2               	rrf	___aodiv@divisor+2,f
 15726  0E7B  0CA1               	rrf	___aodiv@divisor+1,f
 15727  0E7C  0CA0               	rrf	___aodiv@divisor,f
 15728  0E7D  3001               	movlw	1
 15729  0E7E  02F1               	subwf	___aodiv@counter,f
 15730  0E7F  1D03               	btfss	3,2
 15731  0E80  2E82               	goto	u310_21
 15732  0E81  2E83               	goto	u310_20
 15733  0E82                     u310_21:
 15734  0E82  2E3A               	goto	i1l4518
 15735  0E83                     u310_20:
 15736  0E83                     i1l4528:
 15737  0E83  0872               	movf	___aodiv@sign,w
 15738  0E84  1903               	btfsc	3,2
 15739  0E85  2E87               	goto	u311_21
 15740  0E86  2E88               	goto	u311_20
 15741  0E87                     u311_21:
 15742  0E87  2EA6               	goto	i1l1705
 15743  0E88                     u311_20:
 15744  0E88                     i1l4530:
 15745  0E88  09F3               	comf	___aodiv@quotient,f
 15746  0E89  09F4               	comf	___aodiv@quotient+1,f
 15747  0E8A  09F5               	comf	___aodiv@quotient+2,f
 15748  0E8B  09F6               	comf	___aodiv@quotient+3,f
 15749  0E8C  09F7               	comf	___aodiv@quotient+4,f
 15750  0E8D  09F8               	comf	___aodiv@quotient+5,f
 15751  0E8E  09F9               	comf	___aodiv@quotient+6,f
 15752  0E8F  09FA               	comf	___aodiv@quotient+7,f
 15753  0E90  0AF3               	incf	___aodiv@quotient,f
 15754  0E91  1D03               	skipz
 15755  0E92  2EA6               	goto	u312_2lld
 15756  0E93  0AF4               	incf	___aodiv@quotient+1,f
 15757  0E94  1D03               	skipz
 15758  0E95  2EA6               	goto	u312_2lld
 15759  0E96  0AF5               	incf	___aodiv@quotient+2,f
 15760  0E97  1D03               	skipz
 15761  0E98  2EA6               	goto	u312_2lld
 15762  0E99  0AF6               	incf	___aodiv@quotient+3,f
 15763  0E9A  1D03               	skipz
 15764  0E9B  2EA6               	goto	u312_2lld
 15765  0E9C  0AF7               	incf	___aodiv@quotient+4,f
 15766  0E9D  1D03               	skipz
 15767  0E9E  2EA6               	goto	u312_2lld
 15768  0E9F  0AF8               	incf	___aodiv@quotient+5,f
 15769  0EA0  1D03               	skipz
 15770  0EA1  2EA6               	goto	u312_2lld
 15771  0EA2  0AF9               	incf	___aodiv@quotient+6,f
 15772  0EA3  1D03               	skipz
 15773  0EA4  2EA6               	goto	u312_2lld
 15774  0EA5  0AFA               	incf	___aodiv@quotient+7,f
 15775  0EA6                     u312_2lld:
 15776  0EA6                     i1l1705:
 15777  0EA6  0873               	movf	___aodiv@quotient,w
 15778  0EA7  0020               	movlb	0	; select bank0
 15779  0EA8  00A0               	movwf	?___aodiv
 15780  0EA9  0874               	movf	___aodiv@quotient+1,w
 15781  0EAA  00A1               	movwf	?___aodiv+1
 15782  0EAB  0875               	movf	___aodiv@quotient+2,w
 15783  0EAC  00A2               	movwf	?___aodiv+2
 15784  0EAD  0876               	movf	___aodiv@quotient+3,w
 15785  0EAE  00A3               	movwf	?___aodiv+3
 15786  0EAF  0877               	movf	___aodiv@quotient+4,w
 15787  0EB0  00A4               	movwf	?___aodiv+4
 15788  0EB1  0878               	movf	___aodiv@quotient+5,w
 15789  0EB2  00A5               	movwf	?___aodiv+5
 15790  0EB3  0879               	movf	___aodiv@quotient+6,w
 15791  0EB4  00A6               	movwf	?___aodiv+6
 15792  0EB5  087A               	movf	___aodiv@quotient+7,w
 15793  0EB6  00A7               	movwf	?___aodiv+7
 15794  0EB7                     i1l1706:
 15795  0EB7  0008               	return
 15796  0EB8                     __end_of___aodiv:
 15797                           
 15798                           	psect	text41
 15799  178F                     __ptext41:	
 15800 ;; *************** function _ctoa *****************
 15801 ;; Defined at:
 15802 ;;		line 259 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 15803 ;; Parameters:    Size  Location     Type
 15804 ;;  fp              1    wreg     PTR struct _IO_FILE
 15805 ;;		 -> sprintf@f(5), 
 15806 ;;  c               1    8[COMMON] unsigned char 
 15807 ;; Auto vars:     Size  Location     Type
 15808 ;;  fp              1    4[BANK0 ] PTR struct _IO_FILE
 15809 ;;		 -> sprintf@f(5), 
 15810 ;;  w               2    2[BANK0 ] int 
 15811 ;;  l               2    0[BANK0 ] int 
 15812 ;; Return value:  Size  Location     Type
 15813 ;;                  2    8[COMMON] int 
 15814 ;; Registers used:
 15815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15816 ;; Tracked objects:
 15817 ;;		On entry : 0/0
 15818 ;;		On exit  : 0/0
 15819 ;;		Unchanged: 0/0
 15820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15821 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15822 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15823 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15824 ;;      Totals:         5       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15825 ;;Total ram usage:       10 bytes
 15826 ;; Hardware stack levels used: 1
 15827 ;; Hardware stack levels required when called: 2
 15828 ;; This function calls:
 15829 ;;		_fputc
 15830 ;; This function is called by:
 15831 ;;		_vfpfcnvrt
 15832 ;; This function uses a non-reentrant model
 15833 ;;
 15834                           
 15835                           
 15836                           ;psect for function _ctoa
 15837  178F                     _ctoa:
 15838                           
 15839                           ;incstack = 0
 15840                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15841                           ;ctoa@fp stored from wreg
 15842  178F  0020               	movlb	0	; select bank0
 15843  1790  00A4               	movwf	ctoa@fp
 15844  1791                     i1l4604:
 15845                           
 15846                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt
      +                          .c: 260: {;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
 15847  1791  0021               	movlb	1	; select bank1
 15848  1792  0862               	movf	_width^(0+128),w
 15849  1793  0463               	iorwf	(_width+1)^(0+128),w
 15850  1794  1D03               	btfss	3,2
 15851  1795  2F97               	goto	u332_21
 15852  1796  2F98               	goto	u332_20
 15853  1797                     u332_21:
 15854  1797  2FA0               	goto	i1l4608
 15855  1798                     u332_20:
 15856  1798                     i1l4606:
 15857  1798  0863               	movf	(_width+1)^(0+128),w
 15858  1799  0020               	movlb	0	; select bank0
 15859  179A  00A3               	movwf	ctoa@w+1
 15860  179B  0021               	movlb	1	; select bank1
 15861  179C  0862               	movf	_width^(0+128),w
 15862  179D  0020               	movlb	0	; select bank0
 15863  179E  00A2               	movwf	ctoa@w
 15864  179F  2FA9               	goto	i1l4610
 15865  17A0                     i1l4608:
 15866  17A0  0862               	movf	_width^(0+128),w
 15867  17A1  3EFF               	addlw	255
 15868  17A2  0020               	movlb	0	; select bank0
 15869  17A3  00A2               	movwf	ctoa@w
 15870  17A4  30FF               	movlw	255
 15871  17A5  0021               	movlb	1	; select bank1
 15872  17A6  3D63               	addwfc	(_width+1)^(0+128),w
 15873  17A7  0020               	movlb	0	; select bank0
 15874  17A8  00A3               	movwf	ctoa@w+1
 15875  17A9                     i1l4610:
 15876                           
 15877                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
 15878  17A9  1C6E               	btfss	_flags,0
 15879  17AA  2FAC               	goto	u333_21
 15880  17AB  2FAD               	goto	u333_20
 15881  17AC                     u333_21:
 15882  17AC  2FBB               	goto	i1l4614
 15883  17AD                     u333_20:
 15884  17AD                     i1l4612:
 15885                           
 15886                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
 15887  17AD  0878               	movf	ctoa@c,w
 15888  17AE  00FA               	movwf	??_ctoa
 15889  17AF  01FB               	clrf	??_ctoa+1
 15890  17B0  087A               	movf	??_ctoa,w
 15891  17B1  00F0               	movwf	fputc@c
 15892  17B2  087B               	movf	??_ctoa+1,w
 15893  17B3  00F1               	movwf	fputc@c+1
 15894  17B4  0824               	movf	ctoa@fp,w
 15895  17B5  00FC               	movwf	??_ctoa+2
 15896  17B6  087C               	movf	??_ctoa+2,w
 15897  17B7  00F2               	movwf	fputc@fp
 15898  17B8  3195  2587  3197   	fcall	_fputc
 15899  17BB                     i1l4614:
 15900                           
 15901                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
 15902  17BB  0020               	movlb	0	; select bank0
 15903  17BC  1BA3               	btfsc	ctoa@w+1,7
 15904  17BD  2FBF               	goto	u334_21
 15905  17BE  2FC0               	goto	u334_20
 15906  17BF                     u334_21:
 15907  17BF  2FC1               	goto	i1l4618
 15908  17C0                     u334_20:
 15909  17C0  2FC3               	goto	i1l2115
 15910  17C1                     i1l4618:
 15911  17C1  01A2               	clrf	ctoa@w
 15912  17C2  01A3               	clrf	ctoa@w+1
 15913  17C3                     i1l2115:
 15914                           
 15915                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 272:     l = 0;
 15916  17C3  01A0               	clrf	ctoa@l
 15917  17C4  01A1               	clrf	ctoa@l+1
 15918                           
 15919                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 15920  17C5  2FD7               	goto	i1l4624
 15921  17C6                     i1l4620:
 15922                           
 15923                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
 15924  17C6  3020               	movlw	32
 15925  17C7  00F0               	movwf	fputc@c
 15926  17C8  3000               	movlw	0
 15927  17C9  00F1               	movwf	fputc@c+1
 15928  17CA  0020               	movlb	0	; select bank0
 15929  17CB  0824               	movf	ctoa@fp,w
 15930  17CC  00FA               	movwf	??_ctoa
 15931  17CD  087A               	movf	??_ctoa,w
 15932  17CE  00F2               	movwf	fputc@fp
 15933  17CF  3195  2587  3197   	fcall	_fputc
 15934  17D2                     i1l4622:
 15935                           
 15936                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 275:         ++l;
 15937  17D2  3001               	movlw	1
 15938  17D3  0020               	movlb	0	; select bank0
 15939  17D4  07A0               	addwf	ctoa@l,f
 15940  17D5  3000               	movlw	0
 15941  17D6  3DA1               	addwfc	ctoa@l+1,f
 15942  17D7                     i1l4624:
 15943                           
 15944                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 15945  17D7  0821               	movf	ctoa@l+1,w
 15946  17D8  3A80               	xorlw	128
 15947  17D9  00FA               	movwf	??_ctoa
 15948  17DA  0823               	movf	ctoa@w+1,w
 15949  17DB  3A80               	xorlw	128
 15950  17DC  027A               	subwf	??_ctoa,w
 15951  17DD  1D03               	skipz
 15952  17DE  2FE1               	goto	u335_25
 15953  17DF  0822               	movf	ctoa@w,w
 15954  17E0  0220               	subwf	ctoa@l,w
 15955  17E1                     u335_25:
 15956  17E1  1C03               	skipc
 15957  17E2  2FE4               	goto	u335_21
 15958  17E3  2FE5               	goto	u335_20
 15959  17E4                     u335_21:
 15960  17E4  2FC6               	goto	i1l4620
 15961  17E5                     u335_20:
 15962  17E5                     i1l2118:
 15963                           
 15964                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
 15965  17E5  0020               	movlb	0	; select bank0
 15966  17E6  186E               	btfsc	_flags,0
 15967  17E7  2FE9               	goto	u336_21
 15968  17E8  2FEA               	goto	u336_20
 15969  17E9                     u336_21:
 15970  17E9  2FF8               	goto	i1l4628
 15971  17EA                     u336_20:
 15972  17EA                     i1l4626:
 15973                           
 15974                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
 15975  17EA  0878               	movf	ctoa@c,w
 15976  17EB  00FA               	movwf	??_ctoa
 15977  17EC  01FB               	clrf	??_ctoa+1
 15978  17ED  087A               	movf	??_ctoa,w
 15979  17EE  00F0               	movwf	fputc@c
 15980  17EF  087B               	movf	??_ctoa+1,w
 15981  17F0  00F1               	movwf	fputc@c+1
 15982  17F1  0824               	movf	ctoa@fp,w
 15983  17F2  00FC               	movwf	??_ctoa+2
 15984  17F3  087C               	movf	??_ctoa+2,w
 15985  17F4  00F2               	movwf	fputc@fp
 15986  17F5  3195  2587  3197   	fcall	_fputc
 15987  17F8                     i1l4628:
 15988                           
 15989                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
 15990  17F8  0020               	movlb	0	; select bank0
 15991  17F9  0820               	movf	ctoa@l,w
 15992  17FA  3E01               	addlw	1
 15993  17FB  00F8               	movwf	?_ctoa
 15994  17FC  3000               	movlw	0
 15995  17FD  3D21               	addwfc	ctoa@l+1,w
 15996  17FE  00F9               	movwf	?_ctoa+1
 15997  17FF                     i1l2120:
 15998  17FF  0008               	return
 15999  1800                     __end_of_ctoa:
 16000                           
 16001                           	psect	text42
 16002  1587                     __ptext42:	
 16003 ;; *************** function _fputc *****************
 16004 ;; Defined at:
 16005 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 16006 ;; Parameters:    Size  Location     Type
 16007 ;;  c               2    0[COMMON] int 
 16008 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
 16009 ;;		 -> sprintf@f(5), 
 16010 ;; Auto vars:     Size  Location     Type
 16011 ;;		None
 16012 ;; Return value:  Size  Location     Type
 16013 ;;                  2    0[COMMON] int 
 16014 ;; Registers used:
 16015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16016 ;; Tracked objects:
 16017 ;;		On entry : 0/0
 16018 ;;		On exit  : 0/0
 16019 ;;		Unchanged: 0/0
 16020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16021 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16023 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16024 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16025 ;;Total ram usage:        8 bytes
 16026 ;; Hardware stack levels used: 1
 16027 ;; Hardware stack levels required when called: 1
 16028 ;; This function calls:
 16029 ;;		_putch
 16030 ;; This function is called by:
 16031 ;;		_pad
 16032 ;;		_ctoa
 16033 ;;		_vfpfcnvrt
 16034 ;;		_fputs
 16035 ;; This function uses a non-reentrant model
 16036 ;;
 16037                           
 16038                           
 16039                           ;psect for function _fputc
 16040  1587                     _fputc:
 16041  1587                     i1l4446:	
 16042                           ;incstack = 0
 16043                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16044                           
 16045  1587  0872               	movf	fputc@fp,w
 16046  1588  1903               	btfsc	3,2
 16047  1589  2D8B               	goto	u292_21
 16048  158A  2D8C               	goto	u292_20
 16049  158B                     u292_21:
 16050  158B  2D91               	goto	i1l4450
 16051  158C                     u292_20:
 16052  158C                     i1l4448:
 16053  158C  0872               	movf	fputc@fp,w
 16054  158D  1D03               	btfss	3,2
 16055  158E  2D90               	goto	u293_21
 16056  158F  2D91               	goto	u293_20
 16057  1590                     u293_21:
 16058  1590  2D96               	goto	i1l4452
 16059  1591                     u293_20:
 16060  1591                     i1l4450:
 16061  1591  0870               	movf	fputc@c,w
 16062  1592  3180  2003  3195   	fcall	_putch
 16063  1595  2DD5               	goto	i1l2247
 16064  1596                     i1l4452:
 16065  1596  0872               	movf	fputc@fp,w
 16066  1597  3E03               	addlw	3
 16067  1598  0086               	movwf	6
 16068  1599  0187               	clrf	7
 16069  159A  0016               	moviw fsr1++
 16070  159B  0401               	iorwf	1,w
 16071  159C  1903               	btfsc	3,2
 16072  159D  2D9F               	goto	u294_21
 16073  159E  2DA0               	goto	u294_20
 16074  159F                     u294_21:
 16075  159F  2DBD               	goto	i1l4456
 16076  15A0                     u294_20:
 16077  15A0                     i1l4454:
 16078  15A0  0872               	movf	fputc@fp,w
 16079  15A1  3E03               	addlw	3
 16080  15A2  0086               	movwf	6
 16081  15A3  0187               	clrf	7
 16082  15A4  3F40               	moviw [0]fsr1
 16083  15A5  00F3               	movwf	??_fputc
 16084  15A6  3F41               	moviw [1]fsr1
 16085  15A7  00F4               	movwf	??_fputc+1
 16086  15A8  0A72               	incf	fputc@fp,w
 16087  15A9  0086               	movwf	6
 16088  15AA  0187               	clrf	7
 16089  15AB  3F40               	moviw [0]fsr1
 16090  15AC  00F5               	movwf	??_fputc+2
 16091  15AD  3F41               	moviw [1]fsr1
 16092  15AE  00F6               	movwf	??_fputc+3
 16093  15AF  0876               	movf	??_fputc+3,w
 16094  15B0  3A80               	xorlw	128
 16095  15B1  00F7               	movwf	??_fputc+4
 16096  15B2  0874               	movf	??_fputc+1,w
 16097  15B3  3A80               	xorlw	128
 16098  15B4  0277               	subwf	??_fputc+4,w
 16099  15B5  1D03               	skipz
 16100  15B6  2DB9               	goto	u295_25
 16101  15B7  0873               	movf	??_fputc,w
 16102  15B8  0275               	subwf	??_fputc+2,w
 16103  15B9                     u295_25:
 16104  15B9  1803               	skipnc
 16105  15BA  2DBC               	goto	u295_21
 16106  15BB  2DBD               	goto	u295_20
 16107  15BC                     u295_21:
 16108  15BC  2DD5               	goto	i1l2247
 16109  15BD                     u295_20:
 16110  15BD                     i1l4456:
 16111  15BD  0870               	movf	fputc@c,w
 16112  15BE  00F3               	movwf	??_fputc
 16113  15BF  0872               	movf	fputc@fp,w
 16114  15C0  0086               	movwf	6
 16115  15C1  0187               	clrf	7
 16116  15C2  0A72               	incf	fputc@fp,w
 16117  15C3  0084               	movwf	4
 16118  15C4  0185               	clrf	5
 16119  15C5  0800               	movf	0,w
 16120  15C6  0701               	addwf	1,w
 16121  15C7  00F4               	movwf	??_fputc+1
 16122  15C8  0874               	movf	??_fputc+1,w
 16123  15C9  0086               	movwf	6
 16124  15CA  0187               	clrf	7
 16125  15CB  0873               	movf	??_fputc,w
 16126  15CC  0081               	movwf	1
 16127  15CD                     i1l4458:
 16128  15CD  0A72               	incf	fputc@fp,w
 16129  15CE  0086               	movwf	6
 16130  15CF  0187               	clrf	7
 16131  15D0  3001               	movlw	1
 16132  15D1  0781               	addwf	1,f
 16133  15D2  3141               	addfsr 1,1
 16134  15D3  1803               	skipnc
 16135  15D4  0A81               	incf	1,f
 16136  15D5                     i1l2247:
 16137  15D5  0008               	return
 16138  15D6                     __end_of_fputc:
 16139                           
 16140                           	psect	text43
 16141  0003                     __ptext43:	
 16142 ;; *************** function _putch *****************
 16143 ;; Defined at:
 16144 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
 16145 ;; Parameters:    Size  Location     Type
 16146 ;;  c               1    wreg     unsigned char 
 16147 ;; Auto vars:     Size  Location     Type
 16148 ;;  c               1    0[COMMON] unsigned char 
 16149 ;; Return value:  Size  Location     Type
 16150 ;;                  1    wreg      void 
 16151 ;; Registers used:
 16152 ;;		wreg
 16153 ;; Tracked objects:
 16154 ;;		On entry : 0/0
 16155 ;;		On exit  : 0/0
 16156 ;;		Unchanged: 0/0
 16157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16162 ;;Total ram usage:        0 bytes
 16163 ;; Hardware stack levels used: 1
 16164 ;; This function calls:
 16165 ;;		Nothing
 16166 ;; This function is called by:
 16167 ;;		_fputc
 16168 ;; This function uses a non-reentrant model
 16169 ;;
 16170                           
 16171                           
 16172                           ;psect for function _putch
 16173  0003                     _putch:
 16174  0003                     i1l2258:	
 16175                           ;incstack = 0
 16176                           ; Regs used in _putch: [wreg]
 16177                           
 16178  0003  0008               	return
 16179  0004                     __end_of_putch:
 16180                           
 16181                           	psect	text44
 16182  09CB                     __ptext44:	
 16183 ;; *************** function _atoi *****************
 16184 ;; Defined at:
 16185 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 16186 ;; Parameters:    Size  Location     Type
 16187 ;;  s               2    6[COMMON] PTR const unsigned char 
 16188 ;;		 -> STR_2(22), STR_1(23), 
 16189 ;; Auto vars:     Size  Location     Type
 16190 ;;  n               2    7[BANK0 ] int 
 16191 ;;  neg             2    0[BANK0 ] int 
 16192 ;; Return value:  Size  Location     Type
 16193 ;;                  2    6[COMMON] int 
 16194 ;; Registers used:
 16195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16196 ;; Tracked objects:
 16197 ;;		On entry : 0/0
 16198 ;;		On exit  : 0/0
 16199 ;;		Unchanged: 0/0
 16200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16202 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16203 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16204 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16205 ;;Total ram usage:       15 bytes
 16206 ;; Hardware stack levels used: 1
 16207 ;; Hardware stack levels required when called: 1
 16208 ;; This function calls:
 16209 ;;		___wmul
 16210 ;;		_isdigit
 16211 ;;		_isspace
 16212 ;; This function is called by:
 16213 ;;		_vfpfcnvrt
 16214 ;; This function uses a non-reentrant model
 16215 ;;
 16216                           
 16217                           
 16218                           ;psect for function _atoi
 16219  09CB                     _atoi:
 16220  09CB                     i1l4690:	
 16221                           ;incstack = 0
 16222                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16223                           
 16224  09CB  0020               	movlb	0	; select bank0
 16225  09CC  01A7               	clrf	atoi@n
 16226  09CD  01A8               	clrf	atoi@n+1
 16227  09CE  01A0               	clrf	atoi@neg
 16228  09CF  01A1               	clrf	atoi@neg+1
 16229  09D0  29D5               	goto	i1l4694
 16230  09D1                     i1l4692:
 16231  09D1  3001               	movlw	1
 16232  09D2  07F6               	addwf	atoi@s,f
 16233  09D3  3000               	movlw	0
 16234  09D4  3DF7               	addwfc	atoi@s+1,f
 16235  09D5                     i1l4694:
 16236  09D5  01A6               	clrf	_atoi$2976
 16237  09D6  0AA6               	incf	_atoi$2976,f
 16238  09D7                     i1l4696:
 16239  09D7  0876               	movf	atoi@s,w
 16240  09D8  0084               	movwf	4
 16241  09D9  0877               	movf	atoi@s+1,w
 16242  09DA  0085               	movwf	5
 16243  09DB  0012               	moviw fsr0++
 16244  09DC  3A20               	xorlw	32
 16245  09DD  1903               	btfsc	3,2
 16246  09DE  29E0               	goto	u353_21
 16247  09DF  29E1               	goto	u353_20
 16248  09E0                     u353_21:
 16249  09E0  29F6               	goto	i1l4702
 16250  09E1                     u353_20:
 16251  09E1                     i1l4698:
 16252  09E1  0876               	movf	atoi@s,w
 16253  09E2  0084               	movwf	4
 16254  09E3  0877               	movf	atoi@s+1,w
 16255  09E4  0085               	movwf	5
 16256  09E5  0800               	movf	0,w	;code access
 16257  09E6  3EF7               	addlw	247
 16258  09E7  00F8               	movwf	??_atoi
 16259  09E8  30FF               	movlw	255
 16260  09E9  1803               	skipnc
 16261  09EA  3000               	movlw	0
 16262  09EB  00F9               	movwf	??_atoi+1
 16263  09EC  3000               	movlw	0
 16264  09ED  0279               	subwf	??_atoi+1,w
 16265  09EE  3005               	movlw	5
 16266  09EF  1903               	skipnz
 16267  09F0  0278               	subwf	??_atoi,w
 16268  09F1  1C03               	skipc
 16269  09F2  29F4               	goto	u354_21
 16270  09F3  29F5               	goto	u354_20
 16271  09F4                     u354_21:
 16272  09F4  29F6               	goto	i1l4702
 16273  09F5                     u354_20:
 16274  09F5                     i1l4700:
 16275  09F5  01A6               	clrf	_atoi$2976
 16276  09F6                     i1l4702:
 16277  09F6  0826               	movf	_atoi$2976,w
 16278  09F7  00F8               	movwf	??_atoi
 16279  09F8  01F9               	clrf	??_atoi+1
 16280  09F9  0878               	movf	??_atoi,w
 16281  09FA  00A2               	movwf	_atoi$2975
 16282  09FB  0879               	movf	??_atoi+1,w
 16283  09FC  00A3               	movwf	_atoi$2975+1
 16284  09FD                     i1l4706:
 16285  09FD  0822               	movf	_atoi$2975,w
 16286  09FE  0423               	iorwf	_atoi$2975+1,w
 16287  09FF  1D03               	btfss	3,2
 16288  0A00  2A02               	goto	u355_21
 16289  0A01  2A03               	goto	u355_20
 16290  0A02                     u355_21:
 16291  0A02  29D1               	goto	i1l4692
 16292  0A03                     u355_20:
 16293  0A03  2A0D               	goto	i1l4710
 16294  0A04                     i1l4708:
 16295  0A04  3001               	movlw	1
 16296  0A05  00A0               	movwf	atoi@neg
 16297  0A06  3000               	movlw	0
 16298  0A07  00A1               	movwf	atoi@neg+1
 16299  0A08                     i1l2208:
 16300  0A08  3001               	movlw	1
 16301  0A09  07F6               	addwf	atoi@s,f
 16302  0A0A  3000               	movlw	0
 16303  0A0B  3DF7               	addwfc	atoi@s+1,f
 16304  0A0C  2A41               	goto	i1l4716
 16305  0A0D                     i1l4710:
 16306  0A0D  0876               	movf	atoi@s,w
 16307  0A0E  0084               	movwf	4
 16308  0A0F  0877               	movf	atoi@s+1,w
 16309  0A10  0085               	movwf	5
 16310  0A11  0800               	movf	0,w	;code access
 16311  0A12  00F8               	movwf	??_atoi
 16312  0A13  01F9               	clrf	??_atoi+1
 16313                           
 16314                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16315                           ; Switch size 1, requested type "simple"
 16316                           ; Number of cases is 1, Range of values is 0 to 0
 16317                           ; switch strategies available:
 16318                           ; Name         Instructions Cycles
 16319                           ; simple_byte            4     3 (average)
 16320                           ; direct_byte            8     6 (fixed)
 16321                           ; jumptable            260     6 (fixed)
 16322                           ;	Chosen strategy is simple_byte
 16323  0A14  0879               	movf	??_atoi+1,w
 16324  0A15  3A00               	xorlw	0	; case 0
 16325  0A16  1903               	skipnz
 16326  0A17  2A19               	goto	i1l6404
 16327  0A18  2A41               	goto	i1l4716
 16328  0A19                     i1l6404:
 16329                           
 16330                           ; Switch size 1, requested type "simple"
 16331                           ; Number of cases is 2, Range of values is 43 to 45
 16332                           ; switch strategies available:
 16333                           ; Name         Instructions Cycles
 16334                           ; simple_byte            7     4 (average)
 16335                           ; direct_byte           15     9 (fixed)
 16336                           ; jumptable            263     9 (fixed)
 16337                           ;	Chosen strategy is simple_byte
 16338  0A19  0878               	movf	??_atoi,w
 16339  0A1A  3A2B               	xorlw	43	; case 43
 16340  0A1B  1903               	skipnz
 16341  0A1C  2A08               	goto	i1l2208
 16342  0A1D  3A06               	xorlw	6	; case 45
 16343  0A1E  1903               	skipnz
 16344  0A1F  2A04               	goto	i1l4708
 16345  0A20  2A41               	goto	i1l4716
 16346  0A21                     i1l4712:
 16347  0A21  0876               	movf	atoi@s,w
 16348  0A22  0084               	movwf	4
 16349  0A23  0877               	movf	atoi@s+1,w
 16350  0A24  0085               	movwf	5
 16351  0A25  0800               	movf	0,w	;code access
 16352  0A26  00F8               	movwf	??_atoi
 16353  0A27  0828               	movf	atoi@n+1,w
 16354  0A28  00F1               	movwf	___wmul@multiplier+1
 16355  0A29  0827               	movf	atoi@n,w
 16356  0A2A  00F0               	movwf	___wmul@multiplier
 16357  0A2B  300A               	movlw	10
 16358  0A2C  00F2               	movwf	___wmul@multiplicand
 16359  0A2D  3000               	movlw	0
 16360  0A2E  00F3               	movwf	___wmul@multiplicand+1
 16361  0A2F  3193  23D5  3189   	fcall	___wmul
 16362  0A32  0871               	movf	?___wmul+1,w
 16363  0A33  00FA               	movwf	??_atoi+2
 16364  0A34  0878               	movf	??_atoi,w
 16365  0A35  0270               	subwf	?___wmul,w
 16366  0A36  00F9               	movwf	??_atoi+1
 16367  0A37  1C03               	skipc
 16368  0A38  03FA               	decf	??_atoi+2,f
 16369  0A39  0879               	movf	??_atoi+1,w
 16370  0A3A  3E30               	addlw	48
 16371  0A3B  0020               	movlb	0	; select bank0
 16372  0A3C  00A7               	movwf	atoi@n
 16373  0A3D  3000               	movlw	0
 16374  0A3E  3D7A               	addwfc	??_atoi+2,w
 16375  0A3F  00A8               	movwf	atoi@n+1
 16376  0A40  2A08               	goto	i1l2208
 16377  0A41                     i1l4716:
 16378  0A41  0876               	movf	atoi@s,w
 16379  0A42  0084               	movwf	4
 16380  0A43  0877               	movf	atoi@s+1,w
 16381  0A44  0085               	movwf	5
 16382  0A45  0800               	movf	0,w	;code access
 16383  0A46  3ED0               	addlw	208
 16384  0A47  00F8               	movwf	??_atoi
 16385  0A48  30FF               	movlw	255
 16386  0A49  1803               	skipnc
 16387  0A4A  3000               	movlw	0
 16388  0A4B  00F9               	movwf	??_atoi+1
 16389  0A4C  3000               	movlw	0
 16390  0A4D  0279               	subwf	??_atoi+1,w
 16391  0A4E  300A               	movlw	10
 16392  0A4F  1903               	skipnz
 16393  0A50  0278               	subwf	??_atoi,w
 16394  0A51  1C03               	skipc
 16395  0A52  2A54               	goto	u356_21
 16396  0A53  2A56               	goto	u356_20
 16397  0A54                     u356_21:
 16398  0A54  3001               	movlw	1
 16399  0A55  2A57               	goto	u357_20
 16400  0A56                     u356_20:
 16401  0A56  3000               	movlw	0
 16402  0A57                     u357_20:
 16403  0A57  00FA               	movwf	??_atoi+2
 16404  0A58  01FB               	clrf	??_atoi+3
 16405  0A59  087A               	movf	??_atoi+2,w
 16406  0A5A  00A4               	movwf	_atoi$2977
 16407  0A5B  087B               	movf	??_atoi+3,w
 16408  0A5C  00A5               	movwf	_atoi$2977+1
 16409  0A5D                     i1l4720:
 16410  0A5D  0824               	movf	_atoi$2977,w
 16411  0A5E  0425               	iorwf	_atoi$2977+1,w
 16412  0A5F  1D03               	btfss	3,2
 16413  0A60  2A62               	goto	u358_21
 16414  0A61  2A63               	goto	u358_20
 16415  0A62                     u358_21:
 16416  0A62  2A21               	goto	i1l4712
 16417  0A63                     u358_20:
 16418  0A63                     i1l4722:
 16419  0A63  0820               	movf	atoi@neg,w
 16420  0A64  0421               	iorwf	atoi@neg+1,w
 16421  0A65  1D03               	btfss	3,2
 16422  0A66  2A68               	goto	u359_21
 16423  0A67  2A69               	goto	u359_20
 16424  0A68                     u359_21:
 16425  0A68  2A75               	goto	i1l4726
 16426  0A69                     u359_20:
 16427  0A69                     i1l4724:
 16428  0A69  0927               	comf	atoi@n,w
 16429  0A6A  00F8               	movwf	??_atoi
 16430  0A6B  0928               	comf	atoi@n+1,w
 16431  0A6C  00F9               	movwf	??_atoi+1
 16432  0A6D  0AF8               	incf	??_atoi,f
 16433  0A6E  1903               	skipnz
 16434  0A6F  0AF9               	incf	??_atoi+1,f
 16435  0A70  0878               	movf	??_atoi,w
 16436  0A71  00F6               	movwf	?_atoi
 16437  0A72  0879               	movf	??_atoi+1,w
 16438  0A73  00F7               	movwf	?_atoi+1
 16439  0A74  2A79               	goto	i1l2221
 16440  0A75                     i1l4726:
 16441  0A75  0828               	movf	atoi@n+1,w
 16442  0A76  00F7               	movwf	?_atoi+1
 16443  0A77  0827               	movf	atoi@n,w
 16444  0A78  00F6               	movwf	?_atoi
 16445  0A79                     i1l2221:
 16446  0A79  0008               	return
 16447  0A7A                     __end_of_atoi:
 16448                           
 16449                           	psect	text45
 16450  13F4                     __ptext45:	
 16451 ;; *************** function _isspace *****************
 16452 ;; Defined at:
 16453 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 16454 ;; Parameters:    Size  Location     Type
 16455 ;;  c               2    0[COMMON] int 
 16456 ;; Auto vars:     Size  Location     Type
 16457 ;;		None
 16458 ;; Return value:  Size  Location     Type
 16459 ;;                  2    0[COMMON] int 
 16460 ;; Registers used:
 16461 ;;		wreg, status,2, status,0
 16462 ;; Tracked objects:
 16463 ;;		On entry : 0/0
 16464 ;;		On exit  : 0/0
 16465 ;;		Unchanged: 0/0
 16466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16469 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16470 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16471 ;;Total ram usage:        5 bytes
 16472 ;; Hardware stack levels used: 1
 16473 ;; This function calls:
 16474 ;;		Nothing
 16475 ;; This function is called by:
 16476 ;;		_atoi
 16477 ;; This function uses a non-reentrant model
 16478 ;;
 16479                           
 16480                           
 16481                           ;psect for function _isspace
 16482  13F4                     _isspace:
 16483  13F4                     i1l4592:	
 16484                           ;incstack = 0
 16485                           ; Regs used in _isspace: [wreg+status,2+status,0]
 16486                           
 16487  13F4  01F4               	clrf	_isspace$2993
 16488  13F5  0AF4               	incf	_isspace$2993,f
 16489  13F6                     i1l4594:
 16490  13F6  3020               	movlw	32
 16491  13F7  0670               	xorwf	isspace@c,w
 16492  13F8  0471               	iorwf	isspace@c+1,w
 16493  13F9  1903               	btfsc	3,2
 16494  13FA  2BFC               	goto	u330_21
 16495  13FB  2BFD               	goto	u330_20
 16496  13FC                     u330_21:
 16497  13FC  2C0D               	goto	i1l4600
 16498  13FD                     u330_20:
 16499  13FD                     i1l4596:
 16500  13FD  0870               	movf	isspace@c,w
 16501  13FE  3EF7               	addlw	247
 16502  13FF  00F2               	movwf	??_isspace
 16503  1400  30FF               	movlw	255
 16504  1401  3D71               	addwfc	isspace@c+1,w
 16505  1402  00F3               	movwf	??_isspace+1
 16506  1403  3000               	movlw	0
 16507  1404  0273               	subwf	??_isspace+1,w
 16508  1405  3005               	movlw	5
 16509  1406  1903               	skipnz
 16510  1407  0272               	subwf	??_isspace,w
 16511  1408  1C03               	skipc
 16512  1409  2C0B               	goto	u331_21
 16513  140A  2C0C               	goto	u331_20
 16514  140B                     u331_21:
 16515  140B  2C0D               	goto	i1l4600
 16516  140C                     u331_20:
 16517  140C                     i1l4598:
 16518  140C  01F4               	clrf	_isspace$2993
 16519  140D                     i1l4600:
 16520  140D  0874               	movf	_isspace$2993,w
 16521  140E  00F2               	movwf	??_isspace
 16522  140F  01F3               	clrf	??_isspace+1
 16523  1410  0872               	movf	??_isspace,w
 16524  1411  00F0               	movwf	?_isspace
 16525  1412  0873               	movf	??_isspace+1,w
 16526  1413  00F1               	movwf	?_isspace+1
 16527  1414                     i1l2232:
 16528  1414  0008               	return
 16529  1415                     __end_of_isspace:
 16530                           
 16531                           	psect	text46
 16532  07E7                     __ptext46:	
 16533 ;; *************** function _isdigit *****************
 16534 ;; Defined at:
 16535 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 16536 ;; Parameters:    Size  Location     Type
 16537 ;;  c               2    0[COMMON] int 
 16538 ;; Auto vars:     Size  Location     Type
 16539 ;;		None
 16540 ;; Return value:  Size  Location     Type
 16541 ;;                  2    0[COMMON] int 
 16542 ;; Registers used:
 16543 ;;		wreg, status,2, status,0
 16544 ;; Tracked objects:
 16545 ;;		On entry : 0/0
 16546 ;;		On exit  : 0/0
 16547 ;;		Unchanged: 0/0
 16548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16551 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16552 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16553 ;;Total ram usage:        6 bytes
 16554 ;; Hardware stack levels used: 1
 16555 ;; This function calls:
 16556 ;;		Nothing
 16557 ;; This function is called by:
 16558 ;;		_vfpfcnvrt
 16559 ;;		_atoi
 16560 ;; This function uses a non-reentrant model
 16561 ;;
 16562                           
 16563                           
 16564                           ;psect for function _isdigit
 16565  07E7                     _isdigit:
 16566  07E7                     i1l4588:	
 16567                           ;incstack = 0
 16568                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 16569                           
 16570  07E7  0870               	movf	isdigit@c,w
 16571  07E8  3ED0               	addlw	208
 16572  07E9  00F2               	movwf	??_isdigit
 16573  07EA  30FF               	movlw	255
 16574  07EB  3D71               	addwfc	isdigit@c+1,w
 16575  07EC  00F3               	movwf	??_isdigit+1
 16576  07ED  3000               	movlw	0
 16577  07EE  0273               	subwf	??_isdigit+1,w
 16578  07EF  300A               	movlw	10
 16579  07F0  1903               	skipnz
 16580  07F1  0272               	subwf	??_isdigit,w
 16581  07F2  1C03               	skipc
 16582  07F3  2FF5               	goto	u328_21
 16583  07F4  2FF7               	goto	u328_20
 16584  07F5                     u328_21:
 16585  07F5  3001               	movlw	1
 16586  07F6  2FF8               	goto	u329_20
 16587  07F7                     u328_20:
 16588  07F7  3000               	movlw	0
 16589  07F8                     u329_20:
 16590  07F8  00F4               	movwf	??_isdigit+2
 16591  07F9  01F5               	clrf	??_isdigit+3
 16592  07FA  0874               	movf	??_isdigit+2,w
 16593  07FB  00F0               	movwf	?_isdigit
 16594  07FC  0875               	movf	??_isdigit+3,w
 16595  07FD  00F1               	movwf	?_isdigit+1
 16596  07FE                     i1l2224:
 16597  07FE  0008               	return
 16598  07FF                     __end_of_isdigit:
 16599                           
 16600                           	psect	text47
 16601  13D5                     __ptext47:	
 16602 ;; *************** function ___wmul *****************
 16603 ;; Defined at:
 16604 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 16605 ;; Parameters:    Size  Location     Type
 16606 ;;  multiplier      2    0[COMMON] unsigned int 
 16607 ;;  multiplicand    2    2[COMMON] unsigned int 
 16608 ;; Auto vars:     Size  Location     Type
 16609 ;;  product         2    4[COMMON] unsigned int 
 16610 ;; Return value:  Size  Location     Type
 16611 ;;                  2    0[COMMON] unsigned int 
 16612 ;; Registers used:
 16613 ;;		wreg, status,2, status,0
 16614 ;; Tracked objects:
 16615 ;;		On entry : 0/0
 16616 ;;		On exit  : 0/0
 16617 ;;		Unchanged: 0/0
 16618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16619 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16620 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16622 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16623 ;;Total ram usage:        6 bytes
 16624 ;; Hardware stack levels used: 1
 16625 ;; This function calls:
 16626 ;;		Nothing
 16627 ;; This function is called by:
 16628 ;;		_atoi
 16629 ;; This function uses a non-reentrant model
 16630 ;;
 16631                           
 16632                           
 16633                           ;psect for function ___wmul
 16634  13D5                     ___wmul:
 16635  13D5                     i1l4480:	
 16636                           ;incstack = 0
 16637                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16638                           
 16639  13D5  01F4               	clrf	___wmul@product
 16640  13D6  01F5               	clrf	___wmul@product+1
 16641  13D7                     i1l4482:
 16642  13D7  1C70               	btfss	___wmul@multiplier,0
 16643  13D8  2BDA               	goto	u298_21
 16644  13D9  2BDB               	goto	u298_20
 16645  13DA                     u298_21:
 16646  13DA  2BDF               	goto	i1l1605
 16647  13DB                     u298_20:
 16648  13DB                     i1l4484:
 16649  13DB  0872               	movf	___wmul@multiplicand,w
 16650  13DC  07F4               	addwf	___wmul@product,f
 16651  13DD  0873               	movf	___wmul@multiplicand+1,w
 16652  13DE  3DF5               	addwfc	___wmul@product+1,f
 16653  13DF                     i1l1605:
 16654  13DF  3001               	movlw	1
 16655  13E0                     u299_25:
 16656  13E0  35F2               	lslf	___wmul@multiplicand,f
 16657  13E1  0DF3               	rlf	___wmul@multiplicand+1,f
 16658  13E2  0B89               	decfsz	9,f
 16659  13E3  2BE0               	goto	u299_25
 16660  13E4                     i1l4486:
 16661  13E4  3001               	movlw	1
 16662  13E5                     u300_25:
 16663  13E5  36F1               	lsrf	___wmul@multiplier+1,f
 16664  13E6  0CF0               	rrf	___wmul@multiplier,f
 16665  13E7  0B89               	decfsz	9,f
 16666  13E8  2BE5               	goto	u300_25
 16667  13E9                     i1l4488:
 16668  13E9  0870               	movf	___wmul@multiplier,w
 16669  13EA  0471               	iorwf	___wmul@multiplier+1,w
 16670  13EB  1D03               	btfss	3,2
 16671  13EC  2BEE               	goto	u301_21
 16672  13ED  2BEF               	goto	u301_20
 16673  13EE                     u301_21:
 16674  13EE  2BD7               	goto	i1l4482
 16675  13EF                     u301_20:
 16676  13EF                     i1l4490:
 16677  13EF  0875               	movf	___wmul@product+1,w
 16678  13F0  00F1               	movwf	?___wmul+1
 16679  13F1  0874               	movf	___wmul@product,w
 16680  13F2  00F0               	movwf	?___wmul
 16681  13F3                     i1l1607:
 16682  13F3  0008               	return
 16683  13F4                     __end_of___wmul:
 16684                           
 16685                           	psect	text48
 16686  133E                     __ptext48:	
 16687 ;; *************** function _LCDstr *****************
 16688 ;; Defined at:
 16689 ;;		line 112 in file "LCD/lcd.c"
 16690 ;; Parameters:    Size  Location     Type
 16691 ;;  p               1    wreg     PTR unsigned char 
 16692 ;;		 -> printLCD@buf(33), 
 16693 ;; Auto vars:     Size  Location     Type
 16694 ;;  p               1   11[COMMON] PTR unsigned char 
 16695 ;;		 -> printLCD@buf(33), 
 16696 ;;  c               1   10[COMMON] unsigned char 
 16697 ;; Return value:  Size  Location     Type
 16698 ;;                  1    wreg      void 
 16699 ;; Registers used:
 16700 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16701 ;; Tracked objects:
 16702 ;;		On entry : 0/0
 16703 ;;		On exit  : 0/0
 16704 ;;		Unchanged: 0/0
 16705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16707 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16708 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16709 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16710 ;;Total ram usage:        3 bytes
 16711 ;; Hardware stack levels used: 1
 16712 ;; Hardware stack levels required when called: 3
 16713 ;; This function calls:
 16714 ;;		_LCDchar
 16715 ;; This function is called by:
 16716 ;;		_printLCD
 16717 ;; This function uses a non-reentrant model
 16718 ;;
 16719                           
 16720                           
 16721                           ;psect for function _LCDstr
 16722  133E                     _LCDstr:
 16723                           
 16724                           ;incstack = 0
 16725                           ; Regs used in _LCDstr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16726                           ;LCDstr@p stored from wreg
 16727  133E  00FB               	movwf	LCDstr@p
 16728  133F                     i1l4996:
 16729                           
 16730                           ;LCD/lcd.c: 112: void LCDstr(char *p);LCD/lcd.c: 113: {;LCD/lcd.c: 114:   unsigned char 
      +                          c;;LCD/lcd.c: 116:   while((c = *p++)) LCDchar(c);
 16731  133F  2B44               	goto	i1l5000
 16732  1340                     i1l4998:
 16733  1340  087A               	movf	LCDstr@c,w
 16734  1341  3192  229C  3193   	fcall	_LCDchar
 16735  1344                     i1l5000:
 16736  1344  087B               	movf	LCDstr@p,w
 16737  1345  0086               	movwf	6
 16738  1346  0187               	clrf	7
 16739  1347  0AFB               	incf	LCDstr@p,f
 16740  1348  0801               	movf	1,w
 16741  1349  00F9               	movwf	??_LCDstr
 16742  134A  0879               	movf	??_LCDstr,w
 16743  134B  00FA               	movwf	LCDstr@c
 16744  134C  087A               	movf	LCDstr@c,w
 16745  134D  1D03               	btfss	3,2
 16746  134E  2B50               	goto	u424_21
 16747  134F  2B51               	goto	u424_20
 16748  1350                     u424_21:
 16749  1350  2B40               	goto	i1l4998
 16750  1351                     u424_20:
 16751  1351                     i1l244:
 16752  1351  0008               	return
 16753  1352                     __end_of_LCDstr:
 16754                           
 16755                           	psect	text49
 16756  129C                     __ptext49:	
 16757 ;; *************** function _LCDchar *****************
 16758 ;; Defined at:
 16759 ;;		line 107 in file "LCD/lcd.c"
 16760 ;; Parameters:    Size  Location     Type
 16761 ;;  c               1    wreg     unsigned char 
 16762 ;; Auto vars:     Size  Location     Type
 16763 ;;  c               1    8[COMMON] unsigned char 
 16764 ;; Return value:  Size  Location     Type
 16765 ;;                  1    wreg      void 
 16766 ;; Registers used:
 16767 ;;		wreg, status,2, status,0, pclath, cstack
 16768 ;; Tracked objects:
 16769 ;;		On entry : 0/0
 16770 ;;		On exit  : 0/0
 16771 ;;		Unchanged: 0/0
 16772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16776 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16777 ;;Total ram usage:        1 bytes
 16778 ;; Hardware stack levels used: 1
 16779 ;; Hardware stack levels required when called: 2
 16780 ;; This function calls:
 16781 ;;		i1_LCDsend2x4
 16782 ;; This function is called by:
 16783 ;;		_LCDstr
 16784 ;; This function uses a non-reentrant model
 16785 ;;
 16786                           
 16787                           
 16788                           ;psect for function _LCDchar
 16789  129C                     _LCDchar:
 16790                           
 16791                           ;incstack = 0
 16792                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 16793                           ;LCDchar@c stored from wreg
 16794  129C  00F8               	movwf	LCDchar@c
 16795  129D                     i1l4980:
 16796                           
 16797                           ;LCD/lcd.c: 107: void LCDchar(unsigned char c);LCD/lcd.c: 108: {;LCD/lcd.c: 109:   LCDse
      +                          nd2x4(c, 0x01);
 16798  129D  01F2               	clrf	i1LCDsend2x4@mode
 16799  129E  0AF2               	incf	i1LCDsend2x4@mode,f
 16800  129F  0878               	movf	LCDchar@c,w
 16801  12A0  318A  227A  3192   	fcall	i1_LCDsend2x4
 16802  12A3                     i1l238:
 16803  12A3  0008               	return
 16804  12A4                     __end_of_LCDchar:
 16805                           
 16806                           	psect	text50
 16807  1295                     __ptext50:	
 16808 ;; *************** function _LCDcmd *****************
 16809 ;; Defined at:
 16810 ;;		line 102 in file "LCD/lcd.c"
 16811 ;; Parameters:    Size  Location     Type
 16812 ;;  c               1    wreg     unsigned char 
 16813 ;; Auto vars:     Size  Location     Type
 16814 ;;  c               1    8[COMMON] unsigned char 
 16815 ;; Return value:  Size  Location     Type
 16816 ;;                  1    wreg      void 
 16817 ;; Registers used:
 16818 ;;		wreg, status,2, status,0, pclath, cstack
 16819 ;; Tracked objects:
 16820 ;;		On entry : 0/0
 16821 ;;		On exit  : 0/0
 16822 ;;		Unchanged: 0/0
 16823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16827 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16828 ;;Total ram usage:        1 bytes
 16829 ;; Hardware stack levels used: 1
 16830 ;; Hardware stack levels required when called: 2
 16831 ;; This function calls:
 16832 ;;		i1_LCDsend2x4
 16833 ;; This function is called by:
 16834 ;;		_printLCD
 16835 ;;		_LCDpos
 16836 ;; This function uses a non-reentrant model
 16837 ;;
 16838                           
 16839                           
 16840                           ;psect for function _LCDcmd
 16841  1295                     _LCDcmd:
 16842                           
 16843                           ;incstack = 0
 16844                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 16845                           ;LCDcmd@c stored from wreg
 16846  1295  00F8               	movwf	LCDcmd@c
 16847  1296                     i1l4994:
 16848                           
 16849                           ;LCD/lcd.c: 102: void LCDcmd(unsigned char c);LCD/lcd.c: 103: {;LCD/lcd.c: 104:   LCDsen
      +                          d2x4(c, 0);
 16850  1296  01F2               	clrf	i1LCDsend2x4@mode
 16851  1297  0878               	movf	LCDcmd@c,w
 16852  1298  318A  227A  3192   	fcall	i1_LCDsend2x4
 16853  129B                     i1l235:
 16854  129B  0008               	return
 16855  129C                     __end_of_LCDcmd:
 16856                           
 16857                           	psect	text51
 16858  0A7A                     __ptext51:	
 16859 ;; *************** function i1_LCDsend2x4 *****************
 16860 ;; Defined at:
 16861 ;;		line 56 in file "LCD/lcd.c"
 16862 ;; Parameters:    Size  Location     Type
 16863 ;;  c               1    wreg     unsigned char 
 16864 ;;  mode            1    2[COMMON] unsigned char 
 16865 ;; Auto vars:     Size  Location     Type
 16866 ;;  c               1    5[COMMON] unsigned char 
 16867 ;;  lc              1    7[COMMON] unsigned char 
 16868 ;;  hc              1    6[COMMON] unsigned char 
 16869 ;; Return value:  Size  Location     Type
 16870 ;;                  1    wreg      void 
 16871 ;; Registers used:
 16872 ;;		wreg, status,2, status,0, pclath, cstack
 16873 ;; Tracked objects:
 16874 ;;		On entry : 0/0
 16875 ;;		On exit  : 0/0
 16876 ;;		Unchanged: 0/0
 16877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16878 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16879 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16880 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16881 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16882 ;;Total ram usage:        6 bytes
 16883 ;; Hardware stack levels used: 1
 16884 ;; Hardware stack levels required when called: 1
 16885 ;; This function calls:
 16886 ;;		i1_WriteI2C
 16887 ;; This function is called by:
 16888 ;;		_LCDcmd
 16889 ;;		_LCDchar
 16890 ;; This function uses a non-reentrant model
 16891 ;;
 16892                           
 16893                           
 16894                           ;psect for function i1_LCDsend2x4
 16895  0A7A                     i1_LCDsend2x4:
 16896                           
 16897                           ;incstack = 0
 16898                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 16899                           ;i1LCDsend2x4@c stored from wreg
 16900  0A7A  00F5               	movwf	i1LCDsend2x4@c
 16901  0A7B                     i1l4876:
 16902                           
 16903                           ;LCD/lcd.c: 56: void LCDsend2x4(unsigned char c, unsigned char mode);LCD/lcd.c: 57: {;LC
      +                          D/lcd.c: 58:   unsigned char hc;;LCD/lcd.c: 59:   unsigned char lc;;LCD/lcd.c: 61:   hc 
      +                          = c & 0xf0;
 16904  0A7B  0875               	movf	i1LCDsend2x4@c,w
 16905  0A7C  39F0               	andlw	240
 16906  0A7D  00F3               	movwf	??i1_LCDsend2x4
 16907  0A7E  0873               	movf	??i1_LCDsend2x4,w
 16908  0A7F  00F6               	movwf	i1LCDsend2x4@hc
 16909  0A80                     i1l4878:
 16910                           
 16911                           ;LCD/lcd.c: 62:   lc = (c << 4) & 0xf0;
 16912  0A80  0875               	movf	i1LCDsend2x4@c,w
 16913  0A81  00F3               	movwf	??i1_LCDsend2x4
 16914  0A82  3003               	movlw	3
 16915  0A83                     u384_25:
 16916  0A83  35F3               	lslf	??i1_LCDsend2x4,f
 16917  0A84  3EFF               	addlw	-1
 16918  0A85  1D03               	skipz
 16919  0A86  2A83               	goto	u384_25
 16920  0A87  3573               	lslf	??i1_LCDsend2x4,w
 16921  0A88  39F0               	andlw	240
 16922  0A89  00F4               	movwf	??i1_LCDsend2x4+1
 16923  0A8A  0874               	movf	??i1_LCDsend2x4+1,w
 16924  0A8B  00F7               	movwf	i1LCDsend2x4@lc
 16925  0A8C                     i1l4880:	
 16926                           ;LCD/lcd.c: 64:   while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16927                           
 16928  0A8C  0023               	movlb	3	; select bank3
 16929  0A8D  0C0F               	rrf	15,w	;volatile
 16930  0A8E  0C89               	rrf	9,f
 16931  0A8F  3901               	andlw	1
 16932  0A90  00F3               	movwf	??i1_LCDsend2x4
 16933  0A91  0811               	movf	17,w	;volatile
 16934  0A92  391F               	andlw	31
 16935  0A93  0473               	iorwf	??i1_LCDsend2x4,w
 16936  0A94  1D03               	btfss	3,2
 16937  0A95  2A97               	goto	u385_21
 16938  0A96  2A98               	goto	u385_20
 16939  0A97                     u385_21:
 16940  0A97  2A8C               	goto	i1l4880
 16941  0A98                     u385_20:
 16942  0A98                     i1l195:	
 16943                           ;LCD/lcd.c: 65:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16944                           
 16945  0A98  1411               	bsf	17,0	;volatile
 16946  0A99                     i1l196:
 16947  0A99  1811               	btfsc	17,0	;volatile
 16948  0A9A  2A9C               	goto	u386_21
 16949  0A9B  2A9D               	goto	u386_20
 16950  0A9C                     u386_21:
 16951  0A9C  2A99               	goto	i1l196
 16952  0A9D                     u386_20:
 16953  0A9D                     i1l4882:
 16954  0A9D  0C0F               	rrf	15,w	;volatile
 16955  0A9E  0C89               	rrf	9,f
 16956  0A9F  3901               	andlw	1
 16957  0AA0  00F3               	movwf	??i1_LCDsend2x4
 16958  0AA1  0811               	movf	17,w	;volatile
 16959  0AA2  391F               	andlw	31
 16960  0AA3  0473               	iorwf	??i1_LCDsend2x4,w
 16961  0AA4  1D03               	btfss	3,2
 16962  0AA5  2AA7               	goto	u387_21
 16963  0AA6  2AA8               	goto	u387_20
 16964  0AA7                     u387_21:
 16965  0AA7  2A9D               	goto	i1l4882
 16966  0AA8                     u387_20:
 16967  0AA8                     i1l4884:
 16968                           
 16969                           ;LCD/lcd.c: 66:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16970  0AA8  304E               	movlw	78
 16971  0AA9  3195  253C  318A   	fcall	i1_WriteI2C
 16972  0AAC                     i1l4886:
 16973  0AAC  0023               	movlb	3	; select bank3
 16974  0AAD  0C0F               	rrf	15,w	;volatile
 16975  0AAE  0C89               	rrf	9,f
 16976  0AAF  3901               	andlw	1
 16977  0AB0  00F3               	movwf	??i1_LCDsend2x4
 16978  0AB1  0811               	movf	17,w	;volatile
 16979  0AB2  391F               	andlw	31
 16980  0AB3  0473               	iorwf	??i1_LCDsend2x4,w
 16981  0AB4  1D03               	btfss	3,2
 16982  0AB5  2AB7               	goto	u388_21
 16983  0AB6  2AB8               	goto	u388_20
 16984  0AB7                     u388_21:
 16985  0AB7  2AAC               	goto	i1l4886
 16986  0AB8                     u388_20:
 16987  0AB8                     i1l4888:
 16988                           
 16989                           ;LCD/lcd.c: 67:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 16990  0AB8  0876               	movf	i1LCDsend2x4@hc,w
 16991  0AB9  0472               	iorwf	i1LCDsend2x4@mode,w
 16992  0ABA  3808               	iorlw	8
 16993  0ABB  3195  253C  318A   	fcall	i1_WriteI2C
 16994  0ABE                     i1l4890:
 16995  0ABE  0023               	movlb	3	; select bank3
 16996  0ABF  0C0F               	rrf	15,w	;volatile
 16997  0AC0  0C89               	rrf	9,f
 16998  0AC1  3901               	andlw	1
 16999  0AC2  00F3               	movwf	??i1_LCDsend2x4
 17000  0AC3  0811               	movf	17,w	;volatile
 17001  0AC4  391F               	andlw	31
 17002  0AC5  0473               	iorwf	??i1_LCDsend2x4,w
 17003  0AC6  1D03               	btfss	3,2
 17004  0AC7  2AC9               	goto	u389_21
 17005  0AC8  2ACA               	goto	u389_20
 17006  0AC9                     u389_21:
 17007  0AC9  2ABE               	goto	i1l4890
 17008  0ACA                     u389_20:
 17009  0ACA                     i1l4892:
 17010                           
 17011                           ;LCD/lcd.c: 68:   WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 17012  0ACA  0876               	movf	i1LCDsend2x4@hc,w
 17013  0ACB  0472               	iorwf	i1LCDsend2x4@mode,w
 17014  0ACC  380C               	iorlw	12
 17015  0ACD  3195  253C  318A   	fcall	i1_WriteI2C
 17016  0AD0                     i1l4894:
 17017  0AD0  0023               	movlb	3	; select bank3
 17018  0AD1  0C0F               	rrf	15,w	;volatile
 17019  0AD2  0C89               	rrf	9,f
 17020  0AD3  3901               	andlw	1
 17021  0AD4  00F3               	movwf	??i1_LCDsend2x4
 17022  0AD5  0811               	movf	17,w	;volatile
 17023  0AD6  391F               	andlw	31
 17024  0AD7  0473               	iorwf	??i1_LCDsend2x4,w
 17025  0AD8  1D03               	btfss	3,2
 17026  0AD9  2ADB               	goto	u390_21
 17027  0ADA  2ADC               	goto	u390_20
 17028  0ADB                     u390_21:
 17029  0ADB  2AD0               	goto	i1l4894
 17030  0ADC                     u390_20:
 17031  0ADC                     i1l211:
 17032                           
 17033                           ;LCD/lcd.c: 69:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 17034  0ADC  0000               	nop
 17035  0ADD                     i1l4896:
 17036                           
 17037                           ;LCD/lcd.c: 70:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 17038  0ADD  0876               	movf	i1LCDsend2x4@hc,w
 17039  0ADE  0472               	iorwf	i1LCDsend2x4@mode,w
 17040  0ADF  3808               	iorlw	8
 17041  0AE0  3195  253C  318A   	fcall	i1_WriteI2C
 17042  0AE3                     i1l4898:
 17043  0AE3  0023               	movlb	3	; select bank3
 17044  0AE4  0C0F               	rrf	15,w	;volatile
 17045  0AE5  0C89               	rrf	9,f
 17046  0AE6  3901               	andlw	1
 17047  0AE7  00F3               	movwf	??i1_LCDsend2x4
 17048  0AE8  0811               	movf	17,w	;volatile
 17049  0AE9  391F               	andlw	31
 17050  0AEA  0473               	iorwf	??i1_LCDsend2x4,w
 17051  0AEB  1D03               	btfss	3,2
 17052  0AEC  2AEE               	goto	u391_21
 17053  0AED  2AEF               	goto	u391_20
 17054  0AEE                     u391_21:
 17055  0AEE  2AE3               	goto	i1l4898
 17056  0AEF                     u391_20:
 17057  0AEF                     i1l4900:
 17058                           
 17059                           ;LCD/lcd.c: 71:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 17060  0AEF  0877               	movf	i1LCDsend2x4@lc,w
 17061  0AF0  0472               	iorwf	i1LCDsend2x4@mode,w
 17062  0AF1  3808               	iorlw	8
 17063  0AF2  3195  253C  318A   	fcall	i1_WriteI2C
 17064  0AF5                     i1l4902:
 17065  0AF5  0023               	movlb	3	; select bank3
 17066  0AF6  0C0F               	rrf	15,w	;volatile
 17067  0AF7  0C89               	rrf	9,f
 17068  0AF8  3901               	andlw	1
 17069  0AF9  00F3               	movwf	??i1_LCDsend2x4
 17070  0AFA  0811               	movf	17,w	;volatile
 17071  0AFB  391F               	andlw	31
 17072  0AFC  0473               	iorwf	??i1_LCDsend2x4,w
 17073  0AFD  1D03               	btfss	3,2
 17074  0AFE  2B00               	goto	u392_21
 17075  0AFF  2B01               	goto	u392_20
 17076  0B00                     u392_21:
 17077  0B00  2AF5               	goto	i1l4902
 17078  0B01                     u392_20:
 17079  0B01                     i1l4904:
 17080                           
 17081                           ;LCD/lcd.c: 72:   WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 17082  0B01  0877               	movf	i1LCDsend2x4@lc,w
 17083  0B02  0472               	iorwf	i1LCDsend2x4@mode,w
 17084  0B03  380C               	iorlw	12
 17085  0B04  3195  253C  318A   	fcall	i1_WriteI2C
 17086  0B07                     i1l4906:
 17087  0B07  0023               	movlb	3	; select bank3
 17088  0B08  0C0F               	rrf	15,w	;volatile
 17089  0B09  0C89               	rrf	9,f
 17090  0B0A  3901               	andlw	1
 17091  0B0B  00F3               	movwf	??i1_LCDsend2x4
 17092  0B0C  0811               	movf	17,w	;volatile
 17093  0B0D  391F               	andlw	31
 17094  0B0E  0473               	iorwf	??i1_LCDsend2x4,w
 17095  0B0F  1D03               	btfss	3,2
 17096  0B10  2B12               	goto	u393_21
 17097  0B11  2B13               	goto	u393_20
 17098  0B12                     u393_21:
 17099  0B12  2B07               	goto	i1l4906
 17100  0B13                     u393_20:
 17101  0B13                     i1l220:
 17102                           
 17103                           ;LCD/lcd.c: 73:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 17104  0B13  0000               	nop
 17105  0B14                     i1l4908:
 17106                           
 17107                           ;LCD/lcd.c: 74:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 17108  0B14  0877               	movf	i1LCDsend2x4@lc,w
 17109  0B15  0472               	iorwf	i1LCDsend2x4@mode,w
 17110  0B16  3808               	iorlw	8
 17111  0B17  3195  253C  318A   	fcall	i1_WriteI2C
 17112  0B1A                     i1l4910:
 17113  0B1A  0023               	movlb	3	; select bank3
 17114  0B1B  0C0F               	rrf	15,w	;volatile
 17115  0B1C  0C89               	rrf	9,f
 17116  0B1D  3901               	andlw	1
 17117  0B1E  00F3               	movwf	??i1_LCDsend2x4
 17118  0B1F  0811               	movf	17,w	;volatile
 17119  0B20  391F               	andlw	31
 17120  0B21  0473               	iorwf	??i1_LCDsend2x4,w
 17121  0B22  1D03               	btfss	3,2
 17122  0B23  2B25               	goto	u394_21
 17123  0B24  2B26               	goto	u394_20
 17124  0B25                     u394_21:
 17125  0B25  2B1A               	goto	i1l4910
 17126  0B26                     u394_20:
 17127  0B26                     i1l224:	
 17128                           ;LCD/lcd.c: 75:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 17129                           
 17130  0B26  1511               	bsf	17,2	;volatile
 17131  0B27                     i1l225:
 17132  0B27  1911               	btfsc	17,2	;volatile
 17133  0B28  2B2A               	goto	u395_21
 17134  0B29  2B2B               	goto	u395_20
 17135  0B2A                     u395_21:
 17136  0B2A  2B27               	goto	i1l225
 17137  0B2B                     u395_20:
 17138  0B2B                     i1l4912:
 17139                           
 17140                           ;LCD/lcd.c: 76:   _delay((unsigned long)((50)*(4000000/4000000.0)));
 17141  0B2B  3010               	movlw	16
 17142  0B2C                     u592_27:
 17143  0B2C  0B89               	decfsz	9,f
 17144  0B2D  2B2C               	goto	u592_27
 17145  0B2E  3200               	nop2
 17146  0B2F                     i1l229:
 17147  0B2F  0008               	return
 17148  0B30                     __end_ofi1_LCDsend2x4:
 17149                           
 17150                           	psect	text52
 17151  12F7                     __ptext52:	
 17152 ;; *************** function _LCDbusy *****************
 17153 ;; Defined at:
 17154 ;;		line 119 in file "LCD/lcd.c"
 17155 ;; Parameters:    Size  Location     Type
 17156 ;;		None
 17157 ;; Auto vars:     Size  Location     Type
 17158 ;;		None
 17159 ;; Return value:  Size  Location     Type
 17160 ;;                  2    7[COMMON] int 
 17161 ;; Registers used:
 17162 ;;		wreg, status,2, status,0, pclath, cstack
 17163 ;; Tracked objects:
 17164 ;;		On entry : 0/0
 17165 ;;		On exit  : 0/0
 17166 ;;		Unchanged: 0/0
 17167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17171 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17172 ;;Total ram usage:        2 bytes
 17173 ;; Hardware stack levels used: 1
 17174 ;; Hardware stack levels required when called: 2
 17175 ;; This function calls:
 17176 ;;		_LCDrecv
 17177 ;; This function is called by:
 17178 ;;		_printLCD
 17179 ;; This function uses a non-reentrant model
 17180 ;;
 17181                           
 17182                           
 17183                           ;psect for function _LCDbusy
 17184  12F7                     _LCDbusy:
 17185  12F7                     i1l5002:	
 17186                           ;incstack = 0
 17187                           ; Regs used in _LCDbusy: [wreg+status,2+status,0+pclath+cstack]
 17188                           
 17189                           
 17190                           ;LCD/lcd.c: 121:   if(LCDrecv(0) & 0x80) return 1;
 17191  12F7  3000               	movlw	0
 17192  12F8  318E  26B8  3192   	fcall	_LCDrecv
 17193  12FB  3980               	andlw	128
 17194  12FC  1903               	btfsc	3,2
 17195  12FD  2AFF               	goto	u425_21
 17196  12FE  2B00               	goto	u425_20
 17197  12FF                     u425_21:
 17198  12FF  2B05               	goto	i1l5008
 17199  1300                     u425_20:
 17200  1300                     i1l5004:
 17201  1300  3001               	movlw	1
 17202  1301  00F7               	movwf	?_LCDbusy
 17203  1302  3000               	movlw	0
 17204  1303  00F8               	movwf	?_LCDbusy+1
 17205  1304  2B07               	goto	i1l248
 17206  1305                     i1l5008:
 17207                           
 17208                           ;LCD/lcd.c: 122:   return 0;
 17209  1305  01F7               	clrf	?_LCDbusy
 17210  1306  01F8               	clrf	?_LCDbusy+1
 17211  1307                     i1l248:
 17212  1307  0008               	return
 17213  1308                     __end_of_LCDbusy:
 17214                           
 17215                           	psect	text53
 17216  0EB8                     __ptext53:	
 17217 ;; *************** function _LCDrecv *****************
 17218 ;; Defined at:
 17219 ;;		line 25 in file "LCD/lcd.c"
 17220 ;; Parameters:    Size  Location     Type
 17221 ;;  mode            1    wreg     unsigned char 
 17222 ;; Auto vars:     Size  Location     Type
 17223 ;;  mode            1    6[COMMON] unsigned char 
 17224 ;;  lc              1    5[COMMON] unsigned char 
 17225 ;;  hc              1    4[COMMON] unsigned char 
 17226 ;; Return value:  Size  Location     Type
 17227 ;;                  1    wreg      unsigned char 
 17228 ;; Registers used:
 17229 ;;		wreg, status,2, status,0, pclath, cstack
 17230 ;; Tracked objects:
 17231 ;;		On entry : 0/0
 17232 ;;		On exit  : 0/0
 17233 ;;		Unchanged: 0/0
 17234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17236 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17237 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17238 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17239 ;;Total ram usage:        5 bytes
 17240 ;; Hardware stack levels used: 1
 17241 ;; Hardware stack levels required when called: 1
 17242 ;; This function calls:
 17243 ;;		_ReadI2C
 17244 ;;		i1_WriteI2C
 17245 ;; This function is called by:
 17246 ;;		_LCDbusy
 17247 ;; This function uses a non-reentrant model
 17248 ;;
 17249                           
 17250                           
 17251                           ;psect for function _LCDrecv
 17252  0EB8                     _LCDrecv:
 17253                           
 17254                           ;incstack = 0
 17255                           ; Regs used in _LCDrecv: [wreg+status,2+status,0+pclath+cstack]
 17256                           ;LCDrecv@mode stored from wreg
 17257  0EB8  00F6               	movwf	LCDrecv@mode
 17258  0EB9                     i1l4914:
 17259  0EB9                     i1l4916:	
 17260                           ;LCD/lcd.c: 25: unsigned char LCDrecv(unsigned char mode);LCD/lcd.c: 26: {;LCD/lcd.c: 27
      +                          :   unsigned char hc;;LCD/lcd.c: 28:   unsigned char lc;;LCD/lcd.c: 30:   while ((SSP1CO
      +                          N2 & 0x1F) | (SSP1STATbits.R_W));
 17261                           
 17262  0EB9  0023               	movlb	3	; select bank3
 17263  0EBA  0C0F               	rrf	15,w	;volatile
 17264  0EBB  0C89               	rrf	9,f
 17265  0EBC  3901               	andlw	1
 17266  0EBD  00F2               	movwf	??_LCDrecv
 17267  0EBE  0811               	movf	17,w	;volatile
 17268  0EBF  391F               	andlw	31
 17269  0EC0  0472               	iorwf	??_LCDrecv,w
 17270  0EC1  1D03               	btfss	3,2
 17271  0EC2  2EC4               	goto	u396_21
 17272  0EC3  2EC5               	goto	u396_20
 17273  0EC4                     u396_21:
 17274  0EC4  2EB9               	goto	i1l4916
 17275  0EC5                     u396_20:
 17276  0EC5                     i1l98:	
 17277                           ;LCD/lcd.c: 31:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17278                           
 17279  0EC5  1411               	bsf	17,0	;volatile
 17280  0EC6                     i1l99:
 17281  0EC6  1811               	btfsc	17,0	;volatile
 17282  0EC7  2EC9               	goto	u397_21
 17283  0EC8  2ECA               	goto	u397_20
 17284  0EC9                     u397_21:
 17285  0EC9  2EC6               	goto	i1l99
 17286  0ECA                     u397_20:
 17287  0ECA                     i1l4918:
 17288  0ECA  0C0F               	rrf	15,w	;volatile
 17289  0ECB  0C89               	rrf	9,f
 17290  0ECC  3901               	andlw	1
 17291  0ECD  00F2               	movwf	??_LCDrecv
 17292  0ECE  0811               	movf	17,w	;volatile
 17293  0ECF  391F               	andlw	31
 17294  0ED0  0472               	iorwf	??_LCDrecv,w
 17295  0ED1  1D03               	btfss	3,2
 17296  0ED2  2ED4               	goto	u398_21
 17297  0ED3  2ED5               	goto	u398_20
 17298  0ED4                     u398_21:
 17299  0ED4  2ECA               	goto	i1l4918
 17300  0ED5                     u398_20:
 17301  0ED5                     i1l4920:
 17302                           
 17303                           ;LCD/lcd.c: 32:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17304  0ED5  304E               	movlw	78
 17305  0ED6  3195  253C  318E   	fcall	i1_WriteI2C
 17306  0ED9                     i1l4922:
 17307  0ED9  0023               	movlb	3	; select bank3
 17308  0EDA  0C0F               	rrf	15,w	;volatile
 17309  0EDB  0C89               	rrf	9,f
 17310  0EDC  3901               	andlw	1
 17311  0EDD  00F2               	movwf	??_LCDrecv
 17312  0EDE  0811               	movf	17,w	;volatile
 17313  0EDF  391F               	andlw	31
 17314  0EE0  0472               	iorwf	??_LCDrecv,w
 17315  0EE1  1D03               	btfss	3,2
 17316  0EE2  2EE4               	goto	u399_21
 17317  0EE3  2EE5               	goto	u399_20
 17318  0EE4                     u399_21:
 17319  0EE4  2ED9               	goto	i1l4922
 17320  0EE5                     u399_20:
 17321  0EE5                     i1l4924:
 17322                           
 17323                           ;LCD/lcd.c: 33:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 17324  0EE5  0876               	movf	LCDrecv@mode,w
 17325  0EE6  38FA               	iorlw	250
 17326  0EE7  3195  253C  318E   	fcall	i1_WriteI2C
 17327  0EEA                     i1l4926:
 17328  0EEA  0023               	movlb	3	; select bank3
 17329  0EEB  0C0F               	rrf	15,w	;volatile
 17330  0EEC  0C89               	rrf	9,f
 17331  0EED  3901               	andlw	1
 17332  0EEE  00F2               	movwf	??_LCDrecv
 17333  0EEF  0811               	movf	17,w	;volatile
 17334  0EF0  391F               	andlw	31
 17335  0EF1  0472               	iorwf	??_LCDrecv,w
 17336  0EF2  1D03               	btfss	3,2
 17337  0EF3  2EF5               	goto	u400_21
 17338  0EF4  2EF6               	goto	u400_20
 17339  0EF5                     u400_21:
 17340  0EF5  2EEA               	goto	i1l4926
 17341  0EF6                     u400_20:
 17342  0EF6                     i1l4928:
 17343                           
 17344                           ;LCD/lcd.c: 34:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 17345  0EF6  0876               	movf	LCDrecv@mode,w
 17346  0EF7  38FE               	iorlw	254
 17347  0EF8  3195  253C  318E   	fcall	i1_WriteI2C
 17348  0EFB                     i1l4930:
 17349  0EFB  0023               	movlb	3	; select bank3
 17350  0EFC  0C0F               	rrf	15,w	;volatile
 17351  0EFD  0C89               	rrf	9,f
 17352  0EFE  3901               	andlw	1
 17353  0EFF  00F2               	movwf	??_LCDrecv
 17354  0F00  0811               	movf	17,w	;volatile
 17355  0F01  391F               	andlw	31
 17356  0F02  0472               	iorwf	??_LCDrecv,w
 17357  0F03  1D03               	btfss	3,2
 17358  0F04  2F06               	goto	u401_21
 17359  0F05  2F07               	goto	u401_20
 17360  0F06                     u401_21:
 17361  0F06  2EFB               	goto	i1l4930
 17362  0F07                     u401_20:
 17363  0F07                     i1l114:
 17364                           
 17365                           ;LCD/lcd.c: 35:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 17366  0F07  0000               	nop
 17367  0F08                     i1l115:	
 17368                           ;LCD/lcd.c: 36:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17369                           
 17370  0F08  0023               	movlb	3	; select bank3
 17371  0F09  1491               	bsf	17,1	;volatile
 17372  0F0A                     i1l116:
 17373  0F0A  1891               	btfsc	17,1	;volatile
 17374  0F0B  2F0D               	goto	u402_21
 17375  0F0C  2F0E               	goto	u402_20
 17376  0F0D                     u402_21:
 17377  0F0D  2F0A               	goto	i1l116
 17378  0F0E                     u402_20:
 17379  0F0E                     i1l4932:
 17380  0F0E  0C0F               	rrf	15,w	;volatile
 17381  0F0F  0C89               	rrf	9,f
 17382  0F10  3901               	andlw	1
 17383  0F11  00F2               	movwf	??_LCDrecv
 17384  0F12  0811               	movf	17,w	;volatile
 17385  0F13  391F               	andlw	31
 17386  0F14  0472               	iorwf	??_LCDrecv,w
 17387  0F15  1D03               	btfss	3,2
 17388  0F16  2F18               	goto	u403_21
 17389  0F17  2F19               	goto	u403_20
 17390  0F18                     u403_21:
 17391  0F18  2F0E               	goto	i1l4932
 17392  0F19                     u403_20:
 17393  0F19                     i1l4934:
 17394                           
 17395                           ;LCD/lcd.c: 37:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17396  0F19  304F               	movlw	79
 17397  0F1A  3195  253C  318E   	fcall	i1_WriteI2C
 17398  0F1D                     i1l4936:
 17399  0F1D  0023               	movlb	3	; select bank3
 17400  0F1E  0C0F               	rrf	15,w	;volatile
 17401  0F1F  0C89               	rrf	9,f
 17402  0F20  3901               	andlw	1
 17403  0F21  00F2               	movwf	??_LCDrecv
 17404  0F22  0811               	movf	17,w	;volatile
 17405  0F23  391F               	andlw	31
 17406  0F24  0472               	iorwf	??_LCDrecv,w
 17407  0F25  1D03               	btfss	3,2
 17408  0F26  2F28               	goto	u404_21
 17409  0F27  2F29               	goto	u404_20
 17410  0F28                     u404_21:
 17411  0F28  2F1D               	goto	i1l4936
 17412  0F29                     u404_20:
 17413  0F29                     i1l4938:
 17414                           
 17415                           ;LCD/lcd.c: 38:   hc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17416  0F29  3193  2369  318E   	fcall	_ReadI2C
 17417  0F2C  00F2               	movwf	??_LCDrecv
 17418  0F2D  0872               	movf	??_LCDrecv,w
 17419  0F2E  00F4               	movwf	LCDrecv@hc
 17420  0F2F                     i1l4940:
 17421  0F2F  0023               	movlb	3	; select bank3
 17422  0F30  0C0F               	rrf	15,w	;volatile
 17423  0F31  0C89               	rrf	9,f
 17424  0F32  3901               	andlw	1
 17425  0F33  00F2               	movwf	??_LCDrecv
 17426  0F34  0811               	movf	17,w	;volatile
 17427  0F35  391F               	andlw	31
 17428  0F36  0472               	iorwf	??_LCDrecv,w
 17429  0F37  1D03               	btfss	3,2
 17430  0F38  2F3A               	goto	u405_21
 17431  0F39  2F3B               	goto	u405_20
 17432  0F3A                     u405_21:
 17433  0F3A  2F2F               	goto	i1l4940
 17434  0F3B                     u405_20:
 17435  0F3B                     i1l129:	
 17436                           ;LCD/lcd.c: 39:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 17437                           
 17438  0F3B  1691               	bsf	17,5	;volatile
 17439  0F3C  1611               	bsf	17,4	;volatile
 17440  0F3D                     i1l130:
 17441  0F3D  1A11               	btfsc	17,4	;volatile
 17442  0F3E  2F40               	goto	u406_21
 17443  0F3F  2F41               	goto	u406_20
 17444  0F40                     u406_21:
 17445  0F40  2F3D               	goto	i1l130
 17446  0F41                     u406_20:
 17447  0F41                     i1l134:	
 17448                           ;LCD/lcd.c: 40:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17449                           
 17450  0F41  1491               	bsf	17,1	;volatile
 17451  0F42                     i1l135:
 17452  0F42  1891               	btfsc	17,1	;volatile
 17453  0F43  2F45               	goto	u407_21
 17454  0F44  2F46               	goto	u407_20
 17455  0F45                     u407_21:
 17456  0F45  2F42               	goto	i1l135
 17457  0F46                     u407_20:
 17458  0F46                     i1l4942:
 17459  0F46  0C0F               	rrf	15,w	;volatile
 17460  0F47  0C89               	rrf	9,f
 17461  0F48  3901               	andlw	1
 17462  0F49  00F2               	movwf	??_LCDrecv
 17463  0F4A  0811               	movf	17,w	;volatile
 17464  0F4B  391F               	andlw	31
 17465  0F4C  0472               	iorwf	??_LCDrecv,w
 17466  0F4D  1D03               	btfss	3,2
 17467  0F4E  2F50               	goto	u408_21
 17468  0F4F  2F51               	goto	u408_20
 17469  0F50                     u408_21:
 17470  0F50  2F46               	goto	i1l4942
 17471  0F51                     u408_20:
 17472  0F51                     i1l4944:
 17473                           
 17474                           ;LCD/lcd.c: 41:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17475  0F51  304E               	movlw	78
 17476  0F52  3195  253C  318E   	fcall	i1_WriteI2C
 17477  0F55                     i1l4946:
 17478  0F55  0023               	movlb	3	; select bank3
 17479  0F56  0C0F               	rrf	15,w	;volatile
 17480  0F57  0C89               	rrf	9,f
 17481  0F58  3901               	andlw	1
 17482  0F59  00F2               	movwf	??_LCDrecv
 17483  0F5A  0811               	movf	17,w	;volatile
 17484  0F5B  391F               	andlw	31
 17485  0F5C  0472               	iorwf	??_LCDrecv,w
 17486  0F5D  1D03               	btfss	3,2
 17487  0F5E  2F60               	goto	u409_21
 17488  0F5F  2F61               	goto	u409_20
 17489  0F60                     u409_21:
 17490  0F60  2F55               	goto	i1l4946
 17491  0F61                     u409_20:
 17492  0F61                     i1l4948:
 17493                           
 17494                           ;LCD/lcd.c: 42:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 17495  0F61  0876               	movf	LCDrecv@mode,w
 17496  0F62  38FA               	iorlw	250
 17497  0F63  3195  253C  318E   	fcall	i1_WriteI2C
 17498  0F66                     i1l4950:
 17499  0F66  0023               	movlb	3	; select bank3
 17500  0F67  0C0F               	rrf	15,w	;volatile
 17501  0F68  0C89               	rrf	9,f
 17502  0F69  3901               	andlw	1
 17503  0F6A  00F2               	movwf	??_LCDrecv
 17504  0F6B  0811               	movf	17,w	;volatile
 17505  0F6C  391F               	andlw	31
 17506  0F6D  0472               	iorwf	??_LCDrecv,w
 17507  0F6E  1D03               	btfss	3,2
 17508  0F6F  2F71               	goto	u410_21
 17509  0F70  2F72               	goto	u410_20
 17510  0F71                     u410_21:
 17511  0F71  2F66               	goto	i1l4950
 17512  0F72                     u410_20:
 17513  0F72                     i1l4952:
 17514                           
 17515                           ;LCD/lcd.c: 43:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 17516  0F72  0876               	movf	LCDrecv@mode,w
 17517  0F73  38FE               	iorlw	254
 17518  0F74  3195  253C  318E   	fcall	i1_WriteI2C
 17519  0F77                     i1l4954:
 17520  0F77  0023               	movlb	3	; select bank3
 17521  0F78  0C0F               	rrf	15,w	;volatile
 17522  0F79  0C89               	rrf	9,f
 17523  0F7A  3901               	andlw	1
 17524  0F7B  00F2               	movwf	??_LCDrecv
 17525  0F7C  0811               	movf	17,w	;volatile
 17526  0F7D  391F               	andlw	31
 17527  0F7E  0472               	iorwf	??_LCDrecv,w
 17528  0F7F  1D03               	btfss	3,2
 17529  0F80  2F82               	goto	u411_21
 17530  0F81  2F83               	goto	u411_20
 17531  0F82                     u411_21:
 17532  0F82  2F77               	goto	i1l4954
 17533  0F83                     u411_20:
 17534  0F83                     i1l150:
 17535                           
 17536                           ;LCD/lcd.c: 44:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 17537  0F83  0000               	nop
 17538  0F84                     i1l151:	
 17539                           ;LCD/lcd.c: 45:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17540                           
 17541  0F84  0023               	movlb	3	; select bank3
 17542  0F85  1491               	bsf	17,1	;volatile
 17543  0F86                     i1l152:
 17544  0F86  1891               	btfsc	17,1	;volatile
 17545  0F87  2F89               	goto	u412_21
 17546  0F88  2F8A               	goto	u412_20
 17547  0F89                     u412_21:
 17548  0F89  2F86               	goto	i1l152
 17549  0F8A                     u412_20:
 17550  0F8A                     i1l4956:
 17551  0F8A  0C0F               	rrf	15,w	;volatile
 17552  0F8B  0C89               	rrf	9,f
 17553  0F8C  3901               	andlw	1
 17554  0F8D  00F2               	movwf	??_LCDrecv
 17555  0F8E  0811               	movf	17,w	;volatile
 17556  0F8F  391F               	andlw	31
 17557  0F90  0472               	iorwf	??_LCDrecv,w
 17558  0F91  1D03               	btfss	3,2
 17559  0F92  2F94               	goto	u413_21
 17560  0F93  2F95               	goto	u413_20
 17561  0F94                     u413_21:
 17562  0F94  2F8A               	goto	i1l4956
 17563  0F95                     u413_20:
 17564  0F95                     i1l4958:
 17565                           
 17566                           ;LCD/lcd.c: 46:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17567  0F95  304F               	movlw	79
 17568  0F96  3195  253C  318E   	fcall	i1_WriteI2C
 17569  0F99                     i1l4960:
 17570  0F99  0023               	movlb	3	; select bank3
 17571  0F9A  0C0F               	rrf	15,w	;volatile
 17572  0F9B  0C89               	rrf	9,f
 17573  0F9C  3901               	andlw	1
 17574  0F9D  00F2               	movwf	??_LCDrecv
 17575  0F9E  0811               	movf	17,w	;volatile
 17576  0F9F  391F               	andlw	31
 17577  0FA0  0472               	iorwf	??_LCDrecv,w
 17578  0FA1  1D03               	btfss	3,2
 17579  0FA2  2FA4               	goto	u414_21
 17580  0FA3  2FA5               	goto	u414_20
 17581  0FA4                     u414_21:
 17582  0FA4  2F99               	goto	i1l4960
 17583  0FA5                     u414_20:
 17584  0FA5                     i1l4962:
 17585                           
 17586                           ;LCD/lcd.c: 47:   lc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17587  0FA5  3193  2369  318E   	fcall	_ReadI2C
 17588  0FA8  00F2               	movwf	??_LCDrecv
 17589  0FA9  0872               	movf	??_LCDrecv,w
 17590  0FAA  00F5               	movwf	LCDrecv@lc
 17591  0FAB                     i1l4964:
 17592  0FAB  0023               	movlb	3	; select bank3
 17593  0FAC  0C0F               	rrf	15,w	;volatile
 17594  0FAD  0C89               	rrf	9,f
 17595  0FAE  3901               	andlw	1
 17596  0FAF  00F2               	movwf	??_LCDrecv
 17597  0FB0  0811               	movf	17,w	;volatile
 17598  0FB1  391F               	andlw	31
 17599  0FB2  0472               	iorwf	??_LCDrecv,w
 17600  0FB3  1D03               	btfss	3,2
 17601  0FB4  2FB6               	goto	u415_21
 17602  0FB5  2FB7               	goto	u415_20
 17603  0FB6                     u415_21:
 17604  0FB6  2FAB               	goto	i1l4964
 17605  0FB7                     u415_20:
 17606  0FB7                     i1l165:	
 17607                           ;LCD/lcd.c: 48:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 17608                           
 17609  0FB7  1691               	bsf	17,5	;volatile
 17610  0FB8  1611               	bsf	17,4	;volatile
 17611  0FB9                     i1l166:
 17612  0FB9  1A11               	btfsc	17,4	;volatile
 17613  0FBA  2FBC               	goto	u416_21
 17614  0FBB  2FBD               	goto	u416_20
 17615  0FBC                     u416_21:
 17616  0FBC  2FB9               	goto	i1l166
 17617  0FBD                     u416_20:
 17618  0FBD                     i1l170:	
 17619                           ;LCD/lcd.c: 49:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17620                           
 17621  0FBD  1491               	bsf	17,1	;volatile
 17622  0FBE                     i1l171:
 17623  0FBE  1891               	btfsc	17,1	;volatile
 17624  0FBF  2FC1               	goto	u417_21
 17625  0FC0  2FC2               	goto	u417_20
 17626  0FC1                     u417_21:
 17627  0FC1  2FBE               	goto	i1l171
 17628  0FC2                     u417_20:
 17629  0FC2                     i1l4966:
 17630  0FC2  0C0F               	rrf	15,w	;volatile
 17631  0FC3  0C89               	rrf	9,f
 17632  0FC4  3901               	andlw	1
 17633  0FC5  00F2               	movwf	??_LCDrecv
 17634  0FC6  0811               	movf	17,w	;volatile
 17635  0FC7  391F               	andlw	31
 17636  0FC8  0472               	iorwf	??_LCDrecv,w
 17637  0FC9  1D03               	btfss	3,2
 17638  0FCA  2FCC               	goto	u418_21
 17639  0FCB  2FCD               	goto	u418_20
 17640  0FCC                     u418_21:
 17641  0FCC  2FC2               	goto	i1l4966
 17642  0FCD                     u418_20:
 17643  0FCD                     i1l4968:
 17644                           
 17645                           ;LCD/lcd.c: 50:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17646  0FCD  304E               	movlw	78
 17647  0FCE  3195  253C  318E   	fcall	i1_WriteI2C
 17648  0FD1                     i1l4970:
 17649  0FD1  0023               	movlb	3	; select bank3
 17650  0FD2  0C0F               	rrf	15,w	;volatile
 17651  0FD3  0C89               	rrf	9,f
 17652  0FD4  3901               	andlw	1
 17653  0FD5  00F2               	movwf	??_LCDrecv
 17654  0FD6  0811               	movf	17,w	;volatile
 17655  0FD7  391F               	andlw	31
 17656  0FD8  0472               	iorwf	??_LCDrecv,w
 17657  0FD9  1D03               	btfss	3,2
 17658  0FDA  2FDC               	goto	u419_21
 17659  0FDB  2FDD               	goto	u419_20
 17660  0FDC                     u419_21:
 17661  0FDC  2FD1               	goto	i1l4970
 17662  0FDD                     u419_20:
 17663  0FDD                     i1l4972:
 17664                           
 17665                           ;LCD/lcd.c: 51:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 17666  0FDD  0876               	movf	LCDrecv@mode,w
 17667  0FDE  38FA               	iorlw	250
 17668  0FDF  3195  253C  318E   	fcall	i1_WriteI2C
 17669  0FE2                     i1l4974:
 17670  0FE2  0023               	movlb	3	; select bank3
 17671  0FE3  0C0F               	rrf	15,w	;volatile
 17672  0FE4  0C89               	rrf	9,f
 17673  0FE5  3901               	andlw	1
 17674  0FE6  00F2               	movwf	??_LCDrecv
 17675  0FE7  0811               	movf	17,w	;volatile
 17676  0FE8  391F               	andlw	31
 17677  0FE9  0472               	iorwf	??_LCDrecv,w
 17678  0FEA  1D03               	btfss	3,2
 17679  0FEB  2FED               	goto	u420_21
 17680  0FEC  2FEE               	goto	u420_20
 17681  0FED                     u420_21:
 17682  0FED  2FE2               	goto	i1l4974
 17683  0FEE                     u420_20:
 17684  0FEE                     i1l184:	
 17685                           ;LCD/lcd.c: 52:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 17686                           
 17687  0FEE  1511               	bsf	17,2	;volatile
 17688  0FEF                     i1l185:
 17689  0FEF  1911               	btfsc	17,2	;volatile
 17690  0FF0  2FF2               	goto	u421_21
 17691  0FF1  2FF3               	goto	u421_20
 17692  0FF2                     u421_21:
 17693  0FF2  2FEF               	goto	i1l185
 17694  0FF3                     u421_20:
 17695  0FF3                     i1l4976:
 17696                           
 17697                           ;LCD/lcd.c: 53:   return ((hc&0xf0) | ((lc>>4)&0x0f));
 17698  0FF3  0875               	movf	LCDrecv@lc,w
 17699  0FF4  00F2               	movwf	??_LCDrecv
 17700  0FF5  3004               	movlw	4
 17701  0FF6                     u422_25:
 17702  0FF6  36F2               	lsrf	??_LCDrecv,f
 17703  0FF7  0B89               	decfsz	9,f
 17704  0FF8  2FF6               	goto	u422_25
 17705  0FF9  300F               	movlw	15
 17706  0FFA  0572               	andwf	??_LCDrecv,w
 17707  0FFB  00F3               	movwf	??_LCDrecv+1
 17708  0FFC  0874               	movf	LCDrecv@hc,w
 17709  0FFD  39F0               	andlw	240
 17710  0FFE  0473               	iorwf	??_LCDrecv+1,w
 17711  0FFF                     i1l189:
 17712  0FFF  0008               	return
 17713  1000                     __end_of_LCDrecv:
 17714                           
 17715                           	psect	text54
 17716  153C                     __ptext54:	
 17717 ;; *************** function i1_WriteI2C *****************
 17718 ;; Defined at:
 17719 ;;		line 59 in file "I2C/i2c.c"
 17720 ;; Parameters:    Size  Location     Type
 17721 ;;  data_out        1    wreg     unsigned char 
 17722 ;; Auto vars:     Size  Location     Type
 17723 ;;  data_out        1    1[COMMON] unsigned char 
 17724 ;; Return value:  Size  Location     Type
 17725 ;;                  1    wreg      char 
 17726 ;; Registers used:
 17727 ;;		wreg, status,2, status,0
 17728 ;; Tracked objects:
 17729 ;;		On entry : 0/0
 17730 ;;		On exit  : 0/0
 17731 ;;		Unchanged: 0/0
 17732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17735 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17737 ;;Total ram usage:        2 bytes
 17738 ;; Hardware stack levels used: 1
 17739 ;; This function calls:
 17740 ;;		Nothing
 17741 ;; This function is called by:
 17742 ;;		_LCDrecv
 17743 ;;		_readTC74
 17744 ;;		i1_LCDsend2x4
 17745 ;; This function uses a non-reentrant model
 17746 ;;
 17747                           
 17748                           
 17749                           ;psect for function i1_WriteI2C
 17750  153C                     i1_WriteI2C:
 17751                           
 17752                           ;incstack = 0
 17753                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 17754                           ;i1WriteI2C@data_out stored from wreg
 17755  153C  00F1               	movwf	i1WriteI2C@data_out
 17756  153D                     i1l4736:
 17757                           
 17758                           ;I2C/i2c.c: 59: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 60: {;I2C/i2c.
      +                          c: 61:   SSP1BUF = data_out;
 17759  153D  0871               	movf	i1WriteI2C@data_out,w
 17760  153E  0023               	movlb	3	; select bank3
 17761  153F  008C               	movwf	12	;volatile
 17762  1540                     i1l4738:
 17763                           
 17764                           ;I2C/i2c.c: 62:   if ( SSP1CON1bits.WCOL )
 17765  1540  1F90               	btfss	16,7	;volatile
 17766  1541  2D43               	goto	u360_21
 17767  1542  2D44               	goto	u360_20
 17768  1543                     u360_21:
 17769  1543  2D45               	goto	i1l4744
 17770  1544                     u360_20:
 17771  1544  2D86               	goto	i1l36
 17772  1545                     i1l4744:
 17773                           
 17774                           ;I2C/i2c.c: 65:   {;I2C/i2c.c: 66:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 17775  1545  300F               	movlw	15
 17776  1546  0510               	andwf	16,w	;volatile
 17777  1547  00F0               	movwf	??i1_WriteI2C
 17778  1548  3008               	movlw	8
 17779  1549  0670               	xorwf	??i1_WriteI2C,w
 17780  154A  1903               	btfsc	3,2
 17781  154B  2D4D               	goto	u361_21
 17782  154C  2D4E               	goto	u361_20
 17783  154D                     u361_21:
 17784  154D  2D64               	goto	i1l4756
 17785  154E                     u361_20:
 17786  154E                     i1l4746:
 17787  154E  300F               	movlw	15
 17788  154F  0510               	andwf	16,w	;volatile
 17789  1550  00F0               	movwf	??i1_WriteI2C
 17790  1551  300B               	movlw	11
 17791  1552  0670               	xorwf	??i1_WriteI2C,w
 17792  1553  1903               	btfsc	3,2
 17793  1554  2D56               	goto	u362_21
 17794  1555  2D57               	goto	u362_20
 17795  1556                     u362_21:
 17796  1556  2D64               	goto	i1l4756
 17797  1557                     u362_20:
 17798  1557                     i1l4748:
 17799                           
 17800                           ;I2C/i2c.c: 67:  {;I2C/i2c.c: 68:        SSP1CON1bits.CKP = 1;
 17801  1557  1610               	bsf	16,4	;volatile
 17802  1558                     i1l39:	
 17803                           ;I2C/i2c.c: 69:        while ( !PIR3bits.SSP1IF );
 17804                           
 17805  1558  002E               	movlb	14	; select bank14
 17806  1559  1C0F               	btfss	15,0	;volatile
 17807  155A  2D5C               	goto	u363_21
 17808  155B  2D5D               	goto	u363_20
 17809  155C                     u363_21:
 17810  155C  2D58               	goto	i1l39
 17811  155D                     u363_20:
 17812  155D                     i1l41:
 17813                           
 17814                           ;I2C/i2c.c: 71:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 17815  155D  0023               	movlb	3	; select bank3
 17816  155E  190F               	btfsc	15,2	;volatile
 17817  155F  2D61               	goto	u364_21
 17818  1560  2D62               	goto	u364_20
 17819  1561                     u364_21:
 17820  1561  2D86               	goto	i1l36
 17821  1562                     u364_20:
 17822  1562                     i1l4750:
 17823  1562  080F               	movf	15,w	;volatile
 17824  1563  2D86               	goto	i1l36
 17825  1564                     i1l4756:
 17826  1564  300F               	movlw	15
 17827  1565  0510               	andwf	16,w	;volatile
 17828  1566  00F0               	movwf	??i1_WriteI2C
 17829  1567  3008               	movlw	8
 17830  1568  0670               	xorwf	??i1_WriteI2C,w
 17831  1569  1903               	btfsc	3,2
 17832  156A  2D6C               	goto	u365_21
 17833  156B  2D6D               	goto	u365_20
 17834  156C                     u365_21:
 17835  156C  2D76               	goto	i1l48
 17836  156D                     u365_20:
 17837  156D                     i1l4758:
 17838  156D  300F               	movlw	15
 17839  156E  0510               	andwf	16,w	;volatile
 17840  156F  00F0               	movwf	??i1_WriteI2C
 17841  1570  300B               	movlw	11
 17842  1571  0670               	xorwf	??i1_WriteI2C,w
 17843  1572  1D03               	btfss	3,2
 17844  1573  2D75               	goto	u366_21
 17845  1574  2D76               	goto	u366_20
 17846  1575                     u366_21:
 17847  1575  2D86               	goto	i1l36
 17848  1576                     u366_20:
 17849  1576                     i1l48:
 17850  1576  180F               	btfsc	15,0	;volatile
 17851  1577  2D79               	goto	u367_21
 17852  1578  2D7A               	goto	u367_20
 17853  1579                     u367_21:
 17854  1579  2D76               	goto	i1l48
 17855  157A                     u367_20:
 17856  157A                     i1l4760:
 17857  157A  0C0F               	rrf	15,w	;volatile
 17858  157B  0C89               	rrf	9,f
 17859  157C  3901               	andlw	1
 17860  157D  00F0               	movwf	??i1_WriteI2C
 17861  157E  0811               	movf	17,w	;volatile
 17862  157F  391F               	andlw	31
 17863  1580  0470               	iorwf	??i1_WriteI2C,w
 17864  1581  1D03               	btfss	3,2
 17865  1582  2D84               	goto	u368_21
 17866  1583  2D85               	goto	u368_20
 17867  1584                     u368_21:
 17868  1584  2D7A               	goto	i1l4760
 17869  1585                     u368_20:
 17870  1585                     i1l53:
 17871                           
 17872                           ;I2C/i2c.c: 84:      if ( SSP1CON2bits.ACKSTAT )
 17873  1585  0811               	movf	17,w	;volatile
 17874  1586                     i1l36:
 17875  1586  0008               	return
 17876  1587                     __end_ofi1_WriteI2C:
 17877                           
 17878                           	psect	text55
 17879  1369                     __ptext55:	
 17880 ;; *************** function _ReadI2C *****************
 17881 ;; Defined at:
 17882 ;;		line 44 in file "I2C/i2c.c"
 17883 ;; Parameters:    Size  Location     Type
 17884 ;;		None
 17885 ;; Auto vars:     Size  Location     Type
 17886 ;;		None
 17887 ;; Return value:  Size  Location     Type
 17888 ;;                  1    wreg      unsigned char 
 17889 ;; Registers used:
 17890 ;;		wreg, status,2, status,0
 17891 ;; Tracked objects:
 17892 ;;		On entry : 0/0
 17893 ;;		On exit  : 0/0
 17894 ;;		Unchanged: 0/0
 17895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17898 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17899 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17900 ;;Total ram usage:        1 bytes
 17901 ;; Hardware stack levels used: 1
 17902 ;; This function calls:
 17903 ;;		Nothing
 17904 ;; This function is called by:
 17905 ;;		_LCDrecv
 17906 ;;		_readTC74
 17907 ;; This function uses a non-reentrant model
 17908 ;;
 17909                           
 17910                           
 17911                           ;psect for function _ReadI2C
 17912  1369                     _ReadI2C:
 17913  1369                     i1l4766:	
 17914                           ;incstack = 0
 17915                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 17916                           
 17917                           
 17918                           ;I2C/i2c.c: 46: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 17919  1369  300F               	movlw	15
 17920  136A  0023               	movlb	3	; select bank3
 17921  136B  0510               	andwf	16,w	;volatile
 17922  136C  00F0               	movwf	??_ReadI2C
 17923  136D  3008               	movlw	8
 17924  136E  0670               	xorwf	??_ReadI2C,w
 17925  136F  1903               	btfsc	3,2
 17926  1370  2B72               	goto	u369_21
 17927  1371  2B73               	goto	u369_20
 17928  1372                     u369_21:
 17929  1372  2B7C               	goto	i1l28
 17930  1373                     u369_20:
 17931  1373                     i1l4768:
 17932  1373  300F               	movlw	15
 17933  1374  0510               	andwf	16,w	;volatile
 17934  1375  00F0               	movwf	??_ReadI2C
 17935  1376  300B               	movlw	11
 17936  1377  0670               	xorwf	??_ReadI2C,w
 17937  1378  1D03               	btfss	3,2
 17938  1379  2B7B               	goto	u370_21
 17939  137A  2B7C               	goto	u370_20
 17940  137B                     u370_21:
 17941  137B  2B7D               	goto	i1l29
 17942  137C                     u370_20:
 17943  137C                     i1l28:
 17944                           
 17945                           ;I2C/i2c.c: 47:   SSP1CON2bits.RCEN = 1;
 17946  137C  1591               	bsf	17,3	;volatile
 17947  137D                     i1l29:
 17948  137D  1C0F               	btfss	15,0	;volatile
 17949  137E  2B80               	goto	u371_21
 17950  137F  2B81               	goto	u371_20
 17951  1380                     u371_21:
 17952  1380  2B7D               	goto	i1l29
 17953  1381                     u371_20:
 17954  1381                     i1l4770:
 17955                           
 17956                           ;I2C/i2c.c: 49:   return ( SSP1BUF );
 17957  1381  080C               	movf	12,w	;volatile
 17958  1382                     i1l32:
 17959  1382  0008               	return
 17960  1383                     __end_of_ReadI2C:
 17961                           
 17962                           	psect	text56
 17963  1319                     __ptext56:	
 17964 ;; *************** function _ADCC_GetSingleConversion *****************
 17965 ;; Defined at:
 17966 ;;		line 132 in file "mcc_generated_files/adcc.c"
 17967 ;; Parameters:    Size  Location     Type
 17968 ;;  channel         1    wreg     enum E12206
 17969 ;; Auto vars:     Size  Location     Type
 17970 ;;  channel         1    2[COMMON] enum E12206
 17971 ;; Return value:  Size  Location     Type
 17972 ;;                  2    0[COMMON] unsigned short 
 17973 ;; Registers used:
 17974 ;;		wreg
 17975 ;; Tracked objects:
 17976 ;;		On entry : 0/0
 17977 ;;		On exit  : 0/0
 17978 ;;		Unchanged: 0/0
 17979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17980 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17983 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17984 ;;Total ram usage:        3 bytes
 17985 ;; Hardware stack levels used: 1
 17986 ;; This function calls:
 17987 ;;		Nothing
 17988 ;; This function is called by:
 17989 ;;		_timerInterrupt
 17990 ;; This function uses a non-reentrant model
 17991 ;;
 17992                           
 17993                           
 17994                           ;psect for function _ADCC_GetSingleConversion
 17995  1319                     _ADCC_GetSingleConversion:
 17996                           
 17997                           ;incstack = 0
 17998                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 17999                           ;ADCC_GetSingleConversion@channel stored from wreg
 18000  1319  00F2               	movwf	ADCC_GetSingleConversion@channel
 18001  131A                     i1l5044:
 18002                           
 18003                           ;mcc_generated_files/adcc.c: 132: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 133: {;mcc_generated_files/adcc.c: 135:     ADPCH = 
      +                          channel;
 18004  131A  0872               	movf	ADCC_GetSingleConversion@channel,w
 18005  131B  0021               	movlb	1	; select bank1
 18006  131C  009E               	movwf	30	;volatile
 18007  131D                     i1l5046:
 18008                           
 18009                           ;mcc_generated_files/adcc.c: 138:     ADCON0bits.ADON = 1;
 18010  131D  1793               	bsf	19,7	;volatile
 18011  131E                     i1l5048:
 18012                           
 18013                           ;mcc_generated_files/adcc.c: 141:     ADCON0bits.ADCONT = 0;
 18014  131E  1313               	bcf	19,6	;volatile
 18015  131F                     i1l5050:
 18016                           
 18017                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADGO = 1;
 18018  131F  1413               	bsf	19,0	;volatile
 18019  1320                     i1l5052:
 18020                           
 18021                           ;mcc_generated_files/adcc.c: 147:     __nop();
 18022  1320  0000               	nop
 18023  1321                     i1l655:	
 18024                           ;mcc_generated_files/adcc.c: 151:     {;mcc_generated_files/adcc.c: 152:     }
 18025                           
 18026                           
 18027                           ;mcc_generated_files/adcc.c: 150:     while (ADCON0bits.ADGO)
 18028  1321  0021               	movlb	1	; select bank1
 18029  1322  1813               	btfsc	19,0	;volatile
 18030  1323  2B25               	goto	u427_21
 18031  1324  2B26               	goto	u427_20
 18032  1325                     u427_21:
 18033  1325  2B21               	goto	i1l655
 18034  1326                     u427_20:
 18035  1326                     i1l5054:
 18036                           
 18037                           ;mcc_generated_files/adcc.c: 156:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 18038  1326  080D               	movf	13,w	;volatile
 18039  1327  00F1               	movwf	?_ADCC_GetSingleConversion+1
 18040  1328  080C               	movf	12,w	;volatile
 18041  1329  00F0               	movwf	?_ADCC_GetSingleConversion
 18042  132A                     i1l658:
 18043  132A  0008               	return
 18044  132B                     __end_of_ADCC_GetSingleConversion:
 18045  007E                     btemp	set	126	;btemp
 18046  007E                     int$flags	set	126
 18047  007E                     wtemp0	set	126
 18048                           
 18049                           	psect	config
 18050                           
 18051                           ;Config register CONFIG1 @ 0x8007
 18052                           ;	External Oscillator mode selection bits
 18053                           ;	FEXTOSC = OFF, Oscillator not enabled
 18054                           ;	Power-up default value for COSC bits
 18055                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 18056                           ;	Clock Out Enable bit
 18057                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 18058                           ;	Clock Switch Enable bit
 18059                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 18060                           ;	Fail-Safe Clock Monitor Enable bit
 18061                           ;	FCMEN = ON, FSCM timer enabled
 18062  8007                     	org	32775
 18063  8007  3FEC               	dw	16364
 18064                           
 18065                           ;Config register CONFIG2 @ 0x8008
 18066                           ;	Master Clear Enable bit
 18067                           ;	MCLRE = ON, MCLR pin is Master Clear function
 18068                           ;	Power-up Timer Enable bit
 18069                           ;	PWRTE = OFF, PWRT disabled
 18070                           ;	Low-Power BOR enable bit
 18071                           ;	LPBOREN = OFF, ULPBOR disabled
 18072                           ;	Brown-out reset enable bits
 18073                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 18074                           ;	Brown-out Reset Voltage Selection
 18075                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 18076                           ;	Zero-cross detect disable
 18077                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 18078                           ;	Peripheral Pin Select one-way control
 18079                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 18080                           ;	Stack Overflow/Underflow Reset Enable bit
 18081                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 18082                           ;	Background Debugger
 18083                           ;	DEBUG = OFF, Background Debugger disabled
 18084  8008                     	org	32776
 18085  8008  3FFF               	dw	16383
 18086                           
 18087                           ;Config register CONFIG3 @ 0x8009
 18088                           ;	WDT Period Select bits
 18089                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 18090                           ;	WDT operating mode
 18091                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 18092                           ;	WDT Window Select bits
 18093                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 18094                           ;	WDT input clock selector
 18095                           ;	WDTCCS = SC, Software Control
 18096  8009                     	org	32777
 18097  8009  3F9F               	dw	16287
 18098                           
 18099                           ;Config register CONFIG4 @ 0x800A
 18100                           ;	UserNVM self-write protection bits
 18101                           ;	WRT = OFF, Write protection off
 18102                           ;	Scanner Enable bit
 18103                           ;	SCANE = available, Scanner module is available for use
 18104                           ;	Low Voltage Programming Enable bit
 18105                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 18106  800A                     	org	32778
 18107  800A  3FFF               	dw	16383
 18108                           
 18109                           ;Config register CONFIG5 @ 0x800B
 18110                           ;	UserNVM Program memory code protection bit
 18111                           ;	CP = OFF, Program Memory code protection disabled
 18112                           ;	DataNVM code protection bit
 18113                           ;	CPD = OFF, Data EEPROM code protection disabled
 18114  800B                     	org	32779
 18115  800B  3FFF               	dw	16383

Data Sizes:
    Strings     45
    Constant    32
    Data        0
    BSS         82
    Persistent  46
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     66      80
    BANK2            80     41      60
    BANK3            80      0      61
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$3414$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1485$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 33
		 -> printLCD@buf(BANK1[33]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[22]), STR_1(CODE[23]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[22]), STR_1(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[22]), STR_1(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[22]), STR_1(CODE[23]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 33
		 -> printLCD@buf(BANK1[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2851_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 33
		 -> printLCD@buf(BANK1[33]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 33
		 -> printLCD@buf(BANK1[33]), 

    parseEPROMInitialization@checksum	PTR unsigned char  size(1) Largest target is 1
		 -> main@checksum(BANK2[1]), 

    parseEPROMInitialization@CLKM	PTR unsigned char  size(1) Largest target is 1
		 -> main@CLKM(BANK2[1]), 

    parseEPROMInitialization@CLKH	PTR unsigned char  size(1) Largest target is 1
		 -> main@CLKH(BANK2[1]), 

    parseEPROMInitialization@ALAF	PTR unsigned char  size(1) Largest target is 1
		 -> main@ALAF(BANK2[1]), 

    parseEPROMInitialization@ALAL	PTR unsigned char  size(1) Largest target is 1
		 -> main@ALAL(BANK2[1]), 

    parseEPROMInitialization@ALAT	PTR unsigned char  size(1) Largest target is 1
		 -> main@ALAT(BANK2[1]), 

    parseEPROMInitialization@TALA	PTR unsigned char  size(1) Largest target is 1
		 -> main@TALA(BANK2[1]), 

    parseEPROMInitialization@PMON	PTR unsigned char  size(1) Largest target is 1
		 -> main@PMON(BANK2[1]), 

    parseEPROMInitialization@RI	PTR unsigned char  size(1) Largest target is 1
		 -> main@RI(BANK2[1]), 

    parseEPROMInitialization@WI	PTR unsigned char  size(1) Largest target is 1
		 -> main@WI(BANK2[1]), 

    parseEPROMInitialization@NR	PTR unsigned char  size(1) Largest target is 1
		 -> main@NR(BANK2[1]), 

    parseEPROMInitialization@NREG	PTR unsigned char  size(1) Largest target is 1
		 -> main@NREG(BANK2[1]), 

    parseEPROMInitialization@magic_word	PTR unsigned char  size(1) Largest target is 1
		 -> main@magic_word(BANK2[1]), 

    S1485$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1485$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1485$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12595[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerInterrupt(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerInterrupt(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    S679$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    LCDstr@p	PTR unsigned char  size(1) Largest target is 33
		 -> printLCD@buf(BANK1[33]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _writeRingBuffer->i1_DATAEE_WriteByte
    _readTC74->i1_WriteI2C
    _printLCD->_sprintf
    _vfpfcnvrt->_ctoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _LCDbusy->_LCDrecv
    _LCDrecv->i1_WriteI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_CallBack->_timerInterrupt
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _TMR1_CallBack->_timerInterrupt
    _timerInterrupt->_printLCD
    _printLCD->_sprintf

Critical Paths under _main in BANK2

    _main->_parseEPROMInitialization
    _main->_storeEPROMBuild
    _storeEPROMBuild->_operADDR
    _parseEPROMInitialization->_DATAEE_ReadByte
    _initializeREG->_DATAEE_WriteByte
    _initializeEPROM->_DATAEE_WriteByte
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   18053
                                             16 BANK2     25    25      0
                            _LCDinit
                            _OpenI2C
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _initializeEPROM
                      _initializeREG
           _parseEPROMInitialization
                    _storeEPROMBuild
 ---------------------------------------------------------------------------------
 (1) _storeEPROMBuild                                      9     4      5    5005
                                              7 BANK2      9     4      5
                   _DATAEE_WriteByte
                           _operADDR
 ---------------------------------------------------------------------------------
 (2) _operADDR                                             7     5      2      49
                                              0 BANK2      7     5      2
 ---------------------------------------------------------------------------------
 (1) _parseEPROMInitialization                            14     2     12    2929
                                              2 BANK2     14     2     12
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2    1412
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initializeREG                                        1     1      0    4333
                                              4 BANK2      1     1      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _initializeEPROM                                      1     1      0    4333
                                              4 BANK2      1     1      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3    4333
                                              0 BANK2      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     780
                                              8 BANK2      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     736
                                              2 BANK2      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK2      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0   14978
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0   14978
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0   14738
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                     _timerInterrupt *
 ---------------------------------------------------------------------------------
 (7) _timerInterrupt                                       6     6      0   14738
                                             76 BANK0      2     2      0
                                             62 BANK1      4     4      0
           _ADCC_GetSingleConversion
                           _printLCD
                           _readTC74
                    _writeRingBuffer
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (8) _writeRingBuffer                                      3     2      1     721
                                              4 COMMON     3     2      1
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (8) i1_DATAEE_WriteByte                                   4     1      3     557
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (8) _readTC74                                             2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) _printLCD                                            43    43      0   13078
                                             19 BANK1     43    43      0
                            _LCDbusy
                             _LCDcmd
                             _LCDstr
                            _sprintf
 ---------------------------------------------------------------------------------
 (9) _sprintf                                             22    10     12   11884
                                             13 COMMON     1     1      0
                                              0 BANK1     19     7     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (10) _vfprintf                                            8     5      3   11463
                                             68 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (11) _vfpfcnvrt                                          43    41      2   11130
                                             46 BANK0     22    20      2
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (12) _dtoa                                               30    22      8    5055
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (13) _pad                                                 9     6      3    3449
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (14) _strlen                                              5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (14) _fputs                                               8     7      1    1605
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (13) _abs                                                 4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (13) ___aomod                                            19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (13) ___aodiv                                            27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (12) _ctoa                                               10     8      2    1602
                                              8 COMMON     5     3      2
                                              0 BANK0      5     5      0
                              _fputc
 ---------------------------------------------------------------------------------
 (12) _fputc                                               8     5      3    1290
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (13) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (12) _atoi                                               15    13      2    1985
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (13) _isspace                                             5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (12) _isdigit                                             6     4      2     237
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (13) ___wmul                                              6     2      4    1144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) _LCDstr                                               3     3      0     517
                                              9 COMMON     3     3      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (10) _LCDchar                                             1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (9) _LCDcmd                                               1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (11) i1_LCDsend2x4                                        6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (9) _LCDbusy                                              2     0      2     178
                                              7 COMMON     2     0      2
                            _LCDrecv
 ---------------------------------------------------------------------------------
 (10) _LCDrecv                                             5     5      0     178
                                              2 COMMON     5     5      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (9) i1_WriteI2C                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ADCC_GetSingleConversion                             3     1      2      22
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _OpenI2C
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _initializeEPROM
     _DATAEE_WriteByte
   _initializeREG
     _DATAEE_WriteByte
   _parseEPROMInitialization
     _DATAEE_ReadByte
   _storeEPROMBuild
     _DATAEE_WriteByte
     _operADDR

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _timerInterrupt *
         _ADCC_GetSingleConversion
         _printLCD
           _LCDbusy
             _LCDrecv
               _ReadI2C
               i1_WriteI2C
           _LCDcmd
             i1_LCDsend2x4
               i1_WriteI2C
           _LCDstr
             _LCDchar
               i1_LCDsend2x4
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _ctoa
                   _fputc
                     _putch
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                     _fputs
                       _fputc
                     _strlen
                 _fputc
                 _isdigit
         _readTC74
           _ReadI2C
           i1_WriteI2C
         _writeRingBuffer
           i1_DATAEE_WriteByte
         i1_DATAEE_WriteByte
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     42      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     29      3C       9       75.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      3D      11       76.2%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     127      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     127      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jan 14 18:46:38 2022

       __size_of_parseEPROMInitialization 00C6                                i1_WriteI2C 153C  
               ?_parseEPROMInitialization 0122                                        l23 12D8  
                                      l41 16F4                                        l36 1727  
                                      l53 1725                                        l39 16EF  
                                      l48 1711                                        l73 1636  
                                      l74 1638                                        l92 1677  
                                      l87 1671                                        l88 1673  
                     ___wmul@multiplicand 0072                                       l211 0C6A  
                                     l220 0CAB                                       l224 0CC2  
                                     l232 093C                                       l225 0CC4  
                                     l229 0CCC                                       l195 0C18  
                                     l196 0C1A                                       l436 0846  
                                     l532 1435                                       l482 12AB  
                                     l643 1368                                       l476 133D  
                                     l565 128E                                       l479 12B4  
                                     l770 1459                                       l773 12F6  
                                     l767 144E                                       l769 1452  
                                     l878 12BE                           _timer1ReloadVal 014D  
                                     _abs 1383                                       _pad 1678  
                 __size_of_PMD_Initialize 0008                                       wreg 0009  
                    _I2C1_DO_RX_NACK_STOP 0000                           _last_luminosity 00EF  
                             ?_LCDsend2x4 0122                           __end_of_LCDchar 12A4  
                                    ?_abs 0073                                      l1406 0210  
                                    l1440 153B                                      l1434 1508  
                                    l1418 0210                                      l1370 0246  
                                    l1443 09CA                                      l1364 14D3  
                                    l1436 150D                                      l1453 0BF5  
                                    l1437 1512                                      l1438 1517  
                                    l1446 1624                                      l1439 151C  
                                    l1399 0187                                      l5140 16D0  
                                    l5300 0C55                                      l5150 16E2  
                                    l5142 16D3                                      l5310 0C87  
                                    l5302 0C5B                                      l5152 16ED  
                                    l5160 16FB                                      l5320 0CC8  
                                    l5312 0C96                                      l5304 0C6B  
                                    l5400 1365                                      l6200 0118  
                                    l5162 1706                                      l5154 16F9  
                                    l5314 0C9C                                      l5306 0C72  
                                    l5402 1367                                      l5330 0802  
                                    l5170 1289                                      l5410 141C  
                                    l6210 012C                                      l6202 011F  
                                    l6130 003E                                      l5164 1716  
                                    l5148 16D8                                      l5316 0CAC  
                                    l5308 0C81                                      l5500 12D4  
                                    l5340 0810                                      l5332 0808  
                                    l5420 1432                                      l5412 141E  
                                    l5404 1415                                      l6300 0236  
                                    l6220 0142                                      l6212 0133  
                                    l6140 0049                                      l6132 0040  
                                    l6124 0039                           __end_of_LCDbusy 1308  
                                    l5270 1627                                      l5318 0CB3  
                                    l5510 08C7                                      l5502 12D5  
                                    l5350 081B                                      l5342 0812  
                                    l5334 080A                                      l5414 1420  
                                    l5406 1418                                      l6302 023D  
                                    l6222 0147                                      l6230 0155  
                                    l6214 013A                                      l6206 0121  
                                    l6150 005E                                      l6142 004F  
                                    l6134 0041                                      l6126 003C  
                                    ?_pad 0024                                      l5280 165E  
                                    l5272 1627                                      l5520 08EF  
                                    l5512 08CF                                      l5504 12D7  
                                    l5360 082F                                      l5352 0827  
                                    l5344 0815                                      l5336 080C  
                                    l5416 1428                                      l5408 141A  
                                    l5440 1436                                      l6400 1529  
                                    l6304 0243                                      l6232 015B  
                                    l6224 014E                                      l6208 0127  
                                    l6160 006A                                      l6152 0063  
                                    l6144 0052                                      l6136 0042  
                                    l6128 003D                           __end_of_LCDinit 093D  
                                    l5282 1662                                      l5274 163C  
                                    l5290 0C1E                                      l5530 090F  
                                    l5522 08F3                                      l5514 08D3  
                                    l5506 08BA                                      l5370 0839  
                                    l5362 0831                                      l5354 0829  
                                    l5346 0817                                      l5338 080E  
                                    l5418 142A                                      l5450 1448  
                                    l5442 143E                                      l6250 0184  
                                    l6234 0160                                      l6242 016E  
                                    l6226 0153                                      l6218 013C  
                                    l6170 007B                                      l6162 006E  
                                    l6154 0065                                      l6146 0057  
                                    l6138 0047                                      l5276 164B  
                                    l5292 0C2D                                      l5284 0BF8  
                                    l5532 091B                                      l5524 08FB  
                                    l5516 08E3                                      l5508 08C3  
                                    l5372 083B                                      l5364 0833  
                                    l5356 082B                                      l5348 0819  
                                    l5380 12A4                                      l5452 1449  
                                    l5444 1442                                      l5460 12E7  
                                    l6244 0174                                      l6236 0167  
                                    l6260 01A3                                      l6180 00DA  
                                    l6172 007E                                      l6164 0072  
                                    l6156 0067                                      l6148 005C  
                                    l5278 164F                                      l5294 0C31  
                                    l5286 0BFD                                      l5534 0921  
                                    l5526 08FF                                      l5518 08E7  
                                    l5382 12B5                                      l5390 12AC  
                                    l5374 083E                                      l5366 0835  
                                    l5358 082D                                      l5454 144B  
                                    l5446 1446                                      l5630 093D  
                                    l5470 12F2                                      l5462 12EB  
                                    l6246 0179                                      l6238 016C  
                                    l6190 00F8                                      l6254 018C  
                                    l6182 00E0                                      l6174 0097  
                                    l6166 0075                                      l6158 0068  
                                    l5296 0C40                                      l5288 0C09  
                                    l5536 0927                                      l5528 090B  
                                    l5384 12BA                                      l5392 12AF  
                                    l5376 0841                                      l5368 0837  
                                    l5456 144D                                      l5448 1447  
                                    l5472 12F3                                      l5464 12EF  
                                    l5640 1608                                      l5632 15D8  
                                    l6280 01E4                                      l6272 01B6  
                                    l6264 01A9                                      l6256 0191  
                                    l6248 017F                                      l6192 00F9  
                                    l6184 00E5                                      l6176 009F  
                                    l6168 0078                                      l5298 0C46  
                                    l5538 092D                                      l5386 12BB  
                                    l5394 12B0                                      l5378 0843  
                                    l5458 1453                                      l5474 12F5  
                                    l5466 12F0                                      l5482 1521  
                                    l5642 1616                                      l5634 15E1  
                                    l6290 0215                                      l6282 01EA  
                                    l6274 01BC                                      l6258 0195  
                                    l6186 00EA                                      l6194 0107  
                                    l6178 00D4                                      l5388 12BD  
                                    l5396 12B3                                      l5580 132E  
                                    l5628 14A9                                      l5468 12F1  
                                    l5644 0B32                                      l5484 1537  
                                    l5636 15EC                                      l6292 021C  
                                    l6284 01FA                                      l6276 01CC  
                                    l6268 01AF                                      l6196 010C  
                                    l6188 00F1                                      l5494 12CC  
                                    l5398 1352                                      l5582 1331  
                                    l5478 1507                                      l5638 15FA  
                                    l6294 0220                                      l6286 0200  
                                    l6278 01D2                                      l6198 0111  
                                    l5496 12D1                                      l5584 1334  
                                    l6296 022E                                      l5498 12D2  
                                    l5586 1337                                      l5578 132B  
                                    l6298 0231                                      l5588 133A  
                         __end_of_LCDrecv 1000                           __end_of_LCDsend 1678  
                                    STR_1 1820                                      STR_2 1837  
                                    _LATA 0016                                      _LATB 0017  
                                    _LATC 0018                                      _LATD 0019  
                                    _LATE 001A                                      u5000 0C40  
                                    u5001 0C3F                                      u5010 0C55  
                                    u5011 0C54                                      u5020 0C6A  
                                    u5021 0C69                                      u5030 0C81  
                                    u5110 1452                                      u5031 0C80  
                                    u5111 1451                                      u5040 0C96  
                                    u5041 0C95                                      u5050 0CAB  
                                    u5051 0CAA                                      u5060 0CC2  
                                    u5061 0CC1                                      u5070 0CC8  
                                    u5071 0CC7                                      u4600 16F4  
                                    u4601 16F3                                      u4610 16F9  
                                    u4611 16F8                                      u4620 1706  
                                    u5500 0118                                      _PMD0 0796  
                                    u4621 1705                                      u5501 0117  
                                    _PMD1 0797                                      u4630 1711  
                                    u5510 0127                                      u5430 00DA  
                                    _PMD2 0798                                      u4631 1710  
                                    u5511 0126                                      u5431 00D9  
                                    _PMD3 0799                                      i1l32 1382  
                                    u4640 1716                                      u5600 0174  
                                    u5520 012C                                      u5440 00E0  
                                    _PMD4 079A                                      i1l41 155D  
                                    u4641 1715                                      u5601 0173  
                                    u5521 012B                                      u5441 00DF  
                                    _PMD5 079B                                      u4650 1725  
                                    u4570 16D7                                      u5610 0179  
                                    u5530 0133                                      u5450 00E5  
                                    u4651 1724                                      u4571 16D6  
                                    u5611 0178                                      u5531 0132  
                                    u5451 00E4                                      i1l28 137C  
                                    i1l36 1586                                      u4580 16E2  
                                    u4900 1636                                      u5700 01EA  
                                    u5620 017F                                      u5540 0142  
                                    u5460 00EA                                      i1l29 137D  
                                    i1l53 1585                                      u4581 16E1  
                                    u4901 1635                                      u5701 01E9  
                                    u5621 017E                                      u5541 0141  
                                    u5461 00E9                                      u4590 16ED  
                                    u4910 163C                                      u5710 0200  
                                    u5630 0184                                      u5550 0147  
                                    u5470 00F1                                      i1l39 1558  
                                    u4591 16EC                                      u4911 163B  
                                    u5711 01FF                                      u5631 0183  
                                    u5551 0146                                      u5471 00F0  
                                    i1l48 1576                                      u4920 164B  
                                    u5720 0215                                      u5640 0191  
                                    u5560 014E                                      u5480 010C  
                                    u4921 164A                                      u5721 0214  
                                    u5641 0190                                      u5561 014D  
                                    u5481 010B                                      u4930 165E  
                                    u5730 021C                                      u5650 01A8  
                                    u5570 015B                                      u5490 0111  
                                    u4931 165D                                      u5731 021B  
                                    u5651 01A7                                      u5571 015A  
                                    u5491 0110                                      u4940 1671  
                                    u5740 0236                                      u5660 01AE  
                                    u5580 0160                                      u4941 1670  
                                    u5741 0235                                      u5661 01AD  
                                    u5581 015F                                      u4950 1677  
                                    u5750 023D                                      u5670 01B5  
                                    u5590 0167                                      u4951 1676  
                                    u5807 08BE                                      u5751 023C  
                                    u5671 01B4                                      u5591 0166  
                                    u5760 0243                                      u5680 01BC  
                                    u5817 08CC                                      u5761 0242  
                                    u5681 01BB                                      i1l98 0EC5  
                                    u4970 0C18                                      u5690 01D2  
                                    i1l99 0EC6                                      u5907 0CC9  
                                    u4971 0C17                                      u5827 08D7  
                                    u5691 01D1                                      u4980 0C1E  
                                    u4981 0C1D                                      u4965 0C00  
                                    u5837 08E4                                      u4990 0C2D  
                                    u4991 0C2C                                      u5847 08EC  
                                    u5857 08F8                                      u5777 00FF  
                                    u5867 0900                                      u5787 019B  
                                    u5877 090C                                      u5797 0226  
                                    u5887 0917                                      u5897 0937  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                                      abs@a 0073  
                                    _dbuf 01BD                  __size_of_writeRingBuffer 0067  
                                    _atoi 09CB                                      _ctoa 178F  
                                    _main 0039                                      _dtoa 041B  
                                    _mode 00E8                                      _prec 00E4  
                                    _nout 0155                                      pad@i 0027  
                                    pad@p 0025                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      pad@w 0029  
                                    btemp 007E                                      start 0018  
              ??_TMR1_SetInterruptHandler 0122                          ??_timerInterrupt 006C  
                         __end_of_ReadI2C 1383                              main@checksum 0148  
                         __end_of_OpenI2C 12D9                                     ??_abs 0075  
                                   ??_pad 007C                 __size_of_DATAEE_WriteByte 0024  
                        _last_temperature 00EE            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 12B5                           __end_of___aodiv 0EB8  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                                     ?_atoi 0076  
                                   ?_ctoa 0078                                     ?_main 0070  
                                   ?_dtoa 0030                                     _ADCLK 0098  
                         __end_of___aomod 0DB7                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                       ??_initializeEPROM 0124                                     _ADPRE 009C  
                                   _ADRPT 010D                                     _T1CLK 0211  
                                   _T1CON 020E                                     i1l130 0F3D  
                                   i1l114 0F07                                     i1l115 0F08  
                                   i1l211 0ADC                                     i1l116 0F0A  
                                   i1l220 0B13                                     i1l150 0F83  
                                   i1l134 0F41                                     i1l151 0F84  
                                   i1l135 0F42                                     i1l152 0F86  
                                   i1l224 0B26                                     i1l129 0F3B  
                                   i1l225 0B27                                     i1l170 0FBD  
                                   i1l171 0FBE                                     i1l235 129B  
                                   i1l244 1351                                     i1l165 0FB7  
                                   i1l229 0B2F                                     i1l166 0FB9  
                                   i1l238 12A3                                     i1l184 0FEE  
                                   i1l248 1307                                     i1l185 0FEF  
                                   i1l195 0A98                                     i1l196 0A99  
                                   i1l189 0FFF                                     i1l562 12CB  
                                   i1l546 1318                                     i1l558 12E6  
                                   i1l655 1321                                     i1l568 07FF  
                                   i1l658 132A                                     i1l770 13D4  
                                   i1l499 0016                                     i1l767 13CA  
                                   i1l769 13CE                __end_of_i2c1_fsmStateTable 1820  
                                   _OSCEN 0891                              vfpfcnvrt@fmt 004E  
                                   _TMR1H 020D                                     _TMR1L 020C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                         ??_I2C1_Initialize 0120  
                        __end_of_TMR1_ISR 12E7                           _DATAEE_ReadByte 12E7  
                                   _flags 006E                                     _fputc 1587  
                                   _fputs 1480                           __end_of_isdigit 07FF  
                                   _hours 00ED                    storeEPROMBuild@minutes 0127  
                  storeEPROMBuild@seconds 0128                                     atoi@n 0027  
                                   pad@fp 002B                                     atoi@s 0076  
                                   _width 00E2                                     ctoa@c 0078  
                                   _putch 0003                                     ctoa@l 0020  
                                   ctoa@w 0022                                     dtoa@d 0030  
                                   dtoa@i 004C                                     dtoa@n 0044  
                                   dtoa@p 003E                                     dtoa@s 0042  
                                   dtoa@w 0040                           __end_of_isspace 1415  
                 __end_of_TMR1_Initialize 1436                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 1480                writeRingBuffer@temperature 0076  
                         _TMR1_WriteTimer 1308                           __initialization 001A  
                            __end_of_atoi 0A7A                              __end_of_ctoa 1800  
                            __end_of_main 0249                              __end_of_dtoa 0587  
                             ?i1_WriteI2C 0070                       __size_of_LCDsend2x4 00D7  
             ?_INTERRUPT_InterruptManager 0070                                    ??_atoi 0078  
                                  ??_ctoa 007A                                    ??_main 0130  
                                  ??_dtoa 0038                                 ??_LCDchar 0078  
                               ??_LCDbusy 0079                                 ??_LCDinit 0128  
                               ??_LCDrecv 0072                                 ??_LCDsend 0122  
              __end_ofi1_DATAEE_WriteByte 13D5                                    _ADACCH 0091  
                                  _ADACCL 0090                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    _ADERRH 0117  
                                  _ADERRL 0116                                    ?_fputc 0070  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  ?_fputs 0078                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                                    _ADUTHL 0110  
                        __end_of_WriteI2C 1728                                    _ANSELA 0F38  
                                  ?_putch 0070                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                                    _T1GATE 0210  
                                  _T1GCON 020F                   storeEPROMBuild@dataAddr 012E  
                                  _RC3PPS 0F23                   TMR1_WriteTimer@timerVal 0070  
                                  i1l1203 06DA                                    _RC4PPS 0F24  
                                  i1l1221 0716                                    i1l2102 16B4  
                                  i1l1222 0717                                    i1l1207 06E6  
                                  i1l2120 17FF                                    i1l2104 16CD  
                                  i1l1208 06E7                                    i1l2115 17C3  
                                  i1l2123 0464                                    i1l1243 0759  
                                  i1l1235 0748                                    i1l2132 0512  
                                  i1l2124 046E                                    i1l1316 08B9  
                                  i1l1252 076D                                    i1l1244 075A  
                                  i1l1236 074A                                    i1l2221 0A79  
                                  i1l1253 076E                                    i1l2118 17E5  
                                  i1l1247 075E                                    i1l2224 07FE  
                                  i1l2232 1414                                    i1l2208 0A08  
                                  i1l2128 048C                                    i1l2160 02B4  
                                  i1l1280 07CF                                    i1l2129 04A2  
                                  i1l2153 0273                                    i1l1281 07D1  
                                  i1l1361 06D9                                    _ODCONA 0F3A  
                                  i1l2146 0586                                    i1l1266 079D  
                                  i1l1354 06B9                                    i1l1346 06A3  
                                  _ODCONB 0F45                                    i1l2155 027D  
                                  i1l1267 079E                                    _ODCONC 0F50  
                                  i1l2156 027F                                    i1l2068 147F  
                                  _ODCOND 0F5B                                    i1l1605 13DF  
                                  i1l2173 041A                                    i1l2157 0281  
                                  i1l1293 07E6                                    i1l1357 06BC  
                                  i1l1349 06A5                                    _ODCONE 0F66  
                                  i1l2190 139C                                    i1l2158 0283  
                                  i1l1607 13F3                                    i1l2247 15D5  
                                  i1l2255 14A8                                    i1l2183 1504  
                                  i1l5000 1344                                    i1l2264 13B6  
                                  i1l1288 07E0                                    i1l1705 0EA6  
                                  i1l1289 07E1                                    i1l5002 12F7  
                                  i1l2258 0003                                    i1l1706 0EB7  
                                  i1l1298 178E                                    i1l2187 139C  
                                  i1l2099 1692                                    i1l5004 1300  
                                  i1l5020 1477                                    i1l5012 145C  
                                  i1l5100 07BD                                    i1l1718 0DA5  
                                  i1l5014 1464                                    i1l5102 07C3  
                                  i1l5030 13C2                                    i1l5110 1729  
                                  i1l1719 0DB6                                    i1l5008 1305  
                                  i1l5016 1466                                    i1l5104 07D5  
                                  i1l5040 13C9                                    i1l5032 13C3  
                                  i1l5024 13B7                                    i1l5120 1788  
                                  i1l5112 1770                                    i1l5200 05C3  
                                  i1l5050 131F                                    i1l5018 1468  
                                  i1l5130 0888                                    i1l5122 0847  
                                  i1l5106 07E5                                    i1l5042 13CF  
                                  i1l5034 13C4                                    i1l5026 13BE  
                                  i1l5114 1775                                    i1l5210 05EC  
                                  i1l5202 05CC                                    i1l5052 1320  
                                  i1l5044 131A                                    i1l4500 0DE3  
                                  i1l5132 0891                                    i1l5124 084B  
                                  i1l5060 06EB                                    i1l5036 13C5  
                                  i1l5028 13C0                                    i1l5116 1779  
                                  i1l5220 060A                                    i1l5212 05F5  
                                  i1l5204 05D3                                    i1l5054 1326  
                                  i1l5046 131D                                    i1l4510 0E27  
                                  i1l4502 0DED                                    i1l5134 0895  
                                  i1l5126 0854                                    i1l5070 071B  
                                  i1l5062 06F6                                    i1l5038 13C7  
                                  i1l5118 1783                                    i1l5230 062D  
                                  i1l5222 060F                                    i1l5214 05FE  
                                  i1l5206 05DC                                    i1l5048 131E  
                                  i1l4600 140D                                    i1l4520 0E42  
                                  i1l4512 0E2A                                    i1l4504 0E0C  
                                  i1l5136 08AC                                    i1l5128 0884  
                                  i1l5080 074E                                    i1l5072 0726  
                                  i1l5064 06FA                                    i1l5240 0664  
                                  i1l5232 063B                                    i1l5224 061B  
                                  i1l5216 0601                                    i1l5208 05E5  
                                  i1l4450 1591                                    i1l4610 17A9  
                                  i1l4530 0E88                                    i1l4522 0E64  
                                  i1l4514 0E32                                    i1l4506 0E10  
                                  i1l5138 08B5                                    i1l5090 078D  
                                  i1l5082 0762                                    i1l5074 072A  
                                  i1l5066 0706                                    i1l5058 06DA  
                                  i1l5242 066B                                    i1l5234 0642  
                                  i1l5250 068E                                    i1l5226 061E  
                                  i1l5218 0602                                    i1l4700 09F5  
                                  i1l4452 1596                                    i1l4620 17C6  
                                  i1l4612 17AD                                    i1l4604 1791  
                                  i1l4524 0E74                                    i1l4516 0E36  
                                  i1l4508 0E1A                                    i1l4540 0D03  
                                  i1l4532 0CCD                                    i1l5092 0791  
                                  i1l5084 0772                                    i1l5076 0736  
                                  i1l5068 070A                                    i1l5260 06B0  
                                  i1l5252 0695                                    i1l5244 0677  
                                  i1l5236 064E                                    i1l5228 0625  
                                  i1l5180 058D                                    i1l4710 0A0D  
                                  i1l4702 09F6                                    i1l4454 15A0  
                                  i1l4446 1587                                    i1l4622 17D2  
                                  i1l4614 17BB                                    i1l4606 1798  
                                  i1l4526 0E75                                    i1l4518 0E3A  
                                  i1l4550 0D3E                                    i1l4542 0D22  
                                  i1l4534 0CCE                                    i1l4462 1482  
                                  i1l4470 139E                                    i1l5094 07A2  
                                  i1l5086 077D                                    i1l5078 073C  
                                  i1l5262 06BE                                    i1l5254 0698  
                                  i1l5246 067E                                    i1l5238 0656  
                                  i1l5190 05A8                                    i1l5182 0593  
                                  i1l5430 1312                                    i1l5422 1308  
                                  i1l4480 13D5                                    i1l4720 0A5D  
                                  i1l4712 0A21                                    i1l4456 15BD  
                                  i1l4448 158C                                    i1l4624 17D7  
                                  i1l4608 17A0                                    i1l4528 0E83  
                                  i1l4560 0D87                                    i1l4552 0D42  
                                  i1l4544 0D2F                                    i1l4536 0CD8  
                                  i1l4464 1485                                    i1l4472 13A3  
                                  i1l4640 0469                                    i1l4632 041D  
                                  i1l4800 02AE                                    i1l5096 07AD  
                                  i1l5088 0781                                    i1l5264 06C4  
                                  i1l5256 069E                                    i1l5248 0684  
                                  i1l5192 05AE                                    i1l5184 059A  
                                  i1l5424 130D                                    i1l5432 1314  
                                  i1l4490 13EF                                    i1l4482 13D7  
                                  i1l4722 0A63                                    i1l4706 09FD  
                                  i1l4458 15CD                                    i1l4626 17EA  
                                  i1l4618 17C1                                    i1l4554 0D64  
                                  i1l4546 0D32                                    i1l4538 0CF9  
                                  i1l4466 1493                                    i1l4474 13A7  
                                  i1l4570 1690                                    i1l4562 167A  
                                  i1l4650 049E                                    i1l4642 047E  
                                  i1l4634 042D                                    i1l4810 02E2  
                                  i1l4802 02B8                                    i1l6402 029D  
                                  i1l5098 07B1                                    i1l5266 06C9  
                                  i1l5258 06A6                                    i1l5194 05B0  
                                  i1l5186 05A0                                    i1l5178 0587  
                                  i1l5434 1316                                    i1l5426 130E  
                                  i1l4900 0AEF                                    i1l4484 13DB  
                                  i1l4724 0A69                                    i1l6404 0A19  
                                  i1l4716 0A41                                    i1l4708 0A04  
                                  i1l4628 17F8                                    i1l4556 0D74  
                                  i1l4548 0D3A                                    i1l4468 1498  
                                  i1l4476 13B0                                    i1l4580 16C1  
                                  i1l4572 1695                                    i1l4564 167E  
                                  i1l4660 04E1                                    i1l4652 04A6  
                                  i1l4644 0484                                    i1l4636 0440  
                                  i1l4820 0307                                    i1l4812 02E6  
                                  i1l4804 02BC                                    i1l5268 06CC  
                                  i1l5196 05B7                                    i1l5188 05A1  
                                  i1l5436 12BF                                    i1l5428 1310  
                                  u300_25 13E5                                    i1l4750 1562  
                                  i1l4910 0B1A                                    i1l4902 0AF5  
                                  i1l4486 13E4                                    i1l4726 0A75  
                                  i1l4494 0DB7                                    i1l4558 0D82  
                                  i1l4574 16A1                                    i1l4566 1686  
                                  i1l4670 0548                                    i1l4662 04E5  
                                  i1l4654 04A9                                    i1l4646 0494  
                                  i1l4638 0446                                    i1l4830 034B  
                                  i1l4814 02E8                                    i1l4806 02CD  
                                  i1l5198 05BA                                    i1l5438 12C6  
                                  i1l4760 157A                                    i1l4744 1545  
                                  i1l4736 153D                                    i1l4920 0ED5  
                                  i1l4912 0B2B                                    i1l4904 0B01  
                                  u301_20 13EF                                    i1l4488 13E9  
                                  i1l4592 13F4                                    i1l4496 0DB8  
                                  i1l4584 1383                                    i1l4576 16A6  
                                  i1l4568 168B                                    i1l4680 0562  
                                  i1l4664 0520                                    i1l4672 054D  
                                  i1l4656 04AE                                    i1l4648 049A  
                                  i1l4840 0387                                    i1l4832 0357  
                                  i1l4824 032B                                    i1l4808 02D5  
                                  i1l4816 02EF                                    u301_21 13EE  
                                  i1l4770 1381                                    i1l4746 154E  
                                  i1l4738 1540                                    i1l4930 0EFB  
                                  i1l4922 0ED9                                    i1l4914 0EB9  
                                  i1l4906 0B07                                    i1l4594 13F6  
                                  i1l4690 09CB                                    i1l4498 0DC2  
                                  i1l4586 1390                                    i1l4578 16B9  
                                  i1l4682 0567                                    i1l4674 0554  
                                  i1l4666 052D                                    i1l4658 04DD  
                                  i1l4850 03D3                                    i1l4842 038F  
                                  i1l4818 02FF                                    i1l4826 0331  
                                  i1l4748 1557                                    i1l4756 1564  
                                  i1l4940 0F2F                                    i1l4932 0F0E  
                                  i1l4924 0EE5                                    i1l4916 0EB9  
                                  i1l4908 0B14                                    i1l4588 07E7  
                                  i1l4596 13FD                                    i1l4692 09D1  
                                  i1l4684 056B                                    i1l4676 0558  
                                  i1l4668 053A                                    i1l4860 03F4  
                                  i1l4852 03DB                                    i1l4844 03A8  
                                  i1l4828 0343                                    i1l4836 0365  
                                  i1l4780 026A                                    i1l5812 0006  
                                  i1l4766 1369                                    i1l4758 156D  
                                  i1l4950 0F66                                    i1l4942 0F46  
                                  i1l4934 0F19                                    i1l4926 0EEA  
                                  i1l4918 0ECA                                    i1l4598 140C  
                                  i1l4694 09D5                                    i1l4678 055C  
                                  i1l4686 0574                                    i1l4854 03E6  
                                  i1l4838 0376                                    i1l4782 026F  
                                  i1l4774 024B                                    i1l5590 12D9  
                                  i1l5814 000A                                    i1l4768 1373  
                                  i1l4960 0F99                                    i1l4952 0F72  
                                  i1l4944 0F51                                    i1l4936 0F1D  
                                  i1l4928 0EF6                                    i1l4880 0A8C  
                                  i1l4696 09D7                                    u310_20 0E83  
                                  u302_20 0DC2                                    i1l4848 03C2  
                                  i1l4784 0274                                    i1l4776 025C  
                                  i1l4864 03F7                                    i1l5592 12DB  
                                  i1l5816 000F                                    u310_21 0E82  
                                  u302_21 0DC1                                    i1l4970 0FD1  
                                  i1l4962 0FA5                                    i1l4954 0F77  
                                  i1l4946 0F55                                    i1l4938 0F29  
                                  i1l4890 0ABE                                    i1l4882 0A9D  
                                  i1l4698 09E1                                    i1l4866 0410  
                                  i1l4858 03EC                                    i1l4794 0285  
                                  i1l4778 0264                                    i1l5594 12E3  
                                  i1l5818 0013                                    i1l4972 0FDD  
                                  i1l4964 0FAB                                    i1l4956 0F8A  
                                  i1l4948 0F61                                    i1l4892 0ACA  
                                  i1l4884 0AA8                                    i1l4876 0A7B  
                                  i1l4980 129D                                    i1l4974 0FE2  
                                  i1l4966 0FC2                                    i1l4958 0F95  
                                  i1l4894 0AD0                                    i1l4886 0AAC  
                                  i1l4878 0A80                                    i1l4798 028A  
                                  i1l4990 14FC                                    i1l4982 14D6  
                                  i1l4976 0FF3                                    i1l4968 0FCD  
                                  i1l4896 0ADD                                    i1l4888 0AB8  
                                  u311_20 0E88                                    i1l4984 14DA  
                                  u311_21 0E87                                    i1l4898 0AE3  
                                  i1l4994 1296                                    i1l4986 14DE  
                                  i1l4996 133F                                    i1l4988 14F2  
                                  i1l4998 1340                                    u400_20 0EF6  
                                  u304_20 0DED                                    u320_20 0D82  
                                  u400_21 0EF5                                    u304_21 0DEC  
                                  u320_21 0D81                                    _INLVLA 0F3C  
                                  _INLVLB 0F47                                    _INLVLC 0F52  
                                  _INLVLD 0F5D                                    _INLVLE 0F68  
                                  u401_20 0F07                                    u321_20 0D87  
                                  u313_20 0CD8                                    u401_21 0F06  
                                  u321_21 0D86                                    u313_21 0CD7  
                                  _LCDcmd 1295                                    u410_20 0F72  
                                  u402_20 0F0E                                    u330_20 13FD  
                                  u306_20 0E17                                    u410_21 0F71  
                                  u402_21 0F0D                                    u330_21 13FC  
                                  u411_20 0F83                                    u403_20 0F19  
                                  u331_20 140C                                    u307_20 0E27  
                                  u315_20 0D03                                    u323_20 167E  
                                  u411_21 0F82                                    u403_21 0F18  
                                  u331_21 140B                                    u307_21 0E26  
                                  u315_21 0D02                                    u323_21 167D  
                                  u420_20 0FEE                                    u412_20 0F8A  
                                  u404_20 0F29                                    u332_20 1798  
                                  u308_20 0E3A                                    u324_20 168B  
                                  u420_21 0FED                                    u412_21 0F89  
                                  u404_21 0F28                                    u332_21 1797  
                                  u308_21 0E39                                    u324_21 168A  
                                  u421_20 0FF3                                    u413_20 0F95  
                                  u405_20 0F3B                                    u333_20 17AD  
                                  u309_20 0E64                                    u317_20 0D2F  
                                  u325_20 16B4                                    u341_20 0469  
                                  u421_21 0FF2                                    u413_21 0F94  
                                  u405_21 0F3A                                    u333_21 17AC  
                                  u309_21 0E63                                    u317_21 0D2E  
                                  u325_21 16B3                                    u341_21 0468  
                                  u309_25 0E60                                    u325_25 16B0  
                                  u414_20 0FA5                                    u406_20 0F41  
                                  u334_20 17C0                                    u318_20 0D42  
                                  u326_20 16B9                                    u350_20 0554  
                                  u342_20 047E                                    u430_20 06F6  
                                  u510_20 12C6                                    u414_21 0FA4  
                                  u406_21 0F40                                    u334_21 17BF  
                                  u318_21 0D41                                    u326_21 16B8  
                                  u350_21 0553                                    u342_21 047D  
                                  u430_21 06F5                                    u510_21 12C5  
                                  u422_25 0FF6                                    u342_25 047A  
                                  u415_20 0FB7                                    u407_20 0F46  
                                  u335_20 17E5                                    u319_20 0D64  
                                  u327_20 1390                                    u351_20 0558  
                                  u343_20 049A                                    u423_20 14FC  
                                  u431_20 0706                                    u415_21 0FB6  
                                  u407_21 0F45                                    u335_21 17E4  
                                  u319_21 0D63                                    u327_21 138F  
                                  u351_21 0557                                    u343_21 0499  
                                  u423_21 14FB                                    u431_21 0705  
                                  u335_25 17E1                                    u319_25 0D60  
                                  u327_25 138C                                    u360_20 1544  
                                  u416_20 0FBD                                    u408_20 0F51  
                                  u424_20 1351                                    u328_20 07F7  
                                  u336_20 17EA                                    u352_20 0562  
                                  u344_20 049E                                    u440_20 0762  
                                  u432_20 0716                                    u360_21 1543  
                                  u416_21 0FBC                                    u408_21 0F50  
                                  u424_21 1350                                    u328_21 07F5  
                                  u336_21 17E9                                    u352_21 0561  
                                  u344_21 049D                                    u440_21 0761  
                                  u432_21 0715                                    u361_20 154E  
                                  u417_20 0FC2                                    u409_20 0F61  
                                  u425_20 1300                                    u329_20 07F8  
                                  u353_20 09E1                                    u345_20 0520  
                                  u337_20 0438                                    u441_20 076D  
                                  u433_20 071B                                    u361_21 154D  
                                  u417_21 0FC1                                    u409_21 0F60  
                                  u425_21 12FF                                    u353_21 09E0  
                                  u345_21 051F                                    u337_21 0436  
                                  u441_21 076C                                    u433_21 071A  
                                  u345_25 051C                                    u370_20 137C  
                                  u362_20 1557                                    u418_20 0FCD  
                                  u354_20 09F5                                    u346_20 052D  
                                  u338_20 0439                                    u450_20 07D5  
                                  u442_20 0772                                    u434_20 0726  
                                  u426_20 13CE                                    u370_21 137B  
                                  u362_21 1556                                    u418_21 0FCC  
                                  u354_21 09F4                                    u346_21 052C  
                                  u450_21 07D4                                    u442_21 0771  
                                  u434_21 0725                                    u426_21 13CD  
                                  u427_20 1326                                    u371_20 1381  
                                  u363_20 155D                                    u419_20 0FDD  
                                  u355_20 0A03                                    u347_20 053A  
                                  u339_20 0446                                    u451_20 07E0  
                                  u443_20 077D                                    u435_20 0736  
                                  u531_20 000A                                    u427_21 1325  
                                  u371_21 1380                                    u363_21 155C  
                                  u419_21 0FDC                                    u355_21 0A02  
                                  u347_21 0539                                    u339_21 0445  
                                  u451_21 07DF                                    u443_21 077C  
                                  u435_21 0735                                    u531_21 0009  
                                  u347_25 0536                                    u364_20 1562  
                                  u356_20 0A56                                    u292_20 158C  
                                  u348_20 0548                                    u380_20 0343  
                                  u372_20 025C                                    u452_20 07E5  
                                  u444_20 078D                                    u436_20 0748  
                                  u428_20 06E6                                    u532_20 000F  
                                  u364_21 1561                                    u356_21 0A54  
                                  u292_21 158B                                    u348_21 0547  
                                  u380_21 0342                                    u372_21 025B  
                                  u452_21 07E4                                    u444_21 078C  
                                  u436_21 0747                                    u428_21 06E5  
                                  u532_21 000E                                    u348_25 0544  
                                  _LCDstr 133E                                    u365_20 156D  
                                  u357_20 0A57                                    u293_20 1591  
                                  u349_20 054D                                    u381_20 0376  
                                  u373_20 02B4                                    u445_20 079D  
                                  u437_20 074E                                    u429_20 06EB  
                                  u453_20 1783                                    u509_20 130D  
                                  u533_20 0013                                    u365_21 156C  
                                  u293_21 1590                                    u349_21 054C  
                                  u381_21 0375                                    u373_21 02B3  
                                  u445_21 079C                                    u437_21 074D  
                                  u429_21 06EA                                    u453_21 1782  
                                  u509_21 130C                                    u533_21 0012  
                                  u366_20 1576                                    u390_20 0ADC  
                                  u358_20 0A63                                    u294_20 15A0  
                                  u382_20 0387                                    u374_20 02B8  
                                  u454_20 0854                                    u446_20 07A2  
                                  u438_20 0759                                    u470_20 05AE  
                                  u366_21 1575                                    u390_21 0ADB  
                                  u358_21 0A62                                    u294_21 159F  
                                  u382_21 0386                                    u374_21 02B7  
                                  u454_21 0853                                    u446_21 07A1  
                                  u438_21 0758                                    u470_21 05AD  
                                  u367_20 157A                                    u391_20 0AEF  
                                  u359_20 0A69                                    u295_20 15BD  
                                  u383_20 03D3                                    u375_20 02CD  
                                  u455_20 0891                                    u447_20 07AD  
                                  u439_20 075E                                    u471_20 05CC  
                                  u367_21 1579                                    u391_21 0AEE  
                                  u359_21 0A68                                    u295_21 15BC  
                                  u383_21 03D2                                    u375_21 02CC  
                                  u455_21 0890                                    u447_21 07AC  
                                  u439_21 075D                                    u471_21 05CB  
                                  u295_25 15B9                                    u368_20 1585  
                                  u392_20 0B01                                    u296_20 14A8  
                                  u376_20 02E6                                    u456_20 08B5  
                                  u448_20 07BD                                    u480_20 0656  
                                  u472_20 05DC                                    u368_21 1584  
                                  u392_21 0B00                                    u296_21 14A7  
                                  u376_21 02E5                                    u456_21 08B4  
                                  u448_21 07BC                                    u480_21 0655  
                                  u472_21 05DB                                    u384_25 0A83  
                                  u369_20 1373                                    u393_20 0B13  
                                  u385_20 0A98                                    u297_20 13B0  
                                  u377_20 0324                                    u449_20 07CF  
                                  u481_20 066B                                    u473_20 05E5  
                                  u369_21 1372                                    u393_21 0B12  
                                  u385_21 0A97                                    u297_21 13AF  
                                  u377_21 0322                                    u449_21 07CE  
                                  u481_21 066A                                    u473_21 05E4  
                                  u394_20 0B26                                    u386_20 0A9D  
                                  u298_20 13DB                                    u378_20 0325  
                                  u482_20 067E                                    u474_20 05F5  
                                  u394_21 0B25                                    u386_21 0A9C  
                                  u298_21 13DA                                    u482_21 067D  
                                  u474_21 05F4                                    u395_20 0B2B  
                                  u387_20 0AA8                                    u379_20 0331  
                                  u483_20 0684                                    u475_20 05FE  
                                  u467_20 058D                                    u395_21 0B2A  
                                  u387_21 0AA7                                    u379_21 0330  
                                  u483_21 0683                                    u475_21 05FD  
                                  u467_21 058C                                    u299_25 13E0  
                                  u396_20 0EC5                                    u388_20 0AB8  
                                  u484_20 0695                                    u476_20 060F  
                                  u468_20 0593                                    u396_21 0EC4  
                                  u388_21 0AB7                                    u484_21 0694  
                                  u476_21 060E                                    u468_21 0592  
                                  _OSCFRQ 0893                                    u397_20 0ECA  
                                  u389_20 0ACA                                    u485_20 06A3  
                                  u477_20 0625                                    u469_20 05A0  
                                  u397_21 0EC9                                    u389_21 0AC9  
                                  u485_21 06A2                                    u477_21 0624  
                                  u469_21 059F                                    u398_20 0ED5  
                                  u486_20 06B0                                    u478_20 062D  
                                  u398_21 0ED4                                    u486_21 06AF  
                                  u478_21 062C                                    u399_20 0EE5  
                                  u487_20 06B9                                    u479_20 0642  
                                  u399_21 0EE4                                    u487_21 06B8  
                                  u479_21 0641                                    u591_27 06D2  
                                  u488_20 06C4                                    u488_21 06C3  
                                  u592_27 0B2C                             vfpfcnvrt@done 005E  
                                  u489_20 06C9                                    u489_21 06C8  
                               ??_ReadI2C 0070                               LCDsend2x4@c 0125  
                             LCDrecv@mode 0076                                 ??_OpenI2C 0120  
                        _I2C1_DO_TX_EMPTY 0000                           _max_temperature 0152  
    __end_of_TMR1_DefaultInterruptHandler 0800     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 07FF                              vfprintf@cfmt 006A  
                       ??_writeRingBuffer 0075                                 ??___aodiv 0070  
                           ?i1_LCDsend2x4 0072                                 ??___aomod 0070  
                                  ___wmul 13D5                                    _alarm1 0159  
                                  _alarm2 0158                                    _alarmc 014F  
                        __end_of_readTC74 07E7                          __end_of_operADDR 153C  
                                  pad@buf 0024                                    main@RI 0140  
                                  main@NR 013E                                    main@WI 013F  
                                  ctoa@fp 0024                                    dtoa@fp 003D  
                 __end_of_DATAEE_ReadByte 12F7                                    _strlen 139D  
                         _ADCC_Initialize 1352                     _I2C1_DO_SEND_ADR_READ 0000  
                                  fputc@c 0070                            _PMD_Initialize 12A4  
                                  fputs@c 0020                                    fputs@i 0021  
                                  fputs@s 0023                                 ??_isdigit 0072  
                        __end_of_printLCD 08BA                                 ??_isspace 0072  
                  __size_of_initializeREG 002B             i1DATAEE_WriteByte@GIEBitValue 0073  
       __size_of_ADCC_GetSingleConversion 0012                                    putch@c 0070  
                        __end_of_vfprintf 1505                 ?_ADCC_GetSingleConversion 0070  
TMR1_SetInterruptHandler@InterruptHandler 0120                                 ??_sprintf 007D  
                 __end_of_TMR1_WriteTimer 1319                   _I2C1_DO_RX_NACK_RESTART 0000  
                     __size_ofi1_WriteI2C 004B                     __end_of_TMR1_CallBack 12CC  
                        ?_TMR1_Initialize 0070                         _SYSTEM_Initialize 132B  
                 __end_of__initialization 0035                        ?_SYSTEM_Initialize 0070  
                            _data_address 0149                   _rdBlkRegCompleteHandler 0000  
                          __pcstackCOMMON 0070                            ??i1_LCDsend2x4 0073  
                     ??_SYSTEM_Initialize 0122                  __size_of_storeEPROMBuild 004F  
      parseEPROMInitialization@magic_word 012F                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                          _DATAEE_WriteByte 1436  
                    storeEPROMBuild@hours 012D                             __end_of_fputc 15D6  
                           __end_of_fputs 14A9                             __end_of_putch 0004  
                  __end_of_PMD_Initialize 12AC                                 LCDrecv@hc 0074  
                               LCDrecv@lc 0075                              ??_LCDsend2x4 0123  
                                 ??_fputc 0073                 __end_of_SYSTEM_Initialize 133E  
                                 ??_fputs 0079                                   ??_putch 0070  
                              __pbssBANK0 006E                                __pbssBANK1 00E2  
                              __pbssBANK2 0155                                __pbssBANK3 01A0  
                  i1DATAEE_WriteByte@bAdd 0070                                   ?_LCDcmd 0070  
                                 ?_LCDstr 0070                                   LCDcmd@c 0078  
                   _rd1RegCompleteHandler 0000                                   LCDstr@c 007A  
                                 LCDstr@p 007B              parseEPROMInitialization@ALAF 012A  
            parseEPROMInitialization@ALAL 0129              parseEPROMInitialization@ALAT 0128  
            parseEPROMInitialization@CLKH 012B              parseEPROMInitialization@CLKM 012C  
            parseEPROMInitialization@TALA 0127              parseEPROMInitialization@NREG 0122  
            parseEPROMInitialization@PMON 0126                         _I2C1_DO_SEND_STOP 0000  
                         _initializeEPROM 093D                     _wr1RegCompleteHandler 0000  
                           _initializeREG 14A9                                __pmaintext 0039  
                                 ?___wmul 0070                                ??_TMR1_ISR 007E  
                 __end_of_ADCC_Initialize 1369                                __pintentry 0004  
                         _I2C1_Initialize 12B5                            main@magic_word 013C  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                      __end_of_LCDsend2x4 0CCD                                   _ADPREVH 008F  
                                 _ADPREVL 008E                                 ?_WriteI2C 0070  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                         ?_PMD_Initialize 0070                                   ?_strlen 0070  
                        ?_DATAEE_ReadByte 0120                                   _LCDchar 129C  
                                 _LCDbusy 12F7                                   _LCDinit 08BA  
                                 _LCDrecv 0EB8                                   _LCDsend 1625  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                      __size_of_vfpfcnvrt 01D2                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                                 _NVMCON1 081E                                   _NVMCON2 081F  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                         timerInterrupt@lum 00E0  
                        ?_TMR1_WriteTimer 0070                              LCDsend2x4@hc 0126  
                            LCDsend2x4@lc 0127                                 ?_readTC74 0070  
                         __size_of_LCDcmd 0007                      DATAEE_WriteByte@bAdd 0120  
                      _i2c1_fsmStateTable 1800                           __size_of_LCDstr 0014  
                                 _ReadI2C 1369                                 ?_operADDR 0120  
                                 _OpenI2C 12CC                  _parseEPROMInitialization 0B30  
                          ?_initializeREG 0070                                 ?_printLCD 0070  
                                 ___aodiv 0DB7                              ??i1_WriteI2C 0070  
                                 ___aomod 0CCD                           __size_of___wmul 001F  
                               ?_vfprintf 0064                                ??_WriteI2C 0120  
                                 __ptext1 15D6                                   __ptext2 1505  
                                 __ptext3 0B30                                   __ptext4 12E7  
                                 __ptext5 14A9                                   __ptext6 093D  
                                 __ptext7 1436                                   __ptext8 132B  
                                 __ptext9 1415            ??_TMR1_DefaultInterruptHandler 0070  
                         __size_of_strlen 001A                         ??_storeEPROMBuild 012C  
                               _T1CONbits 020E                                   _counter 0153  
                   _OSCILLATOR_Initialize 12AC                              __size_of_abs 001A  
                            __size_of_pad 0056                                   _isdigit 07E7  
       __size_of_TMR1_SetInterruptHandler 0006                                   _minutes 00EC  
                ??_PIN_MANAGER_Initialize 0120                                   _seconds 00EB  
                                 _isspace 13F4                 ?_TMR1_SetInterruptHandler 0120  
              parseEPROMInitialization@RI 0125                parseEPROMInitialization@NR 0123  
              parseEPROMInitialization@WI 0124                                   atoi@neg 0020  
                storeEPROMBuild@operation 012B                      __end_ofi1_LCDsend2x4 0B30  
              __size_of_SYSTEM_Initialize 0013                                   _sprintf 145A  
                                 clrloop0 1290                      end_of_initialization 0035  
                              ??_readTC74 0072                           _writeRingBuffer 1728  
                 __end_of_initializeEPROM 09CB                        __end_ofi1_WriteI2C 1587  
                                 fputc@fp 0072                                   fputs@fp 0078  
                  _I2C1_DO_SEND_ADR_WRITE 0000                            i1LCDsend2x4@hc 0076  
                          i1LCDsend2x4@lc 0077                                ??_operADDR 0122  
                      i1_DATAEE_WriteByte 13B7                   __end_of_I2C1_Initialize 12BF  
                             _I2C1_Status 01A0                         __end_of_vfpfcnvrt 041B  
                              ??_printLCD 00B3                       ?i1_DATAEE_WriteByte 0070  
                        ?_ADCC_Initialize 0070                                ??_vfprintf 0067  
                             printLCD@buf 00BD          __end_of_ADCC_GetSingleConversion 132B  
               storeEPROMBuild@luminosity 012A                _I2C1_DO_SEND_RESTART_WRITE 0000  
                                 strlen@a 0073                                   strlen@s 0074  
                               _PORTAbits 000C                                 _PORTBbits 000D  
                               _PORTCbits 000E                   __size_of_timerInterrupt 0153  
                               _TRISCbits 0013                       timerInterrupt@value 00DF  
                    ??i1_DATAEE_WriteByte 0073                  __end_of_DATAEE_WriteByte 145A  
                           readTC74@value 0073                            __end_of_LCDcmd 129C  
                         ??_initializeREG 0124                            __end_of_LCDstr 1352  
                          LCDsend2x4@mode 0122                               vfpfcnvrt@ap 004F  
                             vfpfcnvrt@fp 0063                               vfpfcnvrt@ll 0056  
                          __end_of___wmul 13F4                            _I2C1_DO_RX_ACK 0000  
                       __size_of_TMR1_ISR 000E                storeEPROMBuild@temperature 0129  
                  ?_OSCILLATOR_Initialize 0070                            __end_of_strlen 13B7  
                     start_initialization 001A                   __end_of_writeRingBuffer 178F  
         __size_of_PIN_MANAGER_Initialize 0045                               __end_of_abs 139D  
                             __end_of_pad 16CE                          WriteI2C@data_out 0121  
                                ??_LCDcmd 0078                                  ??_LCDstr 0079  
                        ?_initializeEPROM 0070                       DATAEE_ReadByte@bAdd 0120  
                        ?_I2C1_Initialize 0070                            _max_luminosity 0154  
                __size_of_TMR1_Initialize 0021                               vfprintf@fmt 0064  
                        ??_PMD_Initialize 0120                           _min_temperature 00E9  
                                ??___wmul 0074                    __size_of_TMR1_CallBack 000D  
                                ??_strlen 0072                         __size_of_WriteI2C 005A  
                   __size_ofi1_LCDsend2x4 00B6                  _ADCC_GetSingleConversion 1319  
                 i1DATAEE_WriteByte@bData 0072                                  ?_LCDchar 0070  
                                ?_LCDbusy 0077                                  ?_LCDinit 0070  
                    _I2C1_DO_SEND_RESTART 0000                                  ?_LCDrecv 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                           __pcstackBANK2 0120                          ___aodiv@dividend 0028  
                                LCDchar@c 0078                ??_parseEPROMInitialization 012E  
                                LCDsend@c 0123                                  ?_ReadI2C 0070  
                       __size_of_readTC74 010D                                 _atoi$2975 0022  
                               _atoi$2976 0026                                 _atoi$2977 0024  
                               __pnvBANK1 00EE                                 __pnvBANK2 0149  
                   _rd2RegCompleteHandler 0000                                 _character 0150  
                                ?_OpenI2C 0070                    _PIN_MANAGER_Initialize 0802  
                   _wr2RegCompleteHandler 0000                                 _dtoa$2939 003B  
                       __size_of_operADDR 0037                           _storeEPROMBuild 15D6  
        __end_of_TMR1_SetInterruptHandler 128F           ADCC_GetSingleConversion@channel 0072  
                                ?___aodiv 0020                                  ?___aomod 0020  
                        ___aodiv@quotient 0073                              i1_LCDsend2x4 0A7A  
                       __size_of_printLCD 0073              ??_INTERRUPT_InterruptManager 007E  
                       __size_of_vfprintf 0031                            _timerInterrupt 0587  
                                ?_isdigit 0070                                  ?_isspace 0070  
                        ?_writeRingBuffer 0074                                  ?_sprintf 00A0  
                          __size_of_fputc 004F                            __size_of_fputs 0029  
                __size_of_DATAEE_ReadByte 0010                            __size_of_putch 0001  
                           _TMR1_CallBack 12BF                            ___wmul@product 0074  
                                _LATAbits 0016                                _I2C1_DO_RX 0000  
                              _I2C1_DO_TX 0000                                 clear_ram0 128F  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                                u303_2lld 0DE1                              _modification 0151  
                                u312_2lld 0EA6                             i1LCDsend2x4@c 0075  
                                u305_2lld 0E0C                                  u322_2lld 0DA5  
                                u314_2lld 0CF7                                  u316_2lld 0D22  
                                u340_2lld 0464                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0014                                  _PIR3bits 070F  
                                _PIR4bits 0710                                 _variable1 00E7  
                               _variable2 00E6                 _I2C1_DO_SEND_RESTART_READ 0000  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR1_ISR 12D9                                  _SSP1STAT 018F  
                               _vfpfcnvrt 0249                    __end_of_timerInterrupt 06DA  
                       ??_TMR1_Initialize 0122                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                              _ADCON3bits 0096                         ___wmul@multiplier 0070  
                      i1WriteI2C@data_out 0071                 writeRingBuffer@luminosity 0074  
                        __size_of_LCDchar 0008                     DATAEE_WriteByte@bData 0122  
                        __size_of_LCDbusy 0011                          __size_of_LCDinit 0083  
                        __size_of_LCDrecv 0148                          __size_of_LCDsend 0053  
                            _isspace$2993 0074                             _I2C1_DO_RESET 0000  
                              vfpfcnvrt@c 0062                            ?_TMR1_CallBack 0070  
                       ?_DATAEE_WriteByte 0120                   __end_of_storeEPROMBuild 1625  
                      ??_DATAEE_WriteByte 0123                               _l_threshold 015A  
                        __size_of_ReadI2C 001A                                _ADSTATbits 0097  
                        __size_of_OpenI2C 000D                                vfprintf@ap 0066  
                              vfprintf@fp 0069                            _min_luminosity 00EA  
                 ??_OSCILLATOR_Initialize 0120                          __size_of___aodiv 0101  
                        __size_of___aomod 00EA                                ?_vfpfcnvrt 004E  
                                _WriteI2C 16CE                           ?_timerInterrupt 0070  
                         ___aodiv@divisor 0020                  _TMR1_SetInterruptHandler 1289  
                        i1LCDsend2x4@mode 0072                           ___aodiv@counter 0071  
                   _TMR1_InterruptHandler 014B                                sprintf@fmt 00A0  
                __size_of_ADCC_Initialize 0017                          __size_of_isdigit 0018  
                        __size_of_isspace 0021                                  __ptext10 1289  
                                __ptext11 12A4                                  __ptext20 16CE  
                                __ptext12 0802                                  __ptext13 12AC  
                              _T1GCONbits 020F                                  __ptext30 0847  
                                __ptext22 12D9                                  __ptext14 12B5  
                                __ptext31 145A                                  __ptext23 1308  
                                __ptext15 1352                                  __ptext40 0DB7  
                                __ptext32 14D4                                  __ptext24 12BF  
                                __ptext16 12CC                                  __ptext41 178F  
                                __ptext33 0249                                  __ptext25 07FF  
                                __ptext17 08BA                                  __ptext50 1295  
                                __ptext42 1587                                  __ptext34 041B  
                                __ptext26 0587                                  __ptext18 0BF6  
                                __ptext51 0A7A                                  __ptext43 0003  
                                __ptext35 1678                                  __ptext27 1728  
                                __ptext19 1625                                  __ptext52 12F7  
                                __ptext44 09CB                                  __ptext36 139D  
                                __ptext28 13B7                                  __ptext53 0EB8  
                                __ptext45 13F4                                  __ptext37 1480  
                                __ptext29 06DA                                  __ptext54 153C  
                                __ptext46 07E7                                  __ptext38 1383  
                                __ptext55 1369                                  __ptext47 13D5  
                                __ptext39 0CCD                                  __ptext56 1319  
                                __ptext48 133E                                  __ptext49 129C  
        __end_of_parseEPROMInitialization 0BF6                              _SSP1CON1bits 0190  
                            _SSP1CON2bits 0191               __size_ofi1_DATAEE_WriteByte 001E  
                        __size_of_sprintf 0026               DATAEE_WriteByte@GIEBitValue 0123  
                                _readTC74 06DA                  _I2C1_CallbackReturnReset 0000  
                           __size_of_atoi 00AF                             __size_of_ctoa 0071  
                           __size_of_main 0210                             __size_of_dtoa 016C  
                                _operADDR 1505                                  _minimode 0157  
                       ??_DATAEE_ReadByte 0122                     __end_of_initializeREG 14D4  
                                _printLCD 0847                                  main@ALAF 0145  
                                main@ALAL 0144                                  main@ALAT 0143  
                                main@CLKH 0146                ??_ADCC_GetSingleConversion 0072  
                                main@CLKM 0147                                  main@TALA 0142  
                                int$flags 007E                                  main@NREG 013D  
                                main@PMON 0141                 timerInterrupt@temperature 00DE  
                                _vfprintf 14D4        __end_of_INTERRUPT_InterruptManager 0018  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                              _I2C1_DO_IDLE 0000  
                            _I2C1_DO_RCEN 0000                          ___aomod@dividend 0028  
                          _vfpfcnvrt$2954 0060                                _INTCONbits 000B  
                             _NVMCON1bits 081E                                  isdigit@c 0070  
                         ??_TMR1_CallBack 007E                                _LCDsend2x4 0BF6  
        parseEPROMInitialization@checksum 012D                                  intlevel1 0000  
                               sprintf@ap 00AD                                  isspace@c 0070  
                        ?_storeEPROMBuild 0127                   ?_PIN_MANAGER_Initialize 0070  
                 _I2C1_CallbackReturnStop 0000                               _t_threshold 015B  
                    _I2C1_DO_ADDRESS_NACK 0000                  __size_of_initializeEPROM 008E  
                         ___aomod@divisor 0020                               ??_vfpfcnvrt 0050  
                         ___aomod@counter 0071                  __size_of_I2C1_Initialize 000A  
                           __pstringtext1 1800                             __pstringtext2 1820  
                           __pstringtext3 1837                             __pstringtext4 0000  
                                sprintf@f 00AE                                  sprintf@s 00AC  
                        operADDR@dataAddr 0125                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                              ___aodiv@sign 0072  
          __end_of_PIN_MANAGER_Initialize 0847                         ??_ADCC_Initialize 0120  
                            ___aomod@sign 0072                           _TMR1_Initialize 1415  
                       operADDR@operation 0124  
