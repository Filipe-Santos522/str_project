<<<<<<< Updated upstream


Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 28 21:06:20 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.35
    40                           ; Generated 13/04/2021 GMT
    41                           ; 
    42                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F18875 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001C                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  008C                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0110                     	;# 
   134  0110                     	;# 
   135  0111                     	;# 
   136  0112                     	;# 
   137  0112                     	;# 
   138  0113                     	;# 
   139  0114                     	;# 
   140  0114                     	;# 
   141  0115                     	;# 
   142  0116                     	;# 
   143  0116                     	;# 
   144  0117                     	;# 
   145  0119                     	;# 
   146  0119                     	;# 
   147  0119                     	;# 
   148  011A                     	;# 
   149  011A                     	;# 
   150  011A                     	;# 
   151  011B                     	;# 
   152  011B                     	;# 
   153  011B                     	;# 
   154  011B                     	;# 
   155  011B                     	;# 
   156  011C                     	;# 
   157  011C                     	;# 
   158  011C                     	;# 
   159  011D                     	;# 
   160  011D                     	;# 
   161  011D                     	;# 
   162  011E                     	;# 
   163  011E                     	;# 
   164  011E                     	;# 
   165  011F                     	;# 
   166  011F                     	;# 
   167  011F                     	;# 
   168  011F                     	;# 
   169  011F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  018E                     	;# 
   173  018F                     	;# 
   174  0190                     	;# 
   175  0191                     	;# 
   176  0192                     	;# 
   177  0196                     	;# 
   178  0197                     	;# 
   179  0198                     	;# 
   180  0199                     	;# 
   181  019A                     	;# 
   182  019B                     	;# 
   183  019C                     	;# 
   184  020C                     	;# 
   185  020C                     	;# 
   186  020D                     	;# 
   187  020E                     	;# 
   188  020F                     	;# 
   189  020F                     	;# 
   190  0210                     	;# 
   191  0210                     	;# 
   192  0211                     	;# 
   193  0211                     	;# 
   194  0212                     	;# 
   195  0212                     	;# 
   196  0213                     	;# 
   197  0214                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0216                     	;# 
   201  0216                     	;# 
   202  0217                     	;# 
   203  0217                     	;# 
   204  0218                     	;# 
   205  0218                     	;# 
   206  0219                     	;# 
   207  021A                     	;# 
   208  021B                     	;# 
   209  021B                     	;# 
   210  021C                     	;# 
   211  021C                     	;# 
   212  021D                     	;# 
   213  021D                     	;# 
   214  021E                     	;# 
   215  021F                     	;# 
   216  028C                     	;# 
   217  028C                     	;# 
   218  028D                     	;# 
   219  028D                     	;# 
   220  028E                     	;# 
   221  028F                     	;# 
   222  0290                     	;# 
   223  0290                     	;# 
   224  0291                     	;# 
   225  0292                     	;# 
   226  0292                     	;# 
   227  0293                     	;# 
   228  0293                     	;# 
   229  0294                     	;# 
   230  0295                     	;# 
   231  0296                     	;# 
   232  0296                     	;# 
   233  0297                     	;# 
   234  0298                     	;# 
   235  0298                     	;# 
   236  0299                     	;# 
   237  0299                     	;# 
   238  029A                     	;# 
   239  029B                     	;# 
   240  029C                     	;# 
   241  029C                     	;# 
   242  029D                     	;# 
   243  030C                     	;# 
   244  030C                     	;# 
   245  030D                     	;# 
   246  030E                     	;# 
   247  030F                     	;# 
   248  0310                     	;# 
   249  0310                     	;# 
   250  0311                     	;# 
   251  0312                     	;# 
   252  0313                     	;# 
   253  0314                     	;# 
   254  0314                     	;# 
   255  0315                     	;# 
   256  0316                     	;# 
   257  0317                     	;# 
   258  0318                     	;# 
   259  0318                     	;# 
   260  0319                     	;# 
   261  031A                     	;# 
   262  031B                     	;# 
   263  031C                     	;# 
   264  031C                     	;# 
   265  031D                     	;# 
   266  031E                     	;# 
   267  031F                     	;# 
   268  038C                     	;# 
   269  038C                     	;# 
   270  038D                     	;# 
   271  038E                     	;# 
   272  0390                     	;# 
   273  0390                     	;# 
   274  0391                     	;# 
   275  0392                     	;# 
   276  040C                     	;# 
   277  040D                     	;# 
   278  040E                     	;# 
   279  040F                     	;# 
   280  0410                     	;# 
   281  0411                     	;# 
   282  0416                     	;# 
   283  0416                     	;# 
   284  0417                     	;# 
   285  0418                     	;# 
   286  0418                     	;# 
   287  0419                     	;# 
   288  041A                     	;# 
   289  041A                     	;# 
   290  041B                     	;# 
   291  041C                     	;# 
   292  041C                     	;# 
   293  041D                     	;# 
   294  041E                     	;# 
   295  041F                     	;# 
   296  048C                     	;# 
   297  048C                     	;# 
   298  048D                     	;# 
   299  048E                     	;# 
   300  048F                     	;# 
   301  048F                     	;# 
   302  0490                     	;# 
   303  0491                     	;# 
   304  0492                     	;# 
   305  0492                     	;# 
   306  0493                     	;# 
   307  0494                     	;# 
   308  0495                     	;# 
   309  0495                     	;# 
   310  0496                     	;# 
   311  0497                     	;# 
   312  0498                     	;# 
   313  0499                     	;# 
   314  049A                     	;# 
   315  049B                     	;# 
   316  049C                     	;# 
   317  049D                     	;# 
   318  050C                     	;# 
   319  050C                     	;# 
   320  050D                     	;# 
   321  050E                     	;# 
   322  050F                     	;# 
   323  050F                     	;# 
   324  0510                     	;# 
   325  0511                     	;# 
   326  0512                     	;# 
   327  0512                     	;# 
   328  0513                     	;# 
   329  0514                     	;# 
   330  0515                     	;# 
   331  0515                     	;# 
   332  0516                     	;# 
   333  0517                     	;# 
   334  0518                     	;# 
   335  0519                     	;# 
   336  051A                     	;# 
   337  051B                     	;# 
   338  051C                     	;# 
   339  051D                     	;# 
   340  058C                     	;# 
   341  058C                     	;# 
   342  058D                     	;# 
   343  058E                     	;# 
   344  058F                     	;# 
   345  058F                     	;# 
   346  0590                     	;# 
   347  0591                     	;# 
   348  0592                     	;# 
   349  0593                     	;# 
   350  060C                     	;# 
   351  060D                     	;# 
   352  060E                     	;# 
   353  060F                     	;# 
   354  0610                     	;# 
   355  0611                     	;# 
   356  0612                     	;# 
   357  0613                     	;# 
   358  0614                     	;# 
   359  0616                     	;# 
   360  0617                     	;# 
   361  0618                     	;# 
   362  0619                     	;# 
   363  061A                     	;# 
   364  061B                     	;# 
   365  061C                     	;# 
   366  061D                     	;# 
   367  061E                     	;# 
   368  068C                     	;# 
   369  068D                     	;# 
   370  068E                     	;# 
   371  068F                     	;# 
   372  0690                     	;# 
   373  0691                     	;# 
   374  0692                     	;# 
   375  0693                     	;# 
   376  0694                     	;# 
   377  070C                     	;# 
   378  070D                     	;# 
   379  070E                     	;# 
   380  070F                     	;# 
   381  0710                     	;# 
   382  0711                     	;# 
   383  0712                     	;# 
   384  0713                     	;# 
   385  0714                     	;# 
   386  0716                     	;# 
   387  0717                     	;# 
   388  0718                     	;# 
   389  0719                     	;# 
   390  071A                     	;# 
   391  071B                     	;# 
   392  071C                     	;# 
   393  071D                     	;# 
   394  071E                     	;# 
   395  0796                     	;# 
   396  0797                     	;# 
   397  0798                     	;# 
   398  0799                     	;# 
   399  079A                     	;# 
   400  079B                     	;# 
   401  080C                     	;# 
   402  080D                     	;# 
   403  080E                     	;# 
   404  080F                     	;# 
   405  0810                     	;# 
   406  0811                     	;# 
   407  0812                     	;# 
   408  0813                     	;# 
   409  0814                     	;# 
   410  081A                     	;# 
   411  081B                     	;# 
   412  081C                     	;# 
   413  081D                     	;# 
   414  081E                     	;# 
   415  081F                     	;# 
   416  088C                     	;# 
   417  088D                     	;# 
   418  088E                     	;# 
   419  088F                     	;# 
   420  0890                     	;# 
   421  0891                     	;# 
   422  0892                     	;# 
   423  0893                     	;# 
   424  0895                     	;# 
   425  0896                     	;# 
   426  0897                     	;# 
   427  0898                     	;# 
   428  0899                     	;# 
   429  089A                     	;# 
   430  089B                     	;# 
   431  090C                     	;# 
   432  090E                     	;# 
   433  090F                     	;# 
   434  091F                     	;# 
   435  091F                     	;# 
   436  098F                     	;# 
   437  098F                     	;# 
   438  0990                     	;# 
   439  0991                     	;# 
   440  0992                     	;# 
   441  0993                     	;# 
   442  0994                     	;# 
   443  0995                     	;# 
   444  0996                     	;# 
   445  0997                     	;# 
   446  0E0F                     	;# 
   447  0E10                     	;# 
   448  0E11                     	;# 
   449  0E12                     	;# 
   450  0E13                     	;# 
   451  0E14                     	;# 
   452  0E15                     	;# 
   453  0E16                     	;# 
   454  0E17                     	;# 
   455  0E18                     	;# 
   456  0E19                     	;# 
   457  0E1A                     	;# 
   458  0E1B                     	;# 
   459  0E1C                     	;# 
   460  0E1D                     	;# 
   461  0E1E                     	;# 
   462  0E1F                     	;# 
   463  0E20                     	;# 
   464  0E21                     	;# 
   465  0E22                     	;# 
   466  0E23                     	;# 
   467  0E24                     	;# 
   468  0E25                     	;# 
   469  0E26                     	;# 
   470  0E27                     	;# 
   471  0E28                     	;# 
   472  0E29                     	;# 
   473  0E2A                     	;# 
   474  0E2B                     	;# 
   475  0E2C                     	;# 
   476  0E2D                     	;# 
   477  0E2E                     	;# 
   478  0E2F                     	;# 
   479  0E30                     	;# 
   480  0E31                     	;# 
   481  0E32                     	;# 
   482  0E33                     	;# 
   483  0E34                     	;# 
   484  0E35                     	;# 
   485  0E36                     	;# 
   486  0E37                     	;# 
   487  0E8F                     	;# 
   488  0E90                     	;# 
   489  0E91                     	;# 
   490  0E92                     	;# 
   491  0E93                     	;# 
   492  0E94                     	;# 
   493  0E95                     	;# 
   494  0E96                     	;# 
   495  0E97                     	;# 
   496  0E9C                     	;# 
   497  0E9D                     	;# 
   498  0E9E                     	;# 
   499  0EA1                     	;# 
   500  0EA2                     	;# 
   501  0EA3                     	;# 
   502  0EA4                     	;# 
   503  0EA5                     	;# 
   504  0EA9                     	;# 
   505  0EAA                     	;# 
   506  0EAB                     	;# 
   507  0EAC                     	;# 
   508  0EB1                     	;# 
   509  0EB2                     	;# 
   510  0EB3                     	;# 
   511  0EB8                     	;# 
   512  0EB9                     	;# 
   513  0EBA                     	;# 
   514  0EBB                     	;# 
   515  0EBC                     	;# 
   516  0EBD                     	;# 
   517  0EBE                     	;# 
   518  0EC3                     	;# 
   519  0EC5                     	;# 
   520  0EC6                     	;# 
   521  0EC7                     	;# 
   522  0EC8                     	;# 
   523  0EC9                     	;# 
   524  0ECA                     	;# 
   525  0ECB                     	;# 
   526  0ECC                     	;# 
   527  0F10                     	;# 
   528  0F11                     	;# 
   529  0F12                     	;# 
   530  0F13                     	;# 
   531  0F14                     	;# 
   532  0F15                     	;# 
   533  0F16                     	;# 
   534  0F17                     	;# 
   535  0F18                     	;# 
   536  0F19                     	;# 
   537  0F1A                     	;# 
   538  0F1B                     	;# 
   539  0F1C                     	;# 
   540  0F1D                     	;# 
   541  0F1E                     	;# 
   542  0F1F                     	;# 
   543  0F20                     	;# 
   544  0F21                     	;# 
   545  0F22                     	;# 
   546  0F23                     	;# 
   547  0F24                     	;# 
   548  0F25                     	;# 
   549  0F26                     	;# 
   550  0F27                     	;# 
   551  0F28                     	;# 
   552  0F29                     	;# 
   553  0F2A                     	;# 
   554  0F2B                     	;# 
   555  0F2C                     	;# 
   556  0F2D                     	;# 
   557  0F2E                     	;# 
   558  0F2F                     	;# 
   559  0F30                     	;# 
   560  0F31                     	;# 
   561  0F32                     	;# 
   562  0F38                     	;# 
   563  0F39                     	;# 
   564  0F3A                     	;# 
   565  0F3B                     	;# 
   566  0F3C                     	;# 
   567  0F3D                     	;# 
   568  0F3E                     	;# 
   569  0F3F                     	;# 
   570  0F40                     	;# 
   571  0F41                     	;# 
   572  0F43                     	;# 
   573  0F44                     	;# 
   574  0F45                     	;# 
   575  0F46                     	;# 
   576  0F47                     	;# 
   577  0F48                     	;# 
   578  0F49                     	;# 
   579  0F4A                     	;# 
   580  0F4B                     	;# 
   581  0F4C                     	;# 
   582  0F4E                     	;# 
   583  0F4F                     	;# 
   584  0F50                     	;# 
   585  0F51                     	;# 
   586  0F52                     	;# 
   587  0F53                     	;# 
   588  0F54                     	;# 
   589  0F55                     	;# 
   590  0F56                     	;# 
   591  0F57                     	;# 
   592  0F59                     	;# 
   593  0F5A                     	;# 
   594  0F5B                     	;# 
   595  0F5C                     	;# 
   596  0F5D                     	;# 
   597  0F61                     	;# 
   598  0F62                     	;# 
   599  0F64                     	;# 
   600  0F65                     	;# 
   601  0F66                     	;# 
   602  0F67                     	;# 
   603  0F68                     	;# 
   604  0F69                     	;# 
   605  0F6A                     	;# 
   606  0F6B                     	;# 
   607  0F6C                     	;# 
   608  0F6D                     	;# 
   609  0FE4                     	;# 
   610  0FE5                     	;# 
   611  0FE6                     	;# 
   612  0FE7                     	;# 
   613  0FE8                     	;# 
   614  0FE9                     	;# 
   615  0FEA                     	;# 
   616  0FEB                     	;# 
   617  0FED                     	;# 
   618  0FEE                     	;# 
   619  0FEF                     	;# 
   620  0000                     	;# 
   621  0001                     	;# 
   622  0002                     	;# 
   623  0003                     	;# 
   624  0004                     	;# 
   625  0005                     	;# 
   626  0006                     	;# 
   627  0007                     	;# 
   628  0008                     	;# 
   629  0009                     	;# 
   630  000A                     	;# 
   631  000B                     	;# 
   632  000C                     	;# 
   633  000D                     	;# 
   634  000E                     	;# 
   635  000F                     	;# 
   636  0010                     	;# 
   637  0011                     	;# 
   638  0012                     	;# 
   639  0013                     	;# 
   640  0014                     	;# 
   641  0015                     	;# 
   642  0016                     	;# 
   643  0017                     	;# 
   644  0018                     	;# 
   645  0019                     	;# 
   646  001A                     	;# 
   647  001C                     	;# 
   648  001C                     	;# 
   649  001D                     	;# 
   650  001D                     	;# 
   651  001E                     	;# 
   652  001F                     	;# 
   653  008C                     	;# 
   654  008C                     	;# 
   655  008D                     	;# 
   656  008E                     	;# 
   657  008E                     	;# 
   658  008F                     	;# 
   659  0090                     	;# 
   660  0090                     	;# 
   661  0091                     	;# 
   662  0093                     	;# 
   663  0094                     	;# 
   664  0095                     	;# 
   665  0096                     	;# 
   666  0097                     	;# 
   667  0098                     	;# 
   668  0099                     	;# 
   669  009A                     	;# 
   670  009B                     	;# 
   671  009C                     	;# 
   672  009D                     	;# 
   673  009E                     	;# 
   674  010C                     	;# 
   675  010D                     	;# 
   676  010E                     	;# 
   677  010E                     	;# 
   678  010F                     	;# 
   679  0110                     	;# 
   680  0110                     	;# 
   681  0111                     	;# 
   682  0112                     	;# 
   683  0112                     	;# 
   684  0113                     	;# 
   685  0114                     	;# 
   686  0114                     	;# 
   687  0115                     	;# 
   688  0116                     	;# 
   689  0116                     	;# 
   690  0117                     	;# 
   691  0119                     	;# 
   692  0119                     	;# 
   693  0119                     	;# 
   694  011A                     	;# 
   695  011A                     	;# 
   696  011A                     	;# 
   697  011B                     	;# 
   698  011B                     	;# 
   699  011B                     	;# 
   700  011B                     	;# 
   701  011B                     	;# 
   702  011C                     	;# 
   703  011C                     	;# 
   704  011C                     	;# 
   705  011D                     	;# 
   706  011D                     	;# 
   707  011D                     	;# 
   708  011E                     	;# 
   709  011E                     	;# 
   710  011E                     	;# 
   711  011F                     	;# 
   712  011F                     	;# 
   713  011F                     	;# 
   714  011F                     	;# 
   715  011F                     	;# 
   716  018C                     	;# 
   717  018D                     	;# 
   718  018E                     	;# 
   719  018F                     	;# 
   720  0190                     	;# 
   721  0191                     	;# 
   722  0192                     	;# 
   723  0196                     	;# 
   724  0197                     	;# 
   725  0198                     	;# 
   726  0199                     	;# 
   727  019A                     	;# 
   728  019B                     	;# 
   729  019C                     	;# 
   730  020C                     	;# 
   731  020C                     	;# 
   732  020D                     	;# 
   733  020E                     	;# 
   734  020F                     	;# 
   735  020F                     	;# 
   736  0210                     	;# 
   737  0210                     	;# 
   738  0211                     	;# 
   739  0211                     	;# 
   740  0212                     	;# 
   741  0212                     	;# 
   742  0213                     	;# 
   743  0214                     	;# 
   744  0215                     	;# 
   745  0215                     	;# 
   746  0216                     	;# 
   747  0216                     	;# 
   748  0217                     	;# 
   749  0217                     	;# 
   750  0218                     	;# 
   751  0218                     	;# 
   752  0219                     	;# 
   753  021A                     	;# 
   754  021B                     	;# 
   755  021B                     	;# 
   756  021C                     	;# 
   757  021C                     	;# 
   758  021D                     	;# 
   759  021D                     	;# 
   760  021E                     	;# 
   761  021F                     	;# 
   762  028C                     	;# 
   763  028C                     	;# 
   764  028D                     	;# 
   765  028D                     	;# 
   766  028E                     	;# 
   767  028F                     	;# 
   768  0290                     	;# 
   769  0290                     	;# 
   770  0291                     	;# 
   771  0292                     	;# 
   772  0292                     	;# 
   773  0293                     	;# 
   774  0293                     	;# 
   775  0294                     	;# 
   776  0295                     	;# 
   777  0296                     	;# 
   778  0296                     	;# 
   779  0297                     	;# 
   780  0298                     	;# 
   781  0298                     	;# 
   782  0299                     	;# 
   783  0299                     	;# 
   784  029A                     	;# 
   785  029B                     	;# 
   786  029C                     	;# 
   787  029C                     	;# 
   788  029D                     	;# 
   789  030C                     	;# 
   790  030C                     	;# 
   791  030D                     	;# 
   792  030E                     	;# 
   793  030F                     	;# 
   794  0310                     	;# 
   795  0310                     	;# 
   796  0311                     	;# 
   797  0312                     	;# 
   798  0313                     	;# 
   799  0314                     	;# 
   800  0314                     	;# 
   801  0315                     	;# 
   802  0316                     	;# 
   803  0317                     	;# 
   804  0318                     	;# 
   805  0318                     	;# 
   806  0319                     	;# 
   807  031A                     	;# 
   808  031B                     	;# 
   809  031C                     	;# 
   810  031C                     	;# 
   811  031D                     	;# 
   812  031E                     	;# 
   813  031F                     	;# 
   814  038C                     	;# 
   815  038C                     	;# 
   816  038D                     	;# 
   817  038E                     	;# 
   818  0390                     	;# 
   819  0390                     	;# 
   820  0391                     	;# 
   821  0392                     	;# 
   822  040C                     	;# 
   823  040D                     	;# 
   824  040E                     	;# 
   825  040F                     	;# 
   826  0410                     	;# 
   827  0411                     	;# 
   828  0416                     	;# 
   829  0416                     	;# 
   830  0417                     	;# 
   831  0418                     	;# 
   832  0418                     	;# 
   833  0419                     	;# 
   834  041A                     	;# 
   835  041A                     	;# 
   836  041B                     	;# 
   837  041C                     	;# 
   838  041C                     	;# 
   839  041D                     	;# 
   840  041E                     	;# 
   841  041F                     	;# 
   842  048C                     	;# 
   843  048C                     	;# 
   844  048D                     	;# 
   845  048E                     	;# 
   846  048F                     	;# 
   847  048F                     	;# 
   848  0490                     	;# 
   849  0491                     	;# 
   850  0492                     	;# 
   851  0492                     	;# 
   852  0493                     	;# 
   853  0494                     	;# 
   854  0495                     	;# 
   855  0495                     	;# 
   856  0496                     	;# 
   857  0497                     	;# 
   858  0498                     	;# 
   859  0499                     	;# 
   860  049A                     	;# 
   861  049B                     	;# 
   862  049C                     	;# 
   863  049D                     	;# 
   864  050C                     	;# 
   865  050C                     	;# 
   866  050D                     	;# 
   867  050E                     	;# 
   868  050F                     	;# 
   869  050F                     	;# 
   870  0510                     	;# 
   871  0511                     	;# 
   872  0512                     	;# 
   873  0512                     	;# 
   874  0513                     	;# 
   875  0514                     	;# 
   876  0515                     	;# 
   877  0515                     	;# 
   878  0516                     	;# 
   879  0517                     	;# 
   880  0518                     	;# 
   881  0519                     	;# 
   882  051A                     	;# 
   883  051B                     	;# 
   884  051C                     	;# 
   885  051D                     	;# 
   886  058C                     	;# 
   887  058C                     	;# 
   888  058D                     	;# 
   889  058E                     	;# 
   890  058F                     	;# 
   891  058F                     	;# 
   892  0590                     	;# 
   893  0591                     	;# 
   894  0592                     	;# 
   895  0593                     	;# 
   896  060C                     	;# 
   897  060D                     	;# 
   898  060E                     	;# 
   899  060F                     	;# 
   900  0610                     	;# 
   901  0611                     	;# 
   902  0612                     	;# 
   903  0613                     	;# 
   904  0614                     	;# 
   905  0616                     	;# 
   906  0617                     	;# 
   907  0618                     	;# 
   908  0619                     	;# 
   909  061A                     	;# 
   910  061B                     	;# 
   911  061C                     	;# 
   912  061D                     	;# 
   913  061E                     	;# 
   914  068C                     	;# 
   915  068D                     	;# 
   916  068E                     	;# 
   917  068F                     	;# 
   918  0690                     	;# 
   919  0691                     	;# 
   920  0692                     	;# 
   921  0693                     	;# 
   922  0694                     	;# 
   923  070C                     	;# 
   924  070D                     	;# 
   925  070E                     	;# 
   926  070F                     	;# 
   927  0710                     	;# 
   928  0711                     	;# 
   929  0712                     	;# 
   930  0713                     	;# 
   931  0714                     	;# 
   932  0716                     	;# 
   933  0717                     	;# 
   934  0718                     	;# 
   935  0719                     	;# 
   936  071A                     	;# 
   937  071B                     	;# 
   938  071C                     	;# 
   939  071D                     	;# 
   940  071E                     	;# 
   941  0796                     	;# 
   942  0797                     	;# 
   943  0798                     	;# 
   944  0799                     	;# 
   945  079A                     	;# 
   946  079B                     	;# 
   947  080C                     	;# 
   948  080D                     	;# 
   949  080E                     	;# 
   950  080F                     	;# 
   951  0810                     	;# 
   952  0811                     	;# 
   953  0812                     	;# 
   954  0813                     	;# 
   955  0814                     	;# 
   956  081A                     	;# 
   957  081B                     	;# 
   958  081C                     	;# 
   959  081D                     	;# 
   960  081E                     	;# 
   961  081F                     	;# 
   962  088C                     	;# 
   963  088D                     	;# 
   964  088E                     	;# 
   965  088F                     	;# 
   966  0890                     	;# 
   967  0891                     	;# 
   968  0892                     	;# 
   969  0893                     	;# 
   970  0895                     	;# 
   971  0896                     	;# 
   972  0897                     	;# 
   973  0898                     	;# 
   974  0899                     	;# 
   975  089A                     	;# 
   976  089B                     	;# 
   977  090C                     	;# 
   978  090E                     	;# 
   979  090F                     	;# 
   980  091F                     	;# 
   981  091F                     	;# 
   982  098F                     	;# 
   983  098F                     	;# 
   984  0990                     	;# 
   985  0991                     	;# 
   986  0992                     	;# 
   987  0993                     	;# 
   988  0994                     	;# 
   989  0995                     	;# 
   990  0996                     	;# 
   991  0997                     	;# 
   992  0E0F                     	;# 
   993  0E10                     	;# 
   994  0E11                     	;# 
   995  0E12                     	;# 
   996  0E13                     	;# 
   997  0E14                     	;# 
   998  0E15                     	;# 
   999  0E16                     	;# 
  1000  0E17                     	;# 
  1001  0E18                     	;# 
  1002  0E19                     	;# 
  1003  0E1A                     	;# 
  1004  0E1B                     	;# 
  1005  0E1C                     	;# 
  1006  0E1D                     	;# 
  1007  0E1E                     	;# 
  1008  0E1F                     	;# 
  1009  0E20                     	;# 
  1010  0E21                     	;# 
  1011  0E22                     	;# 
  1012  0E23                     	;# 
  1013  0E24                     	;# 
  1014  0E25                     	;# 
  1015  0E26                     	;# 
  1016  0E27                     	;# 
  1017  0E28                     	;# 
  1018  0E29                     	;# 
  1019  0E2A                     	;# 
  1020  0E2B                     	;# 
  1021  0E2C                     	;# 
  1022  0E2D                     	;# 
  1023  0E2E                     	;# 
  1024  0E2F                     	;# 
  1025  0E30                     	;# 
  1026  0E31                     	;# 
  1027  0E32                     	;# 
  1028  0E33                     	;# 
  1029  0E34                     	;# 
  1030  0E35                     	;# 
  1031  0E36                     	;# 
  1032  0E37                     	;# 
  1033  0E8F                     	;# 
  1034  0E90                     	;# 
  1035  0E91                     	;# 
  1036  0E92                     	;# 
  1037  0E93                     	;# 
  1038  0E94                     	;# 
  1039  0E95                     	;# 
  1040  0E96                     	;# 
  1041  0E97                     	;# 
  1042  0E9C                     	;# 
  1043  0E9D                     	;# 
  1044  0E9E                     	;# 
  1045  0EA1                     	;# 
  1046  0EA2                     	;# 
  1047  0EA3                     	;# 
  1048  0EA4                     	;# 
  1049  0EA5                     	;# 
  1050  0EA9                     	;# 
  1051  0EAA                     	;# 
  1052  0EAB                     	;# 
  1053  0EAC                     	;# 
  1054  0EB1                     	;# 
  1055  0EB2                     	;# 
  1056  0EB3                     	;# 
  1057  0EB8                     	;# 
  1058  0EB9                     	;# 
  1059  0EBA                     	;# 
  1060  0EBB                     	;# 
  1061  0EBC                     	;# 
  1062  0EBD                     	;# 
  1063  0EBE                     	;# 
  1064  0EC3                     	;# 
  1065  0EC5                     	;# 
  1066  0EC6                     	;# 
  1067  0EC7                     	;# 
  1068  0EC8                     	;# 
  1069  0EC9                     	;# 
  1070  0ECA                     	;# 
  1071  0ECB                     	;# 
  1072  0ECC                     	;# 
  1073  0F10                     	;# 
  1074  0F11                     	;# 
  1075  0F12                     	;# 
  1076  0F13                     	;# 
  1077  0F14                     	;# 
  1078  0F15                     	;# 
  1079  0F16                     	;# 
  1080  0F17                     	;# 
  1081  0F18                     	;# 
  1082  0F19                     	;# 
  1083  0F1A                     	;# 
  1084  0F1B                     	;# 
  1085  0F1C                     	;# 
  1086  0F1D                     	;# 
  1087  0F1E                     	;# 
  1088  0F1F                     	;# 
  1089  0F20                     	;# 
  1090  0F21                     	;# 
  1091  0F22                     	;# 
  1092  0F23                     	;# 
  1093  0F24                     	;# 
  1094  0F25                     	;# 
  1095  0F26                     	;# 
  1096  0F27                     	;# 
  1097  0F28                     	;# 
  1098  0F29                     	;# 
  1099  0F2A                     	;# 
  1100  0F2B                     	;# 
  1101  0F2C                     	;# 
  1102  0F2D                     	;# 
  1103  0F2E                     	;# 
  1104  0F2F                     	;# 
  1105  0F30                     	;# 
  1106  0F31                     	;# 
  1107  0F32                     	;# 
  1108  0F38                     	;# 
  1109  0F39                     	;# 
  1110  0F3A                     	;# 
  1111  0F3B                     	;# 
  1112  0F3C                     	;# 
  1113  0F3D                     	;# 
  1114  0F3E                     	;# 
  1115  0F3F                     	;# 
  1116  0F40                     	;# 
  1117  0F41                     	;# 
  1118  0F43                     	;# 
  1119  0F44                     	;# 
  1120  0F45                     	;# 
  1121  0F46                     	;# 
  1122  0F47                     	;# 
  1123  0F48                     	;# 
  1124  0F49                     	;# 
  1125  0F4A                     	;# 
  1126  0F4B                     	;# 
  1127  0F4C                     	;# 
  1128  0F4E                     	;# 
  1129  0F4F                     	;# 
  1130  0F50                     	;# 
  1131  0F51                     	;# 
  1132  0F52                     	;# 
  1133  0F53                     	;# 
  1134  0F54                     	;# 
  1135  0F55                     	;# 
  1136  0F56                     	;# 
  1137  0F57                     	;# 
  1138  0F59                     	;# 
  1139  0F5A                     	;# 
  1140  0F5B                     	;# 
  1141  0F5C                     	;# 
  1142  0F5D                     	;# 
  1143  0F61                     	;# 
  1144  0F62                     	;# 
  1145  0F64                     	;# 
  1146  0F65                     	;# 
  1147  0F66                     	;# 
  1148  0F67                     	;# 
  1149  0F68                     	;# 
  1150  0F69                     	;# 
  1151  0F6A                     	;# 
  1152  0F6B                     	;# 
  1153  0F6C                     	;# 
  1154  0F6D                     	;# 
  1155  0FE4                     	;# 
  1156  0FE5                     	;# 
  1157  0FE6                     	;# 
  1158  0FE7                     	;# 
  1159  0FE8                     	;# 
  1160  0FE9                     	;# 
  1161  0FEA                     	;# 
  1162  0FEB                     	;# 
  1163  0FED                     	;# 
  1164  0FEE                     	;# 
  1165  0FEF                     	;# 
  1166  0000                     	;# 
  1167  0001                     	;# 
  1168  0002                     	;# 
  1169  0003                     	;# 
  1170  0004                     	;# 
  1171  0005                     	;# 
  1172  0006                     	;# 
  1173  0007                     	;# 
  1174  0008                     	;# 
  1175  0009                     	;# 
  1176  000A                     	;# 
  1177  000B                     	;# 
  1178  000C                     	;# 
  1179  000D                     	;# 
  1180  000E                     	;# 
  1181  000F                     	;# 
  1182  0010                     	;# 
  1183  0011                     	;# 
  1184  0012                     	;# 
  1185  0013                     	;# 
  1186  0014                     	;# 
  1187  0015                     	;# 
  1188  0016                     	;# 
  1189  0017                     	;# 
  1190  0018                     	;# 
  1191  0019                     	;# 
  1192  001A                     	;# 
  1193  001C                     	;# 
  1194  001C                     	;# 
  1195  001D                     	;# 
  1196  001D                     	;# 
  1197  001E                     	;# 
  1198  001F                     	;# 
  1199  008C                     	;# 
  1200  008C                     	;# 
  1201  008D                     	;# 
  1202  008E                     	;# 
  1203  008E                     	;# 
  1204  008F                     	;# 
  1205  0090                     	;# 
  1206  0090                     	;# 
  1207  0091                     	;# 
  1208  0093                     	;# 
  1209  0094                     	;# 
  1210  0095                     	;# 
  1211  0096                     	;# 
  1212  0097                     	;# 
  1213  0098                     	;# 
  1214  0099                     	;# 
  1215  009A                     	;# 
  1216  009B                     	;# 
  1217  009C                     	;# 
  1218  009D                     	;# 
  1219  009E                     	;# 
  1220  010C                     	;# 
  1221  010D                     	;# 
  1222  010E                     	;# 
  1223  010E                     	;# 
  1224  010F                     	;# 
  1225  0110                     	;# 
  1226  0110                     	;# 
  1227  0111                     	;# 
  1228  0112                     	;# 
  1229  0112                     	;# 
  1230  0113                     	;# 
  1231  0114                     	;# 
  1232  0114                     	;# 
  1233  0115                     	;# 
  1234  0116                     	;# 
  1235  0116                     	;# 
  1236  0117                     	;# 
  1237  0119                     	;# 
  1238  0119                     	;# 
  1239  0119                     	;# 
  1240  011A                     	;# 
  1241  011A                     	;# 
  1242  011A                     	;# 
  1243  011B                     	;# 
  1244  011B                     	;# 
  1245  011B                     	;# 
  1246  011B                     	;# 
  1247  011B                     	;# 
  1248  011C                     	;# 
  1249  011C                     	;# 
  1250  011C                     	;# 
  1251  011D                     	;# 
  1252  011D                     	;# 
  1253  011D                     	;# 
  1254  011E                     	;# 
  1255  011E                     	;# 
  1256  011E                     	;# 
  1257  011F                     	;# 
  1258  011F                     	;# 
  1259  011F                     	;# 
  1260  011F                     	;# 
  1261  011F                     	;# 
  1262  018C                     	;# 
  1263  018D                     	;# 
  1264  018E                     	;# 
  1265  018F                     	;# 
  1266  0190                     	;# 
  1267  0191                     	;# 
  1268  0192                     	;# 
  1269  0196                     	;# 
  1270  0197                     	;# 
  1271  0198                     	;# 
  1272  0199                     	;# 
  1273  019A                     	;# 
  1274  019B                     	;# 
  1275  019C                     	;# 
  1276  020C                     	;# 
  1277  020C                     	;# 
  1278  020D                     	;# 
  1279  020E                     	;# 
  1280  020F                     	;# 
  1281  020F                     	;# 
  1282  0210                     	;# 
  1283  0210                     	;# 
  1284  0211                     	;# 
  1285  0211                     	;# 
  1286  0212                     	;# 
  1287  0212                     	;# 
  1288  0213                     	;# 
  1289  0214                     	;# 
  1290  0215                     	;# 
  1291  0215                     	;# 
  1292  0216                     	;# 
  1293  0216                     	;# 
  1294  0217                     	;# 
  1295  0217                     	;# 
  1296  0218                     	;# 
  1297  0218                     	;# 
  1298  0219                     	;# 
  1299  021A                     	;# 
  1300  021B                     	;# 
  1301  021B                     	;# 
  1302  021C                     	;# 
  1303  021C                     	;# 
  1304  021D                     	;# 
  1305  021D                     	;# 
  1306  021E                     	;# 
  1307  021F                     	;# 
  1308  028C                     	;# 
  1309  028C                     	;# 
  1310  028D                     	;# 
  1311  028D                     	;# 
  1312  028E                     	;# 
  1313  028F                     	;# 
  1314  0290                     	;# 
  1315  0290                     	;# 
  1316  0291                     	;# 
  1317  0292                     	;# 
  1318  0292                     	;# 
  1319  0293                     	;# 
  1320  0293                     	;# 
  1321  0294                     	;# 
  1322  0295                     	;# 
  1323  0296                     	;# 
  1324  0296                     	;# 
  1325  0297                     	;# 
  1326  0298                     	;# 
  1327  0298                     	;# 
  1328  0299                     	;# 
  1329  0299                     	;# 
  1330  029A                     	;# 
  1331  029B                     	;# 
  1332  029C                     	;# 
  1333  029C                     	;# 
  1334  029D                     	;# 
  1335  030C                     	;# 
  1336  030C                     	;# 
  1337  030D                     	;# 
  1338  030E                     	;# 
  1339  030F                     	;# 
  1340  0310                     	;# 
  1341  0310                     	;# 
  1342  0311                     	;# 
  1343  0312                     	;# 
  1344  0313                     	;# 
  1345  0314                     	;# 
  1346  0314                     	;# 
  1347  0315                     	;# 
  1348  0316                     	;# 
  1349  0317                     	;# 
  1350  0318                     	;# 
  1351  0318                     	;# 
  1352  0319                     	;# 
  1353  031A                     	;# 
  1354  031B                     	;# 
  1355  031C                     	;# 
  1356  031C                     	;# 
  1357  031D                     	;# 
  1358  031E                     	;# 
  1359  031F                     	;# 
  1360  038C                     	;# 
  1361  038C                     	;# 
  1362  038D                     	;# 
  1363  038E                     	;# 
  1364  0390                     	;# 
  1365  0390                     	;# 
  1366  0391                     	;# 
  1367  0392                     	;# 
  1368  040C                     	;# 
  1369  040D                     	;# 
  1370  040E                     	;# 
  1371  040F                     	;# 
  1372  0410                     	;# 
  1373  0411                     	;# 
  1374  0416                     	;# 
  1375  0416                     	;# 
  1376  0417                     	;# 
  1377  0418                     	;# 
  1378  0418                     	;# 
  1379  0419                     	;# 
  1380  041A                     	;# 
  1381  041A                     	;# 
  1382  041B                     	;# 
  1383  041C                     	;# 
  1384  041C                     	;# 
  1385  041D                     	;# 
  1386  041E                     	;# 
  1387  041F                     	;# 
  1388  048C                     	;# 
  1389  048C                     	;# 
  1390  048D                     	;# 
  1391  048E                     	;# 
  1392  048F                     	;# 
  1393  048F                     	;# 
  1394  0490                     	;# 
  1395  0491                     	;# 
  1396  0492                     	;# 
  1397  0492                     	;# 
  1398  0493                     	;# 
  1399  0494                     	;# 
  1400  0495                     	;# 
  1401  0495                     	;# 
  1402  0496                     	;# 
  1403  0497                     	;# 
  1404  0498                     	;# 
  1405  0499                     	;# 
  1406  049A                     	;# 
  1407  049B                     	;# 
  1408  049C                     	;# 
  1409  049D                     	;# 
  1410  050C                     	;# 
  1411  050C                     	;# 
  1412  050D                     	;# 
  1413  050E                     	;# 
  1414  050F                     	;# 
  1415  050F                     	;# 
  1416  0510                     	;# 
  1417  0511                     	;# 
  1418  0512                     	;# 
  1419  0512                     	;# 
  1420  0513                     	;# 
  1421  0514                     	;# 
  1422  0515                     	;# 
  1423  0515                     	;# 
  1424  0516                     	;# 
  1425  0517                     	;# 
  1426  0518                     	;# 
  1427  0519                     	;# 
  1428  051A                     	;# 
  1429  051B                     	;# 
  1430  051C                     	;# 
  1431  051D                     	;# 
  1432  058C                     	;# 
  1433  058C                     	;# 
  1434  058D                     	;# 
  1435  058E                     	;# 
  1436  058F                     	;# 
  1437  058F                     	;# 
  1438  0590                     	;# 
  1439  0591                     	;# 
  1440  0592                     	;# 
  1441  0593                     	;# 
  1442  060C                     	;# 
  1443  060D                     	;# 
  1444  060E                     	;# 
  1445  060F                     	;# 
  1446  0610                     	;# 
  1447  0611                     	;# 
  1448  0612                     	;# 
  1449  0613                     	;# 
  1450  0614                     	;# 
  1451  0616                     	;# 
  1452  0617                     	;# 
  1453  0618                     	;# 
  1454  0619                     	;# 
  1455  061A                     	;# 
  1456  061B                     	;# 
  1457  061C                     	;# 
  1458  061D                     	;# 
  1459  061E                     	;# 
  1460  068C                     	;# 
  1461  068D                     	;# 
  1462  068E                     	;# 
  1463  068F                     	;# 
  1464  0690                     	;# 
  1465  0691                     	;# 
  1466  0692                     	;# 
  1467  0693                     	;# 
  1468  0694                     	;# 
  1469  070C                     	;# 
  1470  070D                     	;# 
  1471  070E                     	;# 
  1472  070F                     	;# 
  1473  0710                     	;# 
  1474  0711                     	;# 
  1475  0712                     	;# 
  1476  0713                     	;# 
  1477  0714                     	;# 
  1478  0716                     	;# 
  1479  0717                     	;# 
  1480  0718                     	;# 
  1481  0719                     	;# 
  1482  071A                     	;# 
  1483  071B                     	;# 
  1484  071C                     	;# 
  1485  071D                     	;# 
  1486  071E                     	;# 
  1487  0796                     	;# 
  1488  0797                     	;# 
  1489  0798                     	;# 
  1490  0799                     	;# 
  1491  079A                     	;# 
  1492  079B                     	;# 
  1493  080C                     	;# 
  1494  080D                     	;# 
  1495  080E                     	;# 
  1496  080F                     	;# 
  1497  0810                     	;# 
  1498  0811                     	;# 
  1499  0812                     	;# 
  1500  0813                     	;# 
  1501  0814                     	;# 
  1502  081A                     	;# 
  1503  081B                     	;# 
  1504  081C                     	;# 
  1505  081D                     	;# 
  1506  081E                     	;# 
  1507  081F                     	;# 
  1508  088C                     	;# 
  1509  088D                     	;# 
  1510  088E                     	;# 
  1511  088F                     	;# 
  1512  0890                     	;# 
  1513  0891                     	;# 
  1514  0892                     	;# 
  1515  0893                     	;# 
  1516  0895                     	;# 
  1517  0896                     	;# 
  1518  0897                     	;# 
  1519  0898                     	;# 
  1520  0899                     	;# 
  1521  089A                     	;# 
  1522  089B                     	;# 
  1523  090C                     	;# 
  1524  090E                     	;# 
  1525  090F                     	;# 
  1526  091F                     	;# 
  1527  091F                     	;# 
  1528  098F                     	;# 
  1529  098F                     	;# 
  1530  0990                     	;# 
  1531  0991                     	;# 
  1532  0992                     	;# 
  1533  0993                     	;# 
  1534  0994                     	;# 
  1535  0995                     	;# 
  1536  0996                     	;# 
  1537  0997                     	;# 
  1538  0E0F                     	;# 
  1539  0E10                     	;# 
  1540  0E11                     	;# 
  1541  0E12                     	;# 
  1542  0E13                     	;# 
  1543  0E14                     	;# 
  1544  0E15                     	;# 
  1545  0E16                     	;# 
  1546  0E17                     	;# 
  1547  0E18                     	;# 
  1548  0E19                     	;# 
  1549  0E1A                     	;# 
  1550  0E1B                     	;# 
  1551  0E1C                     	;# 
  1552  0E1D                     	;# 
  1553  0E1E                     	;# 
  1554  0E1F                     	;# 
  1555  0E20                     	;# 
  1556  0E21                     	;# 
  1557  0E22                     	;# 
  1558  0E23                     	;# 
  1559  0E24                     	;# 
  1560  0E25                     	;# 
  1561  0E26                     	;# 
  1562  0E27                     	;# 
  1563  0E28                     	;# 
  1564  0E29                     	;# 
  1565  0E2A                     	;# 
  1566  0E2B                     	;# 
  1567  0E2C                     	;# 
  1568  0E2D                     	;# 
  1569  0E2E                     	;# 
  1570  0E2F                     	;# 
  1571  0E30                     	;# 
  1572  0E31                     	;# 
  1573  0E32                     	;# 
  1574  0E33                     	;# 
  1575  0E34                     	;# 
  1576  0E35                     	;# 
  1577  0E36                     	;# 
  1578  0E37                     	;# 
  1579  0E8F                     	;# 
  1580  0E90                     	;# 
  1581  0E91                     	;# 
  1582  0E92                     	;# 
  1583  0E93                     	;# 
  1584  0E94                     	;# 
  1585  0E95                     	;# 
  1586  0E96                     	;# 
  1587  0E97                     	;# 
  1588  0E9C                     	;# 
  1589  0E9D                     	;# 
  1590  0E9E                     	;# 
  1591  0EA1                     	;# 
  1592  0EA2                     	;# 
  1593  0EA3                     	;# 
  1594  0EA4                     	;# 
  1595  0EA5                     	;# 
  1596  0EA9                     	;# 
  1597  0EAA                     	;# 
  1598  0EAB                     	;# 
  1599  0EAC                     	;# 
  1600  0EB1                     	;# 
  1601  0EB2                     	;# 
  1602  0EB3                     	;# 
  1603  0EB8                     	;# 
  1604  0EB9                     	;# 
  1605  0EBA                     	;# 
  1606  0EBB                     	;# 
  1607  0EBC                     	;# 
  1608  0EBD                     	;# 
  1609  0EBE                     	;# 
  1610  0EC3                     	;# 
  1611  0EC5                     	;# 
  1612  0EC6                     	;# 
  1613  0EC7                     	;# 
  1614  0EC8                     	;# 
  1615  0EC9                     	;# 
  1616  0ECA                     	;# 
  1617  0ECB                     	;# 
  1618  0ECC                     	;# 
  1619  0F10                     	;# 
  1620  0F11                     	;# 
  1621  0F12                     	;# 
  1622  0F13                     	;# 
  1623  0F14                     	;# 
  1624  0F15                     	;# 
  1625  0F16                     	;# 
  1626  0F17                     	;# 
  1627  0F18                     	;# 
  1628  0F19                     	;# 
  1629  0F1A                     	;# 
  1630  0F1B                     	;# 
  1631  0F1C                     	;# 
  1632  0F1D                     	;# 
  1633  0F1E                     	;# 
  1634  0F1F                     	;# 
  1635  0F20                     	;# 
  1636  0F21                     	;# 
  1637  0F22                     	;# 
  1638  0F23                     	;# 
  1639  0F24                     	;# 
  1640  0F25                     	;# 
  1641  0F26                     	;# 
  1642  0F27                     	;# 
  1643  0F28                     	;# 
  1644  0F29                     	;# 
  1645  0F2A                     	;# 
  1646  0F2B                     	;# 
  1647  0F2C                     	;# 
  1648  0F2D                     	;# 
  1649  0F2E                     	;# 
  1650  0F2F                     	;# 
  1651  0F30                     	;# 
  1652  0F31                     	;# 
  1653  0F32                     	;# 
  1654  0F38                     	;# 
  1655  0F39                     	;# 
  1656  0F3A                     	;# 
  1657  0F3B                     	;# 
  1658  0F3C                     	;# 
  1659  0F3D                     	;# 
  1660  0F3E                     	;# 
  1661  0F3F                     	;# 
  1662  0F40                     	;# 
  1663  0F41                     	;# 
  1664  0F43                     	;# 
  1665  0F44                     	;# 
  1666  0F45                     	;# 
  1667  0F46                     	;# 
  1668  0F47                     	;# 
  1669  0F48                     	;# 
  1670  0F49                     	;# 
  1671  0F4A                     	;# 
  1672  0F4B                     	;# 
  1673  0F4C                     	;# 
  1674  0F4E                     	;# 
  1675  0F4F                     	;# 
  1676  0F50                     	;# 
  1677  0F51                     	;# 
  1678  0F52                     	;# 
  1679  0F53                     	;# 
  1680  0F54                     	;# 
  1681  0F55                     	;# 
  1682  0F56                     	;# 
  1683  0F57                     	;# 
  1684  0F59                     	;# 
  1685  0F5A                     	;# 
  1686  0F5B                     	;# 
  1687  0F5C                     	;# 
  1688  0F5D                     	;# 
  1689  0F61                     	;# 
  1690  0F62                     	;# 
  1691  0F64                     	;# 
  1692  0F65                     	;# 
  1693  0F66                     	;# 
  1694  0F67                     	;# 
  1695  0F68                     	;# 
  1696  0F69                     	;# 
  1697  0F6A                     	;# 
  1698  0F6B                     	;# 
  1699  0F6C                     	;# 
  1700  0F6D                     	;# 
  1701  0FE4                     	;# 
  1702  0FE5                     	;# 
  1703  0FE6                     	;# 
  1704  0FE7                     	;# 
  1705  0FE8                     	;# 
  1706  0FE9                     	;# 
  1707  0FEA                     	;# 
  1708  0FEB                     	;# 
  1709  0FED                     	;# 
  1710  0FEE                     	;# 
  1711  0FEF                     	;# 
  1712  0000                     	;# 
  1713  0001                     	;# 
  1714  0002                     	;# 
  1715  0003                     	;# 
  1716  0004                     	;# 
  1717  0005                     	;# 
  1718  0006                     	;# 
  1719  0007                     	;# 
  1720  0008                     	;# 
  1721  0009                     	;# 
  1722  000A                     	;# 
  1723  000B                     	;# 
  1724  000C                     	;# 
  1725  000D                     	;# 
  1726  000E                     	;# 
  1727  000F                     	;# 
  1728  0010                     	;# 
  1729  0011                     	;# 
  1730  0012                     	;# 
  1731  0013                     	;# 
  1732  0014                     	;# 
  1733  0015                     	;# 
  1734  0016                     	;# 
  1735  0017                     	;# 
  1736  0018                     	;# 
  1737  0019                     	;# 
  1738  001A                     	;# 
  1739  001C                     	;# 
  1740  001C                     	;# 
  1741  001D                     	;# 
  1742  001D                     	;# 
  1743  001E                     	;# 
  1744  001F                     	;# 
  1745  008C                     	;# 
  1746  008C                     	;# 
  1747  008D                     	;# 
  1748  008E                     	;# 
  1749  008E                     	;# 
  1750  008F                     	;# 
  1751  0090                     	;# 
  1752  0090                     	;# 
  1753  0091                     	;# 
  1754  0093                     	;# 
  1755  0094                     	;# 
  1756  0095                     	;# 
  1757  0096                     	;# 
  1758  0097                     	;# 
  1759  0098                     	;# 
  1760  0099                     	;# 
  1761  009A                     	;# 
  1762  009B                     	;# 
  1763  009C                     	;# 
  1764  009D                     	;# 
  1765  009E                     	;# 
  1766  010C                     	;# 
  1767  010D                     	;# 
  1768  010E                     	;# 
  1769  010E                     	;# 
  1770  010F                     	;# 
  1771  0110                     	;# 
  1772  0110                     	;# 
  1773  0111                     	;# 
  1774  0112                     	;# 
  1775  0112                     	;# 
  1776  0113                     	;# 
  1777  0114                     	;# 
  1778  0114                     	;# 
  1779  0115                     	;# 
  1780  0116                     	;# 
  1781  0116                     	;# 
  1782  0117                     	;# 
  1783  0119                     	;# 
  1784  0119                     	;# 
  1785  0119                     	;# 
  1786  011A                     	;# 
  1787  011A                     	;# 
  1788  011A                     	;# 
  1789  011B                     	;# 
  1790  011B                     	;# 
  1791  011B                     	;# 
  1792  011B                     	;# 
  1793  011B                     	;# 
  1794  011C                     	;# 
  1795  011C                     	;# 
  1796  011C                     	;# 
  1797  011D                     	;# 
  1798  011D                     	;# 
  1799  011D                     	;# 
  1800  011E                     	;# 
  1801  011E                     	;# 
  1802  011E                     	;# 
  1803  011F                     	;# 
  1804  011F                     	;# 
  1805  011F                     	;# 
  1806  011F                     	;# 
  1807  011F                     	;# 
  1808  018C                     	;# 
  1809  018D                     	;# 
  1810  018E                     	;# 
  1811  018F                     	;# 
  1812  0190                     	;# 
  1813  0191                     	;# 
  1814  0192                     	;# 
  1815  0196                     	;# 
  1816  0197                     	;# 
  1817  0198                     	;# 
  1818  0199                     	;# 
  1819  019A                     	;# 
  1820  019B                     	;# 
  1821  019C                     	;# 
  1822  020C                     	;# 
  1823  020C                     	;# 
  1824  020D                     	;# 
  1825  020E                     	;# 
  1826  020F                     	;# 
  1827  020F                     	;# 
  1828  0210                     	;# 
  1829  0210                     	;# 
  1830  0211                     	;# 
  1831  0211                     	;# 
  1832  0212                     	;# 
  1833  0212                     	;# 
  1834  0213                     	;# 
  1835  0214                     	;# 
  1836  0215                     	;# 
  1837  0215                     	;# 
  1838  0216                     	;# 
  1839  0216                     	;# 
  1840  0217                     	;# 
  1841  0217                     	;# 
  1842  0218                     	;# 
  1843  0218                     	;# 
  1844  0219                     	;# 
  1845  021A                     	;# 
  1846  021B                     	;# 
  1847  021B                     	;# 
  1848  021C                     	;# 
  1849  021C                     	;# 
  1850  021D                     	;# 
  1851  021D                     	;# 
  1852  021E                     	;# 
  1853  021F                     	;# 
  1854  028C                     	;# 
  1855  028C                     	;# 
  1856  028D                     	;# 
  1857  028D                     	;# 
  1858  028E                     	;# 
  1859  028F                     	;# 
  1860  0290                     	;# 
  1861  0290                     	;# 
  1862  0291                     	;# 
  1863  0292                     	;# 
  1864  0292                     	;# 
  1865  0293                     	;# 
  1866  0293                     	;# 
  1867  0294                     	;# 
  1868  0295                     	;# 
  1869  0296                     	;# 
  1870  0296                     	;# 
  1871  0297                     	;# 
  1872  0298                     	;# 
  1873  0298                     	;# 
  1874  0299                     	;# 
  1875  0299                     	;# 
  1876  029A                     	;# 
  1877  029B                     	;# 
  1878  029C                     	;# 
  1879  029C                     	;# 
  1880  029D                     	;# 
  1881  030C                     	;# 
  1882  030C                     	;# 
  1883  030D                     	;# 
  1884  030E                     	;# 
  1885  030F                     	;# 
  1886  0310                     	;# 
  1887  0310                     	;# 
  1888  0311                     	;# 
  1889  0312                     	;# 
  1890  0313                     	;# 
  1891  0314                     	;# 
  1892  0314                     	;# 
  1893  0315                     	;# 
  1894  0316                     	;# 
  1895  0317                     	;# 
  1896  0318                     	;# 
  1897  0318                     	;# 
  1898  0319                     	;# 
  1899  031A                     	;# 
  1900  031B                     	;# 
  1901  031C                     	;# 
  1902  031C                     	;# 
  1903  031D                     	;# 
  1904  031E                     	;# 
  1905  031F                     	;# 
  1906  038C                     	;# 
  1907  038C                     	;# 
  1908  038D                     	;# 
  1909  038E                     	;# 
  1910  0390                     	;# 
  1911  0390                     	;# 
  1912  0391                     	;# 
  1913  0392                     	;# 
  1914  040C                     	;# 
  1915  040D                     	;# 
  1916  040E                     	;# 
  1917  040F                     	;# 
  1918  0410                     	;# 
  1919  0411                     	;# 
  1920  0416                     	;# 
  1921  0416                     	;# 
  1922  0417                     	;# 
  1923  0418                     	;# 
  1924  0418                     	;# 
  1925  0419                     	;# 
  1926  041A                     	;# 
  1927  041A                     	;# 
  1928  041B                     	;# 
  1929  041C                     	;# 
  1930  041C                     	;# 
  1931  041D                     	;# 
  1932  041E                     	;# 
  1933  041F                     	;# 
  1934  048C                     	;# 
  1935  048C                     	;# 
  1936  048D                     	;# 
  1937  048E                     	;# 
  1938  048F                     	;# 
  1939  048F                     	;# 
  1940  0490                     	;# 
  1941  0491                     	;# 
  1942  0492                     	;# 
  1943  0492                     	;# 
  1944  0493                     	;# 
  1945  0494                     	;# 
  1946  0495                     	;# 
  1947  0495                     	;# 
  1948  0496                     	;# 
  1949  0497                     	;# 
  1950  0498                     	;# 
  1951  0499                     	;# 
  1952  049A                     	;# 
  1953  049B                     	;# 
  1954  049C                     	;# 
  1955  049D                     	;# 
  1956  050C                     	;# 
  1957  050C                     	;# 
  1958  050D                     	;# 
  1959  050E                     	;# 
  1960  050F                     	;# 
  1961  050F                     	;# 
  1962  0510                     	;# 
  1963  0511                     	;# 
  1964  0512                     	;# 
  1965  0512                     	;# 
  1966  0513                     	;# 
  1967  0514                     	;# 
  1968  0515                     	;# 
  1969  0515                     	;# 
  1970  0516                     	;# 
  1971  0517                     	;# 
  1972  0518                     	;# 
  1973  0519                     	;# 
  1974  051A                     	;# 
  1975  051B                     	;# 
  1976  051C                     	;# 
  1977  051D                     	;# 
  1978  058C                     	;# 
  1979  058C                     	;# 
  1980  058D                     	;# 
  1981  058E                     	;# 
  1982  058F                     	;# 
  1983  058F                     	;# 
  1984  0590                     	;# 
  1985  0591                     	;# 
  1986  0592                     	;# 
  1987  0593                     	;# 
  1988  060C                     	;# 
  1989  060D                     	;# 
  1990  060E                     	;# 
  1991  060F                     	;# 
  1992  0610                     	;# 
  1993  0611                     	;# 
  1994  0612                     	;# 
  1995  0613                     	;# 
  1996  0614                     	;# 
  1997  0616                     	;# 
  1998  0617                     	;# 
  1999  0618                     	;# 
  2000  0619                     	;# 
  2001  061A                     	;# 
  2002  061B                     	;# 
  2003  061C                     	;# 
  2004  061D                     	;# 
  2005  061E                     	;# 
  2006  068C                     	;# 
  2007  068D                     	;# 
  2008  068E                     	;# 
  2009  068F                     	;# 
  2010  0690                     	;# 
  2011  0691                     	;# 
  2012  0692                     	;# 
  2013  0693                     	;# 
  2014  0694                     	;# 
  2015  070C                     	;# 
  2016  070D                     	;# 
  2017  070E                     	;# 
  2018  070F                     	;# 
  2019  0710                     	;# 
  2020  0711                     	;# 
  2021  0712                     	;# 
  2022  0713                     	;# 
  2023  0714                     	;# 
  2024  0716                     	;# 
  2025  0717                     	;# 
  2026  0718                     	;# 
  2027  0719                     	;# 
  2028  071A                     	;# 
  2029  071B                     	;# 
  2030  071C                     	;# 
  2031  071D                     	;# 
  2032  071E                     	;# 
  2033  0796                     	;# 
  2034  0797                     	;# 
  2035  0798                     	;# 
  2036  0799                     	;# 
  2037  079A                     	;# 
  2038  079B                     	;# 
  2039  080C                     	;# 
  2040  080D                     	;# 
  2041  080E                     	;# 
  2042  080F                     	;# 
  2043  0810                     	;# 
  2044  0811                     	;# 
  2045  0812                     	;# 
  2046  0813                     	;# 
  2047  0814                     	;# 
  2048  081A                     	;# 
  2049  081B                     	;# 
  2050  081C                     	;# 
  2051  081D                     	;# 
  2052  081E                     	;# 
  2053  081F                     	;# 
  2054  088C                     	;# 
  2055  088D                     	;# 
  2056  088E                     	;# 
  2057  088F                     	;# 
  2058  0890                     	;# 
  2059  0891                     	;# 
  2060  0892                     	;# 
  2061  0893                     	;# 
  2062  0895                     	;# 
  2063  0896                     	;# 
  2064  0897                     	;# 
  2065  0898                     	;# 
  2066  0899                     	;# 
  2067  089A                     	;# 
  2068  089B                     	;# 
  2069  090C                     	;# 
  2070  090E                     	;# 
  2071  090F                     	;# 
  2072  091F                     	;# 
  2073  091F                     	;# 
  2074  098F                     	;# 
  2075  098F                     	;# 
  2076  0990                     	;# 
  2077  0991                     	;# 
  2078  0992                     	;# 
  2079  0993                     	;# 
  2080  0994                     	;# 
  2081  0995                     	;# 
  2082  0996                     	;# 
  2083  0997                     	;# 
  2084  0E0F                     	;# 
  2085  0E10                     	;# 
  2086  0E11                     	;# 
  2087  0E12                     	;# 
  2088  0E13                     	;# 
  2089  0E14                     	;# 
  2090  0E15                     	;# 
  2091  0E16                     	;# 
  2092  0E17                     	;# 
  2093  0E18                     	;# 
  2094  0E19                     	;# 
  2095  0E1A                     	;# 
  2096  0E1B                     	;# 
  2097  0E1C                     	;# 
  2098  0E1D                     	;# 
  2099  0E1E                     	;# 
  2100  0E1F                     	;# 
  2101  0E20                     	;# 
  2102  0E21                     	;# 
  2103  0E22                     	;# 
  2104  0E23                     	;# 
  2105  0E24                     	;# 
  2106  0E25                     	;# 
  2107  0E26                     	;# 
  2108  0E27                     	;# 
  2109  0E28                     	;# 
  2110  0E29                     	;# 
  2111  0E2A                     	;# 
  2112  0E2B                     	;# 
  2113  0E2C                     	;# 
  2114  0E2D                     	;# 
  2115  0E2E                     	;# 
  2116  0E2F                     	;# 
  2117  0E30                     	;# 
  2118  0E31                     	;# 
  2119  0E32                     	;# 
  2120  0E33                     	;# 
  2121  0E34                     	;# 
  2122  0E35                     	;# 
  2123  0E36                     	;# 
  2124  0E37                     	;# 
  2125  0E8F                     	;# 
  2126  0E90                     	;# 
  2127  0E91                     	;# 
  2128  0E92                     	;# 
  2129  0E93                     	;# 
  2130  0E94                     	;# 
  2131  0E95                     	;# 
  2132  0E96                     	;# 
  2133  0E97                     	;# 
  2134  0E9C                     	;# 
  2135  0E9D                     	;# 
  2136  0E9E                     	;# 
  2137  0EA1                     	;# 
  2138  0EA2                     	;# 
  2139  0EA3                     	;# 
  2140  0EA4                     	;# 
  2141  0EA5                     	;# 
  2142  0EA9                     	;# 
  2143  0EAA                     	;# 
  2144  0EAB                     	;# 
  2145  0EAC                     	;# 
  2146  0EB1                     	;# 
  2147  0EB2                     	;# 
  2148  0EB3                     	;# 
  2149  0EB8                     	;# 
  2150  0EB9                     	;# 
  2151  0EBA                     	;# 
  2152  0EBB                     	;# 
  2153  0EBC                     	;# 
  2154  0EBD                     	;# 
  2155  0EBE                     	;# 
  2156  0EC3                     	;# 
  2157  0EC5                     	;# 
  2158  0EC6                     	;# 
  2159  0EC7                     	;# 
  2160  0EC8                     	;# 
  2161  0EC9                     	;# 
  2162  0ECA                     	;# 
  2163  0ECB                     	;# 
  2164  0ECC                     	;# 
  2165  0F10                     	;# 
  2166  0F11                     	;# 
  2167  0F12                     	;# 
  2168  0F13                     	;# 
  2169  0F14                     	;# 
  2170  0F15                     	;# 
  2171  0F16                     	;# 
  2172  0F17                     	;# 
  2173  0F18                     	;# 
  2174  0F19                     	;# 
  2175  0F1A                     	;# 
  2176  0F1B                     	;# 
  2177  0F1C                     	;# 
  2178  0F1D                     	;# 
  2179  0F1E                     	;# 
  2180  0F1F                     	;# 
  2181  0F20                     	;# 
  2182  0F21                     	;# 
  2183  0F22                     	;# 
  2184  0F23                     	;# 
  2185  0F24                     	;# 
  2186  0F25                     	;# 
  2187  0F26                     	;# 
  2188  0F27                     	;# 
  2189  0F28                     	;# 
  2190  0F29                     	;# 
  2191  0F2A                     	;# 
  2192  0F2B                     	;# 
  2193  0F2C                     	;# 
  2194  0F2D                     	;# 
  2195  0F2E                     	;# 
  2196  0F2F                     	;# 
  2197  0F30                     	;# 
  2198  0F31                     	;# 
  2199  0F32                     	;# 
  2200  0F38                     	;# 
  2201  0F39                     	;# 
  2202  0F3A                     	;# 
  2203  0F3B                     	;# 
  2204  0F3C                     	;# 
  2205  0F3D                     	;# 
  2206  0F3E                     	;# 
  2207  0F3F                     	;# 
  2208  0F40                     	;# 
  2209  0F41                     	;# 
  2210  0F43                     	;# 
  2211  0F44                     	;# 
  2212  0F45                     	;# 
  2213  0F46                     	;# 
  2214  0F47                     	;# 
  2215  0F48                     	;# 
  2216  0F49                     	;# 
  2217  0F4A                     	;# 
  2218  0F4B                     	;# 
  2219  0F4C                     	;# 
  2220  0F4E                     	;# 
  2221  0F4F                     	;# 
  2222  0F50                     	;# 
  2223  0F51                     	;# 
  2224  0F52                     	;# 
  2225  0F53                     	;# 
  2226  0F54                     	;# 
  2227  0F55                     	;# 
  2228  0F56                     	;# 
  2229  0F57                     	;# 
  2230  0F59                     	;# 
  2231  0F5A                     	;# 
  2232  0F5B                     	;# 
  2233  0F5C                     	;# 
  2234  0F5D                     	;# 
  2235  0F61                     	;# 
  2236  0F62                     	;# 
  2237  0F64                     	;# 
  2238  0F65                     	;# 
  2239  0F66                     	;# 
  2240  0F67                     	;# 
  2241  0F68                     	;# 
  2242  0F69                     	;# 
  2243  0F6A                     	;# 
  2244  0F6B                     	;# 
  2245  0F6C                     	;# 
  2246  0F6D                     	;# 
  2247  0FE4                     	;# 
  2248  0FE5                     	;# 
  2249  0FE6                     	;# 
  2250  0FE7                     	;# 
  2251  0FE8                     	;# 
  2252  0FE9                     	;# 
  2253  0FEA                     	;# 
  2254  0FEB                     	;# 
  2255  0FED                     	;# 
  2256  0FEE                     	;# 
  2257  0FEF                     	;# 
  2258  0000                     	;# 
  2259  0001                     	;# 
  2260  0002                     	;# 
  2261  0003                     	;# 
  2262  0004                     	;# 
  2263  0005                     	;# 
  2264  0006                     	;# 
  2265  0007                     	;# 
  2266  0008                     	;# 
  2267  0009                     	;# 
  2268  000A                     	;# 
  2269  000B                     	;# 
  2270  000C                     	;# 
  2271  000D                     	;# 
  2272  000E                     	;# 
  2273  000F                     	;# 
  2274  0010                     	;# 
  2275  0011                     	;# 
  2276  0012                     	;# 
  2277  0013                     	;# 
  2278  0014                     	;# 
  2279  0015                     	;# 
  2280  0016                     	;# 
  2281  0017                     	;# 
  2282  0018                     	;# 
  2283  0019                     	;# 
  2284  001A                     	;# 
  2285  001C                     	;# 
  2286  001C                     	;# 
  2287  001D                     	;# 
  2288  001D                     	;# 
  2289  001E                     	;# 
  2290  001F                     	;# 
  2291  008C                     	;# 
  2292  008C                     	;# 
  2293  008D                     	;# 
  2294  008E                     	;# 
  2295  008E                     	;# 
  2296  008F                     	;# 
  2297  0090                     	;# 
  2298  0090                     	;# 
  2299  0091                     	;# 
  2300  0093                     	;# 
  2301  0094                     	;# 
  2302  0095                     	;# 
  2303  0096                     	;# 
  2304  0097                     	;# 
  2305  0098                     	;# 
  2306  0099                     	;# 
  2307  009A                     	;# 
  2308  009B                     	;# 
  2309  009C                     	;# 
  2310  009D                     	;# 
  2311  009E                     	;# 
  2312  010C                     	;# 
  2313  010D                     	;# 
  2314  010E                     	;# 
  2315  010E                     	;# 
  2316  010F                     	;# 
  2317  0110                     	;# 
  2318  0110                     	;# 
  2319  0111                     	;# 
  2320  0112                     	;# 
  2321  0112                     	;# 
  2322  0113                     	;# 
  2323  0114                     	;# 
  2324  0114                     	;# 
  2325  0115                     	;# 
  2326  0116                     	;# 
  2327  0116                     	;# 
  2328  0117                     	;# 
  2329  0119                     	;# 
  2330  0119                     	;# 
  2331  0119                     	;# 
  2332  011A                     	;# 
  2333  011A                     	;# 
  2334  011A                     	;# 
  2335  011B                     	;# 
  2336  011B                     	;# 
  2337  011B                     	;# 
  2338  011B                     	;# 
  2339  011B                     	;# 
  2340  011C                     	;# 
  2341  011C                     	;# 
  2342  011C                     	;# 
  2343  011D                     	;# 
  2344  011D                     	;# 
  2345  011D                     	;# 
  2346  011E                     	;# 
  2347  011E                     	;# 
  2348  011E                     	;# 
  2349  011F                     	;# 
  2350  011F                     	;# 
  2351  011F                     	;# 
  2352  011F                     	;# 
  2353  011F                     	;# 
  2354  018C                     	;# 
  2355  018D                     	;# 
  2356  018E                     	;# 
  2357  018F                     	;# 
  2358  0190                     	;# 
  2359  0191                     	;# 
  2360  0192                     	;# 
  2361  0196                     	;# 
  2362  0197                     	;# 
  2363  0198                     	;# 
  2364  0199                     	;# 
  2365  019A                     	;# 
  2366  019B                     	;# 
  2367  019C                     	;# 
  2368  020C                     	;# 
  2369  020C                     	;# 
  2370  020D                     	;# 
  2371  020E                     	;# 
  2372  020F                     	;# 
  2373  020F                     	;# 
  2374  0210                     	;# 
  2375  0210                     	;# 
  2376  0211                     	;# 
  2377  0211                     	;# 
  2378  0212                     	;# 
  2379  0212                     	;# 
  2380  0213                     	;# 
  2381  0214                     	;# 
  2382  0215                     	;# 
  2383  0215                     	;# 
  2384  0216                     	;# 
  2385  0216                     	;# 
  2386  0217                     	;# 
  2387  0217                     	;# 
  2388  0218                     	;# 
  2389  0218                     	;# 
  2390  0219                     	;# 
  2391  021A                     	;# 
  2392  021B                     	;# 
  2393  021B                     	;# 
  2394  021C                     	;# 
  2395  021C                     	;# 
  2396  021D                     	;# 
  2397  021D                     	;# 
  2398  021E                     	;# 
  2399  021F                     	;# 
  2400  028C                     	;# 
  2401  028C                     	;# 
  2402  028D                     	;# 
  2403  028D                     	;# 
  2404  028E                     	;# 
  2405  028F                     	;# 
  2406  0290                     	;# 
  2407  0290                     	;# 
  2408  0291                     	;# 
  2409  0292                     	;# 
  2410  0292                     	;# 
  2411  0293                     	;# 
  2412  0293                     	;# 
  2413  0294                     	;# 
  2414  0295                     	;# 
  2415  0296                     	;# 
  2416  0296                     	;# 
  2417  0297                     	;# 
  2418  0298                     	;# 
  2419  0298                     	;# 
  2420  0299                     	;# 
  2421  0299                     	;# 
  2422  029A                     	;# 
  2423  029B                     	;# 
  2424  029C                     	;# 
  2425  029C                     	;# 
  2426  029D                     	;# 
  2427  030C                     	;# 
  2428  030C                     	;# 
  2429  030D                     	;# 
  2430  030E                     	;# 
  2431  030F                     	;# 
  2432  0310                     	;# 
  2433  0310                     	;# 
  2434  0311                     	;# 
  2435  0312                     	;# 
  2436  0313                     	;# 
  2437  0314                     	;# 
  2438  0314                     	;# 
  2439  0315                     	;# 
  2440  0316                     	;# 
  2441  0317                     	;# 
  2442  0318                     	;# 
  2443  0318                     	;# 
  2444  0319                     	;# 
  2445  031A                     	;# 
  2446  031B                     	;# 
  2447  031C                     	;# 
  2448  031C                     	;# 
  2449  031D                     	;# 
  2450  031E                     	;# 
  2451  031F                     	;# 
  2452  038C                     	;# 
  2453  038C                     	;# 
  2454  038D                     	;# 
  2455  038E                     	;# 
  2456  0390                     	;# 
  2457  0390                     	;# 
  2458  0391                     	;# 
  2459  0392                     	;# 
  2460  040C                     	;# 
  2461  040D                     	;# 
  2462  040E                     	;# 
  2463  040F                     	;# 
  2464  0410                     	;# 
  2465  0411                     	;# 
  2466  0416                     	;# 
  2467  0416                     	;# 
  2468  0417                     	;# 
  2469  0418                     	;# 
  2470  0418                     	;# 
  2471  0419                     	;# 
  2472  041A                     	;# 
  2473  041A                     	;# 
  2474  041B                     	;# 
  2475  041C                     	;# 
  2476  041C                     	;# 
  2477  041D                     	;# 
  2478  041E                     	;# 
  2479  041F                     	;# 
  2480  048C                     	;# 
  2481  048C                     	;# 
  2482  048D                     	;# 
  2483  048E                     	;# 
  2484  048F                     	;# 
  2485  048F                     	;# 
  2486  0490                     	;# 
  2487  0491                     	;# 
  2488  0492                     	;# 
  2489  0492                     	;# 
  2490  0493                     	;# 
  2491  0494                     	;# 
  2492  0495                     	;# 
  2493  0495                     	;# 
  2494  0496                     	;# 
  2495  0497                     	;# 
  2496  0498                     	;# 
  2497  0499                     	;# 
  2498  049A                     	;# 
  2499  049B                     	;# 
  2500  049C                     	;# 
  2501  049D                     	;# 
  2502  050C                     	;# 
  2503  050C                     	;# 
  2504  050D                     	;# 
  2505  050E                     	;# 
  2506  050F                     	;# 
  2507  050F                     	;# 
  2508  0510                     	;# 
  2509  0511                     	;# 
  2510  0512                     	;# 
  2511  0512                     	;# 
  2512  0513                     	;# 
  2513  0514                     	;# 
  2514  0515                     	;# 
  2515  0515                     	;# 
  2516  0516                     	;# 
  2517  0517                     	;# 
  2518  0518                     	;# 
  2519  0519                     	;# 
  2520  051A                     	;# 
  2521  051B                     	;# 
  2522  051C                     	;# 
  2523  051D                     	;# 
  2524  058C                     	;# 
  2525  058C                     	;# 
  2526  058D                     	;# 
  2527  058E                     	;# 
  2528  058F                     	;# 
  2529  058F                     	;# 
  2530  0590                     	;# 
  2531  0591                     	;# 
  2532  0592                     	;# 
  2533  0593                     	;# 
  2534  060C                     	;# 
  2535  060D                     	;# 
  2536  060E                     	;# 
  2537  060F                     	;# 
  2538  0610                     	;# 
  2539  0611                     	;# 
  2540  0612                     	;# 
  2541  0613                     	;# 
  2542  0614                     	;# 
  2543  0616                     	;# 
  2544  0617                     	;# 
  2545  0618                     	;# 
  2546  0619                     	;# 
  2547  061A                     	;# 
  2548  061B                     	;# 
  2549  061C                     	;# 
  2550  061D                     	;# 
  2551  061E                     	;# 
  2552  068C                     	;# 
  2553  068D                     	;# 
  2554  068E                     	;# 
  2555  068F                     	;# 
  2556  0690                     	;# 
  2557  0691                     	;# 
  2558  0692                     	;# 
  2559  0693                     	;# 
  2560  0694                     	;# 
  2561  070C                     	;# 
  2562  070D                     	;# 
  2563  070E                     	;# 
  2564  070F                     	;# 
  2565  0710                     	;# 
  2566  0711                     	;# 
  2567  0712                     	;# 
  2568  0713                     	;# 
  2569  0714                     	;# 
  2570  0716                     	;# 
  2571  0717                     	;# 
  2572  0718                     	;# 
  2573  0719                     	;# 
  2574  071A                     	;# 
  2575  071B                     	;# 
  2576  071C                     	;# 
  2577  071D                     	;# 
  2578  071E                     	;# 
  2579  0796                     	;# 
  2580  0797                     	;# 
  2581  0798                     	;# 
  2582  0799                     	;# 
  2583  079A                     	;# 
  2584  079B                     	;# 
  2585  080C                     	;# 
  2586  080D                     	;# 
  2587  080E                     	;# 
  2588  080F                     	;# 
  2589  0810                     	;# 
  2590  0811                     	;# 
  2591  0812                     	;# 
  2592  0813                     	;# 
  2593  0814                     	;# 
  2594  081A                     	;# 
  2595  081B                     	;# 
  2596  081C                     	;# 
  2597  081D                     	;# 
  2598  081E                     	;# 
  2599  081F                     	;# 
  2600  088C                     	;# 
  2601  088D                     	;# 
  2602  088E                     	;# 
  2603  088F                     	;# 
  2604  0890                     	;# 
  2605  0891                     	;# 
  2606  0892                     	;# 
  2607  0893                     	;# 
  2608  0895                     	;# 
  2609  0896                     	;# 
  2610  0897                     	;# 
  2611  0898                     	;# 
  2612  0899                     	;# 
  2613  089A                     	;# 
  2614  089B                     	;# 
  2615  090C                     	;# 
  2616  090E                     	;# 
  2617  090F                     	;# 
  2618  091F                     	;# 
  2619  091F                     	;# 
  2620  098F                     	;# 
  2621  098F                     	;# 
  2622  0990                     	;# 
  2623  0991                     	;# 
  2624  0992                     	;# 
  2625  0993                     	;# 
  2626  0994                     	;# 
  2627  0995                     	;# 
  2628  0996                     	;# 
  2629  0997                     	;# 
  2630  0E0F                     	;# 
  2631  0E10                     	;# 
  2632  0E11                     	;# 
  2633  0E12                     	;# 
  2634  0E13                     	;# 
  2635  0E14                     	;# 
  2636  0E15                     	;# 
  2637  0E16                     	;# 
  2638  0E17                     	;# 
  2639  0E18                     	;# 
  2640  0E19                     	;# 
  2641  0E1A                     	;# 
  2642  0E1B                     	;# 
  2643  0E1C                     	;# 
  2644  0E1D                     	;# 
  2645  0E1E                     	;# 
  2646  0E1F                     	;# 
  2647  0E20                     	;# 
  2648  0E21                     	;# 
  2649  0E22                     	;# 
  2650  0E23                     	;# 
  2651  0E24                     	;# 
  2652  0E25                     	;# 
  2653  0E26                     	;# 
  2654  0E27                     	;# 
  2655  0E28                     	;# 
  2656  0E29                     	;# 
  2657  0E2A                     	;# 
  2658  0E2B                     	;# 
  2659  0E2C                     	;# 
  2660  0E2D                     	;# 
  2661  0E2E                     	;# 
  2662  0E2F                     	;# 
  2663  0E30                     	;# 
  2664  0E31                     	;# 
  2665  0E32                     	;# 
  2666  0E33                     	;# 
  2667  0E34                     	;# 
  2668  0E35                     	;# 
  2669  0E36                     	;# 
  2670  0E37                     	;# 
  2671  0E8F                     	;# 
  2672  0E90                     	;# 
  2673  0E91                     	;# 
  2674  0E92                     	;# 
  2675  0E93                     	;# 
  2676  0E94                     	;# 
  2677  0E95                     	;# 
  2678  0E96                     	;# 
  2679  0E97                     	;# 
  2680  0E9C                     	;# 
  2681  0E9D                     	;# 
  2682  0E9E                     	;# 
  2683  0EA1                     	;# 
  2684  0EA2                     	;# 
  2685  0EA3                     	;# 
  2686  0EA4                     	;# 
  2687  0EA5                     	;# 
  2688  0EA9                     	;# 
  2689  0EAA                     	;# 
  2690  0EAB                     	;# 
  2691  0EAC                     	;# 
  2692  0EB1                     	;# 
  2693  0EB2                     	;# 
  2694  0EB3                     	;# 
  2695  0EB8                     	;# 
  2696  0EB9                     	;# 
  2697  0EBA                     	;# 
  2698  0EBB                     	;# 
  2699  0EBC                     	;# 
  2700  0EBD                     	;# 
  2701  0EBE                     	;# 
  2702  0EC3                     	;# 
  2703  0EC5                     	;# 
  2704  0EC6                     	;# 
  2705  0EC7                     	;# 
  2706  0EC8                     	;# 
  2707  0EC9                     	;# 
  2708  0ECA                     	;# 
  2709  0ECB                     	;# 
  2710  0ECC                     	;# 
  2711  0F10                     	;# 
  2712  0F11                     	;# 
  2713  0F12                     	;# 
  2714  0F13                     	;# 
  2715  0F14                     	;# 
  2716  0F15                     	;# 
  2717  0F16                     	;# 
  2718  0F17                     	;# 
  2719  0F18                     	;# 
  2720  0F19                     	;# 
  2721  0F1A                     	;# 
  2722  0F1B                     	;# 
  2723  0F1C                     	;# 
  2724  0F1D                     	;# 
  2725  0F1E                     	;# 
  2726  0F1F                     	;# 
  2727  0F20                     	;# 
  2728  0F21                     	;# 
  2729  0F22                     	;# 
  2730  0F23                     	;# 
  2731  0F24                     	;# 
  2732  0F25                     	;# 
  2733  0F26                     	;# 
  2734  0F27                     	;# 
  2735  0F28                     	;# 
  2736  0F29                     	;# 
  2737  0F2A                     	;# 
  2738  0F2B                     	;# 
  2739  0F2C                     	;# 
  2740  0F2D                     	;# 
  2741  0F2E                     	;# 
  2742  0F2F                     	;# 
  2743  0F30                     	;# 
  2744  0F31                     	;# 
  2745  0F32                     	;# 
  2746  0F38                     	;# 
  2747  0F39                     	;# 
  2748  0F3A                     	;# 
  2749  0F3B                     	;# 
  2750  0F3C                     	;# 
  2751  0F3D                     	;# 
  2752  0F3E                     	;# 
  2753  0F3F                     	;# 
  2754  0F40                     	;# 
  2755  0F41                     	;# 
  2756  0F43                     	;# 
  2757  0F44                     	;# 
  2758  0F45                     	;# 
  2759  0F46                     	;# 
  2760  0F47                     	;# 
  2761  0F48                     	;# 
  2762  0F49                     	;# 
  2763  0F4A                     	;# 
  2764  0F4B                     	;# 
  2765  0F4C                     	;# 
  2766  0F4E                     	;# 
  2767  0F4F                     	;# 
  2768  0F50                     	;# 
  2769  0F51                     	;# 
  2770  0F52                     	;# 
  2771  0F53                     	;# 
  2772  0F54                     	;# 
  2773  0F55                     	;# 
  2774  0F56                     	;# 
  2775  0F57                     	;# 
  2776  0F59                     	;# 
  2777  0F5A                     	;# 
  2778  0F5B                     	;# 
  2779  0F5C                     	;# 
  2780  0F5D                     	;# 
  2781  0F61                     	;# 
  2782  0F62                     	;# 
  2783  0F64                     	;# 
  2784  0F65                     	;# 
  2785  0F66                     	;# 
  2786  0F67                     	;# 
  2787  0F68                     	;# 
  2788  0F69                     	;# 
  2789  0F6A                     	;# 
  2790  0F6B                     	;# 
  2791  0F6C                     	;# 
  2792  0F6D                     	;# 
  2793  0FE4                     	;# 
  2794  0FE5                     	;# 
  2795  0FE6                     	;# 
  2796  0FE7                     	;# 
  2797  0FE8                     	;# 
  2798  0FE9                     	;# 
  2799  0FEA                     	;# 
  2800  0FEB                     	;# 
  2801  0FED                     	;# 
  2802  0FEE                     	;# 
  2803  0FEF                     	;# 
  2804  0000                     	;# 
  2805  0001                     	;# 
  2806  0002                     	;# 
  2807  0003                     	;# 
  2808  0004                     	;# 
  2809  0005                     	;# 
  2810  0006                     	;# 
  2811  0007                     	;# 
  2812  0008                     	;# 
  2813  0009                     	;# 
  2814  000A                     	;# 
  2815  000B                     	;# 
  2816  000C                     	;# 
  2817  000D                     	;# 
  2818  000E                     	;# 
  2819  000F                     	;# 
  2820  0010                     	;# 
  2821  0011                     	;# 
  2822  0012                     	;# 
  2823  0013                     	;# 
  2824  0014                     	;# 
  2825  0015                     	;# 
  2826  0016                     	;# 
  2827  0017                     	;# 
  2828  0018                     	;# 
  2829  0019                     	;# 
  2830  001A                     	;# 
  2831  001C                     	;# 
  2832  001C                     	;# 
  2833  001D                     	;# 
  2834  001D                     	;# 
  2835  001E                     	;# 
  2836  001F                     	;# 
  2837  008C                     	;# 
  2838  008C                     	;# 
  2839  008D                     	;# 
  2840  008E                     	;# 
  2841  008E                     	;# 
  2842  008F                     	;# 
  2843  0090                     	;# 
  2844  0090                     	;# 
  2845  0091                     	;# 
  2846  0093                     	;# 
  2847  0094                     	;# 
  2848  0095                     	;# 
  2849  0096                     	;# 
  2850  0097                     	;# 
  2851  0098                     	;# 
  2852  0099                     	;# 
  2853  009A                     	;# 
  2854  009B                     	;# 
  2855  009C                     	;# 
  2856  009D                     	;# 
  2857  009E                     	;# 
  2858  010C                     	;# 
  2859  010D                     	;# 
  2860  010E                     	;# 
  2861  010E                     	;# 
  2862  010F                     	;# 
  2863  0110                     	;# 
  2864  0110                     	;# 
  2865  0111                     	;# 
  2866  0112                     	;# 
  2867  0112                     	;# 
  2868  0113                     	;# 
  2869  0114                     	;# 
  2870  0114                     	;# 
  2871  0115                     	;# 
  2872  0116                     	;# 
  2873  0116                     	;# 
  2874  0117                     	;# 
  2875  0119                     	;# 
  2876  0119                     	;# 
  2877  0119                     	;# 
  2878  011A                     	;# 
  2879  011A                     	;# 
  2880  011A                     	;# 
  2881  011B                     	;# 
  2882  011B                     	;# 
  2883  011B                     	;# 
  2884  011B                     	;# 
  2885  011B                     	;# 
  2886  011C                     	;# 
  2887  011C                     	;# 
  2888  011C                     	;# 
  2889  011D                     	;# 
  2890  011D                     	;# 
  2891  011D                     	;# 
  2892  011E                     	;# 
  2893  011E                     	;# 
  2894  011E                     	;# 
  2895  011F                     	;# 
  2896  011F                     	;# 
  2897  011F                     	;# 
  2898  011F                     	;# 
  2899  011F                     	;# 
  2900  018C                     	;# 
  2901  018D                     	;# 
  2902  018E                     	;# 
  2903  018F                     	;# 
  2904  0190                     	;# 
  2905  0191                     	;# 
  2906  0192                     	;# 
  2907  0196                     	;# 
  2908  0197                     	;# 
  2909  0198                     	;# 
  2910  0199                     	;# 
  2911  019A                     	;# 
  2912  019B                     	;# 
  2913  019C                     	;# 
  2914  020C                     	;# 
  2915  020C                     	;# 
  2916  020D                     	;# 
  2917  020E                     	;# 
  2918  020F                     	;# 
  2919  020F                     	;# 
  2920  0210                     	;# 
  2921  0210                     	;# 
  2922  0211                     	;# 
  2923  0211                     	;# 
  2924  0212                     	;# 
  2925  0212                     	;# 
  2926  0213                     	;# 
  2927  0214                     	;# 
  2928  0215                     	;# 
  2929  0215                     	;# 
  2930  0216                     	;# 
  2931  0216                     	;# 
  2932  0217                     	;# 
  2933  0217                     	;# 
  2934  0218                     	;# 
  2935  0218                     	;# 
  2936  0219                     	;# 
  2937  021A                     	;# 
  2938  021B                     	;# 
  2939  021B                     	;# 
  2940  021C                     	;# 
  2941  021C                     	;# 
  2942  021D                     	;# 
  2943  021D                     	;# 
  2944  021E                     	;# 
  2945  021F                     	;# 
  2946  028C                     	;# 
  2947  028C                     	;# 
  2948  028D                     	;# 
  2949  028D                     	;# 
  2950  028E                     	;# 
  2951  028F                     	;# 
  2952  0290                     	;# 
  2953  0290                     	;# 
  2954  0291                     	;# 
  2955  0292                     	;# 
  2956  0292                     	;# 
  2957  0293                     	;# 
  2958  0293                     	;# 
  2959  0294                     	;# 
  2960  0295                     	;# 
  2961  0296                     	;# 
  2962  0296                     	;# 
  2963  0297                     	;# 
  2964  0298                     	;# 
  2965  0298                     	;# 
  2966  0299                     	;# 
  2967  0299                     	;# 
  2968  029A                     	;# 
  2969  029B                     	;# 
  2970  029C                     	;# 
  2971  029C                     	;# 
  2972  029D                     	;# 
  2973  030C                     	;# 
  2974  030C                     	;# 
  2975  030D                     	;# 
  2976  030E                     	;# 
  2977  030F                     	;# 
  2978  0310                     	;# 
  2979  0310                     	;# 
  2980  0311                     	;# 
  2981  0312                     	;# 
  2982  0313                     	;# 
  2983  0314                     	;# 
  2984  0314                     	;# 
  2985  0315                     	;# 
  2986  0316                     	;# 
  2987  0317                     	;# 
  2988  0318                     	;# 
  2989  0318                     	;# 
  2990  0319                     	;# 
  2991  031A                     	;# 
  2992  031B                     	;# 
  2993  031C                     	;# 
  2994  031C                     	;# 
  2995  031D                     	;# 
  2996  031E                     	;# 
  2997  031F                     	;# 
  2998  038C                     	;# 
  2999  038C                     	;# 
  3000  038D                     	;# 
  3001  038E                     	;# 
  3002  0390                     	;# 
  3003  0390                     	;# 
  3004  0391                     	;# 
  3005  0392                     	;# 
  3006  040C                     	;# 
  3007  040D                     	;# 
  3008  040E                     	;# 
  3009  040F                     	;# 
  3010  0410                     	;# 
  3011  0411                     	;# 
  3012  0416                     	;# 
  3013  0416                     	;# 
  3014  0417                     	;# 
  3015  0418                     	;# 
  3016  0418                     	;# 
  3017  0419                     	;# 
  3018  041A                     	;# 
  3019  041A                     	;# 
  3020  041B                     	;# 
  3021  041C                     	;# 
  3022  041C                     	;# 
  3023  041D                     	;# 
  3024  041E                     	;# 
  3025  041F                     	;# 
  3026  048C                     	;# 
  3027  048C                     	;# 
  3028  048D                     	;# 
  3029  048E                     	;# 
  3030  048F                     	;# 
  3031  048F                     	;# 
  3032  0490                     	;# 
  3033  0491                     	;# 
  3034  0492                     	;# 
  3035  0492                     	;# 
  3036  0493                     	;# 
  3037  0494                     	;# 
  3038  0495                     	;# 
  3039  0495                     	;# 
  3040  0496                     	;# 
  3041  0497                     	;# 
  3042  0498                     	;# 
  3043  0499                     	;# 
  3044  049A                     	;# 
  3045  049B                     	;# 
  3046  049C                     	;# 
  3047  049D                     	;# 
  3048  050C                     	;# 
  3049  050C                     	;# 
  3050  050D                     	;# 
  3051  050E                     	;# 
  3052  050F                     	;# 
  3053  050F                     	;# 
  3054  0510                     	;# 
  3055  0511                     	;# 
  3056  0512                     	;# 
  3057  0512                     	;# 
  3058  0513                     	;# 
  3059  0514                     	;# 
  3060  0515                     	;# 
  3061  0515                     	;# 
  3062  0516                     	;# 
  3063  0517                     	;# 
  3064  0518                     	;# 
  3065  0519                     	;# 
  3066  051A                     	;# 
  3067  051B                     	;# 
  3068  051C                     	;# 
  3069  051D                     	;# 
  3070  058C                     	;# 
  3071  058C                     	;# 
  3072  058D                     	;# 
  3073  058E                     	;# 
  3074  058F                     	;# 
  3075  058F                     	;# 
  3076  0590                     	;# 
  3077  0591                     	;# 
  3078  0592                     	;# 
  3079  0593                     	;# 
  3080  060C                     	;# 
  3081  060D                     	;# 
  3082  060E                     	;# 
  3083  060F                     	;# 
  3084  0610                     	;# 
  3085  0611                     	;# 
  3086  0612                     	;# 
  3087  0613                     	;# 
  3088  0614                     	;# 
  3089  0616                     	;# 
  3090  0617                     	;# 
  3091  0618                     	;# 
  3092  0619                     	;# 
  3093  061A                     	;# 
  3094  061B                     	;# 
  3095  061C                     	;# 
  3096  061D                     	;# 
  3097  061E                     	;# 
  3098  068C                     	;# 
  3099  068D                     	;# 
  3100  068E                     	;# 
  3101  068F                     	;# 
  3102  0690                     	;# 
  3103  0691                     	;# 
  3104  0692                     	;# 
  3105  0693                     	;# 
  3106  0694                     	;# 
  3107  070C                     	;# 
  3108  070D                     	;# 
  3109  070E                     	;# 
  3110  070F                     	;# 
  3111  0710                     	;# 
  3112  0711                     	;# 
  3113  0712                     	;# 
  3114  0713                     	;# 
  3115  0714                     	;# 
  3116  0716                     	;# 
  3117  0717                     	;# 
  3118  0718                     	;# 
  3119  0719                     	;# 
  3120  071A                     	;# 
  3121  071B                     	;# 
  3122  071C                     	;# 
  3123  071D                     	;# 
  3124  071E                     	;# 
  3125  0796                     	;# 
  3126  0797                     	;# 
  3127  0798                     	;# 
  3128  0799                     	;# 
  3129  079A                     	;# 
  3130  079B                     	;# 
  3131  080C                     	;# 
  3132  080D                     	;# 
  3133  080E                     	;# 
  3134  080F                     	;# 
  3135  0810                     	;# 
  3136  0811                     	;# 
  3137  0812                     	;# 
  3138  0813                     	;# 
  3139  0814                     	;# 
  3140  081A                     	;# 
  3141  081B                     	;# 
  3142  081C                     	;# 
  3143  081D                     	;# 
  3144  081E                     	;# 
  3145  081F                     	;# 
  3146  088C                     	;# 
  3147  088D                     	;# 
  3148  088E                     	;# 
  3149  088F                     	;# 
  3150  0890                     	;# 
  3151  0891                     	;# 
  3152  0892                     	;# 
  3153  0893                     	;# 
  3154  0895                     	;# 
  3155  0896                     	;# 
  3156  0897                     	;# 
  3157  0898                     	;# 
  3158  0899                     	;# 
  3159  089A                     	;# 
  3160  089B                     	;# 
  3161  090C                     	;# 
  3162  090E                     	;# 
  3163  090F                     	;# 
  3164  091F                     	;# 
  3165  091F                     	;# 
  3166  098F                     	;# 
  3167  098F                     	;# 
  3168  0990                     	;# 
  3169  0991                     	;# 
  3170  0992                     	;# 
  3171  0993                     	;# 
  3172  0994                     	;# 
  3173  0995                     	;# 
  3174  0996                     	;# 
  3175  0997                     	;# 
  3176  0E0F                     	;# 
  3177  0E10                     	;# 
  3178  0E11                     	;# 
  3179  0E12                     	;# 
  3180  0E13                     	;# 
  3181  0E14                     	;# 
  3182  0E15                     	;# 
  3183  0E16                     	;# 
  3184  0E17                     	;# 
  3185  0E18                     	;# 
  3186  0E19                     	;# 
  3187  0E1A                     	;# 
  3188  0E1B                     	;# 
  3189  0E1C                     	;# 
  3190  0E1D                     	;# 
  3191  0E1E                     	;# 
  3192  0E1F                     	;# 
  3193  0E20                     	;# 
  3194  0E21                     	;# 
  3195  0E22                     	;# 
  3196  0E23                     	;# 
  3197  0E24                     	;# 
  3198  0E25                     	;# 
  3199  0E26                     	;# 
  3200  0E27                     	;# 
  3201  0E28                     	;# 
  3202  0E29                     	;# 
  3203  0E2A                     	;# 
  3204  0E2B                     	;# 
  3205  0E2C                     	;# 
  3206  0E2D                     	;# 
  3207  0E2E                     	;# 
  3208  0E2F                     	;# 
  3209  0E30                     	;# 
  3210  0E31                     	;# 
  3211  0E32                     	;# 
  3212  0E33                     	;# 
  3213  0E34                     	;# 
  3214  0E35                     	;# 
  3215  0E36                     	;# 
  3216  0E37                     	;# 
  3217  0E8F                     	;# 
  3218  0E90                     	;# 
  3219  0E91                     	;# 
  3220  0E92                     	;# 
  3221  0E93                     	;# 
  3222  0E94                     	;# 
  3223  0E95                     	;# 
  3224  0E96                     	;# 
  3225  0E97                     	;# 
  3226  0E9C                     	;# 
  3227  0E9D                     	;# 
  3228  0E9E                     	;# 
  3229  0EA1                     	;# 
  3230  0EA2                     	;# 
  3231  0EA3                     	;# 
  3232  0EA4                     	;# 
  3233  0EA5                     	;# 
  3234  0EA9                     	;# 
  3235  0EAA                     	;# 
  3236  0EAB                     	;# 
  3237  0EAC                     	;# 
  3238  0EB1                     	;# 
  3239  0EB2                     	;# 
  3240  0EB3                     	;# 
  3241  0EB8                     	;# 
  3242  0EB9                     	;# 
  3243  0EBA                     	;# 
  3244  0EBB                     	;# 
  3245  0EBC                     	;# 
  3246  0EBD                     	;# 
  3247  0EBE                     	;# 
  3248  0EC3                     	;# 
  3249  0EC5                     	;# 
  3250  0EC6                     	;# 
  3251  0EC7                     	;# 
  3252  0EC8                     	;# 
  3253  0EC9                     	;# 
  3254  0ECA                     	;# 
  3255  0ECB                     	;# 
  3256  0ECC                     	;# 
  3257  0F10                     	;# 
  3258  0F11                     	;# 
  3259  0F12                     	;# 
  3260  0F13                     	;# 
  3261  0F14                     	;# 
  3262  0F15                     	;# 
  3263  0F16                     	;# 
  3264  0F17                     	;# 
  3265  0F18                     	;# 
  3266  0F19                     	;# 
  3267  0F1A                     	;# 
  3268  0F1B                     	;# 
  3269  0F1C                     	;# 
  3270  0F1D                     	;# 
  3271  0F1E                     	;# 
  3272  0F1F                     	;# 
  3273  0F20                     	;# 
  3274  0F21                     	;# 
  3275  0F22                     	;# 
  3276  0F23                     	;# 
  3277  0F24                     	;# 
  3278  0F25                     	;# 
  3279  0F26                     	;# 
  3280  0F27                     	;# 
  3281  0F28                     	;# 
  3282  0F29                     	;# 
  3283  0F2A                     	;# 
  3284  0F2B                     	;# 
  3285  0F2C                     	;# 
  3286  0F2D                     	;# 
  3287  0F2E                     	;# 
  3288  0F2F                     	;# 
  3289  0F30                     	;# 
  3290  0F31                     	;# 
  3291  0F32                     	;# 
  3292  0F38                     	;# 
  3293  0F39                     	;# 
  3294  0F3A                     	;# 
  3295  0F3B                     	;# 
  3296  0F3C                     	;# 
  3297  0F3D                     	;# 
  3298  0F3E                     	;# 
  3299  0F3F                     	;# 
  3300  0F40                     	;# 
  3301  0F41                     	;# 
  3302  0F43                     	;# 
  3303  0F44                     	;# 
  3304  0F45                     	;# 
  3305  0F46                     	;# 
  3306  0F47                     	;# 
  3307  0F48                     	;# 
  3308  0F49                     	;# 
  3309  0F4A                     	;# 
  3310  0F4B                     	;# 
  3311  0F4C                     	;# 
  3312  0F4E                     	;# 
  3313  0F4F                     	;# 
  3314  0F50                     	;# 
  3315  0F51                     	;# 
  3316  0F52                     	;# 
  3317  0F53                     	;# 
  3318  0F54                     	;# 
  3319  0F55                     	;# 
  3320  0F56                     	;# 
  3321  0F57                     	;# 
  3322  0F59                     	;# 
  3323  0F5A                     	;# 
  3324  0F5B                     	;# 
  3325  0F5C                     	;# 
  3326  0F5D                     	;# 
  3327  0F61                     	;# 
  3328  0F62                     	;# 
  3329  0F64                     	;# 
  3330  0F65                     	;# 
  3331  0F66                     	;# 
  3332  0F67                     	;# 
  3333  0F68                     	;# 
  3334  0F69                     	;# 
  3335  0F6A                     	;# 
  3336  0F6B                     	;# 
  3337  0F6C                     	;# 
  3338  0F6D                     	;# 
  3339  0FE4                     	;# 
  3340  0FE5                     	;# 
  3341  0FE6                     	;# 
  3342  0FE7                     	;# 
  3343  0FE8                     	;# 
  3344  0FE9                     	;# 
  3345  0FEA                     	;# 
  3346  0FEB                     	;# 
  3347  0FED                     	;# 
  3348  0FEE                     	;# 
  3349  0FEF                     	;# 
  3350  0000                     	;# 
  3351  0001                     	;# 
  3352  0002                     	;# 
  3353  0003                     	;# 
  3354  0004                     	;# 
  3355  0005                     	;# 
  3356  0006                     	;# 
  3357  0007                     	;# 
  3358  0008                     	;# 
  3359  0009                     	;# 
  3360  000A                     	;# 
  3361  000B                     	;# 
  3362  000C                     	;# 
  3363  000D                     	;# 
  3364  000E                     	;# 
  3365  000F                     	;# 
  3366  0010                     	;# 
  3367  0011                     	;# 
  3368  0012                     	;# 
  3369  0013                     	;# 
  3370  0014                     	;# 
  3371  0015                     	;# 
  3372  0016                     	;# 
  3373  0017                     	;# 
  3374  0018                     	;# 
  3375  0019                     	;# 
  3376  001A                     	;# 
  3377  001C                     	;# 
  3378  001C                     	;# 
  3379  001D                     	;# 
  3380  001D                     	;# 
  3381  001E                     	;# 
  3382  001F                     	;# 
  3383  008C                     	;# 
  3384  008C                     	;# 
  3385  008D                     	;# 
  3386  008E                     	;# 
  3387  008E                     	;# 
  3388  008F                     	;# 
  3389  0090                     	;# 
  3390  0090                     	;# 
  3391  0091                     	;# 
  3392  0093                     	;# 
  3393  0094                     	;# 
  3394  0095                     	;# 
  3395  0096                     	;# 
  3396  0097                     	;# 
  3397  0098                     	;# 
  3398  0099                     	;# 
  3399  009A                     	;# 
  3400  009B                     	;# 
  3401  009C                     	;# 
  3402  009D                     	;# 
  3403  009E                     	;# 
  3404  010C                     	;# 
  3405  010D                     	;# 
  3406  010E                     	;# 
  3407  010E                     	;# 
  3408  010F                     	;# 
  3409  0110                     	;# 
  3410  0110                     	;# 
  3411  0111                     	;# 
  3412  0112                     	;# 
  3413  0112                     	;# 
  3414  0113                     	;# 
  3415  0114                     	;# 
  3416  0114                     	;# 
  3417  0115                     	;# 
  3418  0116                     	;# 
  3419  0116                     	;# 
  3420  0117                     	;# 
  3421  0119                     	;# 
  3422  0119                     	;# 
  3423  0119                     	;# 
  3424  011A                     	;# 
  3425  011A                     	;# 
  3426  011A                     	;# 
  3427  011B                     	;# 
  3428  011B                     	;# 
  3429  011B                     	;# 
  3430  011B                     	;# 
  3431  011B                     	;# 
  3432  011C                     	;# 
  3433  011C                     	;# 
  3434  011C                     	;# 
  3435  011D                     	;# 
  3436  011D                     	;# 
  3437  011D                     	;# 
  3438  011E                     	;# 
  3439  011E                     	;# 
  3440  011E                     	;# 
  3441  011F                     	;# 
  3442  011F                     	;# 
  3443  011F                     	;# 
  3444  011F                     	;# 
  3445  011F                     	;# 
  3446  018C                     	;# 
  3447  018D                     	;# 
  3448  018E                     	;# 
  3449  018F                     	;# 
  3450  0190                     	;# 
  3451  0191                     	;# 
  3452  0192                     	;# 
  3453  0196                     	;# 
  3454  0197                     	;# 
  3455  0198                     	;# 
  3456  0199                     	;# 
  3457  019A                     	;# 
  3458  019B                     	;# 
  3459  019C                     	;# 
  3460  020C                     	;# 
  3461  020C                     	;# 
  3462  020D                     	;# 
  3463  020E                     	;# 
  3464  020F                     	;# 
  3465  020F                     	;# 
  3466  0210                     	;# 
  3467  0210                     	;# 
  3468  0211                     	;# 
  3469  0211                     	;# 
  3470  0212                     	;# 
  3471  0212                     	;# 
  3472  0213                     	;# 
  3473  0214                     	;# 
  3474  0215                     	;# 
  3475  0215                     	;# 
  3476  0216                     	;# 
  3477  0216                     	;# 
  3478  0217                     	;# 
  3479  0217                     	;# 
  3480  0218                     	;# 
  3481  0218                     	;# 
  3482  0219                     	;# 
  3483  021A                     	;# 
  3484  021B                     	;# 
  3485  021B                     	;# 
  3486  021C                     	;# 
  3487  021C                     	;# 
  3488  021D                     	;# 
  3489  021D                     	;# 
  3490  021E                     	;# 
  3491  021F                     	;# 
  3492  028C                     	;# 
  3493  028C                     	;# 
  3494  028D                     	;# 
  3495  028D                     	;# 
  3496  028E                     	;# 
  3497  028F                     	;# 
  3498  0290                     	;# 
  3499  0290                     	;# 
  3500  0291                     	;# 
  3501  0292                     	;# 
  3502  0292                     	;# 
  3503  0293                     	;# 
  3504  0293                     	;# 
  3505  0294                     	;# 
  3506  0295                     	;# 
  3507  0296                     	;# 
  3508  0296                     	;# 
  3509  0297                     	;# 
  3510  0298                     	;# 
  3511  0298                     	;# 
  3512  0299                     	;# 
  3513  0299                     	;# 
  3514  029A                     	;# 
  3515  029B                     	;# 
  3516  029C                     	;# 
  3517  029C                     	;# 
  3518  029D                     	;# 
  3519  030C                     	;# 
  3520  030C                     	;# 
  3521  030D                     	;# 
  3522  030E                     	;# 
  3523  030F                     	;# 
  3524  0310                     	;# 
  3525  0310                     	;# 
  3526  0311                     	;# 
  3527  0312                     	;# 
  3528  0313                     	;# 
  3529  0314                     	;# 
  3530  0314                     	;# 
  3531  0315                     	;# 
  3532  0316                     	;# 
  3533  0317                     	;# 
  3534  0318                     	;# 
  3535  0318                     	;# 
  3536  0319                     	;# 
  3537  031A                     	;# 
  3538  031B                     	;# 
  3539  031C                     	;# 
  3540  031C                     	;# 
  3541  031D                     	;# 
  3542  031E                     	;# 
  3543  031F                     	;# 
  3544  038C                     	;# 
  3545  038C                     	;# 
  3546  038D                     	;# 
  3547  038E                     	;# 
  3548  0390                     	;# 
  3549  0390                     	;# 
  3550  0391                     	;# 
  3551  0392                     	;# 
  3552  040C                     	;# 
  3553  040D                     	;# 
  3554  040E                     	;# 
  3555  040F                     	;# 
  3556  0410                     	;# 
  3557  0411                     	;# 
  3558  0416                     	;# 
  3559  0416                     	;# 
  3560  0417                     	;# 
  3561  0418                     	;# 
  3562  0418                     	;# 
  3563  0419                     	;# 
  3564  041A                     	;# 
  3565  041A                     	;# 
  3566  041B                     	;# 
  3567  041C                     	;# 
  3568  041C                     	;# 
  3569  041D                     	;# 
  3570  041E                     	;# 
  3571  041F                     	;# 
  3572  048C                     	;# 
  3573  048C                     	;# 
  3574  048D                     	;# 
  3575  048E                     	;# 
  3576  048F                     	;# 
  3577  048F                     	;# 
  3578  0490                     	;# 
  3579  0491                     	;# 
  3580  0492                     	;# 
  3581  0492                     	;# 
  3582  0493                     	;# 
  3583  0494                     	;# 
  3584  0495                     	;# 
  3585  0495                     	;# 
  3586  0496                     	;# 
  3587  0497                     	;# 
  3588  0498                     	;# 
  3589  0499                     	;# 
  3590  049A                     	;# 
  3591  049B                     	;# 
  3592  049C                     	;# 
  3593  049D                     	;# 
  3594  050C                     	;# 
  3595  050C                     	;# 
  3596  050D                     	;# 
  3597  050E                     	;# 
  3598  050F                     	;# 
  3599  050F                     	;# 
  3600  0510                     	;# 
  3601  0511                     	;# 
  3602  0512                     	;# 
  3603  0512                     	;# 
  3604  0513                     	;# 
  3605  0514                     	;# 
  3606  0515                     	;# 
  3607  0515                     	;# 
  3608  0516                     	;# 
  3609  0517                     	;# 
  3610  0518                     	;# 
  3611  0519                     	;# 
  3612  051A                     	;# 
  3613  051B                     	;# 
  3614  051C                     	;# 
  3615  051D                     	;# 
  3616  058C                     	;# 
  3617  058C                     	;# 
  3618  058D                     	;# 
  3619  058E                     	;# 
  3620  058F                     	;# 
  3621  058F                     	;# 
  3622  0590                     	;# 
  3623  0591                     	;# 
  3624  0592                     	;# 
  3625  0593                     	;# 
  3626  060C                     	;# 
  3627  060D                     	;# 
  3628  060E                     	;# 
  3629  060F                     	;# 
  3630  0610                     	;# 
  3631  0611                     	;# 
  3632  0612                     	;# 
  3633  0613                     	;# 
  3634  0614                     	;# 
  3635  0616                     	;# 
  3636  0617                     	;# 
  3637  0618                     	;# 
  3638  0619                     	;# 
  3639  061A                     	;# 
  3640  061B                     	;# 
  3641  061C                     	;# 
  3642  061D                     	;# 
  3643  061E                     	;# 
  3644  068C                     	;# 
  3645  068D                     	;# 
  3646  068E                     	;# 
  3647  068F                     	;# 
  3648  0690                     	;# 
  3649  0691                     	;# 
  3650  0692                     	;# 
  3651  0693                     	;# 
  3652  0694                     	;# 
  3653  070C                     	;# 
  3654  070D                     	;# 
  3655  070E                     	;# 
  3656  070F                     	;# 
  3657  0710                     	;# 
  3658  0711                     	;# 
  3659  0712                     	;# 
  3660  0713                     	;# 
  3661  0714                     	;# 
  3662  0716                     	;# 
  3663  0717                     	;# 
  3664  0718                     	;# 
  3665  0719                     	;# 
  3666  071A                     	;# 
  3667  071B                     	;# 
  3668  071C                     	;# 
  3669  071D                     	;# 
  3670  071E                     	;# 
  3671  0796                     	;# 
  3672  0797                     	;# 
  3673  0798                     	;# 
  3674  0799                     	;# 
  3675  079A                     	;# 
  3676  079B                     	;# 
  3677  080C                     	;# 
  3678  080D                     	;# 
  3679  080E                     	;# 
  3680  080F                     	;# 
  3681  0810                     	;# 
  3682  0811                     	;# 
  3683  0812                     	;# 
  3684  0813                     	;# 
  3685  0814                     	;# 
  3686  081A                     	;# 
  3687  081B                     	;# 
  3688  081C                     	;# 
  3689  081D                     	;# 
  3690  081E                     	;# 
  3691  081F                     	;# 
  3692  088C                     	;# 
  3693  088D                     	;# 
  3694  088E                     	;# 
  3695  088F                     	;# 
  3696  0890                     	;# 
  3697  0891                     	;# 
  3698  0892                     	;# 
  3699  0893                     	;# 
  3700  0895                     	;# 
  3701  0896                     	;# 
  3702  0897                     	;# 
  3703  0898                     	;# 
  3704  0899                     	;# 
  3705  089A                     	;# 
  3706  089B                     	;# 
  3707  090C                     	;# 
  3708  090E                     	;# 
  3709  090F                     	;# 
  3710  091F                     	;# 
  3711  091F                     	;# 
  3712  098F                     	;# 
  3713  098F                     	;# 
  3714  0990                     	;# 
  3715  0991                     	;# 
  3716  0992                     	;# 
  3717  0993                     	;# 
  3718  0994                     	;# 
  3719  0995                     	;# 
  3720  0996                     	;# 
  3721  0997                     	;# 
  3722  0E0F                     	;# 
  3723  0E10                     	;# 
  3724  0E11                     	;# 
  3725  0E12                     	;# 
  3726  0E13                     	;# 
  3727  0E14                     	;# 
  3728  0E15                     	;# 
  3729  0E16                     	;# 
  3730  0E17                     	;# 
  3731  0E18                     	;# 
  3732  0E19                     	;# 
  3733  0E1A                     	;# 
  3734  0E1B                     	;# 
  3735  0E1C                     	;# 
  3736  0E1D                     	;# 
  3737  0E1E                     	;# 
  3738  0E1F                     	;# 
  3739  0E20                     	;# 
  3740  0E21                     	;# 
  3741  0E22                     	;# 
  3742  0E23                     	;# 
  3743  0E24                     	;# 
  3744  0E25                     	;# 
  3745  0E26                     	;# 
  3746  0E27                     	;# 
  3747  0E28                     	;# 
  3748  0E29                     	;# 
  3749  0E2A                     	;# 
  3750  0E2B                     	;# 
  3751  0E2C                     	;# 
  3752  0E2D                     	;# 
  3753  0E2E                     	;# 
  3754  0E2F                     	;# 
  3755  0E30                     	;# 
  3756  0E31                     	;# 
  3757  0E32                     	;# 
  3758  0E33                     	;# 
  3759  0E34                     	;# 
  3760  0E35                     	;# 
  3761  0E36                     	;# 
  3762  0E37                     	;# 
  3763  0E8F                     	;# 
  3764  0E90                     	;# 
  3765  0E91                     	;# 
  3766  0E92                     	;# 
  3767  0E93                     	;# 
  3768  0E94                     	;# 
  3769  0E95                     	;# 
  3770  0E96                     	;# 
  3771  0E97                     	;# 
  3772  0E9C                     	;# 
  3773  0E9D                     	;# 
  3774  0E9E                     	;# 
  3775  0EA1                     	;# 
  3776  0EA2                     	;# 
  3777  0EA3                     	;# 
  3778  0EA4                     	;# 
  3779  0EA5                     	;# 
  3780  0EA9                     	;# 
  3781  0EAA                     	;# 
  3782  0EAB                     	;# 
  3783  0EAC                     	;# 
  3784  0EB1                     	;# 
  3785  0EB2                     	;# 
  3786  0EB3                     	;# 
  3787  0EB8                     	;# 
  3788  0EB9                     	;# 
  3789  0EBA                     	;# 
  3790  0EBB                     	;# 
  3791  0EBC                     	;# 
  3792  0EBD                     	;# 
  3793  0EBE                     	;# 
  3794  0EC3                     	;# 
  3795  0EC5                     	;# 
  3796  0EC6                     	;# 
  3797  0EC7                     	;# 
  3798  0EC8                     	;# 
  3799  0EC9                     	;# 
  3800  0ECA                     	;# 
  3801  0ECB                     	;# 
  3802  0ECC                     	;# 
  3803  0F10                     	;# 
  3804  0F11                     	;# 
  3805  0F12                     	;# 
  3806  0F13                     	;# 
  3807  0F14                     	;# 
  3808  0F15                     	;# 
  3809  0F16                     	;# 
  3810  0F17                     	;# 
  3811  0F18                     	;# 
  3812  0F19                     	;# 
  3813  0F1A                     	;# 
  3814  0F1B                     	;# 
  3815  0F1C                     	;# 
  3816  0F1D                     	;# 
  3817  0F1E                     	;# 
  3818  0F1F                     	;# 
  3819  0F20                     	;# 
  3820  0F21                     	;# 
  3821  0F22                     	;# 
  3822  0F23                     	;# 
  3823  0F24                     	;# 
  3824  0F25                     	;# 
  3825  0F26                     	;# 
  3826  0F27                     	;# 
  3827  0F28                     	;# 
  3828  0F29                     	;# 
  3829  0F2A                     	;# 
  3830  0F2B                     	;# 
  3831  0F2C                     	;# 
  3832  0F2D                     	;# 
  3833  0F2E                     	;# 
  3834  0F2F                     	;# 
  3835  0F30                     	;# 
  3836  0F31                     	;# 
  3837  0F32                     	;# 
  3838  0F38                     	;# 
  3839  0F39                     	;# 
  3840  0F3A                     	;# 
  3841  0F3B                     	;# 
  3842  0F3C                     	;# 
  3843  0F3D                     	;# 
  3844  0F3E                     	;# 
  3845  0F3F                     	;# 
  3846  0F40                     	;# 
  3847  0F41                     	;# 
  3848  0F43                     	;# 
  3849  0F44                     	;# 
  3850  0F45                     	;# 
  3851  0F46                     	;# 
  3852  0F47                     	;# 
  3853  0F48                     	;# 
  3854  0F49                     	;# 
  3855  0F4A                     	;# 
  3856  0F4B                     	;# 
  3857  0F4C                     	;# 
  3858  0F4E                     	;# 
  3859  0F4F                     	;# 
  3860  0F50                     	;# 
  3861  0F51                     	;# 
  3862  0F52                     	;# 
  3863  0F53                     	;# 
  3864  0F54                     	;# 
  3865  0F55                     	;# 
  3866  0F56                     	;# 
  3867  0F57                     	;# 
  3868  0F59                     	;# 
  3869  0F5A                     	;# 
  3870  0F5B                     	;# 
  3871  0F5C                     	;# 
  3872  0F5D                     	;# 
  3873  0F61                     	;# 
  3874  0F62                     	;# 
  3875  0F64                     	;# 
  3876  0F65                     	;# 
  3877  0F66                     	;# 
  3878  0F67                     	;# 
  3879  0F68                     	;# 
  3880  0F69                     	;# 
  3881  0F6A                     	;# 
  3882  0F6B                     	;# 
  3883  0F6C                     	;# 
  3884  0F6D                     	;# 
  3885  0FE4                     	;# 
  3886  0FE5                     	;# 
  3887  0FE6                     	;# 
  3888  0FE7                     	;# 
  3889  0FE8                     	;# 
  3890  0FE9                     	;# 
  3891  0FEA                     	;# 
  3892  0FEB                     	;# 
  3893  0FED                     	;# 
  3894  0FEE                     	;# 
  3895  0FEF                     	;# 
  3896  0000                     	;# 
  3897  0001                     	;# 
  3898  0002                     	;# 
  3899  0003                     	;# 
  3900  0004                     	;# 
  3901  0005                     	;# 
  3902  0006                     	;# 
  3903  0007                     	;# 
  3904  0008                     	;# 
  3905  0009                     	;# 
  3906  000A                     	;# 
  3907  000B                     	;# 
  3908  000C                     	;# 
  3909  000D                     	;# 
  3910  000E                     	;# 
  3911  000F                     	;# 
  3912  0010                     	;# 
  3913  0011                     	;# 
  3914  0012                     	;# 
  3915  0013                     	;# 
  3916  0014                     	;# 
  3917  0015                     	;# 
  3918  0016                     	;# 
  3919  0017                     	;# 
  3920  0018                     	;# 
  3921  0019                     	;# 
  3922  001A                     	;# 
  3923  001C                     	;# 
  3924  001C                     	;# 
  3925  001D                     	;# 
  3926  001D                     	;# 
  3927  001E                     	;# 
  3928  001F                     	;# 
  3929  008C                     	;# 
  3930  008C                     	;# 
  3931  008D                     	;# 
  3932  008E                     	;# 
  3933  008E                     	;# 
  3934  008F                     	;# 
  3935  0090                     	;# 
  3936  0090                     	;# 
  3937  0091                     	;# 
  3938  0093                     	;# 
  3939  0094                     	;# 
  3940  0095                     	;# 
  3941  0096                     	;# 
  3942  0097                     	;# 
  3943  0098                     	;# 
  3944  0099                     	;# 
  3945  009A                     	;# 
  3946  009B                     	;# 
  3947  009C                     	;# 
  3948  009D                     	;# 
  3949  009E                     	;# 
  3950  010C                     	;# 
  3951  010D                     	;# 
  3952  010E                     	;# 
  3953  010E                     	;# 
  3954  010F                     	;# 
  3955  0110                     	;# 
  3956  0110                     	;# 
  3957  0111                     	;# 
  3958  0112                     	;# 
  3959  0112                     	;# 
  3960  0113                     	;# 
  3961  0114                     	;# 
  3962  0114                     	;# 
  3963  0115                     	;# 
  3964  0116                     	;# 
  3965  0116                     	;# 
  3966  0117                     	;# 
  3967  0119                     	;# 
  3968  0119                     	;# 
  3969  0119                     	;# 
  3970  011A                     	;# 
  3971  011A                     	;# 
  3972  011A                     	;# 
  3973  011B                     	;# 
  3974  011B                     	;# 
  3975  011B                     	;# 
  3976  011B                     	;# 
  3977  011B                     	;# 
  3978  011C                     	;# 
  3979  011C                     	;# 
  3980  011C                     	;# 
  3981  011D                     	;# 
  3982  011D                     	;# 
  3983  011D                     	;# 
  3984  011E                     	;# 
  3985  011E                     	;# 
  3986  011E                     	;# 
  3987  011F                     	;# 
  3988  011F                     	;# 
  3989  011F                     	;# 
  3990  011F                     	;# 
  3991  011F                     	;# 
  3992  018C                     	;# 
  3993  018D                     	;# 
  3994  018E                     	;# 
  3995  018F                     	;# 
  3996  0190                     	;# 
  3997  0191                     	;# 
  3998  0192                     	;# 
  3999  0196                     	;# 
  4000  0197                     	;# 
  4001  0198                     	;# 
  4002  0199                     	;# 
  4003  019A                     	;# 
  4004  019B                     	;# 
  4005  019C                     	;# 
  4006  020C                     	;# 
  4007  020C                     	;# 
  4008  020D                     	;# 
  4009  020E                     	;# 
  4010  020F                     	;# 
  4011  020F                     	;# 
  4012  0210                     	;# 
  4013  0210                     	;# 
  4014  0211                     	;# 
  4015  0211                     	;# 
  4016  0212                     	;# 
  4017  0212                     	;# 
  4018  0213                     	;# 
  4019  0214                     	;# 
  4020  0215                     	;# 
  4021  0215                     	;# 
  4022  0216                     	;# 
  4023  0216                     	;# 
  4024  0217                     	;# 
  4025  0217                     	;# 
  4026  0218                     	;# 
  4027  0218                     	;# 
  4028  0219                     	;# 
  4029  021A                     	;# 
  4030  021B                     	;# 
  4031  021B                     	;# 
  4032  021C                     	;# 
  4033  021C                     	;# 
  4034  021D                     	;# 
  4035  021D                     	;# 
  4036  021E                     	;# 
  4037  021F                     	;# 
  4038  028C                     	;# 
  4039  028C                     	;# 
  4040  028D                     	;# 
  4041  028D                     	;# 
  4042  028E                     	;# 
  4043  028F                     	;# 
  4044  0290                     	;# 
  4045  0290                     	;# 
  4046  0291                     	;# 
  4047  0292                     	;# 
  4048  0292                     	;# 
  4049  0293                     	;# 
  4050  0293                     	;# 
  4051  0294                     	;# 
  4052  0295                     	;# 
  4053  0296                     	;# 
  4054  0296                     	;# 
  4055  0297                     	;# 
  4056  0298                     	;# 
  4057  0298                     	;# 
  4058  0299                     	;# 
  4059  0299                     	;# 
  4060  029A                     	;# 
  4061  029B                     	;# 
  4062  029C                     	;# 
  4063  029C                     	;# 
  4064  029D                     	;# 
  4065  030C                     	;# 
  4066  030C                     	;# 
  4067  030D                     	;# 
  4068  030E                     	;# 
  4069  030F                     	;# 
  4070  0310                     	;# 
  4071  0310                     	;# 
  4072  0311                     	;# 
  4073  0312                     	;# 
  4074  0313                     	;# 
  4075  0314                     	;# 
  4076  0314                     	;# 
  4077  0315                     	;# 
  4078  0316                     	;# 
  4079  0317                     	;# 
  4080  0318                     	;# 
  4081  0318                     	;# 
  4082  0319                     	;# 
  4083  031A                     	;# 
  4084  031B                     	;# 
  4085  031C                     	;# 
  4086  031C                     	;# 
  4087  031D                     	;# 
  4088  031E                     	;# 
  4089  031F                     	;# 
  4090  038C                     	;# 
  4091  038C                     	;# 
  4092  038D                     	;# 
  4093  038E                     	;# 
  4094  0390                     	;# 
  4095  0390                     	;# 
  4096  0391                     	;# 
  4097  0392                     	;# 
  4098  040C                     	;# 
  4099  040D                     	;# 
  4100  040E                     	;# 
  4101  040F                     	;# 
  4102  0410                     	;# 
  4103  0411                     	;# 
  4104  0416                     	;# 
  4105  0416                     	;# 
  4106  0417                     	;# 
  4107  0418                     	;# 
  4108  0418                     	;# 
  4109  0419                     	;# 
  4110  041A                     	;# 
  4111  041A                     	;# 
  4112  041B                     	;# 
  4113  041C                     	;# 
  4114  041C                     	;# 
  4115  041D                     	;# 
  4116  041E                     	;# 
  4117  041F                     	;# 
  4118  048C                     	;# 
  4119  048C                     	;# 
  4120  048D                     	;# 
  4121  048E                     	;# 
  4122  048F                     	;# 
  4123  048F                     	;# 
  4124  0490                     	;# 
  4125  0491                     	;# 
  4126  0492                     	;# 
  4127  0492                     	;# 
  4128  0493                     	;# 
  4129  0494                     	;# 
  4130  0495                     	;# 
  4131  0495                     	;# 
  4132  0496                     	;# 
  4133  0497                     	;# 
  4134  0498                     	;# 
  4135  0499                     	;# 
  4136  049A                     	;# 
  4137  049B                     	;# 
  4138  049C                     	;# 
  4139  049D                     	;# 
  4140  050C                     	;# 
  4141  050C                     	;# 
  4142  050D                     	;# 
  4143  050E                     	;# 
  4144  050F                     	;# 
  4145  050F                     	;# 
  4146  0510                     	;# 
  4147  0511                     	;# 
  4148  0512                     	;# 
  4149  0512                     	;# 
  4150  0513                     	;# 
  4151  0514                     	;# 
  4152  0515                     	;# 
  4153  0515                     	;# 
  4154  0516                     	;# 
  4155  0517                     	;# 
  4156  0518                     	;# 
  4157  0519                     	;# 
  4158  051A                     	;# 
  4159  051B                     	;# 
  4160  051C                     	;# 
  4161  051D                     	;# 
  4162  058C                     	;# 
  4163  058C                     	;# 
  4164  058D                     	;# 
  4165  058E                     	;# 
  4166  058F                     	;# 
  4167  058F                     	;# 
  4168  0590                     	;# 
  4169  0591                     	;# 
  4170  0592                     	;# 
  4171  0593                     	;# 
  4172  060C                     	;# 
  4173  060D                     	;# 
  4174  060E                     	;# 
  4175  060F                     	;# 
  4176  0610                     	;# 
  4177  0611                     	;# 
  4178  0612                     	;# 
  4179  0613                     	;# 
  4180  0614                     	;# 
  4181  0616                     	;# 
  4182  0617                     	;# 
  4183  0618                     	;# 
  4184  0619                     	;# 
  4185  061A                     	;# 
  4186  061B                     	;# 
  4187  061C                     	;# 
  4188  061D                     	;# 
  4189  061E                     	;# 
  4190  068C                     	;# 
  4191  068D                     	;# 
  4192  068E                     	;# 
  4193  068F                     	;# 
  4194  0690                     	;# 
  4195  0691                     	;# 
  4196  0692                     	;# 
  4197  0693                     	;# 
  4198  0694                     	;# 
  4199  070C                     	;# 
  4200  070D                     	;# 
  4201  070E                     	;# 
  4202  070F                     	;# 
  4203  0710                     	;# 
  4204  0711                     	;# 
  4205  0712                     	;# 
  4206  0713                     	;# 
  4207  0714                     	;# 
  4208  0716                     	;# 
  4209  0717                     	;# 
  4210  0718                     	;# 
  4211  0719                     	;# 
  4212  071A                     	;# 
  4213  071B                     	;# 
  4214  071C                     	;# 
  4215  071D                     	;# 
  4216  071E                     	;# 
  4217  0796                     	;# 
  4218  0797                     	;# 
  4219  0798                     	;# 
  4220  0799                     	;# 
  4221  079A                     	;# 
  4222  079B                     	;# 
  4223  080C                     	;# 
  4224  080D                     	;# 
  4225  080E                     	;# 
  4226  080F                     	;# 
  4227  0810                     	;# 
  4228  0811                     	;# 
  4229  0812                     	;# 
  4230  0813                     	;# 
  4231  0814                     	;# 
  4232  081A                     	;# 
  4233  081B                     	;# 
  4234  081C                     	;# 
  4235  081D                     	;# 
  4236  081E                     	;# 
  4237  081F                     	;# 
  4238  088C                     	;# 
  4239  088D                     	;# 
  4240  088E                     	;# 
  4241  088F                     	;# 
  4242  0890                     	;# 
  4243  0891                     	;# 
  4244  0892                     	;# 
  4245  0893                     	;# 
  4246  0895                     	;# 
  4247  0896                     	;# 
  4248  0897                     	;# 
  4249  0898                     	;# 
  4250  0899                     	;# 
  4251  089A                     	;# 
  4252  089B                     	;# 
  4253  090C                     	;# 
  4254  090E                     	;# 
  4255  090F                     	;# 
  4256  091F                     	;# 
  4257  091F                     	;# 
  4258  098F                     	;# 
  4259  098F                     	;# 
  4260  0990                     	;# 
  4261  0991                     	;# 
  4262  0992                     	;# 
  4263  0993                     	;# 
  4264  0994                     	;# 
  4265  0995                     	;# 
  4266  0996                     	;# 
  4267  0997                     	;# 
  4268  0E0F                     	;# 
  4269  0E10                     	;# 
  4270  0E11                     	;# 
  4271  0E12                     	;# 
  4272  0E13                     	;# 
  4273  0E14                     	;# 
  4274  0E15                     	;# 
  4275  0E16                     	;# 
  4276  0E17                     	;# 
  4277  0E18                     	;# 
  4278  0E19                     	;# 
  4279  0E1A                     	;# 
  4280  0E1B                     	;# 
  4281  0E1C                     	;# 
  4282  0E1D                     	;# 
  4283  0E1E                     	;# 
  4284  0E1F                     	;# 
  4285  0E20                     	;# 
  4286  0E21                     	;# 
  4287  0E22                     	;# 
  4288  0E23                     	;# 
  4289  0E24                     	;# 
  4290  0E25                     	;# 
  4291  0E26                     	;# 
  4292  0E27                     	;# 
  4293  0E28                     	;# 
  4294  0E29                     	;# 
  4295  0E2A                     	;# 
  4296  0E2B                     	;# 
  4297  0E2C                     	;# 
  4298  0E2D                     	;# 
  4299  0E2E                     	;# 
  4300  0E2F                     	;# 
  4301  0E30                     	;# 
  4302  0E31                     	;# 
  4303  0E32                     	;# 
  4304  0E33                     	;# 
  4305  0E34                     	;# 
  4306  0E35                     	;# 
  4307  0E36                     	;# 
  4308  0E37                     	;# 
  4309  0E8F                     	;# 
  4310  0E90                     	;# 
  4311  0E91                     	;# 
  4312  0E92                     	;# 
  4313  0E93                     	;# 
  4314  0E94                     	;# 
  4315  0E95                     	;# 
  4316  0E96                     	;# 
  4317  0E97                     	;# 
  4318  0E9C                     	;# 
  4319  0E9D                     	;# 
  4320  0E9E                     	;# 
  4321  0EA1                     	;# 
  4322  0EA2                     	;# 
  4323  0EA3                     	;# 
  4324  0EA4                     	;# 
  4325  0EA5                     	;# 
  4326  0EA9                     	;# 
  4327  0EAA                     	;# 
  4328  0EAB                     	;# 
  4329  0EAC                     	;# 
  4330  0EB1                     	;# 
  4331  0EB2                     	;# 
  4332  0EB3                     	;# 
  4333  0EB8                     	;# 
  4334  0EB9                     	;# 
  4335  0EBA                     	;# 
  4336  0EBB                     	;# 
  4337  0EBC                     	;# 
  4338  0EBD                     	;# 
  4339  0EBE                     	;# 
  4340  0EC3                     	;# 
  4341  0EC5                     	;# 
  4342  0EC6                     	;# 
  4343  0EC7                     	;# 
  4344  0EC8                     	;# 
  4345  0EC9                     	;# 
  4346  0ECA                     	;# 
  4347  0ECB                     	;# 
  4348  0ECC                     	;# 
  4349  0F10                     	;# 
  4350  0F11                     	;# 
  4351  0F12                     	;# 
  4352  0F13                     	;# 
  4353  0F14                     	;# 
  4354  0F15                     	;# 
  4355  0F16                     	;# 
  4356  0F17                     	;# 
  4357  0F18                     	;# 
  4358  0F19                     	;# 
  4359  0F1A                     	;# 
  4360  0F1B                     	;# 
  4361  0F1C                     	;# 
  4362  0F1D                     	;# 
  4363  0F1E                     	;# 
  4364  0F1F                     	;# 
  4365  0F20                     	;# 
  4366  0F21                     	;# 
  4367  0F22                     	;# 
  4368  0F23                     	;# 
  4369  0F24                     	;# 
  4370  0F25                     	;# 
  4371  0F26                     	;# 
  4372  0F27                     	;# 
  4373  0F28                     	;# 
  4374  0F29                     	;# 
  4375  0F2A                     	;# 
  4376  0F2B                     	;# 
  4377  0F2C                     	;# 
  4378  0F2D                     	;# 
  4379  0F2E                     	;# 
  4380  0F2F                     	;# 
  4381  0F30                     	;# 
  4382  0F31                     	;# 
  4383  0F32                     	;# 
  4384  0F38                     	;# 
  4385  0F39                     	;# 
  4386  0F3A                     	;# 
  4387  0F3B                     	;# 
  4388  0F3C                     	;# 
  4389  0F3D                     	;# 
  4390  0F3E                     	;# 
  4391  0F3F                     	;# 
  4392  0F40                     	;# 
  4393  0F41                     	;# 
  4394  0F43                     	;# 
  4395  0F44                     	;# 
  4396  0F45                     	;# 
  4397  0F46                     	;# 
  4398  0F47                     	;# 
  4399  0F48                     	;# 
  4400  0F49                     	;# 
  4401  0F4A                     	;# 
  4402  0F4B                     	;# 
  4403  0F4C                     	;# 
  4404  0F4E                     	;# 
  4405  0F4F                     	;# 
  4406  0F50                     	;# 
  4407  0F51                     	;# 
  4408  0F52                     	;# 
  4409  0F53                     	;# 
  4410  0F54                     	;# 
  4411  0F55                     	;# 
  4412  0F56                     	;# 
  4413  0F57                     	;# 
  4414  0F59                     	;# 
  4415  0F5A                     	;# 
  4416  0F5B                     	;# 
  4417  0F5C                     	;# 
  4418  0F5D                     	;# 
  4419  0F61                     	;# 
  4420  0F62                     	;# 
  4421  0F64                     	;# 
  4422  0F65                     	;# 
  4423  0F66                     	;# 
  4424  0F67                     	;# 
  4425  0F68                     	;# 
  4426  0F69                     	;# 
  4427  0F6A                     	;# 
  4428  0F6B                     	;# 
  4429  0F6C                     	;# 
  4430  0F6D                     	;# 
  4431  0FE4                     	;# 
  4432  0FE5                     	;# 
  4433  0FE6                     	;# 
  4434  0FE7                     	;# 
  4435  0FE8                     	;# 
  4436  0FE9                     	;# 
  4437  0FEA                     	;# 
  4438  0FEB                     	;# 
  4439  0FED                     	;# 
  4440  0FEE                     	;# 
  4441  0FEF                     	;# 
  4442  0000                     	;# 
  4443  0001                     	;# 
  4444  0002                     	;# 
  4445  0003                     	;# 
  4446  0004                     	;# 
  4447  0005                     	;# 
  4448  0006                     	;# 
  4449  0007                     	;# 
  4450  0008                     	;# 
  4451  0009                     	;# 
  4452  000A                     	;# 
  4453  000B                     	;# 
  4454  000C                     	;# 
  4455  000D                     	;# 
  4456  000E                     	;# 
  4457  000F                     	;# 
  4458  0010                     	;# 
  4459  0011                     	;# 
  4460  0012                     	;# 
  4461  0013                     	;# 
  4462  0014                     	;# 
  4463  0015                     	;# 
  4464  0016                     	;# 
  4465  0017                     	;# 
  4466  0018                     	;# 
  4467  0019                     	;# 
  4468  001A                     	;# 
  4469  001C                     	;# 
  4470  001C                     	;# 
  4471  001D                     	;# 
  4472  001D                     	;# 
  4473  001E                     	;# 
  4474  001F                     	;# 
  4475  008C                     	;# 
  4476  008C                     	;# 
  4477  008D                     	;# 
  4478  008E                     	;# 
  4479  008E                     	;# 
  4480  008F                     	;# 
  4481  0090                     	;# 
  4482  0090                     	;# 
  4483  0091                     	;# 
  4484  0093                     	;# 
  4485  0094                     	;# 
  4486  0095                     	;# 
  4487  0096                     	;# 
  4488  0097                     	;# 
  4489  0098                     	;# 
  4490  0099                     	;# 
  4491  009A                     	;# 
  4492  009B                     	;# 
  4493  009C                     	;# 
  4494  009D                     	;# 
  4495  009E                     	;# 
  4496  010C                     	;# 
  4497  010D                     	;# 
  4498  010E                     	;# 
  4499  010E                     	;# 
  4500  010F                     	;# 
  4501  0110                     	;# 
  4502  0110                     	;# 
  4503  0111                     	;# 
  4504  0112                     	;# 
  4505  0112                     	;# 
  4506  0113                     	;# 
  4507  0114                     	;# 
  4508  0114                     	;# 
  4509  0115                     	;# 
  4510  0116                     	;# 
  4511  0116                     	;# 
  4512  0117                     	;# 
  4513  0119                     	;# 
  4514  0119                     	;# 
  4515  0119                     	;# 
  4516  011A                     	;# 
  4517  011A                     	;# 
  4518  011A                     	;# 
  4519  011B                     	;# 
  4520  011B                     	;# 
  4521  011B                     	;# 
  4522  011B                     	;# 
  4523  011B                     	;# 
  4524  011C                     	;# 
  4525  011C                     	;# 
  4526  011C                     	;# 
  4527  011D                     	;# 
  4528  011D                     	;# 
  4529  011D                     	;# 
  4530  011E                     	;# 
  4531  011E                     	;# 
  4532  011E                     	;# 
  4533  011F                     	;# 
  4534  011F                     	;# 
  4535  011F                     	;# 
  4536  011F                     	;# 
  4537  011F                     	;# 
  4538  018C                     	;# 
  4539  018D                     	;# 
  4540  018E                     	;# 
  4541  018F                     	;# 
  4542  0190                     	;# 
  4543  0191                     	;# 
  4544  0192                     	;# 
  4545  0196                     	;# 
  4546  0197                     	;# 
  4547  0198                     	;# 
  4548  0199                     	;# 
  4549  019A                     	;# 
  4550  019B                     	;# 
  4551  019C                     	;# 
  4552  020C                     	;# 
  4553  020C                     	;# 
  4554  020D                     	;# 
  4555  020E                     	;# 
  4556  020F                     	;# 
  4557  020F                     	;# 
  4558  0210                     	;# 
  4559  0210                     	;# 
  4560  0211                     	;# 
  4561  0211                     	;# 
  4562  0212                     	;# 
  4563  0212                     	;# 
  4564  0213                     	;# 
  4565  0214                     	;# 
  4566  0215                     	;# 
  4567  0215                     	;# 
  4568  0216                     	;# 
  4569  0216                     	;# 
  4570  0217                     	;# 
  4571  0217                     	;# 
  4572  0218                     	;# 
  4573  0218                     	;# 
  4574  0219                     	;# 
  4575  021A                     	;# 
  4576  021B                     	;# 
  4577  021B                     	;# 
  4578  021C                     	;# 
  4579  021C                     	;# 
  4580  021D                     	;# 
  4581  021D                     	;# 
  4582  021E                     	;# 
  4583  021F                     	;# 
  4584  028C                     	;# 
  4585  028C                     	;# 
  4586  028D                     	;# 
  4587  028D                     	;# 
  4588  028E                     	;# 
  4589  028F                     	;# 
  4590  0290                     	;# 
  4591  0290                     	;# 
  4592  0291                     	;# 
  4593  0292                     	;# 
  4594  0292                     	;# 
  4595  0293                     	;# 
  4596  0293                     	;# 
  4597  0294                     	;# 
  4598  0295                     	;# 
  4599  0296                     	;# 
  4600  0296                     	;# 
  4601  0297                     	;# 
  4602  0298                     	;# 
  4603  0298                     	;# 
  4604  0299                     	;# 
  4605  0299                     	;# 
  4606  029A                     	;# 
  4607  029B                     	;# 
  4608  029C                     	;# 
  4609  029C                     	;# 
  4610  029D                     	;# 
  4611  030C                     	;# 
  4612  030C                     	;# 
  4613  030D                     	;# 
  4614  030E                     	;# 
  4615  030F                     	;# 
  4616  0310                     	;# 
  4617  0310                     	;# 
  4618  0311                     	;# 
  4619  0312                     	;# 
  4620  0313                     	;# 
  4621  0314                     	;# 
  4622  0314                     	;# 
  4623  0315                     	;# 
  4624  0316                     	;# 
  4625  0317                     	;# 
  4626  0318                     	;# 
  4627  0318                     	;# 
  4628  0319                     	;# 
  4629  031A                     	;# 
  4630  031B                     	;# 
  4631  031C                     	;# 
  4632  031C                     	;# 
  4633  031D                     	;# 
  4634  031E                     	;# 
  4635  031F                     	;# 
  4636  038C                     	;# 
  4637  038C                     	;# 
  4638  038D                     	;# 
  4639  038E                     	;# 
  4640  0390                     	;# 
  4641  0390                     	;# 
  4642  0391                     	;# 
  4643  0392                     	;# 
  4644  040C                     	;# 
  4645  040D                     	;# 
  4646  040E                     	;# 
  4647  040F                     	;# 
  4648  0410                     	;# 
  4649  0411                     	;# 
  4650  0416                     	;# 
  4651  0416                     	;# 
  4652  0417                     	;# 
  4653  0418                     	;# 
  4654  0418                     	;# 
  4655  0419                     	;# 
  4656  041A                     	;# 
  4657  041A                     	;# 
  4658  041B                     	;# 
  4659  041C                     	;# 
  4660  041C                     	;# 
  4661  041D                     	;# 
  4662  041E                     	;# 
  4663  041F                     	;# 
  4664  048C                     	;# 
  4665  048C                     	;# 
  4666  048D                     	;# 
  4667  048E                     	;# 
  4668  048F                     	;# 
  4669  048F                     	;# 
  4670  0490                     	;# 
  4671  0491                     	;# 
  4672  0492                     	;# 
  4673  0492                     	;# 
  4674  0493                     	;# 
  4675  0494                     	;# 
  4676  0495                     	;# 
  4677  0495                     	;# 
  4678  0496                     	;# 
  4679  0497                     	;# 
  4680  0498                     	;# 
  4681  0499                     	;# 
  4682  049A                     	;# 
  4683  049B                     	;# 
  4684  049C                     	;# 
  4685  049D                     	;# 
  4686  050C                     	;# 
  4687  050C                     	;# 
  4688  050D                     	;# 
  4689  050E                     	;# 
  4690  050F                     	;# 
  4691  050F                     	;# 
  4692  0510                     	;# 
  4693  0511                     	;# 
  4694  0512                     	;# 
  4695  0512                     	;# 
  4696  0513                     	;# 
  4697  0514                     	;# 
  4698  0515                     	;# 
  4699  0515                     	;# 
  4700  0516                     	;# 
  4701  0517                     	;# 
  4702  0518                     	;# 
  4703  0519                     	;# 
  4704  051A                     	;# 
  4705  051B                     	;# 
  4706  051C                     	;# 
  4707  051D                     	;# 
  4708  058C                     	;# 
  4709  058C                     	;# 
  4710  058D                     	;# 
  4711  058E                     	;# 
  4712  058F                     	;# 
  4713  058F                     	;# 
  4714  0590                     	;# 
  4715  0591                     	;# 
  4716  0592                     	;# 
  4717  0593                     	;# 
  4718  060C                     	;# 
  4719  060D                     	;# 
  4720  060E                     	;# 
  4721  060F                     	;# 
  4722  0610                     	;# 
  4723  0611                     	;# 
  4724  0612                     	;# 
  4725  0613                     	;# 
  4726  0614                     	;# 
  4727  0616                     	;# 
  4728  0617                     	;# 
  4729  0618                     	;# 
  4730  0619                     	;# 
  4731  061A                     	;# 
  4732  061B                     	;# 
  4733  061C                     	;# 
  4734  061D                     	;# 
  4735  061E                     	;# 
  4736  068C                     	;# 
  4737  068D                     	;# 
  4738  068E                     	;# 
  4739  068F                     	;# 
  4740  0690                     	;# 
  4741  0691                     	;# 
  4742  0692                     	;# 
  4743  0693                     	;# 
  4744  0694                     	;# 
  4745  070C                     	;# 
  4746  070D                     	;# 
  4747  070E                     	;# 
  4748  070F                     	;# 
  4749  0710                     	;# 
  4750  0711                     	;# 
  4751  0712                     	;# 
  4752  0713                     	;# 
  4753  0714                     	;# 
  4754  0716                     	;# 
  4755  0717                     	;# 
  4756  0718                     	;# 
  4757  0719                     	;# 
  4758  071A                     	;# 
  4759  071B                     	;# 
  4760  071C                     	;# 
  4761  071D                     	;# 
  4762  071E                     	;# 
  4763  0796                     	;# 
  4764  0797                     	;# 
  4765  0798                     	;# 
  4766  0799                     	;# 
  4767  079A                     	;# 
  4768  079B                     	;# 
  4769  080C                     	;# 
  4770  080D                     	;# 
  4771  080E                     	;# 
  4772  080F                     	;# 
  4773  0810                     	;# 
  4774  0811                     	;# 
  4775  0812                     	;# 
  4776  0813                     	;# 
  4777  0814                     	;# 
  4778  081A                     	;# 
  4779  081B                     	;# 
  4780  081C                     	;# 
  4781  081D                     	;# 
  4782  081E                     	;# 
  4783  081F                     	;# 
  4784  088C                     	;# 
  4785  088D                     	;# 
  4786  088E                     	;# 
  4787  088F                     	;# 
  4788  0890                     	;# 
  4789  0891                     	;# 
  4790  0892                     	;# 
  4791  0893                     	;# 
  4792  0895                     	;# 
  4793  0896                     	;# 
  4794  0897                     	;# 
  4795  0898                     	;# 
  4796  0899                     	;# 
  4797  089A                     	;# 
  4798  089B                     	;# 
  4799  090C                     	;# 
  4800  090E                     	;# 
  4801  090F                     	;# 
  4802  091F                     	;# 
  4803  091F                     	;# 
  4804  098F                     	;# 
  4805  098F                     	;# 
  4806  0990                     	;# 
  4807  0991                     	;# 
  4808  0992                     	;# 
  4809  0993                     	;# 
  4810  0994                     	;# 
  4811  0995                     	;# 
  4812  0996                     	;# 
  4813  0997                     	;# 
  4814  0E0F                     	;# 
  4815  0E10                     	;# 
  4816  0E11                     	;# 
  4817  0E12                     	;# 
  4818  0E13                     	;# 
  4819  0E14                     	;# 
  4820  0E15                     	;# 
  4821  0E16                     	;# 
  4822  0E17                     	;# 
  4823  0E18                     	;# 
  4824  0E19                     	;# 
  4825  0E1A                     	;# 
  4826  0E1B                     	;# 
  4827  0E1C                     	;# 
  4828  0E1D                     	;# 
  4829  0E1E                     	;# 
  4830  0E1F                     	;# 
  4831  0E20                     	;# 
  4832  0E21                     	;# 
  4833  0E22                     	;# 
  4834  0E23                     	;# 
  4835  0E24                     	;# 
  4836  0E25                     	;# 
  4837  0E26                     	;# 
  4838  0E27                     	;# 
  4839  0E28                     	;# 
  4840  0E29                     	;# 
  4841  0E2A                     	;# 
  4842  0E2B                     	;# 
  4843  0E2C                     	;# 
  4844  0E2D                     	;# 
  4845  0E2E                     	;# 
  4846  0E2F                     	;# 
  4847  0E30                     	;# 
  4848  0E31                     	;# 
  4849  0E32                     	;# 
  4850  0E33                     	;# 
  4851  0E34                     	;# 
  4852  0E35                     	;# 
  4853  0E36                     	;# 
  4854  0E37                     	;# 
  4855  0E8F                     	;# 
  4856  0E90                     	;# 
  4857  0E91                     	;# 
  4858  0E92                     	;# 
  4859  0E93                     	;# 
  4860  0E94                     	;# 
  4861  0E95                     	;# 
  4862  0E96                     	;# 
  4863  0E97                     	;# 
  4864  0E9C                     	;# 
  4865  0E9D                     	;# 
  4866  0E9E                     	;# 
  4867  0EA1                     	;# 
  4868  0EA2                     	;# 
  4869  0EA3                     	;# 
  4870  0EA4                     	;# 
  4871  0EA5                     	;# 
  4872  0EA9                     	;# 
  4873  0EAA                     	;# 
  4874  0EAB                     	;# 
  4875  0EAC                     	;# 
  4876  0EB1                     	;# 
  4877  0EB2                     	;# 
  4878  0EB3                     	;# 
  4879  0EB8                     	;# 
  4880  0EB9                     	;# 
  4881  0EBA                     	;# 
  4882  0EBB                     	;# 
  4883  0EBC                     	;# 
  4884  0EBD                     	;# 
  4885  0EBE                     	;# 
  4886  0EC3                     	;# 
  4887  0EC5                     	;# 
  4888  0EC6                     	;# 
  4889  0EC7                     	;# 
  4890  0EC8                     	;# 
  4891  0EC9                     	;# 
  4892  0ECA                     	;# 
  4893  0ECB                     	;# 
  4894  0ECC                     	;# 
  4895  0F10                     	;# 
  4896  0F11                     	;# 
  4897  0F12                     	;# 
  4898  0F13                     	;# 
  4899  0F14                     	;# 
  4900  0F15                     	;# 
  4901  0F16                     	;# 
  4902  0F17                     	;# 
  4903  0F18                     	;# 
  4904  0F19                     	;# 
  4905  0F1A                     	;# 
  4906  0F1B                     	;# 
  4907  0F1C                     	;# 
  4908  0F1D                     	;# 
  4909  0F1E                     	;# 
  4910  0F1F                     	;# 
  4911  0F20                     	;# 
  4912  0F21                     	;# 
  4913  0F22                     	;# 
  4914  0F23                     	;# 
  4915  0F24                     	;# 
  4916  0F25                     	;# 
  4917  0F26                     	;# 
  4918  0F27                     	;# 
  4919  0F28                     	;# 
  4920  0F29                     	;# 
  4921  0F2A                     	;# 
  4922  0F2B                     	;# 
  4923  0F2C                     	;# 
  4924  0F2D                     	;# 
  4925  0F2E                     	;# 
  4926  0F2F                     	;# 
  4927  0F30                     	;# 
  4928  0F31                     	;# 
  4929  0F32                     	;# 
  4930  0F38                     	;# 
  4931  0F39                     	;# 
  4932  0F3A                     	;# 
  4933  0F3B                     	;# 
  4934  0F3C                     	;# 
  4935  0F3D                     	;# 
  4936  0F3E                     	;# 
  4937  0F3F                     	;# 
  4938  0F40                     	;# 
  4939  0F41                     	;# 
  4940  0F43                     	;# 
  4941  0F44                     	;# 
  4942  0F45                     	;# 
  4943  0F46                     	;# 
  4944  0F47                     	;# 
  4945  0F48                     	;# 
  4946  0F49                     	;# 
  4947  0F4A                     	;# 
  4948  0F4B                     	;# 
  4949  0F4C                     	;# 
  4950  0F4E                     	;# 
  4951  0F4F                     	;# 
  4952  0F50                     	;# 
  4953  0F51                     	;# 
  4954  0F52                     	;# 
  4955  0F53                     	;# 
  4956  0F54                     	;# 
  4957  0F55                     	;# 
  4958  0F56                     	;# 
  4959  0F57                     	;# 
  4960  0F59                     	;# 
  4961  0F5A                     	;# 
  4962  0F5B                     	;# 
  4963  0F5C                     	;# 
  4964  0F5D                     	;# 
  4965  0F61                     	;# 
  4966  0F62                     	;# 
  4967  0F64                     	;# 
  4968  0F65                     	;# 
  4969  0F66                     	;# 
  4970  0F67                     	;# 
  4971  0F68                     	;# 
  4972  0F69                     	;# 
  4973  0F6A                     	;# 
  4974  0F6B                     	;# 
  4975  0F6C                     	;# 
  4976  0F6D                     	;# 
  4977  0FE4                     	;# 
  4978  0FE5                     	;# 
  4979  0FE6                     	;# 
  4980  0FE7                     	;# 
  4981  0FE8                     	;# 
  4982  0FE9                     	;# 
  4983  0FEA                     	;# 
  4984  0FEB                     	;# 
  4985  0FED                     	;# 
  4986  0FEE                     	;# 
  4987  0FEF                     	;# 
  4988  0000                     	;# 
  4989  0001                     	;# 
  4990  0002                     	;# 
  4991  0003                     	;# 
  4992  0004                     	;# 
  4993  0005                     	;# 
  4994  0006                     	;# 
  4995  0007                     	;# 
  4996  0008                     	;# 
  4997  0009                     	;# 
  4998  000A                     	;# 
  4999  000B                     	;# 
  5000  000C                     	;# 
  5001  000D                     	;# 
  5002  000E                     	;# 
  5003  000F                     	;# 
  5004  0010                     	;# 
  5005  0011                     	;# 
  5006  0012                     	;# 
  5007  0013                     	;# 
  5008  0014                     	;# 
  5009  0015                     	;# 
  5010  0016                     	;# 
  5011  0017                     	;# 
  5012  0018                     	;# 
  5013  0019                     	;# 
  5014  001A                     	;# 
  5015  001C                     	;# 
  5016  001C                     	;# 
  5017  001D                     	;# 
  5018  001D                     	;# 
  5019  001E                     	;# 
  5020  001F                     	;# 
  5021  008C                     	;# 
  5022  008C                     	;# 
  5023  008D                     	;# 
  5024  008E                     	;# 
  5025  008E                     	;# 
  5026  008F                     	;# 
  5027  0090                     	;# 
  5028  0090                     	;# 
  5029  0091                     	;# 
  5030  0093                     	;# 
  5031  0094                     	;# 
  5032  0095                     	;# 
  5033  0096                     	;# 
  5034  0097                     	;# 
  5035  0098                     	;# 
  5036  0099                     	;# 
  5037  009A                     	;# 
  5038  009B                     	;# 
  5039  009C                     	;# 
  5040  009D                     	;# 
  5041  009E                     	;# 
  5042  010C                     	;# 
  5043  010D                     	;# 
  5044  010E                     	;# 
  5045  010E                     	;# 
  5046  010F                     	;# 
  5047  0110                     	;# 
  5048  0110                     	;# 
  5049  0111                     	;# 
  5050  0112                     	;# 
  5051  0112                     	;# 
  5052  0113                     	;# 
  5053  0114                     	;# 
  5054  0114                     	;# 
  5055  0115                     	;# 
  5056  0116                     	;# 
  5057  0116                     	;# 
  5058  0117                     	;# 
  5059  0119                     	;# 
  5060  0119                     	;# 
  5061  0119                     	;# 
  5062  011A                     	;# 
  5063  011A                     	;# 
  5064  011A                     	;# 
  5065  011B                     	;# 
  5066  011B                     	;# 
  5067  011B                     	;# 
  5068  011B                     	;# 
  5069  011B                     	;# 
  5070  011C                     	;# 
  5071  011C                     	;# 
  5072  011C                     	;# 
  5073  011D                     	;# 
  5074  011D                     	;# 
  5075  011D                     	;# 
  5076  011E                     	;# 
  5077  011E                     	;# 
  5078  011E                     	;# 
  5079  011F                     	;# 
  5080  011F                     	;# 
  5081  011F                     	;# 
  5082  011F                     	;# 
  5083  011F                     	;# 
  5084  018C                     	;# 
  5085  018D                     	;# 
  5086  018E                     	;# 
  5087  018F                     	;# 
  5088  0190                     	;# 
  5089  0191                     	;# 
  5090  0192                     	;# 
  5091  0196                     	;# 
  5092  0197                     	;# 
  5093  0198                     	;# 
  5094  0199                     	;# 
  5095  019A                     	;# 
  5096  019B                     	;# 
  5097  019C                     	;# 
  5098  020C                     	;# 
  5099  020C                     	;# 
  5100  020D                     	;# 
  5101  020E                     	;# 
  5102  020F                     	;# 
  5103  020F                     	;# 
  5104  0210                     	;# 
  5105  0210                     	;# 
  5106  0211                     	;# 
  5107  0211                     	;# 
  5108  0212                     	;# 
  5109  0212                     	;# 
  5110  0213                     	;# 
  5111  0214                     	;# 
  5112  0215                     	;# 
  5113  0215                     	;# 
  5114  0216                     	;# 
  5115  0216                     	;# 
  5116  0217                     	;# 
  5117  0217                     	;# 
  5118  0218                     	;# 
  5119  0218                     	;# 
  5120  0219                     	;# 
  5121  021A                     	;# 
  5122  021B                     	;# 
  5123  021B                     	;# 
  5124  021C                     	;# 
  5125  021C                     	;# 
  5126  021D                     	;# 
  5127  021D                     	;# 
  5128  021E                     	;# 
  5129  021F                     	;# 
  5130  028C                     	;# 
  5131  028C                     	;# 
  5132  028D                     	;# 
  5133  028D                     	;# 
  5134  028E                     	;# 
  5135  028F                     	;# 
  5136  0290                     	;# 
  5137  0290                     	;# 
  5138  0291                     	;# 
  5139  0292                     	;# 
  5140  0292                     	;# 
  5141  0293                     	;# 
  5142  0293                     	;# 
  5143  0294                     	;# 
  5144  0295                     	;# 
  5145  0296                     	;# 
  5146  0296                     	;# 
  5147  0297                     	;# 
  5148  0298                     	;# 
  5149  0298                     	;# 
  5150  0299                     	;# 
  5151  0299                     	;# 
  5152  029A                     	;# 
  5153  029B                     	;# 
  5154  029C                     	;# 
  5155  029C                     	;# 
  5156  029D                     	;# 
  5157  030C                     	;# 
  5158  030C                     	;# 
  5159  030D                     	;# 
  5160  030E                     	;# 
  5161  030F                     	;# 
  5162  0310                     	;# 
  5163  0310                     	;# 
  5164  0311                     	;# 
  5165  0312                     	;# 
  5166  0313                     	;# 
  5167  0314                     	;# 
  5168  0314                     	;# 
  5169  0315                     	;# 
  5170  0316                     	;# 
  5171  0317                     	;# 
  5172  0318                     	;# 
  5173  0318                     	;# 
  5174  0319                     	;# 
  5175  031A                     	;# 
  5176  031B                     	;# 
  5177  031C                     	;# 
  5178  031C                     	;# 
  5179  031D                     	;# 
  5180  031E                     	;# 
  5181  031F                     	;# 
  5182  038C                     	;# 
  5183  038C                     	;# 
  5184  038D                     	;# 
  5185  038E                     	;# 
  5186  0390                     	;# 
  5187  0390                     	;# 
  5188  0391                     	;# 
  5189  0392                     	;# 
  5190  040C                     	;# 
  5191  040D                     	;# 
  5192  040E                     	;# 
  5193  040F                     	;# 
  5194  0410                     	;# 
  5195  0411                     	;# 
  5196  0416                     	;# 
  5197  0416                     	;# 
  5198  0417                     	;# 
  5199  0418                     	;# 
  5200  0418                     	;# 
  5201  0419                     	;# 
  5202  041A                     	;# 
  5203  041A                     	;# 
  5204  041B                     	;# 
  5205  041C                     	;# 
  5206  041C                     	;# 
  5207  041D                     	;# 
  5208  041E                     	;# 
  5209  041F                     	;# 
  5210  048C                     	;# 
  5211  048C                     	;# 
  5212  048D                     	;# 
  5213  048E                     	;# 
  5214  048F                     	;# 
  5215  048F                     	;# 
  5216  0490                     	;# 
  5217  0491                     	;# 
  5218  0492                     	;# 
  5219  0492                     	;# 
  5220  0493                     	;# 
  5221  0494                     	;# 
  5222  0495                     	;# 
  5223  0495                     	;# 
  5224  0496                     	;# 
  5225  0497                     	;# 
  5226  0498                     	;# 
  5227  0499                     	;# 
  5228  049A                     	;# 
  5229  049B                     	;# 
  5230  049C                     	;# 
  5231  049D                     	;# 
  5232  050C                     	;# 
  5233  050C                     	;# 
  5234  050D                     	;# 
  5235  050E                     	;# 
  5236  050F                     	;# 
  5237  050F                     	;# 
  5238  0510                     	;# 
  5239  0511                     	;# 
  5240  0512                     	;# 
  5241  0512                     	;# 
  5242  0513                     	;# 
  5243  0514                     	;# 
  5244  0515                     	;# 
  5245  0515                     	;# 
  5246  0516                     	;# 
  5247  0517                     	;# 
  5248  0518                     	;# 
  5249  0519                     	;# 
  5250  051A                     	;# 
  5251  051B                     	;# 
  5252  051C                     	;# 
  5253  051D                     	;# 
  5254  058C                     	;# 
  5255  058C                     	;# 
  5256  058D                     	;# 
  5257  058E                     	;# 
  5258  058F                     	;# 
  5259  058F                     	;# 
  5260  0590                     	;# 
  5261  0591                     	;# 
  5262  0592                     	;# 
  5263  0593                     	;# 
  5264  060C                     	;# 
  5265  060D                     	;# 
  5266  060E                     	;# 
  5267  060F                     	;# 
  5268  0610                     	;# 
  5269  0611                     	;# 
  5270  0612                     	;# 
  5271  0613                     	;# 
  5272  0614                     	;# 
  5273  0616                     	;# 
  5274  0617                     	;# 
  5275  0618                     	;# 
  5276  0619                     	;# 
  5277  061A                     	;# 
  5278  061B                     	;# 
  5279  061C                     	;# 
  5280  061D                     	;# 
  5281  061E                     	;# 
  5282  068C                     	;# 
  5283  068D                     	;# 
  5284  068E                     	;# 
  5285  068F                     	;# 
  5286  0690                     	;# 
  5287  0691                     	;# 
  5288  0692                     	;# 
  5289  0693                     	;# 
  5290  0694                     	;# 
  5291  070C                     	;# 
  5292  070D                     	;# 
  5293  070E                     	;# 
  5294  070F                     	;# 
  5295  0710                     	;# 
  5296  0711                     	;# 
  5297  0712                     	;# 
  5298  0713                     	;# 
  5299  0714                     	;# 
  5300  0716                     	;# 
  5301  0717                     	;# 
  5302  0718                     	;# 
  5303  0719                     	;# 
  5304  071A                     	;# 
  5305  071B                     	;# 
  5306  071C                     	;# 
  5307  071D                     	;# 
  5308  071E                     	;# 
  5309  0796                     	;# 
  5310  0797                     	;# 
  5311  0798                     	;# 
  5312  0799                     	;# 
  5313  079A                     	;# 
  5314  079B                     	;# 
  5315  080C                     	;# 
  5316  080D                     	;# 
  5317  080E                     	;# 
  5318  080F                     	;# 
  5319  0810                     	;# 
  5320  0811                     	;# 
  5321  0812                     	;# 
  5322  0813                     	;# 
  5323  0814                     	;# 
  5324  081A                     	;# 
  5325  081B                     	;# 
  5326  081C                     	;# 
  5327  081D                     	;# 
  5328  081E                     	;# 
  5329  081F                     	;# 
  5330  088C                     	;# 
  5331  088D                     	;# 
  5332  088E                     	;# 
  5333  088F                     	;# 
  5334  0890                     	;# 
  5335  0891                     	;# 
  5336  0892                     	;# 
  5337  0893                     	;# 
  5338  0895                     	;# 
  5339  0896                     	;# 
  5340  0897                     	;# 
  5341  0898                     	;# 
  5342  0899                     	;# 
  5343  089A                     	;# 
  5344  089B                     	;# 
  5345  090C                     	;# 
  5346  090E                     	;# 
  5347  090F                     	;# 
  5348  091F                     	;# 
  5349  091F                     	;# 
  5350  098F                     	;# 
  5351  098F                     	;# 
  5352  0990                     	;# 
  5353  0991                     	;# 
  5354  0992                     	;# 
  5355  0993                     	;# 
  5356  0994                     	;# 
  5357  0995                     	;# 
  5358  0996                     	;# 
  5359  0997                     	;# 
  5360  0E0F                     	;# 
  5361  0E10                     	;# 
  5362  0E11                     	;# 
  5363  0E12                     	;# 
  5364  0E13                     	;# 
  5365  0E14                     	;# 
  5366  0E15                     	;# 
  5367  0E16                     	;# 
  5368  0E17                     	;# 
  5369  0E18                     	;# 
  5370  0E19                     	;# 
  5371  0E1A                     	;# 
  5372  0E1B                     	;# 
  5373  0E1C                     	;# 
  5374  0E1D                     	;# 
  5375  0E1E                     	;# 
  5376  0E1F                     	;# 
  5377  0E20                     	;# 
  5378  0E21                     	;# 
  5379  0E22                     	;# 
  5380  0E23                     	;# 
  5381  0E24                     	;# 
  5382  0E25                     	;# 
  5383  0E26                     	;# 
  5384  0E27                     	;# 
  5385  0E28                     	;# 
  5386  0E29                     	;# 
  5387  0E2A                     	;# 
  5388  0E2B                     	;# 
  5389  0E2C                     	;# 
  5390  0E2D                     	;# 
  5391  0E2E                     	;# 
  5392  0E2F                     	;# 
  5393  0E30                     	;# 
  5394  0E31                     	;# 
  5395  0E32                     	;# 
  5396  0E33                     	;# 
  5397  0E34                     	;# 
  5398  0E35                     	;# 
  5399  0E36                     	;# 
  5400  0E37                     	;# 
  5401  0E8F                     	;# 
  5402  0E90                     	;# 
  5403  0E91                     	;# 
  5404  0E92                     	;# 
  5405  0E93                     	;# 
  5406  0E94                     	;# 
  5407  0E95                     	;# 
  5408  0E96                     	;# 
  5409  0E97                     	;# 
  5410  0E9C                     	;# 
  5411  0E9D                     	;# 
  5412  0E9E                     	;# 
  5413  0EA1                     	;# 
  5414  0EA2                     	;# 
  5415  0EA3                     	;# 
  5416  0EA4                     	;# 
  5417  0EA5                     	;# 
  5418  0EA9                     	;# 
  5419  0EAA                     	;# 
  5420  0EAB                     	;# 
  5421  0EAC                     	;# 
  5422  0EB1                     	;# 
  5423  0EB2                     	;# 
  5424  0EB3                     	;# 
  5425  0EB8                     	;# 
  5426  0EB9                     	;# 
  5427  0EBA                     	;# 
  5428  0EBB                     	;# 
  5429  0EBC                     	;# 
  5430  0EBD                     	;# 
  5431  0EBE                     	;# 
  5432  0EC3                     	;# 
  5433  0EC5                     	;# 
  5434  0EC6                     	;# 
  5435  0EC7                     	;# 
  5436  0EC8                     	;# 
  5437  0EC9                     	;# 
  5438  0ECA                     	;# 
  5439  0ECB                     	;# 
  5440  0ECC                     	;# 
  5441  0F10                     	;# 
  5442  0F11                     	;# 
  5443  0F12                     	;# 
  5444  0F13                     	;# 
  5445  0F14                     	;# 
  5446  0F15                     	;# 
  5447  0F16                     	;# 
  5448  0F17                     	;# 
  5449  0F18                     	;# 
  5450  0F19                     	;# 
  5451  0F1A                     	;# 
  5452  0F1B                     	;# 
  5453  0F1C                     	;# 
  5454  0F1D                     	;# 
  5455  0F1E                     	;# 
  5456  0F1F                     	;# 
  5457  0F20                     	;# 
  5458  0F21                     	;# 
  5459  0F22                     	;# 
  5460  0F23                     	;# 
  5461  0F24                     	;# 
  5462  0F25                     	;# 
  5463  0F26                     	;# 
  5464  0F27                     	;# 
  5465  0F28                     	;# 
  5466  0F29                     	;# 
  5467  0F2A                     	;# 
  5468  0F2B                     	;# 
  5469  0F2C                     	;# 
  5470  0F2D                     	;# 
  5471  0F2E                     	;# 
  5472  0F2F                     	;# 
  5473  0F30                     	;# 
  5474  0F31                     	;# 
  5475  0F32                     	;# 
  5476  0F38                     	;# 
  5477  0F39                     	;# 
  5478  0F3A                     	;# 
  5479  0F3B                     	;# 
  5480  0F3C                     	;# 
  5481  0F3D                     	;# 
  5482  0F3E                     	;# 
  5483  0F3F                     	;# 
  5484  0F40                     	;# 
  5485  0F41                     	;# 
  5486  0F43                     	;# 
  5487  0F44                     	;# 
  5488  0F45                     	;# 
  5489  0F46                     	;# 
  5490  0F47                     	;# 
  5491  0F48                     	;# 
  5492  0F49                     	;# 
  5493  0F4A                     	;# 
  5494  0F4B                     	;# 
  5495  0F4C                     	;# 
  5496  0F4E                     	;# 
  5497  0F4F                     	;# 
  5498  0F50                     	;# 
  5499  0F51                     	;# 
  5500  0F52                     	;# 
  5501  0F53                     	;# 
  5502  0F54                     	;# 
  5503  0F55                     	;# 
  5504  0F56                     	;# 
  5505  0F57                     	;# 
  5506  0F59                     	;# 
  5507  0F5A                     	;# 
  5508  0F5B                     	;# 
  5509  0F5C                     	;# 
  5510  0F5D                     	;# 
  5511  0F61                     	;# 
  5512  0F62                     	;# 
  5513  0F64                     	;# 
  5514  0F65                     	;# 
  5515  0F66                     	;# 
  5516  0F67                     	;# 
  5517  0F68                     	;# 
  5518  0F69                     	;# 
  5519  0F6A                     	;# 
  5520  0F6B                     	;# 
  5521  0F6C                     	;# 
  5522  0F6D                     	;# 
  5523  0FE4                     	;# 
  5524  0FE5                     	;# 
  5525  0FE6                     	;# 
  5526  0FE7                     	;# 
  5527  0FE8                     	;# 
  5528  0FE9                     	;# 
  5529  0FEA                     	;# 
  5530  0FEB                     	;# 
  5531  0FED                     	;# 
  5532  0FEE                     	;# 
  5533  0FEF                     	;# 
  5534  0000                     	;# 
  5535  0001                     	;# 
  5536  0002                     	;# 
  5537  0003                     	;# 
  5538  0004                     	;# 
  5539  0005                     	;# 
  5540  0006                     	;# 
  5541  0007                     	;# 
  5542  0008                     	;# 
  5543  0009                     	;# 
  5544  000A                     	;# 
  5545  000B                     	;# 
  5546  000C                     	;# 
  5547  000D                     	;# 
  5548  000E                     	;# 
  5549  000F                     	;# 
  5550  0010                     	;# 
  5551  0011                     	;# 
  5552  0012                     	;# 
  5553  0013                     	;# 
  5554  0014                     	;# 
  5555  0015                     	;# 
  5556  0016                     	;# 
  5557  0017                     	;# 
  5558  0018                     	;# 
  5559  0019                     	;# 
  5560  001A                     	;# 
  5561  001C                     	;# 
  5562  001C                     	;# 
  5563  001D                     	;# 
  5564  001D                     	;# 
  5565  001E                     	;# 
  5566  001F                     	;# 
  5567  008C                     	;# 
  5568  008C                     	;# 
  5569  008D                     	;# 
  5570  008E                     	;# 
  5571  008E                     	;# 
  5572  008F                     	;# 
  5573  0090                     	;# 
  5574  0090                     	;# 
  5575  0091                     	;# 
  5576  0093                     	;# 
  5577  0094                     	;# 
  5578  0095                     	;# 
  5579  0096                     	;# 
  5580  0097                     	;# 
  5581  0098                     	;# 
  5582  0099                     	;# 
  5583  009A                     	;# 
  5584  009B                     	;# 
  5585  009C                     	;# 
  5586  009D                     	;# 
  5587  009E                     	;# 
  5588  010C                     	;# 
  5589  010D                     	;# 
  5590  010E                     	;# 
  5591  010E                     	;# 
  5592  010F                     	;# 
  5593  0110                     	;# 
  5594  0110                     	;# 
  5595  0111                     	;# 
  5596  0112                     	;# 
  5597  0112                     	;# 
  5598  0113                     	;# 
  5599  0114                     	;# 
  5600  0114                     	;# 
  5601  0115                     	;# 
  5602  0116                     	;# 
  5603  0116                     	;# 
  5604  0117                     	;# 
  5605  0119                     	;# 
  5606  0119                     	;# 
  5607  0119                     	;# 
  5608  011A                     	;# 
  5609  011A                     	;# 
  5610  011A                     	;# 
  5611  011B                     	;# 
  5612  011B                     	;# 
  5613  011B                     	;# 
  5614  011B                     	;# 
  5615  011B                     	;# 
  5616  011C                     	;# 
  5617  011C                     	;# 
  5618  011C                     	;# 
  5619  011D                     	;# 
  5620  011D                     	;# 
  5621  011D                     	;# 
  5622  011E                     	;# 
  5623  011E                     	;# 
  5624  011E                     	;# 
  5625  011F                     	;# 
  5626  011F                     	;# 
  5627  011F                     	;# 
  5628  011F                     	;# 
  5629  011F                     	;# 
  5630  018C                     	;# 
  5631  018D                     	;# 
  5632  018E                     	;# 
  5633  018F                     	;# 
  5634  0190                     	;# 
  5635  0191                     	;# 
  5636  0192                     	;# 
  5637  0196                     	;# 
  5638  0197                     	;# 
  5639  0198                     	;# 
  5640  0199                     	;# 
  5641  019A                     	;# 
  5642  019B                     	;# 
  5643  019C                     	;# 
  5644  020C                     	;# 
  5645  020C                     	;# 
  5646  020D                     	;# 
  5647  020E                     	;# 
  5648  020F                     	;# 
  5649  020F                     	;# 
  5650  0210                     	;# 
  5651  0210                     	;# 
  5652  0211                     	;# 
  5653  0211                     	;# 
  5654  0212                     	;# 
  5655  0212                     	;# 
  5656  0213                     	;# 
  5657  0214                     	;# 
  5658  0215                     	;# 
  5659  0215                     	;# 
  5660  0216                     	;# 
  5661  0216                     	;# 
  5662  0217                     	;# 
  5663  0217                     	;# 
  5664  0218                     	;# 
  5665  0218                     	;# 
  5666  0219                     	;# 
  5667  021A                     	;# 
  5668  021B                     	;# 
  5669  021B                     	;# 
  5670  021C                     	;# 
  5671  021C                     	;# 
  5672  021D                     	;# 
  5673  021D                     	;# 
  5674  021E                     	;# 
  5675  021F                     	;# 
  5676  028C                     	;# 
  5677  028C                     	;# 
  5678  028D                     	;# 
  5679  028D                     	;# 
  5680  028E                     	;# 
  5681  028F                     	;# 
  5682  0290                     	;# 
  5683  0290                     	;# 
  5684  0291                     	;# 
  5685  0292                     	;# 
  5686  0292                     	;# 
  5687  0293                     	;# 
  5688  0293                     	;# 
  5689  0294                     	;# 
  5690  0295                     	;# 
  5691  0296                     	;# 
  5692  0296                     	;# 
  5693  0297                     	;# 
  5694  0298                     	;# 
  5695  0298                     	;# 
  5696  0299                     	;# 
  5697  0299                     	;# 
  5698  029A                     	;# 
  5699  029B                     	;# 
  5700  029C                     	;# 
  5701  029C                     	;# 
  5702  029D                     	;# 
  5703  030C                     	;# 
  5704  030C                     	;# 
  5705  030D                     	;# 
  5706  030E                     	;# 
  5707  030F                     	;# 
  5708  0310                     	;# 
  5709  0310                     	;# 
  5710  0311                     	;# 
  5711  0312                     	;# 
  5712  0313                     	;# 
  5713  0314                     	;# 
  5714  0314                     	;# 
  5715  0315                     	;# 
  5716  0316                     	;# 
  5717  0317                     	;# 
  5718  0318                     	;# 
  5719  0318                     	;# 
  5720  0319                     	;# 
  5721  031A                     	;# 
  5722  031B                     	;# 
  5723  031C                     	;# 
  5724  031C                     	;# 
  5725  031D                     	;# 
  5726  031E                     	;# 
  5727  031F                     	;# 
  5728  038C                     	;# 
  5729  038C                     	;# 
  5730  038D                     	;# 
  5731  038E                     	;# 
  5732  0390                     	;# 
  5733  0390                     	;# 
  5734  0391                     	;# 
  5735  0392                     	;# 
  5736  040C                     	;# 
  5737  040D                     	;# 
  5738  040E                     	;# 
  5739  040F                     	;# 
  5740  0410                     	;# 
  5741  0411                     	;# 
  5742  0416                     	;# 
  5743  0416                     	;# 
  5744  0417                     	;# 
  5745  0418                     	;# 
  5746  0418                     	;# 
  5747  0419                     	;# 
  5748  041A                     	;# 
  5749  041A                     	;# 
  5750  041B                     	;# 
  5751  041C                     	;# 
  5752  041C                     	;# 
  5753  041D                     	;# 
  5754  041E                     	;# 
  5755  041F                     	;# 
  5756  048C                     	;# 
  5757  048C                     	;# 
  5758  048D                     	;# 
  5759  048E                     	;# 
  5760  048F                     	;# 
  5761  048F                     	;# 
  5762  0490                     	;# 
  5763  0491                     	;# 
  5764  0492                     	;# 
  5765  0492                     	;# 
  5766  0493                     	;# 
  5767  0494                     	;# 
  5768  0495                     	;# 
  5769  0495                     	;# 
  5770  0496                     	;# 
  5771  0497                     	;# 
  5772  0498                     	;# 
  5773  0499                     	;# 
  5774  049A                     	;# 
  5775  049B                     	;# 
  5776  049C                     	;# 
  5777  049D                     	;# 
  5778  050C                     	;# 
  5779  050C                     	;# 
  5780  050D                     	;# 
  5781  050E                     	;# 
  5782  050F                     	;# 
  5783  050F                     	;# 
  5784  0510                     	;# 
  5785  0511                     	;# 
  5786  0512                     	;# 
  5787  0512                     	;# 
  5788  0513                     	;# 
  5789  0514                     	;# 
  5790  0515                     	;# 
  5791  0515                     	;# 
  5792  0516                     	;# 
  5793  0517                     	;# 
  5794  0518                     	;# 
  5795  0519                     	;# 
  5796  051A                     	;# 
  5797  051B                     	;# 
  5798  051C                     	;# 
  5799  051D                     	;# 
  5800  058C                     	;# 
  5801  058C                     	;# 
  5802  058D                     	;# 
  5803  058E                     	;# 
  5804  058F                     	;# 
  5805  058F                     	;# 
  5806  0590                     	;# 
  5807  0591                     	;# 
  5808  0592                     	;# 
  5809  0593                     	;# 
  5810  060C                     	;# 
  5811  060D                     	;# 
  5812  060E                     	;# 
  5813  060F                     	;# 
  5814  0610                     	;# 
  5815  0611                     	;# 
  5816  0612                     	;# 
  5817  0613                     	;# 
  5818  0614                     	;# 
  5819  0616                     	;# 
  5820  0617                     	;# 
  5821  0618                     	;# 
  5822  0619                     	;# 
  5823  061A                     	;# 
  5824  061B                     	;# 
  5825  061C                     	;# 
  5826  061D                     	;# 
  5827  061E                     	;# 
  5828  068C                     	;# 
  5829  068D                     	;# 
  5830  068E                     	;# 
  5831  068F                     	;# 
  5832  0690                     	;# 
  5833  0691                     	;# 
  5834  0692                     	;# 
  5835  0693                     	;# 
  5836  0694                     	;# 
  5837  070C                     	;# 
  5838  070D                     	;# 
  5839  070E                     	;# 
  5840  070F                     	;# 
  5841  0710                     	;# 
  5842  0711                     	;# 
  5843  0712                     	;# 
  5844  0713                     	;# 
  5845  0714                     	;# 
  5846  0716                     	;# 
  5847  0717                     	;# 
  5848  0718                     	;# 
  5849  0719                     	;# 
  5850  071A                     	;# 
  5851  071B                     	;# 
  5852  071C                     	;# 
  5853  071D                     	;# 
  5854  071E                     	;# 
  5855  0796                     	;# 
  5856  0797                     	;# 
  5857  0798                     	;# 
  5858  0799                     	;# 
  5859  079A                     	;# 
  5860  079B                     	;# 
  5861  080C                     	;# 
  5862  080D                     	;# 
  5863  080E                     	;# 
  5864  080F                     	;# 
  5865  0810                     	;# 
  5866  0811                     	;# 
  5867  0812                     	;# 
  5868  0813                     	;# 
  5869  0814                     	;# 
  5870  081A                     	;# 
  5871  081B                     	;# 
  5872  081C                     	;# 
  5873  081D                     	;# 
  5874  081E                     	;# 
  5875  081F                     	;# 
  5876  088C                     	;# 
  5877  088D                     	;# 
  5878  088E                     	;# 
  5879  088F                     	;# 
  5880  0890                     	;# 
  5881  0891                     	;# 
  5882  0892                     	;# 
  5883  0893                     	;# 
  5884  0895                     	;# 
  5885  0896                     	;# 
  5886  0897                     	;# 
  5887  0898                     	;# 
  5888  0899                     	;# 
  5889  089A                     	;# 
  5890  089B                     	;# 
  5891  090C                     	;# 
  5892  090E                     	;# 
  5893  090F                     	;# 
  5894  091F                     	;# 
  5895  091F                     	;# 
  5896  098F                     	;# 
  5897  098F                     	;# 
  5898  0990                     	;# 
  5899  0991                     	;# 
  5900  0992                     	;# 
  5901  0993                     	;# 
  5902  0994                     	;# 
  5903  0995                     	;# 
  5904  0996                     	;# 
  5905  0997                     	;# 
  5906  0E0F                     	;# 
  5907  0E10                     	;# 
  5908  0E11                     	;# 
  5909  0E12                     	;# 
  5910  0E13                     	;# 
  5911  0E14                     	;# 
  5912  0E15                     	;# 
  5913  0E16                     	;# 
  5914  0E17                     	;# 
  5915  0E18                     	;# 
  5916  0E19                     	;# 
  5917  0E1A                     	;# 
  5918  0E1B                     	;# 
  5919  0E1C                     	;# 
  5920  0E1D                     	;# 
  5921  0E1E                     	;# 
  5922  0E1F                     	;# 
  5923  0E20                     	;# 
  5924  0E21                     	;# 
  5925  0E22                     	;# 
  5926  0E23                     	;# 
  5927  0E24                     	;# 
  5928  0E25                     	;# 
  5929  0E26                     	;# 
  5930  0E27                     	;# 
  5931  0E28                     	;# 
  5932  0E29                     	;# 
  5933  0E2A                     	;# 
  5934  0E2B                     	;# 
  5935  0E2C                     	;# 
  5936  0E2D                     	;# 
  5937  0E2E                     	;# 
  5938  0E2F                     	;# 
  5939  0E30                     	;# 
  5940  0E31                     	;# 
  5941  0E32                     	;# 
  5942  0E33                     	;# 
  5943  0E34                     	;# 
  5944  0E35                     	;# 
  5945  0E36                     	;# 
  5946  0E37                     	;# 
  5947  0E8F                     	;# 
  5948  0E90                     	;# 
  5949  0E91                     	;# 
  5950  0E92                     	;# 
  5951  0E93                     	;# 
  5952  0E94                     	;# 
  5953  0E95                     	;# 
  5954  0E96                     	;# 
  5955  0E97                     	;# 
  5956  0E9C                     	;# 
  5957  0E9D                     	;# 
  5958  0E9E                     	;# 
  5959  0EA1                     	;# 
  5960  0EA2                     	;# 
  5961  0EA3                     	;# 
  5962  0EA4                     	;# 
  5963  0EA5                     	;# 
  5964  0EA9                     	;# 
  5965  0EAA                     	;# 
  5966  0EAB                     	;# 
  5967  0EAC                     	;# 
  5968  0EB1                     	;# 
  5969  0EB2                     	;# 
  5970  0EB3                     	;# 
  5971  0EB8                     	;# 
  5972  0EB9                     	;# 
  5973  0EBA                     	;# 
  5974  0EBB                     	;# 
  5975  0EBC                     	;# 
  5976  0EBD                     	;# 
  5977  0EBE                     	;# 
  5978  0EC3                     	;# 
  5979  0EC5                     	;# 
  5980  0EC6                     	;# 
  5981  0EC7                     	;# 
  5982  0EC8                     	;# 
  5983  0EC9                     	;# 
  5984  0ECA                     	;# 
  5985  0ECB                     	;# 
  5986  0ECC                     	;# 
  5987  0F10                     	;# 
  5988  0F11                     	;# 
  5989  0F12                     	;# 
  5990  0F13                     	;# 
  5991  0F14                     	;# 
  5992  0F15                     	;# 
  5993  0F16                     	;# 
  5994  0F17                     	;# 
  5995  0F18                     	;# 
  5996  0F19                     	;# 
  5997  0F1A                     	;# 
  5998  0F1B                     	;# 
  5999  0F1C                     	;# 
  6000  0F1D                     	;# 
  6001  0F1E                     	;# 
  6002  0F1F                     	;# 
  6003  0F20                     	;# 
  6004  0F21                     	;# 
  6005  0F22                     	;# 
  6006  0F23                     	;# 
  6007  0F24                     	;# 
  6008  0F25                     	;# 
  6009  0F26                     	;# 
  6010  0F27                     	;# 
  6011  0F28                     	;# 
  6012  0F29                     	;# 
  6013  0F2A                     	;# 
  6014  0F2B                     	;# 
  6015  0F2C                     	;# 
  6016  0F2D                     	;# 
  6017  0F2E                     	;# 
  6018  0F2F                     	;# 
  6019  0F30                     	;# 
  6020  0F31                     	;# 
  6021  0F32                     	;# 
  6022  0F38                     	;# 
  6023  0F39                     	;# 
  6024  0F3A                     	;# 
  6025  0F3B                     	;# 
  6026  0F3C                     	;# 
  6027  0F3D                     	;# 
  6028  0F3E                     	;# 
  6029  0F3F                     	;# 
  6030  0F40                     	;# 
  6031  0F41                     	;# 
  6032  0F43                     	;# 
  6033  0F44                     	;# 
  6034  0F45                     	;# 
  6035  0F46                     	;# 
  6036  0F47                     	;# 
  6037  0F48                     	;# 
  6038  0F49                     	;# 
  6039  0F4A                     	;# 
  6040  0F4B                     	;# 
  6041  0F4C                     	;# 
  6042  0F4E                     	;# 
  6043  0F4F                     	;# 
  6044  0F50                     	;# 
  6045  0F51                     	;# 
  6046  0F52                     	;# 
  6047  0F53                     	;# 
  6048  0F54                     	;# 
  6049  0F55                     	;# 
  6050  0F56                     	;# 
  6051  0F57                     	;# 
  6052  0F59                     	;# 
  6053  0F5A                     	;# 
  6054  0F5B                     	;# 
  6055  0F5C                     	;# 
  6056  0F5D                     	;# 
  6057  0F61                     	;# 
  6058  0F62                     	;# 
  6059  0F64                     	;# 
  6060  0F65                     	;# 
  6061  0F66                     	;# 
  6062  0F67                     	;# 
  6063  0F68                     	;# 
  6064  0F69                     	;# 
  6065  0F6A                     	;# 
  6066  0F6B                     	;# 
  6067  0F6C                     	;# 
  6068  0F6D                     	;# 
  6069  0FE4                     	;# 
  6070  0FE5                     	;# 
  6071  0FE6                     	;# 
  6072  0FE7                     	;# 
  6073  0FE8                     	;# 
  6074  0FE9                     	;# 
  6075  0FEA                     	;# 
  6076  0FEB                     	;# 
  6077  0FED                     	;# 
  6078  0FEE                     	;# 
  6079  0FEF                     	;# 
  6080  0000                     	;# 
  6081  0001                     	;# 
  6082  0002                     	;# 
  6083  0003                     	;# 
  6084  0004                     	;# 
  6085  0005                     	;# 
  6086  0006                     	;# 
  6087  0007                     	;# 
  6088  0008                     	;# 
  6089  0009                     	;# 
  6090  000A                     	;# 
  6091  000B                     	;# 
  6092  000C                     	;# 
  6093  000D                     	;# 
  6094  000E                     	;# 
  6095  000F                     	;# 
  6096  0010                     	;# 
  6097  0011                     	;# 
  6098  0012                     	;# 
  6099  0013                     	;# 
  6100  0014                     	;# 
  6101  0015                     	;# 
  6102  0016                     	;# 
  6103  0017                     	;# 
  6104  0018                     	;# 
  6105  0019                     	;# 
  6106  001A                     	;# 
  6107  001C                     	;# 
  6108  001C                     	;# 
  6109  001D                     	;# 
  6110  001D                     	;# 
  6111  001E                     	;# 
  6112  001F                     	;# 
  6113  008C                     	;# 
  6114  008C                     	;# 
  6115  008D                     	;# 
  6116  008E                     	;# 
  6117  008E                     	;# 
  6118  008F                     	;# 
  6119  0090                     	;# 
  6120  0090                     	;# 
  6121  0091                     	;# 
  6122  0093                     	;# 
  6123  0094                     	;# 
  6124  0095                     	;# 
  6125  0096                     	;# 
  6126  0097                     	;# 
  6127  0098                     	;# 
  6128  0099                     	;# 
  6129  009A                     	;# 
  6130  009B                     	;# 
  6131  009C                     	;# 
  6132  009D                     	;# 
  6133  009E                     	;# 
  6134  010C                     	;# 
  6135  010D                     	;# 
  6136  010E                     	;# 
  6137  010E                     	;# 
  6138  010F                     	;# 
  6139  0110                     	;# 
  6140  0110                     	;# 
  6141  0111                     	;# 
  6142  0112                     	;# 
  6143  0112                     	;# 
  6144  0113                     	;# 
  6145  0114                     	;# 
  6146  0114                     	;# 
  6147  0115                     	;# 
  6148  0116                     	;# 
  6149  0116                     	;# 
  6150  0117                     	;# 
  6151  0119                     	;# 
  6152  0119                     	;# 
  6153  0119                     	;# 
  6154  011A                     	;# 
  6155  011A                     	;# 
  6156  011A                     	;# 
  6157  011B                     	;# 
  6158  011B                     	;# 
  6159  011B                     	;# 
  6160  011B                     	;# 
  6161  011B                     	;# 
  6162  011C                     	;# 
  6163  011C                     	;# 
  6164  011C                     	;# 
  6165  011D                     	;# 
  6166  011D                     	;# 
  6167  011D                     	;# 
  6168  011E                     	;# 
  6169  011E                     	;# 
  6170  011E                     	;# 
  6171  011F                     	;# 
  6172  011F                     	;# 
  6173  011F                     	;# 
  6174  011F                     	;# 
  6175  011F                     	;# 
  6176  018C                     	;# 
  6177  018D                     	;# 
  6178  018E                     	;# 
  6179  018F                     	;# 
  6180  0190                     	;# 
  6181  0191                     	;# 
  6182  0192                     	;# 
  6183  0196                     	;# 
  6184  0197                     	;# 
  6185  0198                     	;# 
  6186  0199                     	;# 
  6187  019A                     	;# 
  6188  019B                     	;# 
  6189  019C                     	;# 
  6190  020C                     	;# 
  6191  020C                     	;# 
  6192  020D                     	;# 
  6193  020E                     	;# 
  6194  020F                     	;# 
  6195  020F                     	;# 
  6196  0210                     	;# 
  6197  0210                     	;# 
  6198  0211                     	;# 
  6199  0211                     	;# 
  6200  0212                     	;# 
  6201  0212                     	;# 
  6202  0213                     	;# 
  6203  0214                     	;# 
  6204  0215                     	;# 
  6205  0215                     	;# 
  6206  0216                     	;# 
  6207  0216                     	;# 
  6208  0217                     	;# 
  6209  0217                     	;# 
  6210  0218                     	;# 
  6211  0218                     	;# 
  6212  0219                     	;# 
  6213  021A                     	;# 
  6214  021B                     	;# 
  6215  021B                     	;# 
  6216  021C                     	;# 
  6217  021C                     	;# 
  6218  021D                     	;# 
  6219  021D                     	;# 
  6220  021E                     	;# 
  6221  021F                     	;# 
  6222  028C                     	;# 
  6223  028C                     	;# 
  6224  028D                     	;# 
  6225  028D                     	;# 
  6226  028E                     	;# 
  6227  028F                     	;# 
  6228  0290                     	;# 
  6229  0290                     	;# 
  6230  0291                     	;# 
  6231  0292                     	;# 
  6232  0292                     	;# 
  6233  0293                     	;# 
  6234  0293                     	;# 
  6235  0294                     	;# 
  6236  0295                     	;# 
  6237  0296                     	;# 
  6238  0296                     	;# 
  6239  0297                     	;# 
  6240  0298                     	;# 
  6241  0298                     	;# 
  6242  0299                     	;# 
  6243  0299                     	;# 
  6244  029A                     	;# 
  6245  029B                     	;# 
  6246  029C                     	;# 
  6247  029C                     	;# 
  6248  029D                     	;# 
  6249  030C                     	;# 
  6250  030C                     	;# 
  6251  030D                     	;# 
  6252  030E                     	;# 
  6253  030F                     	;# 
  6254  0310                     	;# 
  6255  0310                     	;# 
  6256  0311                     	;# 
  6257  0312                     	;# 
  6258  0313                     	;# 
  6259  0314                     	;# 
  6260  0314                     	;# 
  6261  0315                     	;# 
  6262  0316                     	;# 
  6263  0317                     	;# 
  6264  0318                     	;# 
  6265  0318                     	;# 
  6266  0319                     	;# 
  6267  031A                     	;# 
  6268  031B                     	;# 
  6269  031C                     	;# 
  6270  031C                     	;# 
  6271  031D                     	;# 
  6272  031E                     	;# 
  6273  031F                     	;# 
  6274  038C                     	;# 
  6275  038C                     	;# 
  6276  038D                     	;# 
  6277  038E                     	;# 
  6278  0390                     	;# 
  6279  0390                     	;# 
  6280  0391                     	;# 
  6281  0392                     	;# 
  6282  040C                     	;# 
  6283  040D                     	;# 
  6284  040E                     	;# 
  6285  040F                     	;# 
  6286  0410                     	;# 
  6287  0411                     	;# 
  6288  0416                     	;# 
  6289  0416                     	;# 
  6290  0417                     	;# 
  6291  0418                     	;# 
  6292  0418                     	;# 
  6293  0419                     	;# 
  6294  041A                     	;# 
  6295  041A                     	;# 
  6296  041B                     	;# 
  6297  041C                     	;# 
  6298  041C                     	;# 
  6299  041D                     	;# 
  6300  041E                     	;# 
  6301  041F                     	;# 
  6302  048C                     	;# 
  6303  048C                     	;# 
  6304  048D                     	;# 
  6305  048E                     	;# 
  6306  048F                     	;# 
  6307  048F                     	;# 
  6308  0490                     	;# 
  6309  0491                     	;# 
  6310  0492                     	;# 
  6311  0492                     	;# 
  6312  0493                     	;# 
  6313  0494                     	;# 
  6314  0495                     	;# 
  6315  0495                     	;# 
  6316  0496                     	;# 
  6317  0497                     	;# 
  6318  0498                     	;# 
  6319  0499                     	;# 
  6320  049A                     	;# 
  6321  049B                     	;# 
  6322  049C                     	;# 
  6323  049D                     	;# 
  6324  050C                     	;# 
  6325  050C                     	;# 
  6326  050D                     	;# 
  6327  050E                     	;# 
  6328  050F                     	;# 
  6329  050F                     	;# 
  6330  0510                     	;# 
  6331  0511                     	;# 
  6332  0512                     	;# 
  6333  0512                     	;# 
  6334  0513                     	;# 
  6335  0514                     	;# 
  6336  0515                     	;# 
  6337  0515                     	;# 
  6338  0516                     	;# 
  6339  0517                     	;# 
  6340  0518                     	;# 
  6341  0519                     	;# 
  6342  051A                     	;# 
  6343  051B                     	;# 
  6344  051C                     	;# 
  6345  051D                     	;# 
  6346  058C                     	;# 
  6347  058C                     	;# 
  6348  058D                     	;# 
  6349  058E                     	;# 
  6350  058F                     	;# 
  6351  058F                     	;# 
  6352  0590                     	;# 
  6353  0591                     	;# 
  6354  0592                     	;# 
  6355  0593                     	;# 
  6356  060C                     	;# 
  6357  060D                     	;# 
  6358  060E                     	;# 
  6359  060F                     	;# 
  6360  0610                     	;# 
  6361  0611                     	;# 
  6362  0612                     	;# 
  6363  0613                     	;# 
  6364  0614                     	;# 
  6365  0616                     	;# 
  6366  0617                     	;# 
  6367  0618                     	;# 
  6368  0619                     	;# 
  6369  061A                     	;# 
  6370  061B                     	;# 
  6371  061C                     	;# 
  6372  061D                     	;# 
  6373  061E                     	;# 
  6374  068C                     	;# 
  6375  068D                     	;# 
  6376  068E                     	;# 
  6377  068F                     	;# 
  6378  0690                     	;# 
  6379  0691                     	;# 
  6380  0692                     	;# 
  6381  0693                     	;# 
  6382  0694                     	;# 
  6383  070C                     	;# 
  6384  070D                     	;# 
  6385  070E                     	;# 
  6386  070F                     	;# 
  6387  0710                     	;# 
  6388  0711                     	;# 
  6389  0712                     	;# 
  6390  0713                     	;# 
  6391  0714                     	;# 
  6392  0716                     	;# 
  6393  0717                     	;# 
  6394  0718                     	;# 
  6395  0719                     	;# 
  6396  071A                     	;# 
  6397  071B                     	;# 
  6398  071C                     	;# 
  6399  071D                     	;# 
  6400  071E                     	;# 
  6401  0796                     	;# 
  6402  0797                     	;# 
  6403  0798                     	;# 
  6404  0799                     	;# 
  6405  079A                     	;# 
  6406  079B                     	;# 
  6407  080C                     	;# 
  6408  080D                     	;# 
  6409  080E                     	;# 
  6410  080F                     	;# 
  6411  0810                     	;# 
  6412  0811                     	;# 
  6413  0812                     	;# 
  6414  0813                     	;# 
  6415  0814                     	;# 
  6416  081A                     	;# 
  6417  081B                     	;# 
  6418  081C                     	;# 
  6419  081D                     	;# 
  6420  081E                     	;# 
  6421  081F                     	;# 
  6422  088C                     	;# 
  6423  088D                     	;# 
  6424  088E                     	;# 
  6425  088F                     	;# 
  6426  0890                     	;# 
  6427  0891                     	;# 
  6428  0892                     	;# 
  6429  0893                     	;# 
  6430  0895                     	;# 
  6431  0896                     	;# 
  6432  0897                     	;# 
  6433  0898                     	;# 
  6434  0899                     	;# 
  6435  089A                     	;# 
  6436  089B                     	;# 
  6437  090C                     	;# 
  6438  090E                     	;# 
  6439  090F                     	;# 
  6440  091F                     	;# 
  6441  091F                     	;# 
  6442  098F                     	;# 
  6443  098F                     	;# 
  6444  0990                     	;# 
  6445  0991                     	;# 
  6446  0992                     	;# 
  6447  0993                     	;# 
  6448  0994                     	;# 
  6449  0995                     	;# 
  6450  0996                     	;# 
  6451  0997                     	;# 
  6452  0E0F                     	;# 
  6453  0E10                     	;# 
  6454  0E11                     	;# 
  6455  0E12                     	;# 
  6456  0E13                     	;# 
  6457  0E14                     	;# 
  6458  0E15                     	;# 
  6459  0E16                     	;# 
  6460  0E17                     	;# 
  6461  0E18                     	;# 
  6462  0E19                     	;# 
  6463  0E1A                     	;# 
  6464  0E1B                     	;# 
  6465  0E1C                     	;# 
  6466  0E1D                     	;# 
  6467  0E1E                     	;# 
  6468  0E1F                     	;# 
  6469  0E20                     	;# 
  6470  0E21                     	;# 
  6471  0E22                     	;# 
  6472  0E23                     	;# 
  6473  0E24                     	;# 
  6474  0E25                     	;# 
  6475  0E26                     	;# 
  6476  0E27                     	;# 
  6477  0E28                     	;# 
  6478  0E29                     	;# 
  6479  0E2A                     	;# 
  6480  0E2B                     	;# 
  6481  0E2C                     	;# 
  6482  0E2D                     	;# 
  6483  0E2E                     	;# 
  6484  0E2F                     	;# 
  6485  0E30                     	;# 
  6486  0E31                     	;# 
  6487  0E32                     	;# 
  6488  0E33                     	;# 
  6489  0E34                     	;# 
  6490  0E35                     	;# 
  6491  0E36                     	;# 
  6492  0E37                     	;# 
  6493  0E8F                     	;# 
  6494  0E90                     	;# 
  6495  0E91                     	;# 
  6496  0E92                     	;# 
  6497  0E93                     	;# 
  6498  0E94                     	;# 
  6499  0E95                     	;# 
  6500  0E96                     	;# 
  6501  0E97                     	;# 
  6502  0E9C                     	;# 
  6503  0E9D                     	;# 
  6504  0E9E                     	;# 
  6505  0EA1                     	;# 
  6506  0EA2                     	;# 
  6507  0EA3                     	;# 
  6508  0EA4                     	;# 
  6509  0EA5                     	;# 
  6510  0EA9                     	;# 
  6511  0EAA                     	;# 
  6512  0EAB                     	;# 
  6513  0EAC                     	;# 
  6514  0EB1                     	;# 
  6515  0EB2                     	;# 
  6516  0EB3                     	;# 
  6517  0EB8                     	;# 
  6518  0EB9                     	;# 
  6519  0EBA                     	;# 
  6520  0EBB                     	;# 
  6521  0EBC                     	;# 
  6522  0EBD                     	;# 
  6523  0EBE                     	;# 
  6524  0EC3                     	;# 
  6525  0EC5                     	;# 
  6526  0EC6                     	;# 
  6527  0EC7                     	;# 
  6528  0EC8                     	;# 
  6529  0EC9                     	;# 
  6530  0ECA                     	;# 
  6531  0ECB                     	;# 
  6532  0ECC                     	;# 
  6533  0F10                     	;# 
  6534  0F11                     	;# 
  6535  0F12                     	;# 
  6536  0F13                     	;# 
  6537  0F14                     	;# 
  6538  0F15                     	;# 
  6539  0F16                     	;# 
  6540  0F17                     	;# 
  6541  0F18                     	;# 
  6542  0F19                     	;# 
  6543  0F1A                     	;# 
  6544  0F1B                     	;# 
  6545  0F1C                     	;# 
  6546  0F1D                     	;# 
  6547  0F1E                     	;# 
  6548  0F1F                     	;# 
  6549  0F20                     	;# 
  6550  0F21                     	;# 
  6551  0F22                     	;# 
  6552  0F23                     	;# 
  6553  0F24                     	;# 
  6554  0F25                     	;# 
  6555  0F26                     	;# 
  6556  0F27                     	;# 
  6557  0F28                     	;# 
  6558  0F29                     	;# 
  6559  0F2A                     	;# 
  6560  0F2B                     	;# 
  6561  0F2C                     	;# 
  6562  0F2D                     	;# 
  6563  0F2E                     	;# 
  6564  0F2F                     	;# 
  6565  0F30                     	;# 
  6566  0F31                     	;# 
  6567  0F32                     	;# 
  6568  0F38                     	;# 
  6569  0F39                     	;# 
  6570  0F3A                     	;# 
  6571  0F3B                     	;# 
  6572  0F3C                     	;# 
  6573  0F3D                     	;# 
  6574  0F3E                     	;# 
  6575  0F3F                     	;# 
  6576  0F40                     	;# 
  6577  0F41                     	;# 
  6578  0F43                     	;# 
  6579  0F44                     	;# 
  6580  0F45                     	;# 
  6581  0F46                     	;# 
  6582  0F47                     	;# 
  6583  0F48                     	;# 
  6584  0F49                     	;# 
  6585  0F4A                     	;# 
  6586  0F4B                     	;# 
  6587  0F4C                     	;# 
  6588  0F4E                     	;# 
  6589  0F4F                     	;# 
  6590  0F50                     	;# 
  6591  0F51                     	;# 
  6592  0F52                     	;# 
  6593  0F53                     	;# 
  6594  0F54                     	;# 
  6595  0F55                     	;# 
  6596  0F56                     	;# 
  6597  0F57                     	;# 
  6598  0F59                     	;# 
  6599  0F5A                     	;# 
  6600  0F5B                     	;# 
  6601  0F5C                     	;# 
  6602  0F5D                     	;# 
  6603  0F61                     	;# 
  6604  0F62                     	;# 
  6605  0F64                     	;# 
  6606  0F65                     	;# 
  6607  0F66                     	;# 
  6608  0F67                     	;# 
  6609  0F68                     	;# 
  6610  0F69                     	;# 
  6611  0F6A                     	;# 
  6612  0F6B                     	;# 
  6613  0F6C                     	;# 
  6614  0F6D                     	;# 
  6615  0FE4                     	;# 
  6616  0FE5                     	;# 
  6617  0FE6                     	;# 
  6618  0FE7                     	;# 
  6619  0FE8                     	;# 
  6620  0FE9                     	;# 
  6621  0FEA                     	;# 
  6622  0FEB                     	;# 
  6623  0FED                     	;# 
  6624  0FEE                     	;# 
  6625  0FEF                     	;# 
  6626                           
  6627 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  6628  0000                     
  6629 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  6630  0000                     
  6631 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  6632  0000                     
  6633 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  6634  0000                     
  6635 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  6636  0000                     
  6637 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  6638  0000                     
  6639 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  6640  0000                     
  6641 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  6642  0000                     
  6643 ;; Function _I2C1_DO_TX is unused but had its address taken
  6644  0000                     
  6645 ;; Function _I2C1_DO_RX is unused but had its address taken
  6646  0000                     
  6647 ;; Function _I2C1_DO_RCEN is unused but had its address taken
  6648  0000                     
  6649 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  6650  0000                     
  6651 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  6652  0000                     
  6653 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  6654  0000                     
  6655 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  6656  0000                     
  6657 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  6658  0000                     
  6659 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  6660  0000                     
  6661 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  6662  0000                     
  6663 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  6664  0000                     
  6665 ;; Function _I2C1_DO_RESET is unused but had its address taken
  6666  0000                     
  6667 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  6668  0000                     
  6669 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  6670  0000                     
  6671 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  6672  0000                     
  6673                           	psect	stringtext1
  6674  0372                     __pstringtext1:
  6675  0372                     _i2c1_fsmStateTable:
  6676  0372  3400               	retlw	0
  6677  0373  3400               	retlw	0
  6678  0374  3400               	retlw	0
  6679  0375  3400               	retlw	0
  6680  0376  3400               	retlw	0
  6681  0377  3400               	retlw	0
  6682  0378  3400               	retlw	0
  6683  0379  3400               	retlw	0
  6684  037A  3400               	retlw	0
  6685  037B  3400               	retlw	0
  6686  037C  3400               	retlw	0
  6687  037D  3400               	retlw	0
  6688  037E  3400               	retlw	0
  6689  037F  3400               	retlw	0
  6690  0380  3400               	retlw	0
  6691  0381  3400               	retlw	0
  6692  0382  3400               	retlw	0
  6693  0383  3400               	retlw	0
  6694  0384  3400               	retlw	0
  6695  0385  3400               	retlw	0
  6696  0386  3400               	retlw	0
  6697  0387  3400               	retlw	0
  6698  0388  3400               	retlw	0
  6699  0389  3400               	retlw	0
  6700  038A  3400               	retlw	0
  6701  038B  3400               	retlw	0
  6702  038C  3400               	retlw	0
  6703  038D  3400               	retlw	0
  6704  038E  3400               	retlw	0
  6705  038F  3400               	retlw	0
  6706  0390  3400               	retlw	0
  6707  0391  3400               	retlw	0
  6708  0392                     __end_of_i2c1_fsmStateTable:
  6709                           
  6710                           	psect	nvCOMMON
  6711  0075                     __pnvCOMMON:
  6712  0075                     _TMR1_InterruptHandler:
  6713  0075                     	ds	2
  6714  0077                     _timer1ReloadVal:
  6715  0077                     	ds	2
  6716  0016                     _LATAbits	set	22
  6717  000C                     _PORTAbits	set	12
  6718  000D                     _PORTBbits	set	13
  6719  000B                     _INTCONbits	set	11
  6720  0014                     _TRISD	set	20
  6721  0013                     _TRISC	set	19
  6722  0012                     _TRISB	set	18
  6723  0011                     _TRISA	set	17
  6724  0015                     _TRISE	set	21
  6725  0018                     _LATC	set	24
  6726  0017                     _LATB	set	23
  6727  0016                     _LATA	set	22
  6728  0019                     _LATD	set	25
  6729  001A                     _LATE	set	26
  6730  0013                     _TRISCbits	set	19
  6731  0094                     _ADCON1bits	set	148
  6732  008E                     _ADPREVL	set	142
  6733  008F                     _ADPREVH	set	143
  6734  0097                     _ADSTATbits	set	151
  6735  0090                     _ADACCL	set	144
  6736  0091                     _ADACCH	set	145
  6737  0095                     _ADCON2bits	set	149
  6738  0096                     _ADCON3bits	set	150
  6739  008C                     _ADRESL	set	140
  6740  008D                     _ADRESH	set	141
  6741  0093                     _ADCON0bits	set	147
  6742  009D                     _ADACQ	set	157
  6743  0093                     _ADCON0	set	147
  6744  0098                     _ADCLK	set	152
  6745  0099                     _ADACT	set	153
  6746  009A                     _ADREF	set	154
  6747  0097                     _ADSTAT	set	151
  6748  0096                     _ADCON3	set	150
  6749  0095                     _ADCON2	set	149
  6750  0094                     _ADCON1	set	148
  6751  009C                     _ADPRE	set	156
  6752  009B                     _ADCAP	set	155
  6753  009E                     _ADPCH	set	158
  6754  0116                     _ADERRL	set	278
  6755  0117                     _ADERRH	set	279
  6756  0114                     _ADFLTRL	set	276
  6757  0115                     _ADFLTRH	set	277
  6758  010C                     _ADCNT	set	268
  6759  010D                     _ADRPT	set	269
  6760  0113                     _ADSTPTH	set	275
  6761  0112                     _ADSTPTL	set	274
  6762  0111                     _ADUTHH	set	273
  6763  0110                     _ADUTHL	set	272
  6764  010F                     _ADLTHH	set	271
  6765  010E                     _ADLTHL	set	270
  6766  018C                     _SSP1BUF	set	396
  6767  018F                     _SSP1STATbits	set	399
  6768  0191                     _SSP1CON2bits	set	401
  6769  0190                     _SSP1CON1bits	set	400
  6770  018D                     _SSP1ADD	set	397
  6771  0191                     _SSP1CON2	set	401
  6772  0190                     _SSP1CON1	set	400
  6773  018F                     _SSP1STAT	set	399
  6774  020F                     _T1GCONbits	set	527
  6775  020E                     _T1CONbits	set	526
  6776  020E                     _T1CON	set	526
  6777  020C                     _TMR1L	set	524
  6778  020D                     _TMR1H	set	525
  6779  0211                     _T1CLK	set	529
  6780  0210                     _T1GATE	set	528
  6781  020F                     _T1GCON	set	527
  6782  0719                     _PIE3bits	set	1817
  6783  0710                     _PIR4bits	set	1808
  6784  071A                     _PIE4bits	set	1818
  6785  070F                     _PIR3bits	set	1807
  6786  079B                     _PMD5	set	1947
  6787  079A                     _PMD4	set	1946
  6788  0799                     _PMD3	set	1945
  6789  0798                     _PMD2	set	1944
  6790  0797                     _PMD1	set	1943
  6791  0796                     _PMD0	set	1942
  6792  081E                     _NVMCON1	set	2078
  6793  081F                     _NVMCON2	set	2079
  6794  081C                     _NVMDATL	set	2076
  6795  081D                     _NVMDATH	set	2077
  6796  081E                     _NVMCON1bits	set	2078
  6797  081B                     _NVMADRH	set	2075
  6798  081A                     _NVMADRL	set	2074
  6799  0892                     _OSCTUNE	set	2194
  6800  0893                     _OSCFRQ	set	2195
  6801  0891                     _OSCEN	set	2193
  6802  088F                     _OSCCON3	set	2191
  6803  088D                     _OSCCON1	set	2189
  6804  0EC6                     _SSP1DATPPS	set	3782
  6805  0EC5                     _SSP1CLKPPS	set	3781
  6806  0F24                     _RC4PPS	set	3876
  6807  0F23                     _RC3PPS	set	3875
  6808  0F68                     _INLVLE	set	3944
  6809  0F5D                     _INLVLD	set	3933
  6810  0F52                     _INLVLC	set	3922
  6811  0F47                     _INLVLB	set	3911
  6812  0F3C                     _INLVLA	set	3900
  6813  0F67                     _SLRCONE	set	3943
  6814  0F5C                     _SLRCOND	set	3932
  6815  0F51                     _SLRCONC	set	3921
  6816  0F46                     _SLRCONB	set	3910
  6817  0F3B                     _SLRCONA	set	3899
  6818  0F5B                     _ODCOND	set	3931
  6819  0F50                     _ODCONC	set	3920
  6820  0F45                     _ODCONB	set	3909
  6821  0F3A                     _ODCONA	set	3898
  6822  0F66                     _ODCONE	set	3942
  6823  0F4F                     _WPUC	set	3919
  6824  0F39                     _WPUA	set	3897
  6825  0F44                     _WPUB	set	3908
  6826  0F65                     _WPUE	set	3941
  6827  0F5A                     _WPUD	set	3930
  6828  0F38                     _ANSELA	set	3896
  6829  0F64                     _ANSELE	set	3940
  6830  0F43                     _ANSELB	set	3907
  6831  0F4E                     _ANSELC	set	3918
  6832  0F59                     _ANSELD	set	3929
  6833                           
  6834                           	psect	cinit
  6835  001A                     start_initialization:	
  6836                           ; #config settings
  6837                           
  6838  001A                     __initialization:
  6839                           
  6840                           ; Clear objects allocated to BANK0
  6841  001A  3050               	movlw	low __pbssBANK0
  6842  001B  0084               	movwf	4
  6843  001C  3000               	movlw	high __pbssBANK0
  6844  001D  0085               	movwf	5
  6845  001E  301D               	movlw	29
  6846  001F  3184  2459  3180   	fcall	clear_ram0
  6847  0022                     end_of_initialization:	
  6848                           ;End of C runtime variable initialization code
  6849                           
  6850  0022                     __end_of__initialization:
  6851  0022  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6852  0023  0020               	movlb	0
  6853  0024  3180  28DF         	ljmp	_main	;jump to C main() function
  6854                           
  6855                           	psect	bssBANK0
  6856  0050                     __pbssBANK0:
  6857  0050                     _I2C1_Status:
  6858  0050                     	ds	29
  6859                           
  6860                           	psect	clrtext
  6861  0459                     clear_ram0:	
  6862                           ;	Called with FSR0 containing the base address, and
  6863                           ;	WREG with the size to clear
  6864                           
  6865  0459  0064               	clrwdt	;clear the watchdog before getting into this loop
  6866  045A                     clrloop0:
  6867  045A  0180               	clrf	0	;clear RAM location pointed to by FSR
  6868  045B  3101               	addfsr 0,1
  6869  045C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6870  045D  2C5A               	goto	clrloop0	;have we reached the end yet?
  6871  045E  3400               	retlw	0	;all done for this memory range, return
  6872                           
  6873                           	psect	cstackCOMMON
  6874  0070                     __pcstackCOMMON:
  6875  0070                     ?_PMD_Initialize:
  6876  0070                     ?_I2C1_Initialize:	
  6877                           ; 1 bytes @ 0x0
  6878                           
  6879  0070                     ?_OSCILLATOR_Initialize:	
  6880                           ; 1 bytes @ 0x0
  6881                           
  6882  0070                     ?_ADCC_Initialize:	
  6883                           ; 1 bytes @ 0x0
  6884                           
  6885  0070                     ?_TMR1_Initialize:	
  6886                           ; 1 bytes @ 0x0
  6887                           
  6888  0070                     ?_TMR1_ISR:	
  6889                           ; 1 bytes @ 0x0
  6890                           
  6891  0070                     ?_TMR1_DefaultInterruptHandler:	
  6892                           ; 1 bytes @ 0x0
  6893                           
  6894  0070                     ??_TMR1_DefaultInterruptHandler:	
  6895                           ; 1 bytes @ 0x0
  6896                           
  6897  0070                     ?_TMR1_CallBack:	
  6898                           ; 1 bytes @ 0x0
  6899                           
  6900  0070                     ?_initializeEPROM:	
  6901                           ; 1 bytes @ 0x0
  6902                           
  6903  0070                     ?_OpenI2C:	
  6904                           ; 1 bytes @ 0x0
  6905                           
  6906  0070                     ?_PIN_MANAGER_Initialize:	
  6907                           ; 1 bytes @ 0x0
  6908                           
  6909  0070                     ?_SYSTEM_Initialize:	
  6910                           ; 1 bytes @ 0x0
  6911                           
  6912  0070                     ?_INTERRUPT_InterruptManager:	
  6913                           ; 1 bytes @ 0x0
  6914                           
  6915  0070                     ?_TMR1_WriteTimer:	
  6916                           ; 1 bytes @ 0x0
  6917                           
  6918  0070                     ?_S1:	
  6919                           ; 1 bytes @ 0x0
  6920                           
  6921  0070                     ?_timerInterrupt:	
  6922                           ; 1 bytes @ 0x0
  6923                           
  6924  0070                     ?_main:	
  6925                           ; 1 bytes @ 0x0
  6926                           
  6927  0070                     ?_ADCC_GetSingleConversion:	
  6928                           ; 1 bytes @ 0x0
  6929                           
  6930  0070                     TMR1_WriteTimer@timerVal:	
  6931                           ; 2 bytes @ 0x0
  6932                           
  6933                           
  6934                           ; 2 bytes @ 0x0
  6935  0070                     	ds	2
  6936  0072                     ??_TMR1_WriteTimer:
  6937  0072                     ??_ADCC_GetSingleConversion:	
  6938                           ; 1 bytes @ 0x2
  6939                           
  6940  0072                     ADCC_GetSingleConversion@channel:	
  6941                           ; 1 bytes @ 0x2
  6942                           
  6943                           
  6944                           ; 1 bytes @ 0x2
  6945  0072                     	ds	1
  6946  0073                     ??_timerInterrupt:
  6947  0073                     timerInterrupt@value:	
  6948                           ; 1 bytes @ 0x3
  6949                           
  6950                           
  6951                           ; 2 bytes @ 0x3
  6952  0073                     	ds	2
  6953  0075                     ??_PMD_Initialize:
  6954  0075                     ??_I2C1_Initialize:	
  6955                           ; 1 bytes @ 0x5
  6956                           
  6957  0075                     ??_OSCILLATOR_Initialize:	
  6958                           ; 1 bytes @ 0x5
  6959                           
  6960  0075                     ??_ADCC_Initialize:	
  6961                           ; 1 bytes @ 0x5
  6962                           
  6963  0075                     ??_TMR1_Initialize:	
  6964                           ; 1 bytes @ 0x5
  6965                           
  6966  0075                     ??_TMR1_ISR:	
  6967                           ; 1 bytes @ 0x5
  6968                           
  6969  0075                     ??_TMR1_SetInterruptHandler:	
  6970                           ; 1 bytes @ 0x5
  6971                           
  6972  0075                     ??_TMR1_CallBack:	
  6973                           ; 1 bytes @ 0x5
  6974                           
  6975  0075                     ??_OpenI2C:	
  6976                           ; 1 bytes @ 0x5
  6977                           
  6978  0075                     ??_PIN_MANAGER_Initialize:	
  6979                           ; 1 bytes @ 0x5
  6980                           
  6981  0075                     ??_SYSTEM_Initialize:	
  6982                           ; 1 bytes @ 0x5
  6983                           
  6984  0075                     ??_INTERRUPT_InterruptManager:	
  6985                           ; 1 bytes @ 0x5
  6986                           
  6987  0075                     ??_DATAEE_WriteByte:	
  6988                           ; 1 bytes @ 0x5
  6989                           
  6990  0075                     ??_DATAEE_ReadByte:	
  6991                           ; 1 bytes @ 0x5
  6992                           
  6993  0075                     ??_S1:	
  6994                           ; 1 bytes @ 0x5
  6995                           
  6996                           
  6997                           	psect	cstackBANK0
  6998  0020                     __pcstackBANK0:	
  6999                           ; 1 bytes @ 0x5
  7000                           
  7001  0020                     ?_TMR1_SetInterruptHandler:
  7002  0020                     ?_DATAEE_WriteByte:	
  7003                           ; 1 bytes @ 0x0
  7004                           
  7005  0020                     ?_DATAEE_ReadByte:	
  7006                           ; 1 bytes @ 0x0
  7007                           
  7008  0020                     ?_operADDR:	
  7009                           ; 1 bytes @ 0x0
  7010                           
  7011  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  7012                           ; 2 bytes @ 0x0
  7013                           
  7014  0020                     DATAEE_WriteByte@bAdd:	
  7015                           ; 2 bytes @ 0x0
  7016                           
  7017  0020                     DATAEE_ReadByte@bAdd:	
  7018                           ; 2 bytes @ 0x0
  7019                           
  7020                           
  7021                           ; 2 bytes @ 0x0
  7022  0020                     	ds	2
  7023  0022                     ?_parseEPROMInitialization:
  7024  0022                     ??_operADDR:	
  7025                           ; 1 bytes @ 0x2
  7026                           
  7027  0022                     DATAEE_WriteByte@bData:	
  7028                           ; 1 bytes @ 0x2
  7029                           
  7030  0022                     parseEPROMInitialization@NREG:	
  7031                           ; 1 bytes @ 0x2
  7032                           
  7033                           
  7034                           ; 1 bytes @ 0x2
  7035  0022                     	ds	1
  7036  0023                     DATAEE_WriteByte@GIEBitValue:
  7037  0023                     parseEPROMInitialization@NR:	
  7038                           ; 1 bytes @ 0x3
  7039                           
  7040                           
  7041                           ; 1 bytes @ 0x3
  7042  0023                     	ds	1
  7043  0024                     ??_initializeEPROM:
  7044  0024                     operADDR@operation:	
  7045                           ; 1 bytes @ 0x4
  7046                           
  7047  0024                     parseEPROMInitialization@WI:	
  7048                           ; 1 bytes @ 0x4
  7049                           
  7050                           
  7051                           ; 1 bytes @ 0x4
  7052  0024                     	ds	1
  7053  0025                     parseEPROMInitialization@RI:
  7054  0025                     operADDR@dataAddr:	
  7055                           ; 1 bytes @ 0x5
  7056                           
  7057                           
  7058                           ; 2 bytes @ 0x5
  7059  0025                     	ds	1
  7060  0026                     parseEPROMInitialization@PMON:
  7061                           
  7062                           ; 1 bytes @ 0x6
  7063  0026                     	ds	1
  7064  0027                     ?_storeEPROMBuild:
  7065  0027                     ?_parseEPROMReading:	
  7066                           ; 1 bytes @ 0x7
  7067                           
  7068  0027                     storeEPROMBuild@minutes:	
  7069                           ; 1 bytes @ 0x7
  7070                           
  7071  0027                     parseEPROMReading@minutes:	
  7072                           ; 1 bytes @ 0x7
  7073                           
  7074  0027                     parseEPROMInitialization@TALA:	
  7075                           ; 1 bytes @ 0x7
  7076                           
  7077                           
  7078                           ; 1 bytes @ 0x7
  7079  0027                     	ds	1
  7080  0028                     storeEPROMBuild@seconds:
  7081  0028                     parseEPROMReading@seconds:	
  7082                           ; 1 bytes @ 0x8
  7083                           
  7084  0028                     parseEPROMInitialization@ALAT:	
  7085                           ; 1 bytes @ 0x8
  7086                           
  7087                           
  7088                           ; 1 bytes @ 0x8
  7089  0028                     	ds	1
  7090  0029                     storeEPROMBuild@temperature:
  7091  0029                     parseEPROMReading@temperature:	
  7092                           ; 1 bytes @ 0x9
  7093                           
  7094  0029                     parseEPROMInitialization@ALAL:	
  7095                           ; 1 bytes @ 0x9
  7096                           
  7097                           
  7098                           ; 1 bytes @ 0x9
  7099  0029                     	ds	1
  7100  002A                     storeEPROMBuild@luminosity:
  7101  002A                     parseEPROMReading@luminosity:	
  7102                           ; 1 bytes @ 0xA
  7103                           
  7104  002A                     parseEPROMInitialization@ALAF:	
  7105                           ; 1 bytes @ 0xA
  7106                           
  7107                           
  7108                           ; 1 bytes @ 0xA
  7109  002A                     	ds	1
  7110  002B                     storeEPROMBuild@operation:
  7111  002B                     parseEPROMReading@operation:	
  7112                           ; 1 bytes @ 0xB
  7113                           
  7114  002B                     parseEPROMInitialization@CLKH:	
  7115                           ; 1 bytes @ 0xB
  7116                           
  7117                           
  7118                           ; 1 bytes @ 0xB
  7119  002B                     	ds	1
  7120  002C                     ??_storeEPROMBuild:
  7121  002C                     ??_parseEPROMReading:	
  7122                           ; 1 bytes @ 0xC
  7123                           
  7124  002C                     parseEPROMInitialization@CLKM:	
  7125                           ; 1 bytes @ 0xC
  7126                           
  7127                           
  7128                           ; 1 bytes @ 0xC
  7129  002C                     	ds	1
  7130  002D                     storeEPROMBuild@hours:
  7131  002D                     parseEPROMReading@hours:	
  7132                           ; 1 bytes @ 0xD
  7133                           
  7134  002D                     parseEPROMInitialization@checksum:	
  7135                           ; 1 bytes @ 0xD
  7136                           
  7137                           
  7138                           ; 1 bytes @ 0xD
  7139  002D                     	ds	1
  7140  002E                     ??_parseEPROMInitialization:
  7141  002E                     storeEPROMBuild@dataAddr:	
  7142                           ; 1 bytes @ 0xE
  7143                           
  7144  002E                     parseEPROMReading@dataAddr:	
  7145                           ; 2 bytes @ 0xE
  7146                           
  7147                           
  7148                           ; 2 bytes @ 0xE
  7149  002E                     	ds	1
  7150  002F                     parseEPROMInitialization@magic_word:
  7151                           
  7152                           ; 1 bytes @ 0xF
  7153  002F                     	ds	1
  7154  0030                     ??_main:
  7155                           
  7156                           ; 1 bytes @ 0x10
  7157  0030                     	ds	12
  7158  003C                     main@readRingBufferAddr:
  7159                           
  7160                           ; 2 bytes @ 0x1C
  7161  003C                     	ds	2
  7162  003E                     main@hours:
  7163                           
  7164                           ; 1 bytes @ 0x1E
  7165  003E                     	ds	1
  7166  003F                     main@minutes:
  7167                           
  7168                           ; 1 bytes @ 0x1F
  7169  003F                     	ds	1
  7170  0040                     main@seconds:
  7171                           
  7172                           ; 1 bytes @ 0x20
  7173  0040                     	ds	1
  7174  0041                     main@temperature:
  7175                           
  7176                           ; 1 bytes @ 0x21
  7177  0041                     	ds	1
  7178  0042                     main@luminosity:
  7179                           
  7180                           ; 1 bytes @ 0x22
  7181  0042                     	ds	1
  7182  0043                     main@magic_word:
  7183                           
  7184                           ; 1 bytes @ 0x23
  7185  0043                     	ds	1
  7186  0044                     main@NREG:
  7187                           
  7188                           ; 1 bytes @ 0x24
  7189  0044                     	ds	1
  7190  0045                     main@NR:
  7191                           
  7192                           ; 1 bytes @ 0x25
  7193  0045                     	ds	1
  7194  0046                     main@WI:
  7195                           
  7196                           ; 1 bytes @ 0x26
  7197  0046                     	ds	1
  7198  0047                     main@RI:
  7199                           
  7200                           ; 1 bytes @ 0x27
  7201  0047                     	ds	1
  7202  0048                     main@PMON:
  7203                           
  7204                           ; 1 bytes @ 0x28
  7205  0048                     	ds	1
  7206  0049                     main@TALA:
  7207                           
  7208                           ; 1 bytes @ 0x29
  7209  0049                     	ds	1
  7210  004A                     main@ALAT:
  7211                           
  7212                           ; 1 bytes @ 0x2A
  7213  004A                     	ds	1
  7214  004B                     main@ALAL:
  7215                           
  7216                           ; 1 bytes @ 0x2B
  7217  004B                     	ds	1
  7218  004C                     main@ALAF:
  7219                           
  7220                           ; 1 bytes @ 0x2C
  7221  004C                     	ds	1
  7222  004D                     main@CLKH:
  7223                           
  7224                           ; 1 bytes @ 0x2D
  7225  004D                     	ds	1
  7226  004E                     main@CLKM:
  7227                           
  7228                           ; 1 bytes @ 0x2E
  7229  004E                     	ds	1
  7230  004F                     main@checksum:
  7231                           
  7232                           ; 1 bytes @ 0x2F
  7233  004F                     	ds	1
  7234                           
  7235                           	psect	maintext
  7236  00DF                     __pmaintext:	
  7237 ;;
  7238 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  7239 ;;
  7240 ;; *************** function _main *****************
  7241 ;; Defined at:
  7242 ;;		line 118 in file "main.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;		None
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;  buf            17    0        unsigned char [17]
  7247 ;;  readRingBuff    2   28[BANK0 ] unsigned short 
  7248 ;;  writeRingBuf    2    0        unsigned short 
  7249 ;;  checksum        1   47[BANK0 ] unsigned char 
  7250 ;;  CLKM            1   46[BANK0 ] unsigned char 
  7251 ;;  CLKH            1   45[BANK0 ] unsigned char 
  7252 ;;  ALAF            1   44[BANK0 ] unsigned char 
  7253 ;;  ALAL            1   43[BANK0 ] unsigned char 
  7254 ;;  ALAT            1   42[BANK0 ] unsigned char 
  7255 ;;  TALA            1   41[BANK0 ] unsigned char 
  7256 ;;  PMON            1   40[BANK0 ] unsigned char 
  7257 ;;  RI              1   39[BANK0 ] unsigned char 
  7258 ;;  WI              1   38[BANK0 ] unsigned char 
  7259 ;;  NR              1   37[BANK0 ] unsigned char 
  7260 ;;  NREG            1   36[BANK0 ] unsigned char 
  7261 ;;  magic_word      1   35[BANK0 ] unsigned char 
  7262 ;;  luminosity      1   34[BANK0 ] unsigned char 
  7263 ;;  temperature     1   33[BANK0 ] unsigned char 
  7264 ;;  seconds         1   32[BANK0 ] unsigned char 
  7265 ;;  minutes         1   31[BANK0 ] unsigned char 
  7266 ;;  hours           1   30[BANK0 ] unsigned char 
  7267 ;;  c               1    0        unsigned char 
  7268 ;; Return value:  Size  Location     Type
  7269 ;;                  1    wreg      void 
  7270 ;; Registers used:
  7271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7272 ;; Tracked objects:
  7273 ;;		On entry : B1F/0
  7274 ;;		On exit  : 0/0
  7275 ;;		Unchanged: 0/0
  7276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7278 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7279 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7280 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7281 ;;Total ram usage:       32 bytes
  7282 ;; Hardware stack levels required when called: 8
  7283 ;; This function calls:
  7284 ;;		_OpenI2C
  7285 ;;		_S1
  7286 ;;		_SYSTEM_Initialize
  7287 ;;		_TMR1_SetInterruptHandler
  7288 ;;		_initializeEPROM
  7289 ;;		_parseEPROMInitialization
  7290 ;;		_parseEPROMReading
  7291 ;;		_storeEPROMBuild
  7292 ;; This function is called by:
  7293 ;;		Startup code after reset
  7294 ;; This function uses a non-reentrant model
  7295 ;;
  7296                           
  7297                           
  7298                           ;psect for function _main
  7299  00DF                     _main:
  7300  00DF                     l3664:	
  7301                           ;incstack = 0
  7302                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7303                           
  7304                           
  7305                           ;main.c: 123:     uint16_t readRingBufferAddr = 0xFF;
  7306  00DF  30FF               	movlw	255
  7307  00E0  0020               	movlb	0	; select bank0
  7308  00E1  00BC               	movwf	main@readRingBufferAddr
  7309  00E2  3000               	movlw	0
  7310  00E3  00BD               	movwf	main@readRingBufferAddr+1
  7311  00E4                     l3666:
  7312                           
  7313                           ;main.c: 125:     SYSTEM_Initialize();
  7314  00E4  3183  23C7  3180   	fcall	_SYSTEM_Initialize
  7315  00E7                     l3668:
  7316                           
  7317                           ;main.c: 131:     (INTCONbits.GIE = 1);
  7318  00E7  178B               	bsf	11,7	;volatile
  7319  00E8                     l3670:
  7320                           
  7321                           ;main.c: 134:     (INTCONbits.PEIE = 1);
  7322  00E8  170B               	bsf	11,6	;volatile
  7323  00E9                     l3672:
  7324                           
  7325                           ;main.c: 142:     TMR1_SetInterruptHandler(timerInterrupt);
  7326  00E9  3026               	movlw	low _timerInterrupt
  7327  00EA  0020               	movlb	0	; select bank0
  7328  00EB  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  7329  00EC  3003               	movlw	high _timerInterrupt
  7330  00ED  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  7331  00EE  3184  245F  3180   	fcall	_TMR1_SetInterruptHandler
  7332  00F1                     l3674:
  7333  00F1  0020               	movlb	0	; select bank0
  7334  00F2  1716               	bsf	22,6	;volatile
  7335  00F3                     l3676:
  7336                           
  7337                           ;main.c: 146:     OpenI2C();
  7338  00F3  3184  240D  3180   	fcall	_OpenI2C
  7339  00F6                     l3678:
  7340                           
  7341                           ;main.c: 153:     initializeEPROM();
  7342  00F6  3181  2173  3180   	fcall	_initializeEPROM
  7343  00F9                     l3680:
  7344                           
  7345                           ;main.c: 155:     storeEPROMBuild(0x55,0x50,0x45,0x40,0x35,101);
  7346  00F9  3050               	movlw	80
  7347  00FA  0020               	movlb	0	; select bank0
  7348  00FB  00B0               	movwf	??_main
  7349  00FC  0830               	movf	??_main,w
  7350  00FD  00A7               	movwf	storeEPROMBuild@minutes
  7351  00FE  3045               	movlw	69
  7352  00FF  00B1               	movwf	??_main+1
  7353  0100  0831               	movf	??_main+1,w
  7354  0101  00A8               	movwf	storeEPROMBuild@seconds
  7355  0102  3040               	movlw	64
  7356  0103  00B2               	movwf	??_main+2
  7357  0104  0832               	movf	??_main+2,w
  7358  0105  00A9               	movwf	storeEPROMBuild@temperature
  7359  0106  3035               	movlw	53
  7360  0107  00B3               	movwf	??_main+3
  7361  0108  0833               	movf	??_main+3,w
  7362  0109  00AA               	movwf	storeEPROMBuild@luminosity
  7363  010A  3065               	movlw	101
  7364  010B  00B4               	movwf	??_main+4
  7365  010C  0834               	movf	??_main+4,w
  7366  010D  00AB               	movwf	storeEPROMBuild@operation
  7367  010E  3055               	movlw	85
  7368  010F  3182  225B  3180   	fcall	_storeEPROMBuild
  7369  0112                     l3682:
  7370                           
  7371                           ;main.c: 161:     {;main.c: 162:         S1();
  7372  0112  3184  2433  3180   	fcall	_S1
  7373  0115                     l3684:
  7374                           
  7375                           ;main.c: 163:         parseEPROMReading(&hours,&minutes,&seconds,&temperature,&luminosit
      +                          y,101);
  7376  0115  303F               	movlw	(low (main@minutes| 0))& (0+255)
  7377  0116  0020               	movlb	0	; select bank0
  7378  0117  00B0               	movwf	??_main
  7379  0118  0830               	movf	??_main,w
  7380  0119  00A7               	movwf	parseEPROMReading@minutes
  7381  011A  3040               	movlw	(low (main@seconds| 0))& (0+255)
  7382  011B  00B1               	movwf	??_main+1
  7383  011C  0831               	movf	??_main+1,w
  7384  011D  00A8               	movwf	parseEPROMReading@seconds
  7385  011E  3041               	movlw	(low (main@temperature| 0))& (0+255)
  7386  011F  00B2               	movwf	??_main+2
  7387  0120  0832               	movf	??_main+2,w
  7388  0121  00A9               	movwf	parseEPROMReading@temperature
  7389  0122  3042               	movlw	(low (main@luminosity| 0))& (0+255)
  7390  0123  00B3               	movwf	??_main+3
  7391  0124  0833               	movf	??_main+3,w
  7392  0125  00AA               	movwf	parseEPROMReading@luminosity
  7393  0126  3065               	movlw	101
  7394  0127  00B4               	movwf	??_main+4
  7395  0128  0834               	movf	??_main+4,w
  7396  0129  00AB               	movwf	parseEPROMReading@operation
  7397  012A  303E               	movlw	(low (main@hours| 0))& (0+255)
  7398  012B  3182  2201  3180   	fcall	_parseEPROMReading
  7399                           
  7400                           ;main.c: 164:         parseEPROMInitialization(&magic_word,&NREG,&NR,&WI,&RI,&PMON,&TALA
      +                          ,&ALAT,&ALAL,&ALAF,&CLKH,&CLKM,&checksum);
  7401  012E  3044               	movlw	(low (main@NREG| 0))& (0+255)
  7402  012F  0020               	movlb	0	; select bank0
  7403  0130  00B0               	movwf	??_main
  7404  0131  0830               	movf	??_main,w
  7405  0132  00A2               	movwf	parseEPROMInitialization@NREG
  7406  0133  3045               	movlw	(low (main@NR| 0))& (0+255)
  7407  0134  00B1               	movwf	??_main+1
  7408  0135  0831               	movf	??_main+1,w
  7409  0136  00A3               	movwf	parseEPROMInitialization@NR
  7410  0137  3046               	movlw	(low (main@WI| 0))& (0+255)
  7411  0138  00B2               	movwf	??_main+2
  7412  0139  0832               	movf	??_main+2,w
  7413  013A  00A4               	movwf	parseEPROMInitialization@WI
  7414  013B  3047               	movlw	(low (main@RI| 0))& (0+255)
  7415  013C  00B3               	movwf	??_main+3
  7416  013D  0833               	movf	??_main+3,w
  7417  013E  00A5               	movwf	parseEPROMInitialization@RI
  7418  013F  3048               	movlw	(low (main@PMON| 0))& (0+255)
  7419  0140  00B4               	movwf	??_main+4
  7420  0141  0834               	movf	??_main+4,w
  7421  0142  00A6               	movwf	parseEPROMInitialization@PMON
  7422  0143  3049               	movlw	(low (main@TALA| 0))& (0+255)
  7423  0144  00B5               	movwf	??_main+5
  7424  0145  0835               	movf	??_main+5,w
  7425  0146  00A7               	movwf	parseEPROMInitialization@TALA
  7426  0147  304A               	movlw	(low (main@ALAT| 0))& (0+255)
  7427  0148  00B6               	movwf	??_main+6
  7428  0149  0836               	movf	??_main+6,w
  7429  014A  00A8               	movwf	parseEPROMInitialization@ALAT
  7430  014B  304B               	movlw	(low (main@ALAL| 0))& (0+255)
  7431  014C  00B7               	movwf	??_main+7
  7432  014D  0837               	movf	??_main+7,w
  7433  014E  00A9               	movwf	parseEPROMInitialization@ALAL
  7434  014F  304C               	movlw	(low (main@ALAF| 0))& (0+255)
  7435  0150  00B8               	movwf	??_main+8
  7436  0151  0838               	movf	??_main+8,w
  7437  0152  00AA               	movwf	parseEPROMInitialization@ALAF
  7438  0153  304D               	movlw	(low (main@CLKH| 0))& (0+255)
  7439  0154  00B9               	movwf	??_main+9
  7440  0155  0839               	movf	??_main+9,w
  7441  0156  00AB               	movwf	parseEPROMInitialization@CLKH
  7442  0157  304E               	movlw	(low (main@CLKM| 0))& (0+255)
  7443  0158  00BA               	movwf	??_main+10
  7444  0159  083A               	movf	??_main+10,w
  7445  015A  00AC               	movwf	parseEPROMInitialization@CLKM
  7446  015B  304F               	movlw	(low (main@checksum| 0))& (0+255)
  7447  015C  00BB               	movwf	??_main+11
  7448  015D  083B               	movf	??_main+11,w
  7449  015E  00AD               	movwf	parseEPROMInitialization@checksum
  7450  015F  3043               	movlw	(low (main@magic_word| 0))& (0+255)
  7451  0160  3180  2026  3180   	fcall	_parseEPROMInitialization
  7452  0163                     l3686:
  7453                           
  7454                           ;main.c: 177:         _delay((unsigned long)((2000)*(1000000/4000.0)));
  7455  0163  3003               	movlw	3
  7456  0164  0020               	movlb	0	; select bank0
  7457  0165  00B1               	movwf	??_main+1
  7458  0166  308A               	movlw	138
  7459  0167  00B0               	movwf	??_main
  7460  0168  3055               	movlw	85
  7461  0169                     u1437:
  7462  0169  0B89               	decfsz	9,f
  7463  016A  2969               	goto	u1437
  7464  016B  0BB0               	decfsz	??_main,f
  7465  016C  2969               	goto	u1437
  7466  016D  0BB1               	decfsz	??_main+1,f
  7467  016E  2969               	goto	u1437
  7468  016F  3200               	nop2
  7469  0170  2912               	goto	l3682
  7470  0171  3180  2818         	ljmp	start
  7471  0173                     __end_of_main:
  7472                           
  7473                           	psect	text1
  7474  025B                     __ptext1:	
  7475 ;; *************** function _storeEPROMBuild *****************
  7476 ;; Defined at:
  7477 ;;		line 50 in file "EPROMlib.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;  hours           1    wreg     unsigned char 
  7480 ;;  minutes         1    7[BANK0 ] unsigned char 
  7481 ;;  seconds         1    8[BANK0 ] unsigned char 
  7482 ;;  temperature     1    9[BANK0 ] unsigned char 
  7483 ;;  luminosity      1   10[BANK0 ] unsigned char 
  7484 ;;  operation       1   11[BANK0 ] unsigned char 
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;  hours           1   13[BANK0 ] unsigned char 
  7487 ;;  dataAddr        2   14[BANK0 ] unsigned short 
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  1    wreg      void 
  7490 ;; Registers used:
  7491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7497 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7498 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7499 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7500 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7501 ;;Total ram usage:        9 bytes
  7502 ;; Hardware stack levels used: 1
  7503 ;; Hardware stack levels required when called: 6
  7504 ;; This function calls:
  7505 ;;		_DATAEE_WriteByte
  7506 ;;		_operADDR
  7507 ;; This function is called by:
  7508 ;;		_main
  7509 ;; This function uses a non-reentrant model
  7510 ;;
  7511                           
  7512                           
  7513                           ;psect for function _storeEPROMBuild
  7514  025B                     _storeEPROMBuild:
  7515                           
  7516                           ;incstack = 0
  7517                           ; Regs used in _storeEPROMBuild: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7518                           ;storeEPROMBuild@hours stored from wreg
  7519  025B  0020               	movlb	0	; select bank0
  7520  025C  00AD               	movwf	storeEPROMBuild@hours
  7521  025D                     l3638:
  7522                           
  7523                           ;EPROMlib.c: 51:     uint16_t dataAddr;;EPROMlib.c: 53:     dataAddr = operADDR(operatio
      +                          n);
  7524  025D  082B               	movf	storeEPROMBuild@operation,w
  7525  025E  3182  22EF  3182   	fcall	_operADDR
  7526  0261  0020               	movlb	0	; select bank0
  7527  0262  0821               	movf	?_operADDR+1,w
  7528  0263  00AF               	movwf	storeEPROMBuild@dataAddr+1
  7529  0264  0820               	movf	?_operADDR,w
  7530  0265  00AE               	movwf	storeEPROMBuild@dataAddr
  7531  0266                     l3640:
  7532                           
  7533                           ;EPROMlib.c: 54:     DATAEE_WriteByte(dataAddr, hours);
  7534  0266  082F               	movf	storeEPROMBuild@dataAddr+1,w
  7535  0267  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  7536  0268  082E               	movf	storeEPROMBuild@dataAddr,w
  7537  0269  00A0               	movwf	DATAEE_WriteByte@bAdd
  7538  026A  082D               	movf	storeEPROMBuild@hours,w
  7539  026B  00AC               	movwf	??_storeEPROMBuild
  7540  026C  082C               	movf	??_storeEPROMBuild,w
  7541  026D  00A2               	movwf	DATAEE_WriteByte@bData
  7542  026E  3183  234E  3182   	fcall	_DATAEE_WriteByte
  7543  0271                     l3642:
  7544                           
  7545                           ;EPROMlib.c: 55:     DATAEE_WriteByte(dataAddr + 8, minutes);
  7546  0271  0020               	movlb	0	; select bank0
  7547  0272  082E               	movf	storeEPROMBuild@dataAddr,w
  7548  0273  3E08               	addlw	8
  7549  0274  00A0               	movwf	DATAEE_WriteByte@bAdd
  7550  0275  3000               	movlw	0
  7551  0276  3D2F               	addwfc	storeEPROMBuild@dataAddr+1,w
  7552  0277  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  7553  0278  0827               	movf	storeEPROMBuild@minutes,w
  7554  0279  00AC               	movwf	??_storeEPROMBuild
  7555  027A  082C               	movf	??_storeEPROMBuild,w
  7556  027B  00A2               	movwf	DATAEE_WriteByte@bData
  7557  027C  3183  234E  3182   	fcall	_DATAEE_WriteByte
  7558  027F                     l3644:
  7559                           
  7560                           ;EPROMlib.c: 56:     DATAEE_WriteByte(dataAddr + 10, seconds);
  7561  027F  0020               	movlb	0	; select bank0
  7562  0280  082E               	movf	storeEPROMBuild@dataAddr,w
  7563  0281  3E0A               	addlw	10
  7564  0282  00A0               	movwf	DATAEE_WriteByte@bAdd
  7565  0283  3000               	movlw	0
  7566  0284  3D2F               	addwfc	storeEPROMBuild@dataAddr+1,w
  7567  0285  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  7568  0286  0828               	movf	storeEPROMBuild@seconds,w
  7569  0287  00AC               	movwf	??_storeEPROMBuild
  7570  0288  082C               	movf	??_storeEPROMBuild,w
  7571  0289  00A2               	movwf	DATAEE_WriteByte@bData
  7572  028A  3183  234E  3182   	fcall	_DATAEE_WriteByte
  7573  028D                     l3646:
  7574                           
  7575                           ;EPROMlib.c: 57:     DATAEE_WriteByte(dataAddr + 18, temperature);
  7576  028D  0020               	movlb	0	; select bank0
  7577  028E  082E               	movf	storeEPROMBuild@dataAddr,w
  7578  028F  3E12               	addlw	18
  7579  0290  00A0               	movwf	DATAEE_WriteByte@bAdd
  7580  0291  3000               	movlw	0
  7581  0292  3D2F               	addwfc	storeEPROMBuild@dataAddr+1,w
  7582  0293  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  7583  0294  0829               	movf	storeEPROMBuild@temperature,w
  7584  0295  00AC               	movwf	??_storeEPROMBuild
  7585  0296  082C               	movf	??_storeEPROMBuild,w
  7586  0297  00A2               	movwf	DATAEE_WriteByte@bData
  7587  0298  3183  234E  3182   	fcall	_DATAEE_WriteByte
  7588  029B                     l3648:
  7589                           
  7590                           ;EPROMlib.c: 58:     DATAEE_WriteByte(dataAddr + 20, luminosity);
  7591  029B  0020               	movlb	0	; select bank0
  7592  029C  082E               	movf	storeEPROMBuild@dataAddr,w
  7593  029D  3E14               	addlw	20
  7594  029E  00A0               	movwf	DATAEE_WriteByte@bAdd
  7595  029F  3000               	movlw	0
  7596  02A0  3D2F               	addwfc	storeEPROMBuild@dataAddr+1,w
  7597  02A1  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  7598  02A2  082A               	movf	storeEPROMBuild@luminosity,w
  7599  02A3  00AC               	movwf	??_storeEPROMBuild
  7600  02A4  082C               	movf	??_storeEPROMBuild,w
  7601  02A5  00A2               	movwf	DATAEE_WriteByte@bData
  7602  02A6  3183  234E  3182   	fcall	_DATAEE_WriteByte
  7603  02A9                     l1296:
  7604  02A9  0008               	return
  7605  02AA                     __end_of_storeEPROMBuild:
  7606                           
  7607                           	psect	text2
  7608  0201                     __ptext2:	
  7609 ;; *************** function _parseEPROMReading *****************
  7610 ;; Defined at:
  7611 ;;		line 61 in file "EPROMlib.c"
  7612 ;; Parameters:    Size  Location     Type
  7613 ;;  hours           1    wreg     PTR unsigned char 
  7614 ;;		 -> main@hours(1), 
  7615 ;;  minutes         1    7[BANK0 ] PTR unsigned char 
  7616 ;;		 -> main@minutes(1), 
  7617 ;;  seconds         1    8[BANK0 ] PTR unsigned char 
  7618 ;;		 -> main@seconds(1), 
  7619 ;;  temperature     1    9[BANK0 ] PTR unsigned char 
  7620 ;;		 -> main@temperature(1), 
  7621 ;;  luminosity      1   10[BANK0 ] PTR unsigned char 
  7622 ;;		 -> main@luminosity(1), 
  7623 ;;  operation       1   11[BANK0 ] unsigned char 
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;  hours           1   13[BANK0 ] PTR unsigned char 
  7626 ;;		 -> main@hours(1), 
  7627 ;;  dataAddr        2   14[BANK0 ] unsigned short 
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  1    wreg      void 
  7630 ;; Registers used:
  7631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7637 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7638 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7639 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7640 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7641 ;;Total ram usage:        9 bytes
  7642 ;; Hardware stack levels used: 1
  7643 ;; Hardware stack levels required when called: 6
  7644 ;; This function calls:
  7645 ;;		_DATAEE_ReadByte
  7646 ;;		_operADDR
  7647 ;; This function is called by:
  7648 ;;		_main
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           
  7653                           ;psect for function _parseEPROMReading
  7654  0201                     _parseEPROMReading:
  7655                           
  7656                           ;incstack = 0
  7657                           ; Regs used in _parseEPROMReading: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7658                           ;parseEPROMReading@hours stored from wreg
  7659  0201  0020               	movlb	0	; select bank0
  7660  0202  00AD               	movwf	parseEPROMReading@hours
  7661  0203                     l3650:
  7662                           
  7663                           ;EPROMlib.c: 62:     uint16_t dataAddr;;EPROMlib.c: 63:     dataAddr = operADDR(operatio
      +                          n);
  7664  0203  082B               	movf	parseEPROMReading@operation,w
  7665  0204  3182  22EF  3182   	fcall	_operADDR
  7666  0207  0020               	movlb	0	; select bank0
  7667  0208  0821               	movf	?_operADDR+1,w
  7668  0209  00AF               	movwf	parseEPROMReading@dataAddr+1
  7669  020A  0820               	movf	?_operADDR,w
  7670  020B  00AE               	movwf	parseEPROMReading@dataAddr
  7671  020C                     l3652:
  7672                           
  7673                           ;EPROMlib.c: 64:     *hours = DATAEE_ReadByte(dataAddr);
  7674  020C  082F               	movf	parseEPROMReading@dataAddr+1,w
  7675  020D  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  7676  020E  082E               	movf	parseEPROMReading@dataAddr,w
  7677  020F  00A0               	movwf	DATAEE_ReadByte@bAdd
  7678  0210  3183  23FD  3182   	fcall	_DATAEE_ReadByte
  7679  0213  0020               	movlb	0	; select bank0
  7680  0214  00AC               	movwf	??_parseEPROMReading
  7681  0215  082D               	movf	parseEPROMReading@hours,w
  7682  0216  0086               	movwf	6
  7683  0217  0187               	clrf	7
  7684  0218  082C               	movf	??_parseEPROMReading,w
  7685  0219  0081               	movwf	1
  7686  021A                     l3654:
  7687                           
  7688                           ;EPROMlib.c: 65:     *minutes = DATAEE_ReadByte(dataAddr + 8);
  7689  021A  082E               	movf	parseEPROMReading@dataAddr,w
  7690  021B  3E08               	addlw	8
  7691  021C  00A0               	movwf	DATAEE_ReadByte@bAdd
  7692  021D  3000               	movlw	0
  7693  021E  3D2F               	addwfc	parseEPROMReading@dataAddr+1,w
  7694  021F  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  7695  0220  3183  23FD  3182   	fcall	_DATAEE_ReadByte
  7696  0223  0020               	movlb	0	; select bank0
  7697  0224  00AC               	movwf	??_parseEPROMReading
  7698  0225  0827               	movf	parseEPROMReading@minutes,w
  7699  0226  0086               	movwf	6
  7700  0227  0187               	clrf	7
  7701  0228  082C               	movf	??_parseEPROMReading,w
  7702  0229  0081               	movwf	1
  7703  022A                     l3656:
  7704                           
  7705                           ;EPROMlib.c: 66:     *seconds = DATAEE_ReadByte(dataAddr + 10);
  7706  022A  082E               	movf	parseEPROMReading@dataAddr,w
  7707  022B  3E0A               	addlw	10
  7708  022C  00A0               	movwf	DATAEE_ReadByte@bAdd
  7709  022D  3000               	movlw	0
  7710  022E  3D2F               	addwfc	parseEPROMReading@dataAddr+1,w
  7711  022F  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  7712  0230  3183  23FD  3182   	fcall	_DATAEE_ReadByte
  7713  0233  0020               	movlb	0	; select bank0
  7714  0234  00AC               	movwf	??_parseEPROMReading
  7715  0235  0828               	movf	parseEPROMReading@seconds,w
  7716  0236  0086               	movwf	6
  7717  0237  0187               	clrf	7
  7718  0238  082C               	movf	??_parseEPROMReading,w
  7719  0239  0081               	movwf	1
  7720  023A                     l3658:
  7721                           
  7722                           ;EPROMlib.c: 67:     *temperature = DATAEE_ReadByte(dataAddr + 18);
  7723  023A  082E               	movf	parseEPROMReading@dataAddr,w
  7724  023B  3E12               	addlw	18
  7725  023C  00A0               	movwf	DATAEE_ReadByte@bAdd
  7726  023D  3000               	movlw	0
  7727  023E  3D2F               	addwfc	parseEPROMReading@dataAddr+1,w
  7728  023F  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  7729  0240  3183  23FD  3182   	fcall	_DATAEE_ReadByte
  7730  0243  0020               	movlb	0	; select bank0
  7731  0244  00AC               	movwf	??_parseEPROMReading
  7732  0245  0829               	movf	parseEPROMReading@temperature,w
  7733  0246  0086               	movwf	6
  7734  0247  0187               	clrf	7
  7735  0248  082C               	movf	??_parseEPROMReading,w
  7736  0249  0081               	movwf	1
  7737  024A                     l3660:
  7738                           
  7739                           ;EPROMlib.c: 68:     *luminosity = DATAEE_ReadByte(dataAddr + 20);
  7740  024A  082E               	movf	parseEPROMReading@dataAddr,w
  7741  024B  3E14               	addlw	20
  7742  024C  00A0               	movwf	DATAEE_ReadByte@bAdd
  7743  024D  3000               	movlw	0
  7744  024E  3D2F               	addwfc	parseEPROMReading@dataAddr+1,w
  7745  024F  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  7746  0250  3183  23FD  3182   	fcall	_DATAEE_ReadByte
  7747  0253  0020               	movlb	0	; select bank0
  7748  0254  00AC               	movwf	??_parseEPROMReading
  7749  0255  082A               	movf	parseEPROMReading@luminosity,w
  7750  0256  0086               	movwf	6
  7751  0257  0187               	clrf	7
  7752  0258  082C               	movf	??_parseEPROMReading,w
  7753  0259  0081               	movwf	1
  7754  025A                     l1299:
  7755  025A  0008               	return
  7756  025B                     __end_of_parseEPROMReading:
  7757                           
  7758                           	psect	text3
  7759  02EF                     __ptext3:	
  7760 ;; *************** function _operADDR *****************
  7761 ;; Defined at:
  7762 ;;		line 7 in file "EPROMlib.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  operation       1    wreg     unsigned char 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  operation       1    4[BANK0 ] unsigned char 
  7767 ;;  dataAddr        2    5[BANK0 ] unsigned short 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  2    0[BANK0 ] unsigned short 
  7770 ;; Registers used:
  7771 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7777 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7778 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7779 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7780 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7781 ;;Total ram usage:        7 bytes
  7782 ;; Hardware stack levels used: 1
  7783 ;; Hardware stack levels required when called: 5
  7784 ;; This function calls:
  7785 ;;		Nothing
  7786 ;; This function is called by:
  7787 ;;		_storeEPROMBuild
  7788 ;;		_parseEPROMReading
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           
  7793                           ;psect for function _operADDR
  7794  02EF                     _operADDR:
  7795                           
  7796                           ;incstack = 0
  7797                           ; Regs used in _operADDR: [wreg-fsr0h+status,2+status,0]
  7798                           ;operADDR@operation stored from wreg
  7799  02EF  0020               	movlb	0	; select bank0
  7800  02F0  00A4               	movwf	operADDR@operation
  7801  02F1                     l3608:
  7802                           
  7803                           ;EPROMlib.c: 8:     uint16_t dataAddr;;EPROMlib.c: 9:     switch (operation){
  7804  02F1  2B0B               	goto	l3612
  7805  02F2                     l1284:	
  7806                           ;EPROMlib.c: 10:         case 100:
  7807                           
  7808                           
  7809                           ;EPROMlib.c: 11:             dataAddr = 0x7000;
  7810  02F2  3000               	movlw	0
  7811  02F3  00A5               	movwf	operADDR@dataAddr
  7812  02F4  3070               	movlw	112
  7813  02F5  00A6               	movwf	operADDR@dataAddr+1
  7814                           
  7815                           ;EPROMlib.c: 12:             break;
  7816  02F6  2B21               	goto	l3614
  7817  02F7                     l1286:	
  7818                           ;EPROMlib.c: 14:         case 101:
  7819                           
  7820                           
  7821                           ;EPROMlib.c: 15:             dataAddr = 0x7028;
  7822  02F7  3028               	movlw	40
  7823  02F8  00A5               	movwf	operADDR@dataAddr
  7824  02F9  3070               	movlw	112
  7825  02FA  00A6               	movwf	operADDR@dataAddr+1
  7826                           
  7827                           ;EPROMlib.c: 16:             break;
  7828  02FB  2B21               	goto	l3614
  7829  02FC                     l1287:	
  7830                           ;EPROMlib.c: 18:         case 102:
  7831                           
  7832                           
  7833                           ;EPROMlib.c: 19:             dataAddr = 0x7050;
  7834  02FC  3050               	movlw	80
  7835  02FD  00A5               	movwf	operADDR@dataAddr
  7836  02FE  3070               	movlw	112
  7837  02FF  00A6               	movwf	operADDR@dataAddr+1
  7838                           
  7839                           ;EPROMlib.c: 20:             break;
  7840  0300  2B21               	goto	l3614
  7841  0301                     l1288:	
  7842                           ;EPROMlib.c: 22:         case 103:
  7843                           
  7844                           
  7845                           ;EPROMlib.c: 23:             dataAddr = 0x7078;
  7846  0301  3078               	movlw	120
  7847  0302  00A5               	movwf	operADDR@dataAddr
  7848  0303  3070               	movlw	112
  7849  0304  00A6               	movwf	operADDR@dataAddr+1
  7850                           
  7851                           ;EPROMlib.c: 24:             break;
  7852  0305  2B21               	goto	l3614
  7853  0306                     l1289:	
  7854                           ;EPROMlib.c: 26:         default:
  7855                           
  7856                           
  7857                           ;EPROMlib.c: 27:             dataAddr = 0xF0FF;
  7858  0306  30FF               	movlw	255
  7859  0307  00A5               	movwf	operADDR@dataAddr
  7860  0308  30F0               	movlw	240
  7861  0309  00A6               	movwf	operADDR@dataAddr+1
  7862                           
  7863                           ;EPROMlib.c: 28:             break;
  7864  030A  2B21               	goto	l3614
  7865  030B                     l3612:
  7866  030B  0824               	movf	operADDR@operation,w
  7867  030C  00A2               	movwf	??_operADDR
  7868  030D  01A3               	clrf	??_operADDR+1
  7869                           
  7870                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7871                           ; Switch size 1, requested type "simple"
  7872                           ; Number of cases is 1, Range of values is 0 to 0
  7873                           ; switch strategies available:
  7874                           ; Name         Instructions Cycles
  7875                           ; simple_byte            4     3 (average)
  7876                           ; direct_byte            8     6 (fixed)
  7877                           ; jumptable            260     6 (fixed)
  7878                           ;	Chosen strategy is simple_byte
  7879  030E  0823               	movf	??_operADDR+1,w
  7880  030F  3A00               	xorlw	0	; case 0
  7881  0310  1903               	skipnz
  7882  0311  2B13               	goto	l3718
  7883  0312  2B06               	goto	l1289
  7884  0313                     l3718:
  7885                           
  7886                           ; Switch size 1, requested type "simple"
  7887                           ; Number of cases is 4, Range of values is 100 to 103
  7888                           ; switch strategies available:
  7889                           ; Name         Instructions Cycles
  7890                           ; simple_byte           13     7 (average)
  7891                           ; direct_byte           17     9 (fixed)
  7892                           ; jumptable            263     9 (fixed)
  7893                           ;	Chosen strategy is simple_byte
  7894  0313  0822               	movf	??_operADDR,w
  7895  0314  3A64               	xorlw	100	; case 100
  7896  0315  1903               	skipnz
  7897  0316  2AF2               	goto	l1284
  7898  0317  3A01               	xorlw	1	; case 101
  7899  0318  1903               	skipnz
  7900  0319  2AF7               	goto	l1286
  7901  031A  3A03               	xorlw	3	; case 102
  7902  031B  1903               	skipnz
  7903  031C  2AFC               	goto	l1287
  7904  031D  3A01               	xorlw	1	; case 103
  7905  031E  1903               	skipnz
  7906  031F  2B01               	goto	l1288
  7907  0320  2B06               	goto	l1289
  7908  0321                     l3614:
  7909                           
  7910                           ;EPROMlib.c: 31:     return dataAddr;
  7911  0321  0826               	movf	operADDR@dataAddr+1,w
  7912  0322  00A1               	movwf	?_operADDR+1
  7913  0323  0825               	movf	operADDR@dataAddr,w
  7914  0324  00A0               	movwf	?_operADDR
  7915  0325                     l1290:
  7916  0325  0008               	return
  7917  0326                     __end_of_operADDR:
  7918                           
  7919                           	psect	text4
  7920  0026                     __ptext4:	
  7921 ;; *************** function _parseEPROMInitialization *****************
  7922 ;; Defined at:
  7923 ;;		line 71 in file "EPROMlib.c"
  7924 ;; Parameters:    Size  Location     Type
  7925 ;;  magic_word      1    wreg     PTR unsigned char 
  7926 ;;		 -> main@magic_word(1), 
  7927 ;;  NREG            1    2[BANK0 ] PTR unsigned char 
  7928 ;;		 -> main@NREG(1), 
  7929 ;;  NR              1    3[BANK0 ] PTR unsigned char 
  7930 ;;		 -> main@NR(1), 
  7931 ;;  WI              1    4[BANK0 ] PTR unsigned char 
  7932 ;;		 -> main@WI(1), 
  7933 ;;  RI              1    5[BANK0 ] PTR unsigned char 
  7934 ;;		 -> main@RI(1), 
  7935 ;;  PMON            1    6[BANK0 ] PTR unsigned char 
  7936 ;;		 -> main@PMON(1), 
  7937 ;;  TALA            1    7[BANK0 ] PTR unsigned char 
  7938 ;;		 -> main@TALA(1), 
  7939 ;;  ALAT            1    8[BANK0 ] PTR unsigned char 
  7940 ;;		 -> main@ALAT(1), 
  7941 ;;  ALAL            1    9[BANK0 ] PTR unsigned char 
  7942 ;;		 -> main@ALAL(1), 
  7943 ;;  ALAF            1   10[BANK0 ] PTR unsigned char 
  7944 ;;		 -> main@ALAF(1), 
  7945 ;;  CLKH            1   11[BANK0 ] PTR unsigned char 
  7946 ;;		 -> main@CLKH(1), 
  7947 ;;  CLKM            1   12[BANK0 ] PTR unsigned char 
  7948 ;;		 -> main@CLKM(1), 
  7949 ;;  checksum        1   13[BANK0 ] PTR unsigned char 
  7950 ;;		 -> main@checksum(1), 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;  magic_word      1   15[BANK0 ] PTR unsigned char 
  7953 ;;		 -> main@magic_word(1), 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      void 
  7956 ;; Registers used:
  7957 ;;		wreg, fsr1l, fsr1h, status,2, pclath, cstack
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7963 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7964 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7965 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7966 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7967 ;;Total ram usage:       14 bytes
  7968 ;; Hardware stack levels used: 1
  7969 ;; Hardware stack levels required when called: 6
  7970 ;; This function calls:
  7971 ;;		_DATAEE_ReadByte
  7972 ;; This function is called by:
  7973 ;;		_main
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977                           
  7978                           ;psect for function _parseEPROMInitialization
  7979  0026                     _parseEPROMInitialization:
  7980                           
  7981                           ;incstack = 0
  7982                           ; Regs used in _parseEPROMInitialization: [wreg+fsr1l+fsr1h+status,2+pclath+cstack]
  7983                           ;parseEPROMInitialization@magic_word stored from wreg
  7984  0026  0020               	movlb	0	; select bank0
  7985  0027  00AF               	movwf	parseEPROMInitialization@magic_word
  7986  0028                     l3662:
  7987                           
  7988                           ;EPROMlib.c: 72:     *magic_word = DATAEE_ReadByte(0x7099);
  7989  0028  3099               	movlw	153
  7990  0029  00A0               	movwf	DATAEE_ReadByte@bAdd
  7991  002A  3070               	movlw	112
  7992  002B  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  7993  002C  3183  23FD  3180   	fcall	_DATAEE_ReadByte
  7994  002F  0020               	movlb	0	; select bank0
  7995  0030  00AE               	movwf	??_parseEPROMInitialization
  7996  0031  082F               	movf	parseEPROMInitialization@magic_word,w
  7997  0032  0086               	movwf	6
  7998  0033  0187               	clrf	7
  7999  0034  082E               	movf	??_parseEPROMInitialization,w
  8000  0035  0081               	movwf	1
  8001                           
  8002                           ;EPROMlib.c: 73:     *NREG = DATAEE_ReadByte(0x7099 + 8);
  8003  0036  30A1               	movlw	161
  8004  0037  00A0               	movwf	DATAEE_ReadByte@bAdd
  8005  0038  3070               	movlw	112
  8006  0039  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  8007  003A  3183  23FD  3180   	fcall	_DATAEE_ReadByte
  8008  003D  0020               	movlb	0	; select bank0
  8009  003E  00AE               	movwf	??_parseEPROMInitialization
  8010  003F  0822               	movf	parseEPROMInitialization@NREG,w
  8011  0040  0086               	movwf	6
  8012  0041  0187               	clrf	7
  8013  0042  082E               	movf	??_parseEPROMInitialization,w
  8014  0043  0081               	movwf	1
  8015                           
  8016                           ;EPROMlib.c: 74:     *NR = DATAEE_ReadByte(0x7099 + 10);
  8017  0044  30A3               	movlw	163
  8018  0045  00A0               	movwf	DATAEE_ReadByte@bAdd
  8019  0046  3070               	movlw	112
  8020  0047  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  8021  0048  3183  23FD  3180   	fcall	_DATAEE_ReadByte
  8022  004B  0020               	movlb	0	; select bank0
  8023  004C  00AE               	movwf	??_parseEPROMInitialization
  8024  004D  0823               	movf	parseEPROMInitialization@NR,w
  8025  004E  0086               	movwf	6
  8026  004F  0187               	clrf	7
  8027  0050  082E               	movf	??_parseEPROMInitialization,w
  8028  0051  0081               	movwf	1
  8029                           
  8030                           ;EPROMlib.c: 75:     *WI = DATAEE_ReadByte(0x7099 + 18);
  8031  0052  30AB               	movlw	171
  8032  0053  00A0               	movwf	DATAEE_ReadByte@bAdd
  8033  0054  3070               	movlw	112
  8034  0055  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  8035  0056  3183  23FD  3180   	fcall	_DATAEE_ReadByte
  8036  0059  0020               	movlb	0	; select bank0
  8037  005A  00AE               	movwf	??_parseEPROMInitialization
  8038  005B  0824               	movf	parseEPROMInitialization@WI,w
  8039  005C  0086               	movwf	6
  8040  005D  0187               	clrf	7
  8041  005E  082E               	movf	??_parseEPROMInitialization,w
  8042  005F  0081               	movwf	1
  8043                           
  8044                           ;EPROMlib.c: 76:     *RI = DATAEE_ReadByte(0x7099 + 20);
  8045  0060  30AD               	movlw	173
  8046  0061  00A0               	movwf	DATAEE_ReadByte@bAdd
  8047  0062  3070               	movlw	112
  8048  0063  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  8049  0064  3183  23FD  3180   	fcall	_DATAEE_ReadByte
  8050  0067  0020               	movlb	0	; select bank0
  8051  0068  00AE               	movwf	??_parseEPROMInitialization
  8052  0069  0825               	movf	parseEPROMInitialization@RI,w
  8053  006A  0086               	movwf	6
  8054  006B  0187               	clrf	7
  8055  006C  082E               	movf	??_parseEPROMInitialization,w
  8056  006D  0081               	movwf	1
  8057                           
  8058                           ;EPROMlib.c: 77:     *PMON = DATAEE_ReadByte(0x7099 + 28);
  8059  006E  30B5               	movlw	181
  8060  006F  00A0               	movwf	DATAEE_ReadByte@bAdd
  8061  0070  3070               	movlw	112
  8062  0071  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  8063  0072  3183  23FD  3180   	fcall	_DATAEE_ReadByte
  8064  0075  0020               	movlb	0	; select bank0
  8065  0076  00AE               	movwf	??_parseEPROMInitialization
  8066  0077  0826               	movf	parseEPROMInitialization@PMON,w
  8067  0078  0086               	movwf	6
  8068  0079  0187               	clrf	7
  8069  007A  082E               	movf	??_parseEPROMInitialization,w
  8070  007B  0081               	movwf	1
  8071                           
  8072                           ;EPROMlib.c: 78:     *TALA = DATAEE_ReadByte(0x7099 + 30);
  8073  007C  30B7               	movlw	183
  8074  007D  00A0               	movwf	DATAEE_ReadByte@bAdd
  8075  007E  3070               	movlw	112
  8076  007F  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  8077  0080  3183  23FD  3180   	fcall	_DATAEE_ReadByte
  8078  0083  0020               	movlb	0	; select bank0
  8079  0084  00AE               	movwf	??_parseEPROMInitialization
  8080  0085  0827               	movf	parseEPROMInitialization@TALA,w
  8081  0086  0086               	movwf	6
  8082  0087  0187               	clrf	7
  8083  0088  082E               	movf	??_parseEPROMInitialization,w
  8084  0089  0081               	movwf	1
  8085                           
  8086                           ;EPROMlib.c: 79:     *ALAT = DATAEE_ReadByte(0x7099 + 38);
  8087  008A  30BF               	movlw	191
  8088  008B  00A0               	movwf	DATAEE_ReadByte@bAdd
  8089  008C  3070               	movlw	112
  8090  008D  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  8091  008E  3183  23FD  3180   	fcall	_DATAEE_ReadByte
  8092  0091  0020               	movlb	0	; select bank0
  8093  0092  00AE               	movwf	??_parseEPROMInitialization
  8094  0093  0828               	movf	parseEPROMInitialization@ALAT,w
  8095  0094  0086               	movwf	6
  8096  0095  0187               	clrf	7
  8097  0096  082E               	movf	??_parseEPROMInitialization,w
  8098  0097  0081               	movwf	1
  8099                           
  8100                           ;EPROMlib.c: 80:     *ALAL = DATAEE_ReadByte(0x7099 + 40);
  8101  0098  30C1               	movlw	193
  8102  0099  00A0               	movwf	DATAEE_ReadByte@bAdd
  8103  009A  3070               	movlw	112
  8104  009B  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  8105  009C  3183  23FD  3180   	fcall	_DATAEE_ReadByte
  8106  009F  0020               	movlb	0	; select bank0
  8107  00A0  00AE               	movwf	??_parseEPROMInitialization
  8108  00A1  0829               	movf	parseEPROMInitialization@ALAL,w
  8109  00A2  0086               	movwf	6
  8110  00A3  0187               	clrf	7
  8111  00A4  082E               	movf	??_parseEPROMInitialization,w
  8112  00A5  0081               	movwf	1
  8113                           
  8114                           ;EPROMlib.c: 81:     *ALAF = DATAEE_ReadByte(0x7099 + 48);
  8115  00A6  30C9               	movlw	201
  8116  00A7  00A0               	movwf	DATAEE_ReadByte@bAdd
  8117  00A8  3070               	movlw	112
  8118  00A9  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  8119  00AA  3183  23FD  3180   	fcall	_DATAEE_ReadByte
  8120  00AD  0020               	movlb	0	; select bank0
  8121  00AE  00AE               	movwf	??_parseEPROMInitialization
  8122  00AF  082A               	movf	parseEPROMInitialization@ALAF,w
  8123  00B0  0086               	movwf	6
  8124  00B1  0187               	clrf	7
  8125  00B2  082E               	movf	??_parseEPROMInitialization,w
  8126  00B3  0081               	movwf	1
  8127                           
  8128                           ;EPROMlib.c: 82:     *CLKH = DATAEE_ReadByte(0x7099 + 50);
  8129  00B4  30CB               	movlw	203
  8130  00B5  00A0               	movwf	DATAEE_ReadByte@bAdd
  8131  00B6  3070               	movlw	112
  8132  00B7  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  8133  00B8  3183  23FD  3180   	fcall	_DATAEE_ReadByte
  8134  00BB  0020               	movlb	0	; select bank0
  8135  00BC  00AE               	movwf	??_parseEPROMInitialization
  8136  00BD  082B               	movf	parseEPROMInitialization@CLKH,w
  8137  00BE  0086               	movwf	6
  8138  00BF  0187               	clrf	7
  8139  00C0  082E               	movf	??_parseEPROMInitialization,w
  8140  00C1  0081               	movwf	1
  8141                           
  8142                           ;EPROMlib.c: 83:     *CLKM = DATAEE_ReadByte(0x7099 + 58);
  8143  00C2  30D3               	movlw	211
  8144  00C3  00A0               	movwf	DATAEE_ReadByte@bAdd
  8145  00C4  3070               	movlw	112
  8146  00C5  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  8147  00C6  3183  23FD  3180   	fcall	_DATAEE_ReadByte
  8148  00C9  0020               	movlb	0	; select bank0
  8149  00CA  00AE               	movwf	??_parseEPROMInitialization
  8150  00CB  082C               	movf	parseEPROMInitialization@CLKM,w
  8151  00CC  0086               	movwf	6
  8152  00CD  0187               	clrf	7
  8153  00CE  082E               	movf	??_parseEPROMInitialization,w
  8154  00CF  0081               	movwf	1
  8155                           
  8156                           ;EPROMlib.c: 84:     *checksum = DATAEE_ReadByte(0x7099 + 60);
  8157  00D0  30D5               	movlw	213
  8158  00D1  00A0               	movwf	DATAEE_ReadByte@bAdd
  8159  00D2  3070               	movlw	112
  8160  00D3  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  8161  00D4  3183  23FD  3180   	fcall	_DATAEE_ReadByte
  8162  00D7  0020               	movlb	0	; select bank0
  8163  00D8  00AE               	movwf	??_parseEPROMInitialization
  8164  00D9  082D               	movf	parseEPROMInitialization@checksum,w
  8165  00DA  0086               	movwf	6
  8166  00DB  0187               	clrf	7
  8167  00DC  082E               	movf	??_parseEPROMInitialization,w
  8168  00DD  0081               	movwf	1
  8169  00DE                     l1302:
  8170  00DE  0008               	return
  8171  00DF                     __end_of_parseEPROMInitialization:
  8172                           
  8173                           	psect	text5
  8174  03FD                     __ptext5:	
  8175 ;; *************** function _DATAEE_ReadByte *****************
  8176 ;; Defined at:
  8177 ;;		line 202 in file "mcc_generated_files/memory.c"
  8178 ;; Parameters:    Size  Location     Type
  8179 ;;  bAdd            2    0[BANK0 ] unsigned short 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;		None
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  1    wreg      unsigned char 
  8184 ;; Registers used:
  8185 ;;		wreg, status,2
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8191 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8194 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8195 ;;Total ram usage:        2 bytes
  8196 ;; Hardware stack levels used: 1
  8197 ;; Hardware stack levels required when called: 5
  8198 ;; This function calls:
  8199 ;;		Nothing
  8200 ;; This function is called by:
  8201 ;;		_parseEPROMReading
  8202 ;;		_parseEPROMInitialization
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           
  8207                           ;psect for function _DATAEE_ReadByte
  8208  03FD                     _DATAEE_ReadByte:
  8209  03FD                     l3590:	
  8210                           ;incstack = 0
  8211                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
  8212                           
  8213                           
  8214                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
  8215  03FD  0020               	movlb	0	; select bank0
  8216  03FE  0821               	movf	DATAEE_ReadByte@bAdd+1,w
  8217  03FF  0030               	movlb	16	; select bank16
  8218  0400  009B               	movwf	27	;volatile
  8219  0401                     l3592:
  8220                           
  8221                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
  8222  0401  0020               	movlb	0	; select bank0
  8223  0402  0820               	movf	DATAEE_ReadByte@bAdd,w
  8224  0403  0030               	movlb	16	; select bank16
  8225  0404  009A               	movwf	26	;volatile
  8226  0405                     l3594:
  8227                           
  8228                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
  8229  0405  171E               	bsf	30,6	;volsfr
  8230  0406                     l3596:
  8231                           
  8232                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
  8233  0406  141E               	bsf	30,0	;volsfr
  8234  0407                     l3598:
  8235                           
  8236                           ;mcc_generated_files/memory.c: 208:     __nop();
  8237  0407  0000               	nop
  8238  0408                     l3600:
  8239                           
  8240                           ;mcc_generated_files/memory.c: 209:     __nop();
  8241  0408  0000               	nop
  8242  0409                     l3602:
  8243                           
  8244                           ;mcc_generated_files/memory.c: 211:     NVMCON1|=0x80;
  8245  0409  0030               	movlb	16	; select bank16
  8246  040A  179E               	bsf	30,7	;volsfr
  8247  040B                     l3604:
  8248                           
  8249                           ;mcc_generated_files/memory.c: 213:     return (NVMDATL);
  8250  040B  081C               	movf	28,w	;volatile
  8251  040C                     l773:
  8252  040C  0008               	return
  8253  040D                     __end_of_DATAEE_ReadByte:
  8254                           
  8255                           	psect	text6
  8256  0173                     __ptext6:	
  8257 ;; *************** function _initializeEPROM *****************
  8258 ;; Defined at:
  8259 ;;		line 34 in file "EPROMlib.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;		None
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;		None
  8264 ;; Return value:  Size  Location     Type
  8265 ;;                  1    wreg      void 
  8266 ;; Registers used:
  8267 ;;		wreg, status,2, status,0, pclath, cstack
  8268 ;; Tracked objects:
  8269 ;;		On entry : 0/0
  8270 ;;		On exit  : 0/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8275 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8276 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8277 ;;Total ram usage:        1 bytes
  8278 ;; Hardware stack levels used: 1
  8279 ;; Hardware stack levels required when called: 6
  8280 ;; This function calls:
  8281 ;;		_DATAEE_WriteByte
  8282 ;; This function is called by:
  8283 ;;		_main
  8284 ;; This function uses a non-reentrant model
  8285 ;;
  8286                           
  8287                           
  8288                           ;psect for function _initializeEPROM
  8289  0173                     _initializeEPROM:
  8290  0173                     l3636:	
  8291                           ;incstack = 0
  8292                           ; Regs used in _initializeEPROM: [wreg+status,2+status,0+pclath+cstack]
  8293                           
  8294                           
  8295                           ;EPROMlib.c: 35:     DATAEE_WriteByte(0x7099,(uint8_t) 0xAA);
  8296  0173  3099               	movlw	153
  8297  0174  0020               	movlb	0	; select bank0
  8298  0175  00A0               	movwf	DATAEE_WriteByte@bAdd
  8299  0176  3070               	movlw	112
  8300  0177  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8301  0178  30AA               	movlw	170
  8302  0179  00A4               	movwf	??_initializeEPROM
  8303  017A  0824               	movf	??_initializeEPROM,w
  8304  017B  00A2               	movwf	DATAEE_WriteByte@bData
  8305  017C  3183  234E  3181   	fcall	_DATAEE_WriteByte
  8306                           
  8307                           ;EPROMlib.c: 36:     DATAEE_WriteByte(0x7099 + 8, 0xA);
  8308  017F  30A1               	movlw	161
  8309  0180  0020               	movlb	0	; select bank0
  8310  0181  00A0               	movwf	DATAEE_WriteByte@bAdd
  8311  0182  3070               	movlw	112
  8312  0183  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8313  0184  300A               	movlw	10
  8314  0185  00A4               	movwf	??_initializeEPROM
  8315  0186  0824               	movf	??_initializeEPROM,w
  8316  0187  00A2               	movwf	DATAEE_WriteByte@bData
  8317  0188  3183  234E  3181   	fcall	_DATAEE_WriteByte
  8318                           
  8319                           ;EPROMlib.c: 37:     DATAEE_WriteByte(0x7099 + 10, 0x0);
  8320  018B  30A3               	movlw	163
  8321  018C  0020               	movlb	0	; select bank0
  8322  018D  00A0               	movwf	DATAEE_WriteByte@bAdd
  8323  018E  3070               	movlw	112
  8324  018F  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8325  0190  01A2               	clrf	DATAEE_WriteByte@bData
  8326  0191  3183  234E  3181   	fcall	_DATAEE_WriteByte
  8327                           
  8328                           ;EPROMlib.c: 38:     DATAEE_WriteByte(0x7099 + 18, 0x0);
  8329  0194  30AB               	movlw	171
  8330  0195  0020               	movlb	0	; select bank0
  8331  0196  00A0               	movwf	DATAEE_WriteByte@bAdd
  8332  0197  3070               	movlw	112
  8333  0198  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8334  0199  01A2               	clrf	DATAEE_WriteByte@bData
  8335  019A  3183  234E  3181   	fcall	_DATAEE_WriteByte
  8336                           
  8337                           ;EPROMlib.c: 39:     DATAEE_WriteByte(0x7099 + 20, 0x0);
  8338  019D  30AD               	movlw	173
  8339  019E  0020               	movlb	0	; select bank0
  8340  019F  00A0               	movwf	DATAEE_WriteByte@bAdd
  8341  01A0  3070               	movlw	112
  8342  01A1  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8343  01A2  01A2               	clrf	DATAEE_WriteByte@bData
  8344  01A3  3183  234E  3181   	fcall	_DATAEE_WriteByte
  8345                           
  8346                           ;EPROMlib.c: 40:     DATAEE_WriteByte(0x7099 + 28, 0x5);
  8347  01A6  30B5               	movlw	181
  8348  01A7  0020               	movlb	0	; select bank0
  8349  01A8  00A0               	movwf	DATAEE_WriteByte@bAdd
  8350  01A9  3070               	movlw	112
  8351  01AA  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8352  01AB  3005               	movlw	5
  8353  01AC  00A4               	movwf	??_initializeEPROM
  8354  01AD  0824               	movf	??_initializeEPROM,w
  8355  01AE  00A2               	movwf	DATAEE_WriteByte@bData
  8356  01AF  3183  234E  3181   	fcall	_DATAEE_WriteByte
  8357                           
  8358                           ;EPROMlib.c: 41:     DATAEE_WriteByte(0x7099 + 30, 0x3);
  8359  01B2  30B7               	movlw	183
  8360  01B3  0020               	movlb	0	; select bank0
  8361  01B4  00A0               	movwf	DATAEE_WriteByte@bAdd
  8362  01B5  3070               	movlw	112
  8363  01B6  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8364  01B7  3003               	movlw	3
  8365  01B8  00A4               	movwf	??_initializeEPROM
  8366  01B9  0824               	movf	??_initializeEPROM,w
  8367  01BA  00A2               	movwf	DATAEE_WriteByte@bData
  8368  01BB  3183  234E  3181   	fcall	_DATAEE_WriteByte
  8369                           
  8370                           ;EPROMlib.c: 42:     DATAEE_WriteByte(0x7099 + 38, 0x19);
  8371  01BE  30BF               	movlw	191
  8372  01BF  0020               	movlb	0	; select bank0
  8373  01C0  00A0               	movwf	DATAEE_WriteByte@bAdd
  8374  01C1  3070               	movlw	112
  8375  01C2  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8376  01C3  3019               	movlw	25
  8377  01C4  00A4               	movwf	??_initializeEPROM
  8378  01C5  0824               	movf	??_initializeEPROM,w
  8379  01C6  00A2               	movwf	DATAEE_WriteByte@bData
  8380  01C7  3183  234E  3181   	fcall	_DATAEE_WriteByte
  8381                           
  8382                           ;EPROMlib.c: 43:     DATAEE_WriteByte(0x7099 + 40, 0x2);
  8383  01CA  30C1               	movlw	193
  8384  01CB  0020               	movlb	0	; select bank0
  8385  01CC  00A0               	movwf	DATAEE_WriteByte@bAdd
  8386  01CD  3070               	movlw	112
  8387  01CE  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8388  01CF  3002               	movlw	2
  8389  01D0  00A4               	movwf	??_initializeEPROM
  8390  01D1  0824               	movf	??_initializeEPROM,w
  8391  01D2  00A2               	movwf	DATAEE_WriteByte@bData
  8392  01D3  3183  234E  3181   	fcall	_DATAEE_WriteByte
  8393                           
  8394                           ;EPROMlib.c: 44:     DATAEE_WriteByte(0x7099 + 48, 0x0);
  8395  01D6  30C9               	movlw	201
  8396  01D7  0020               	movlb	0	; select bank0
  8397  01D8  00A0               	movwf	DATAEE_WriteByte@bAdd
  8398  01D9  3070               	movlw	112
  8399  01DA  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8400  01DB  01A2               	clrf	DATAEE_WriteByte@bData
  8401  01DC  3183  234E  3181   	fcall	_DATAEE_WriteByte
  8402                           
  8403                           ;EPROMlib.c: 45:     DATAEE_WriteByte(0x7099 + 50, 0xC);
  8404  01DF  30CB               	movlw	203
  8405  01E0  0020               	movlb	0	; select bank0
  8406  01E1  00A0               	movwf	DATAEE_WriteByte@bAdd
  8407  01E2  3070               	movlw	112
  8408  01E3  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8409  01E4  300C               	movlw	12
  8410  01E5  00A4               	movwf	??_initializeEPROM
  8411  01E6  0824               	movf	??_initializeEPROM,w
  8412  01E7  00A2               	movwf	DATAEE_WriteByte@bData
  8413  01E8  3183  234E  3181   	fcall	_DATAEE_WriteByte
  8414                           
  8415                           ;EPROMlib.c: 46:     DATAEE_WriteByte(0x7099 + 58, 0x0);
  8416  01EB  30D3               	movlw	211
  8417  01EC  0020               	movlb	0	; select bank0
  8418  01ED  00A0               	movwf	DATAEE_WriteByte@bAdd
  8419  01EE  3070               	movlw	112
  8420  01EF  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8421  01F0  01A2               	clrf	DATAEE_WriteByte@bData
  8422  01F1  3183  234E  3181   	fcall	_DATAEE_WriteByte
  8423                           
  8424                           ;EPROMlib.c: 47:     DATAEE_WriteByte(0x7099 + 60, 0XE3);
  8425  01F4  30D5               	movlw	213
  8426  01F5  0020               	movlb	0	; select bank0
  8427  01F6  00A0               	movwf	DATAEE_WriteByte@bAdd
  8428  01F7  3070               	movlw	112
  8429  01F8  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8430  01F9  30E3               	movlw	227
  8431  01FA  00A4               	movwf	??_initializeEPROM
  8432  01FB  0824               	movf	??_initializeEPROM,w
  8433  01FC  00A2               	movwf	DATAEE_WriteByte@bData
  8434  01FD  3183  234E  3181   	fcall	_DATAEE_WriteByte
  8435  0200                     l1293:
  8436  0200  0008               	return
  8437  0201                     __end_of_initializeEPROM:
  8438                           
  8439                           	psect	text7
  8440  034E                     __ptext7:	
  8441 ;; *************** function _DATAEE_WriteByte *****************
  8442 ;; Defined at:
  8443 ;;		line 180 in file "mcc_generated_files/memory.c"
  8444 ;; Parameters:    Size  Location     Type
  8445 ;;  bAdd            2    0[BANK0 ] unsigned short 
  8446 ;;  bData           1    2[BANK0 ] unsigned char 
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;  GIEBitValue     1    3[BANK0 ] unsigned char 
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  1    wreg      void 
  8451 ;; Registers used:
  8452 ;;		wreg, status,2, status,0
  8453 ;; Tracked objects:
  8454 ;;		On entry : 0/0
  8455 ;;		On exit  : 0/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8458 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8459 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8461 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8462 ;;Total ram usage:        4 bytes
  8463 ;; Hardware stack levels used: 1
  8464 ;; Hardware stack levels required when called: 5
  8465 ;; This function calls:
  8466 ;;		Nothing
  8467 ;; This function is called by:
  8468 ;;		_initializeEPROM
  8469 ;;		_storeEPROMBuild
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           
  8474                           ;psect for function _DATAEE_WriteByte
  8475  034E                     _DATAEE_WriteByte:
  8476  034E                     l3570:	
  8477                           ;incstack = 0
  8478                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  8479                           
  8480                           
  8481                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
  8482  034E  3000               	movlw	0
  8483  034F  1B8B               	btfsc	11,7	;volatile
  8484  0350  3001               	movlw	1
  8485  0351  0020               	movlb	0	; select bank0
  8486  0352  00A3               	movwf	DATAEE_WriteByte@GIEBitValue
  8487                           
  8488                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
  8489  0353  0821               	movf	DATAEE_WriteByte@bAdd+1,w
  8490  0354  0030               	movlb	16	; select bank16
  8491  0355  009B               	movwf	27	;volatile
  8492  0356                     l3572:
  8493                           
  8494                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
  8495  0356  0020               	movlb	0	; select bank0
  8496  0357  0820               	movf	DATAEE_WriteByte@bAdd,w
  8497  0358  0030               	movlb	16	; select bank16
  8498  0359  009A               	movwf	26	;volatile
  8499  035A                     l3574:
  8500                           
  8501                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
  8502  035A  0020               	movlb	0	; select bank0
  8503  035B  0822               	movf	DATAEE_WriteByte@bData,w
  8504  035C  0030               	movlb	16	; select bank16
  8505  035D  009C               	movwf	28	;volatile
  8506  035E                     l3576:
  8507                           
  8508                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
  8509  035E  171E               	bsf	30,6	;volsfr
  8510  035F                     l3578:
  8511                           
  8512                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
  8513  035F  151E               	bsf	30,2	;volsfr
  8514  0360                     l3580:
  8515                           
  8516                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
  8517  0360  138B               	bcf	11,7	;volatile
  8518  0361                     l3582:
  8519                           
  8520                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
  8521  0361  3055               	movlw	85
  8522  0362  009F               	movwf	31	;volsfr
  8523  0363                     l3584:
  8524                           
  8525                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
  8526  0363  30AA               	movlw	170
  8527  0364  009F               	movwf	31	;volsfr
  8528  0365                     l3586:
  8529                           
  8530                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
  8531  0365  149E               	bsf	30,1	;volsfr
  8532  0366                     l767:	
  8533                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
  8534                           
  8535                           
  8536                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
  8537  0366  189E               	btfsc	30,1	;volsfr
  8538  0367  2B69               	goto	u1421
  8539  0368  2B6A               	goto	u1420
  8540  0369                     u1421:
  8541  0369  2B66               	goto	l767
  8542  036A                     u1420:
  8543  036A                     l769:
  8544                           
  8545                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
  8546  036A  111E               	bcf	30,2	;volsfr
  8547  036B                     l3588:
  8548                           
  8549                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
  8550  036B  0020               	movlb	0	; select bank0
  8551  036C  0C23               	rrf	DATAEE_WriteByte@GIEBitValue,w
  8552  036D  1C03               	skipc
  8553  036E  138B               	bcf	11,7	;volatile
  8554  036F  1803               	skipnc
  8555  0370  178B               	bsf	11,7	;volatile
  8556  0371                     l770:
  8557  0371  0008               	return
  8558  0372                     __end_of_DATAEE_WriteByte:
  8559                           
  8560                           	psect	text8
  8561  03C7                     __ptext8:	
  8562 ;; *************** function _SYSTEM_Initialize *****************
  8563 ;; Defined at:
  8564 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;		None
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;		None
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  1    wreg      void 
  8571 ;; Registers used:
  8572 ;;		wreg, status,2, status,0, pclath, cstack
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8582 ;;Total ram usage:        0 bytes
  8583 ;; Hardware stack levels used: 1
  8584 ;; Hardware stack levels required when called: 7
  8585 ;; This function calls:
  8586 ;;		_ADCC_Initialize
  8587 ;;		_I2C1_Initialize
  8588 ;;		_OSCILLATOR_Initialize
  8589 ;;		_PIN_MANAGER_Initialize
  8590 ;;		_PMD_Initialize
  8591 ;;		_TMR1_Initialize
  8592 ;; This function is called by:
  8593 ;;		_main
  8594 ;; This function uses a non-reentrant model
  8595 ;;
  8596                           
  8597                           
  8598                           ;psect for function _SYSTEM_Initialize
  8599  03C7                     _SYSTEM_Initialize:
  8600  03C7                     l3624:	
  8601                           ;incstack = 0
  8602                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8603                           
  8604                           
  8605                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8606  03C7  3184  2451  3183   	fcall	_PMD_Initialize
  8607  03CA                     l3626:
  8608                           
  8609                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  8610  03CA  3184  243E  3183   	fcall	_I2C1_Initialize
  8611  03CD                     l3628:
  8612                           
  8613                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8614  03CD  3182  22AA  3183   	fcall	_PIN_MANAGER_Initialize
  8615  03D0                     l3630:
  8616                           
  8617                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8618  03D0  3184  2448  3183   	fcall	_OSCILLATOR_Initialize
  8619  03D3                     l3632:
  8620                           
  8621                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  8622  03D3  3183  23B0  3183   	fcall	_ADCC_Initialize
  8623  03D6                     l3634:
  8624                           
  8625                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  8626  03D6  3183  2392  3183   	fcall	_TMR1_Initialize
  8627  03D9                     l476:
  8628  03D9  0008               	return
  8629  03DA                     __end_of_SYSTEM_Initialize:
  8630                           
  8631                           	psect	text9
  8632  0392                     __ptext9:	
  8633 ;; *************** function _TMR1_Initialize *****************
  8634 ;; Defined at:
  8635 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;		None
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;		None
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  1    wreg      void 
  8642 ;; Registers used:
  8643 ;;		wreg, status,2, status,0, pclath, cstack
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;Total ram usage:        0 bytes
  8654 ;; Hardware stack levels used: 1
  8655 ;; Hardware stack levels required when called: 6
  8656 ;; This function calls:
  8657 ;;		_TMR1_SetInterruptHandler
  8658 ;; This function is called by:
  8659 ;;		_SYSTEM_Initialize
  8660 ;; This function uses a non-reentrant model
  8661 ;;
  8662                           
  8663                           
  8664                           ;psect for function _TMR1_Initialize
  8665  0392                     _TMR1_Initialize:
  8666  0392                     l3552:	
  8667                           ;incstack = 0
  8668                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8669                           
  8670                           
  8671                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  8672  0392  0024               	movlb	4	; select bank4
  8673  0393  018F               	clrf	15	;volatile
  8674                           
  8675                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  8676  0394  0190               	clrf	16	;volatile
  8677  0395                     l3554:
  8678                           
  8679                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
  8680  0395  3004               	movlw	4
  8681  0396  0091               	movwf	17	;volatile
  8682  0397                     l3556:
  8683                           
  8684                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x86;
  8685  0397  3086               	movlw	134
  8686  0398  008D               	movwf	13	;volatile
  8687  0399                     l3558:
  8688                           
  8689                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xE8;
  8690  0399  30E8               	movlw	232
  8691  039A  008C               	movwf	12	;volatile
  8692  039B                     l3560:
  8693                           
  8694                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
  8695  039B  002E               	movlb	14	; select bank14
  8696  039C  1010               	bcf	16,0	;volatile
  8697  039D                     l3562:
  8698                           
  8699                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8700  039D  0024               	movlb	4	; select bank4
  8701  039E  080D               	movf	13,w	;volatile
  8702  039F  00F8               	movwf	_timer1ReloadVal+1	;volatile
  8703  03A0  080C               	movf	12,w	;volatile
  8704  03A1  00F7               	movwf	_timer1ReloadVal	;volatile
  8705  03A2                     l3564:
  8706                           
  8707                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  8708  03A2  002E               	movlb	14	; select bank14
  8709  03A3  141A               	bsf	26,0	;volatile
  8710  03A4                     l3566:
  8711                           
  8712                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  8713  03A4  3065               	movlw	low _TMR1_DefaultInterruptHandler
  8714  03A5  0020               	movlb	0	; select bank0
  8715  03A6  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  8716  03A7  3004               	movlw	high _TMR1_DefaultInterruptHandler
  8717  03A8  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  8718  03A9  3184  245F  3183   	fcall	_TMR1_SetInterruptHandler
  8719  03AC                     l3568:
  8720                           
  8721                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x01;
  8722  03AC  3001               	movlw	1
  8723  03AD  0024               	movlb	4	; select bank4
  8724  03AE  008E               	movwf	14	;volatile
  8725  03AF                     l532:
  8726  03AF  0008               	return
  8727  03B0                     __end_of_TMR1_Initialize:
  8728                           
  8729                           	psect	text10
  8730  045F                     __ptext10:	
  8731 ;; *************** function _TMR1_SetInterruptHandler *****************
  8732 ;; Defined at:
  8733 ;;		line 185 in file "mcc_generated_files/tmr1.c"
  8734 ;; Parameters:    Size  Location     Type
  8735 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8736 ;;		 -> timerInterrupt(1), TMR1_DefaultInterruptHandler(1), 
  8737 ;; Auto vars:     Size  Location     Type
  8738 ;;		None
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  1    wreg      void 
  8741 ;; Registers used:
  8742 ;;		wreg
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8748 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8751 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8752 ;;Total ram usage:        2 bytes
  8753 ;; Hardware stack levels used: 1
  8754 ;; Hardware stack levels required when called: 5
  8755 ;; This function calls:
  8756 ;;		Nothing
  8757 ;; This function is called by:
  8758 ;;		_TMR1_Initialize
  8759 ;;		_main
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           
  8764                           ;psect for function _TMR1_SetInterruptHandler
  8765  045F                     _TMR1_SetInterruptHandler:
  8766  045F                     l3550:	
  8767                           ;incstack = 0
  8768                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  8769                           
  8770                           
  8771                           ;mcc_generated_files/tmr1.c: 186:     TMR1_InterruptHandler = InterruptHandler;
  8772  045F  0020               	movlb	0	; select bank0
  8773  0460  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  8774  0461  00F6               	movwf	_TMR1_InterruptHandler+1
  8775  0462  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  8776  0463  00F5               	movwf	_TMR1_InterruptHandler
  8777  0464                     l565:
  8778  0464  0008               	return
  8779  0465                     __end_of_TMR1_SetInterruptHandler:
  8780                           
  8781                           	psect	text11
  8782  0451                     __ptext11:	
  8783 ;; *************** function _PMD_Initialize *****************
  8784 ;; Defined at:
  8785 ;;		line 74 in file "mcc_generated_files/mcc.c"
  8786 ;; Parameters:    Size  Location     Type
  8787 ;;		None
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;		None
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  1    wreg      void 
  8792 ;; Registers used:
  8793 ;;		status,2
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8803 ;;Total ram usage:        0 bytes
  8804 ;; Hardware stack levels used: 1
  8805 ;; Hardware stack levels required when called: 5
  8806 ;; This function calls:
  8807 ;;		Nothing
  8808 ;; This function is called by:
  8809 ;;		_SYSTEM_Initialize
  8810 ;; This function uses a non-reentrant model
  8811 ;;
  8812                           
  8813                           
  8814                           ;psect for function _PMD_Initialize
  8815  0451                     _PMD_Initialize:
  8816  0451                     l3312:	
  8817                           ;incstack = 0
  8818                           ; Regs used in _PMD_Initialize: [status,2]
  8819                           
  8820                           
  8821                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  8822  0451  002F               	movlb	15	; select bank15
  8823  0452  0196               	clrf	22	;volatile
  8824                           
  8825                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  8826  0453  0197               	clrf	23	;volatile
  8827                           
  8828                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  8829  0454  0198               	clrf	24	;volatile
  8830                           
  8831                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  8832  0455  0199               	clrf	25	;volatile
  8833                           
  8834                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  8835  0456  019A               	clrf	26	;volatile
  8836                           
  8837                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  8838  0457  019B               	clrf	27	;volatile
  8839  0458                     l482:
  8840  0458  0008               	return
  8841  0459                     __end_of_PMD_Initialize:
  8842                           
  8843                           	psect	text12
  8844  02AA                     __ptext12:	
  8845 ;; *************** function _PIN_MANAGER_Initialize *****************
  8846 ;; Defined at:
  8847 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8848 ;; Parameters:    Size  Location     Type
  8849 ;;		None
  8850 ;; Auto vars:     Size  Location     Type
  8851 ;;		None
  8852 ;; Return value:  Size  Location     Type
  8853 ;;                  1    wreg      void 
  8854 ;; Registers used:
  8855 ;;		wreg, status,2
  8856 ;; Tracked objects:
  8857 ;;		On entry : 0/0
  8858 ;;		On exit  : 0/0
  8859 ;;		Unchanged: 0/0
  8860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8865 ;;Total ram usage:        0 bytes
  8866 ;; Hardware stack levels used: 1
  8867 ;; Hardware stack levels required when called: 5
  8868 ;; This function calls:
  8869 ;;		Nothing
  8870 ;; This function is called by:
  8871 ;;		_SYSTEM_Initialize
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           
  8875                           
  8876                           ;psect for function _PIN_MANAGER_Initialize
  8877  02AA                     _PIN_MANAGER_Initialize:
  8878  02AA                     l3262:	
  8879                           ;incstack = 0
  8880                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8881                           
  8882                           
  8883                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8884  02AA  0020               	movlb	0	; select bank0
  8885  02AB  019A               	clrf	26	;volatile
  8886                           
  8887                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  8888  02AC  0199               	clrf	25	;volatile
  8889                           
  8890                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  8891  02AD  0196               	clrf	22	;volatile
  8892                           
  8893                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8894  02AE  0197               	clrf	23	;volatile
  8895                           
  8896                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8897  02AF  0198               	clrf	24	;volatile
  8898  02B0                     l3264:
  8899                           
  8900                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  8901  02B0  3007               	movlw	7
  8902  02B1  0095               	movwf	21	;volatile
  8903  02B2                     l3266:
  8904                           
  8905                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
  8906  02B2  300F               	movlw	15
  8907  02B3  0091               	movwf	17	;volatile
  8908  02B4                     l3268:
  8909                           
  8910                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  8911  02B4  30FF               	movlw	255
  8912  02B5  0092               	movwf	18	;volatile
  8913  02B6                     l3270:
  8914                           
  8915                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  8916  02B6  30FF               	movlw	255
  8917  02B7  0093               	movwf	19	;volatile
  8918  02B8                     l3272:
  8919                           
  8920                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  8921  02B8  30FF               	movlw	255
  8922  02B9  0094               	movwf	20	;volatile
  8923  02BA                     l3274:
  8924                           
  8925                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  8926  02BA  30FF               	movlw	255
  8927  02BB  003E               	movlb	30	; select bank30
  8928  02BC  00D9               	movwf	89	;volatile
  8929  02BD                     l3276:
  8930                           
  8931                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
  8932  02BD  30C7               	movlw	199
  8933  02BE  00CE               	movwf	78	;volatile
  8934  02BF                     l3278:
  8935                           
  8936                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
  8937  02BF  30EF               	movlw	239
  8938  02C0  00C3               	movwf	67	;volatile
  8939  02C1                     l3280:
  8940                           
  8941                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  8942  02C1  3007               	movlw	7
  8943  02C2  00E4               	movwf	100	;volatile
  8944  02C3                     l3282:
  8945                           
  8946                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x0F;
  8947  02C3  300F               	movlw	15
  8948  02C4  00B8               	movwf	56	;volatile
  8949                           
  8950                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  8951  02C5  01DA               	clrf	90	;volatile
  8952                           
  8953                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  8954  02C6  01E5               	clrf	101	;volatile
  8955                           
  8956                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  8957  02C7  01C4               	clrf	68	;volatile
  8958                           
  8959                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  8960  02C8  01B9               	clrf	57	;volatile
  8961                           
  8962                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  8963  02C9  01CF               	clrf	79	;volatile
  8964                           
  8965                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  8966  02CA  01E6               	clrf	102	;volatile
  8967                           
  8968                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  8969  02CB  01BA               	clrf	58	;volatile
  8970                           
  8971                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  8972  02CC  01C5               	clrf	69	;volatile
  8973                           
  8974                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  8975  02CD  01D0               	clrf	80	;volatile
  8976                           
  8977                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  8978  02CE  01DB               	clrf	91	;volatile
  8979  02CF                     l3284:
  8980                           
  8981                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  8982  02CF  30FF               	movlw	255
  8983  02D0  00BB               	movwf	59	;volatile
  8984  02D1                     l3286:
  8985                           
  8986                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  8987  02D1  30FF               	movlw	255
  8988  02D2  00C6               	movwf	70	;volatile
  8989  02D3                     l3288:
  8990                           
  8991                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  8992  02D3  30FF               	movlw	255
  8993  02D4  00D1               	movwf	81	;volatile
  8994  02D5                     l3290:
  8995                           
  8996                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  8997  02D5  30FF               	movlw	255
  8998  02D6  00DC               	movwf	92	;volatile
  8999  02D7                     l3292:
  9000                           
  9001                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  9002  02D7  3007               	movlw	7
  9003  02D8  00E7               	movwf	103	;volatile
  9004  02D9                     l3294:
  9005                           
  9006                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  9007  02D9  30FF               	movlw	255
  9008  02DA  00BC               	movwf	60	;volatile
  9009  02DB                     l3296:
  9010                           
  9011                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  9012  02DB  30FF               	movlw	255
  9013  02DC  00C7               	movwf	71	;volatile
  9014  02DD                     l3298:
  9015                           
  9016                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  9017  02DD  30FF               	movlw	255
  9018  02DE  00D2               	movwf	82	;volatile
  9019  02DF                     l3300:
  9020                           
  9021                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  9022  02DF  30FF               	movlw	255
  9023  02E0  00DD               	movwf	93	;volatile
  9024  02E1                     l3302:
  9025                           
  9026                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
  9027  02E1  3007               	movlw	7
  9028  02E2  00E8               	movwf	104	;volatile
  9029  02E3                     l3304:
  9030                           
  9031                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
  9032  02E3  3013               	movlw	19
  9033  02E4  003D               	movlb	29	; select bank29
  9034  02E5  00C5               	movwf	69	;volatile
  9035  02E6                     l3306:
  9036                           
  9037                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x14;
  9038  02E6  3014               	movlw	20
  9039  02E7  003E               	movlb	30	; select bank30
  9040  02E8  00A3               	movwf	35	;volatile
  9041  02E9                     l3308:
  9042                           
  9043                           ;mcc_generated_files/pin_manager.c: 129:     RC4PPS = 0x15;
  9044  02E9  3015               	movlw	21
  9045  02EA  00A4               	movwf	36	;volatile
  9046  02EB                     l3310:
  9047                           
  9048                           ;mcc_generated_files/pin_manager.c: 130:     SSP1DATPPS = 0x14;
  9049  02EB  3014               	movlw	20
  9050  02EC  003D               	movlb	29	; select bank29
  9051  02ED  00C6               	movwf	70	;volatile
  9052  02EE                     l436:
  9053  02EE  0008               	return
  9054  02EF                     __end_of_PIN_MANAGER_Initialize:
  9055                           
  9056                           	psect	text13
  9057  0448                     __ptext13:	
  9058 ;; *************** function _OSCILLATOR_Initialize *****************
  9059 ;; Defined at:
  9060 ;;		line 60 in file "mcc_generated_files/mcc.c"
  9061 ;; Parameters:    Size  Location     Type
  9062 ;;		None
  9063 ;; Auto vars:     Size  Location     Type
  9064 ;;		None
  9065 ;; Return value:  Size  Location     Type
  9066 ;;                  1    wreg      void 
  9067 ;; Registers used:
  9068 ;;		wreg, status,2
  9069 ;; Tracked objects:
  9070 ;;		On entry : 0/0
  9071 ;;		On exit  : 0/0
  9072 ;;		Unchanged: 0/0
  9073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9078 ;;Total ram usage:        0 bytes
  9079 ;; Hardware stack levels used: 1
  9080 ;; Hardware stack levels required when called: 5
  9081 ;; This function calls:
  9082 ;;		Nothing
  9083 ;; This function is called by:
  9084 ;;		_SYSTEM_Initialize
  9085 ;; This function uses a non-reentrant model
  9086 ;;
  9087                           
  9088                           
  9089                           ;psect for function _OSCILLATOR_Initialize
  9090  0448                     _OSCILLATOR_Initialize:
  9091  0448                     l3322:	
  9092                           ;incstack = 0
  9093                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9094                           
  9095                           
  9096                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
  9097  0448  3062               	movlw	98
  9098  0449  0031               	movlb	17	; select bank17
  9099  044A  008D               	movwf	13	;volatile
  9100  044B                     l3324:
  9101                           
  9102                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  9103  044B  018F               	clrf	15	;volatile
  9104  044C                     l3326:
  9105                           
  9106                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  9107  044C  0191               	clrf	17	;volatile
  9108                           
  9109                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x02;
  9110  044D  3002               	movlw	2
  9111  044E  0093               	movwf	19	;volatile
  9112  044F                     l3328:
  9113                           
  9114                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  9115  044F  0192               	clrf	18	;volatile
  9116  0450                     l479:
  9117  0450  0008               	return
  9118  0451                     __end_of_OSCILLATOR_Initialize:
  9119                           
  9120                           	psect	text14
  9121  043E                     __ptext14:	
  9122 ;; *************** function _I2C1_Initialize *****************
  9123 ;; Defined at:
  9124 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;		None
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;		None
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  1    wreg      void 
  9131 ;; Registers used:
  9132 ;;		wreg, status,2
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 0/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9142 ;;Total ram usage:        0 bytes
  9143 ;; Hardware stack levels used: 1
  9144 ;; Hardware stack levels required when called: 5
  9145 ;; This function calls:
  9146 ;;		Nothing
  9147 ;; This function is called by:
  9148 ;;		_SYSTEM_Initialize
  9149 ;; This function uses a non-reentrant model
  9150 ;;
  9151                           
  9152                           
  9153                           ;psect for function _I2C1_Initialize
  9154  043E                     _I2C1_Initialize:
  9155  043E                     l3314:	
  9156                           ;incstack = 0
  9157                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  9158                           
  9159                           
  9160                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
  9161  043E  3080               	movlw	128
  9162  043F  0023               	movlb	3	; select bank3
  9163  0440  008F               	movwf	15	;volatile
  9164                           
  9165                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
  9166  0441  3008               	movlw	8
  9167  0442  0090               	movwf	16	;volatile
  9168  0443                     l3316:
  9169                           
  9170                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
  9171  0443  0191               	clrf	17	;volatile
  9172  0444                     l3318:
  9173                           
  9174                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x03;
  9175  0444  3003               	movlw	3
  9176  0445  008D               	movwf	13	;volatile
  9177  0446                     l3320:
  9178                           
  9179                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  9180  0446  1290               	bcf	16,5	;volatile
  9181  0447                     l878:
  9182  0447  0008               	return
  9183  0448                     __end_of_I2C1_Initialize:
  9184                           
  9185                           	psect	text15
  9186  03B0                     __ptext15:	
  9187 ;; *************** function _ADCC_Initialize *****************
  9188 ;; Defined at:
  9189 ;;		line 63 in file "mcc_generated_files/adcc.c"
  9190 ;; Parameters:    Size  Location     Type
  9191 ;;		None
  9192 ;; Auto vars:     Size  Location     Type
  9193 ;;		None
  9194 ;; Return value:  Size  Location     Type
  9195 ;;                  1    wreg      void 
  9196 ;; Registers used:
  9197 ;;		wreg, status,2
  9198 ;; Tracked objects:
  9199 ;;		On entry : 0/0
  9200 ;;		On exit  : 0/0
  9201 ;;		Unchanged: 0/0
  9202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9207 ;;Total ram usage:        0 bytes
  9208 ;; Hardware stack levels used: 1
  9209 ;; Hardware stack levels required when called: 5
  9210 ;; This function calls:
  9211 ;;		Nothing
  9212 ;; This function is called by:
  9213 ;;		_SYSTEM_Initialize
  9214 ;; This function uses a non-reentrant model
  9215 ;;
  9216                           
  9217                           
  9218                           ;psect for function _ADCC_Initialize
  9219  03B0                     _ADCC_Initialize:
  9220  03B0                     l3330:	
  9221                           ;incstack = 0
  9222                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  9223                           
  9224                           
  9225                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
  9226  03B0  0022               	movlb	2	; select bank2
  9227  03B1  018E               	clrf	14	;volatile
  9228                           
  9229                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
  9230  03B2  018F               	clrf	15	;volatile
  9231                           
  9232                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
  9233  03B3  0190               	clrf	16	;volatile
  9234                           
  9235                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
  9236  03B4  0191               	clrf	17	;volatile
  9237                           
  9238                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
  9239  03B5  0192               	clrf	18	;volatile
  9240                           
  9241                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
  9242  03B6  0193               	clrf	19	;volatile
  9243                           
  9244                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
  9245  03B7  018D               	clrf	13	;volatile
  9246                           
  9247                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
  9248  03B8  0021               	movlb	1	; select bank1
  9249  03B9  019E               	clrf	30	;volatile
  9250                           
  9251                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
  9252  03BA  019B               	clrf	27	;volatile
  9253                           
  9254                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
  9255  03BB  019C               	clrf	28	;volatile
  9256                           
  9257                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
  9258  03BC  0194               	clrf	20	;volatile
  9259                           
  9260                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
  9261  03BD  0195               	clrf	21	;volatile
  9262                           
  9263                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
  9264  03BE  0196               	clrf	22	;volatile
  9265                           
  9266                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
  9267  03BF  0197               	clrf	23	;volatile
  9268                           
  9269                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
  9270  03C0  019A               	clrf	26	;volatile
  9271                           
  9272                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
  9273  03C1  0199               	clrf	25	;volatile
  9274                           
  9275                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x00;
  9276  03C2  0198               	clrf	24	;volatile
  9277  03C3                     l3332:
  9278                           
  9279                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
  9280  03C3  3084               	movlw	132
  9281  03C4  0093               	movwf	19	;volatile
  9282  03C5                     l3334:
  9283                           
  9284                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
  9285  03C5  019D               	clrf	29	;volatile
  9286  03C6                     l643:
  9287  03C6  0008               	return
  9288  03C7                     __end_of_ADCC_Initialize:
  9289                           
  9290                           	psect	text16
  9291  0433                     __ptext16:	
  9292 ;; *************** function _S1 *****************
  9293 ;; Defined at:
  9294 ;;		line 61 in file "main.c"
  9295 ;; Parameters:    Size  Location     Type
  9296 ;;		None
  9297 ;; Auto vars:     Size  Location     Type
  9298 ;;		None
  9299 ;; Return value:  Size  Location     Type
  9300 ;;                  1    wreg      void 
  9301 ;; Registers used:
  9302 ;;		None
  9303 ;; Tracked objects:
  9304 ;;		On entry : 0/0
  9305 ;;		On exit  : 0/0
  9306 ;;		Unchanged: 0/0
  9307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9312 ;;Total ram usage:        0 bytes
  9313 ;; Hardware stack levels used: 1
  9314 ;; Hardware stack levels required when called: 5
  9315 ;; This function calls:
  9316 ;;		Nothing
  9317 ;; This function is called by:
  9318 ;;		_main
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322                           
  9323                           ;psect for function _S1
  9324  0433                     _S1:
  9325  0433                     l3454:	
  9326                           ;incstack = 0
  9327                           ; Regs used in _S1: []
  9328                           
  9329                           
  9330                           ;main.c: 62:     if(PORTBbits.RB4==0 && PORTAbits.RA6==1){
  9331  0433  0020               	movlb	0	; select bank0
  9332  0434  1A0D               	btfsc	13,4	;volatile
  9333  0435  2C37               	goto	u1371
  9334  0436  2C38               	goto	u1370
  9335  0437                     u1371:
  9336  0437  2C3D               	goto	l1150
  9337  0438                     u1370:
  9338  0438                     l3456:
  9339  0438  1F0C               	btfss	12,6	;volatile
  9340  0439  2C3B               	goto	u1381
  9341  043A  2C3C               	goto	u1380
  9342  043B                     u1381:
  9343  043B  2C3D               	goto	l1150
  9344  043C                     u1380:
  9345  043C                     l1148:	
  9346                           ;main.c: 63:         do { LATAbits.LATA6 = 0; } while(0);
  9347                           
  9348  043C  1316               	bcf	22,6	;volatile
  9349  043D                     l1150:
  9350  043D  0008               	return
  9351  043E                     __end_of_S1:
  9352                           
  9353                           	psect	text17
  9354  040D                     __ptext17:	
  9355 ;; *************** function _OpenI2C *****************
  9356 ;; Defined at:
  9357 ;;		line 26 in file "I2C/i2c.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;		None
  9360 ;; Auto vars:     Size  Location     Type
  9361 ;;		None
  9362 ;; Return value:  Size  Location     Type
  9363 ;;                  1    wreg      void 
  9364 ;; Registers used:
  9365 ;;		wreg, status,2
  9366 ;; Tracked objects:
  9367 ;;		On entry : 0/0
  9368 ;;		On exit  : 0/0
  9369 ;;		Unchanged: 0/0
  9370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9375 ;;Total ram usage:        0 bytes
  9376 ;; Hardware stack levels used: 1
  9377 ;; Hardware stack levels required when called: 5
  9378 ;; This function calls:
  9379 ;;		Nothing
  9380 ;; This function is called by:
  9381 ;;		_main
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385                           
  9386                           ;psect for function _OpenI2C
  9387  040D                     _OpenI2C:
  9388  040D                     l3426:	
  9389                           ;incstack = 0
  9390                           ; Regs used in _OpenI2C: [wreg+status,2]
  9391                           
  9392                           
  9393                           ;I2C/i2c.c: 28:   SSP1STAT = 0x80;
  9394  040D  3080               	movlw	128
  9395  040E  0023               	movlb	3	; select bank3
  9396  040F  008F               	movwf	15	;volatile
  9397                           
  9398                           ;I2C/i2c.c: 29:   SSP1CON1 = 0x08;
  9399  0410  3008               	movlw	8
  9400  0411  0090               	movwf	16	;volatile
  9401  0412                     l3428:
  9402                           
  9403                           ;I2C/i2c.c: 30:   SSP1CON2 = 0x00;
  9404  0412  0191               	clrf	17	;volatile
  9405  0413                     l3430:
  9406                           
  9407                           ;I2C/i2c.c: 31:   SSP1ADD = 0x03;
  9408  0413  3003               	movlw	3
  9409  0414  008D               	movwf	13	;volatile
  9410  0415                     l3432:
  9411                           
  9412                           ;I2C/i2c.c: 32:   SSP1CON1bits.SSPEN = 1;
  9413  0415  1690               	bsf	16,5	;volatile
  9414  0416                     l3434:
  9415                           
  9416                           ;I2C/i2c.c: 34:   TRISCbits.TRISC3 = 1;
  9417  0416  0020               	movlb	0	; select bank0
  9418  0417  1593               	bsf	19,3	;volatile
  9419  0418                     l3436:
  9420                           
  9421                           ;I2C/i2c.c: 35:   TRISCbits.TRISC4 = 1;
  9422  0418  1613               	bsf	19,4	;volatile
  9423  0419                     l23:
  9424  0419  0008               	return
  9425  041A                     __end_of_OpenI2C:
  9426                           
  9427                           	psect	intentry
  9428  0004                     __pintentry:	
  9429 ;; *************** function _INTERRUPT_InterruptManager *****************
  9430 ;; Defined at:
  9431 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9432 ;; Parameters:    Size  Location     Type
  9433 ;;		None
  9434 ;; Auto vars:     Size  Location     Type
  9435 ;;		None
  9436 ;; Return value:  Size  Location     Type
  9437 ;;                  1    wreg      void 
  9438 ;; Registers used:
  9439 ;;		wreg, status,2, status,0, pclath, cstack
  9440 ;; Tracked objects:
  9441 ;;		On entry : 0/0
  9442 ;;		On exit  : 0/0
  9443 ;;		Unchanged: 0/0
  9444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9449 ;;Total ram usage:        0 bytes
  9450 ;; Hardware stack levels used: 1
  9451 ;; Hardware stack levels required when called: 4
  9452 ;; This function calls:
  9453 ;;		_TMR1_ISR
  9454 ;; This function is called by:
  9455 ;;		Interrupt level 1
  9456 ;; This function uses a non-reentrant model
  9457 ;;
  9458                           
  9459  0004                     _INTERRUPT_InterruptManager:
  9460                           
  9461                           ;incstack = 0
  9462  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  9463                           
  9464                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  9465  0005  3180               	pagesel	$
  9466  0006                     i1l3486:
  9467                           
  9468                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  9469  0006  1F0B               	btfss	11,6	;volatile
  9470  0007  2809               	goto	u139_21
  9471  0008  280A               	goto	u139_20
  9472  0009                     u139_21:
  9473  0009  2816               	goto	i1l499
  9474  000A                     u139_20:
  9475  000A                     i1l3488:
  9476                           
  9477                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
  9478  000A  002E               	movlb	14	; select bank14
  9479  000B  1C1A               	btfss	26,0	;volatile
  9480  000C  280E               	goto	u140_21
  9481  000D  280F               	goto	u140_20
  9482  000E                     u140_21:
  9483  000E  2816               	goto	i1l499
  9484  000F                     u140_20:
  9485  000F                     i1l3490:
  9486  000F  1C10               	btfss	16,0	;volatile
  9487  0010  2812               	goto	u141_21
  9488  0011  2813               	goto	u141_20
  9489  0012                     u141_21:
  9490  0012  2816               	goto	i1l499
  9491  0013                     u141_20:
  9492  0013                     i1l3492:
  9493                           
  9494                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  9495  0013  3184  241A  3180   	fcall	_TMR1_ISR
  9496  0016                     i1l499:	
  9497                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  9498                           
  9499  0016  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9500  0017  0009               	retfie
  9501  0018                     __end_of_INTERRUPT_InterruptManager:
  9502                           
  9503                           	psect	text19
  9504  041A                     __ptext19:	
  9505 ;; *************** function _TMR1_ISR *****************
  9506 ;; Defined at:
  9507 ;;		line 164 in file "mcc_generated_files/tmr1.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;		None
  9510 ;; Auto vars:     Size  Location     Type
  9511 ;;		None
  9512 ;; Return value:  Size  Location     Type
  9513 ;;                  1    wreg      void 
  9514 ;; Registers used:
  9515 ;;		wreg, status,2, status,0, pclath, cstack
  9516 ;; Tracked objects:
  9517 ;;		On entry : 0/0
  9518 ;;		On exit  : 0/0
  9519 ;;		Unchanged: 0/0
  9520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9525 ;;Total ram usage:        0 bytes
  9526 ;; Hardware stack levels used: 1
  9527 ;; Hardware stack levels required when called: 3
  9528 ;; This function calls:
  9529 ;;		_TMR1_CallBack
  9530 ;;		_TMR1_WriteTimer
  9531 ;; This function is called by:
  9532 ;;		_INTERRUPT_InterruptManager
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           
  9537                           ;psect for function _TMR1_ISR
  9538  041A                     _TMR1_ISR:
  9539  041A                     i1l3450:	
  9540                           ;incstack = 0
  9541                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  9542                           
  9543                           
  9544                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
  9545  041A  002E               	movlb	14	; select bank14
  9546  041B  1010               	bcf	16,0	;volatile
  9547  041C                     i1l3452:
  9548                           
  9549                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
  9550  041C  0878               	movf	_timer1ReloadVal+1,w	;volatile
  9551  041D  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  9552  041E  0877               	movf	_timer1ReloadVal,w	;volatile
  9553  041F  00F0               	movwf	TMR1_WriteTimer@timerVal
  9554  0420  3183  23EC  3184   	fcall	_TMR1_WriteTimer
  9555                           
  9556                           ;mcc_generated_files/tmr1.c: 173:     TMR1_CallBack();
  9557  0423  3184  2427  3184   	fcall	_TMR1_CallBack
  9558  0426                     i1l558:
  9559  0426  0008               	return
  9560  0427                     __end_of_TMR1_ISR:
  9561                           
  9562                           	psect	text20
  9563  03EC                     __ptext20:	
  9564 ;; *************** function _TMR1_WriteTimer *****************
  9565 ;; Defined at:
  9566 ;;		line 127 in file "mcc_generated_files/tmr1.c"
  9567 ;; Parameters:    Size  Location     Type
  9568 ;;  timerVal        2    0[COMMON] unsigned short 
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;		None
  9571 ;; Return value:  Size  Location     Type
  9572 ;;                  1    wreg      void 
  9573 ;; Registers used:
  9574 ;;		wreg, status,2
  9575 ;; Tracked objects:
  9576 ;;		On entry : 0/0
  9577 ;;		On exit  : 0/0
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9583 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9584 ;;Total ram usage:        2 bytes
  9585 ;; Hardware stack levels used: 1
  9586 ;; This function calls:
  9587 ;;		Nothing
  9588 ;; This function is called by:
  9589 ;;		_TMR1_ISR
  9590 ;;		_TMR1_Reload
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           
  9594                           
  9595                           ;psect for function _TMR1_WriteTimer
  9596  03EC                     _TMR1_WriteTimer:
  9597  03EC                     i1l3354:	
  9598                           ;incstack = 0
  9599                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  9600                           
  9601                           
  9602                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
  9603  03EC  0024               	movlb	4	; select bank4
  9604  03ED  1D0E               	btfss	14,2	;volatile
  9605  03EE  2BF0               	goto	u134_21
  9606  03EF  2BF1               	goto	u134_20
  9607  03F0                     u134_21:
  9608  03F0  2BF8               	goto	i1l3364
  9609  03F1                     u134_20:
  9610  03F1                     i1l3356:
  9611                           
  9612                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
  9613  03F1  100E               	bcf	14,0	;volatile
  9614  03F2                     i1l3358:
  9615                           
  9616                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (uint8_t)(timerVal >> 8);
  9617  03F2  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9618  03F3  008D               	movwf	13	;volatile
  9619  03F4                     i1l3360:
  9620                           
  9621                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
  9622  03F4  0870               	movf	TMR1_WriteTimer@timerVal,w
  9623  03F5  008C               	movwf	12	;volatile
  9624  03F6                     i1l3362:
  9625                           
  9626                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
  9627  03F6  140E               	bsf	14,0	;volatile
  9628                           
  9629                           ;mcc_generated_files/tmr1.c: 140:     }
  9630  03F7  2BFC               	goto	i1l546
  9631  03F8                     i1l3364:
  9632                           
  9633                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  9634  03F8  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9635  03F9  008D               	movwf	13	;volatile
  9636  03FA                     i1l3366:
  9637                           
  9638                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = (uint8_t)timerVal;
  9639  03FA  0870               	movf	TMR1_WriteTimer@timerVal,w
  9640  03FB  008C               	movwf	12	;volatile
  9641  03FC                     i1l546:
  9642  03FC  0008               	return
  9643  03FD                     __end_of_TMR1_WriteTimer:
  9644                           
  9645                           	psect	text21
  9646  0427                     __ptext21:	
  9647 ;; *************** function _TMR1_CallBack *****************
  9648 ;; Defined at:
  9649 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  9650 ;; Parameters:    Size  Location     Type
  9651 ;;		None
  9652 ;; Auto vars:     Size  Location     Type
  9653 ;;		None
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  1    wreg      void 
  9656 ;; Registers used:
  9657 ;;		wreg, status,2, status,0, pclath, cstack
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/0
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9667 ;;Total ram usage:        0 bytes
  9668 ;; Hardware stack levels used: 1
  9669 ;; Hardware stack levels required when called: 2
  9670 ;; This function calls:
  9671 ;;		Absolute function
  9672 ;;		_TMR1_DefaultInterruptHandler
  9673 ;;		_timerInterrupt
  9674 ;; This function is called by:
  9675 ;;		_TMR1_ISR
  9676 ;; This function uses a non-reentrant model
  9677 ;;
  9678                           
  9679                           
  9680                           ;psect for function _TMR1_CallBack
  9681  0427                     _TMR1_CallBack:
  9682  0427                     i1l3368:	
  9683                           ;incstack = 0
  9684                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  9685                           
  9686                           
  9687                           ;mcc_generated_files/tmr1.c: 179:     if(TMR1_InterruptHandler)
  9688  0427  0875               	movf	_TMR1_InterruptHandler,w
  9689  0428  0476               	iorwf	_TMR1_InterruptHandler+1,w
  9690  0429  1903               	btfsc	3,2
  9691  042A  2C2C               	goto	u135_21
  9692  042B  2C2D               	goto	u135_20
  9693  042C                     u135_21:
  9694  042C  2C32               	goto	i1l562
  9695  042D                     u135_20:
  9696  042D                     i1l3370:
  9697                           
  9698                           ;mcc_generated_files/tmr1.c: 180:     {;mcc_generated_files/tmr1.c: 181:         TMR1_In
      +                          terruptHandler();
  9699  042D  0876               	movf	_TMR1_InterruptHandler+1,w
  9700  042E  008A               	movwf	10
  9701  042F  0875               	movf	_TMR1_InterruptHandler,w
  9702  0430  000A               	callw
  9703  0431  3184               	pagesel	$
  9704  0432                     i1l562:
  9705  0432  0008               	return
  9706  0433                     __end_of_TMR1_CallBack:
  9707                           
  9708                           	psect	text22
  9709  0465                     __ptext22:	
  9710 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  9711 ;; Defined at:
  9712 ;;		line 189 in file "mcc_generated_files/tmr1.c"
  9713 ;; Parameters:    Size  Location     Type
  9714 ;;		None
  9715 ;; Auto vars:     Size  Location     Type
  9716 ;;		None
  9717 ;; Return value:  Size  Location     Type
  9718 ;;                  1    wreg      void 
  9719 ;; Registers used:
  9720 ;;		None
  9721 ;; Tracked objects:
  9722 ;;		On entry : 0/0
  9723 ;;		On exit  : 0/0
  9724 ;;		Unchanged: 0/0
  9725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9730 ;;Total ram usage:        0 bytes
  9731 ;; Hardware stack levels used: 1
  9732 ;; This function calls:
  9733 ;;		Nothing
  9734 ;; This function is called by:
  9735 ;;		_TMR1_Initialize
  9736 ;;		_TMR1_CallBack
  9737 ;; This function uses a non-reentrant model
  9738 ;;
  9739                           
  9740                           
  9741                           ;psect for function _TMR1_DefaultInterruptHandler
  9742  0465                     _TMR1_DefaultInterruptHandler:
  9743  0465                     i1l568:	
  9744                           ;incstack = 0
  9745                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  9746                           
  9747  0465  0008               	return
  9748  0466                     __end_of_TMR1_DefaultInterruptHandler:
  9749                           
  9750                           	psect	text23
  9751  0326                     __ptext23:	
  9752 ;; *************** function _timerInterrupt *****************
  9753 ;; Defined at:
  9754 ;;		line 67 in file "main.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;		None
  9757 ;; Auto vars:     Size  Location     Type
  9758 ;;  value           2    3[COMMON] unsigned short 
  9759 ;; Return value:  Size  Location     Type
  9760 ;;                  1    wreg      void 
  9761 ;; Registers used:
  9762 ;;		wreg, pclath, cstack
  9763 ;; Tracked objects:
  9764 ;;		On entry : 0/0
  9765 ;;		On exit  : 0/0
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9769 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9771 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9772 ;;Total ram usage:        2 bytes
  9773 ;; Hardware stack levels used: 1
  9774 ;; Hardware stack levels required when called: 1
  9775 ;; This function calls:
  9776 ;;		_ADCC_GetSingleConversion
  9777 ;; This function is called by:
  9778 ;;		_main
  9779 ;;		_TMR1_CallBack
  9780 ;; This function uses a non-reentrant model
  9781 ;;
  9782                           
  9783                           
  9784                           ;psect for function _timerInterrupt
  9785  0326                     _timerInterrupt:
  9786  0326                     i1l3254:	
  9787                           ;incstack = 0
  9788                           ; Regs used in _timerInterrupt: [wreg+pclath+cstack]
  9789                           
  9790                           
  9791                           ;main.c: 68:     if(PORTAbits.RA7==0){
  9792  0326  0020               	movlb	0	; select bank0
  9793  0327  1B8C               	btfsc	12,7	;volatile
  9794  0328  2B2A               	goto	u131_21
  9795  0329  2B2B               	goto	u131_20
  9796  032A                     u131_21:
  9797  032A  2B2D               	goto	i1l1157
  9798  032B                     u131_20:
  9799  032B                     i1l1154:	
  9800                           ;main.c: 69:         do { LATAbits.LATA7 = 1; } while(0);
  9801                           
  9802  032B  1796               	bsf	22,7	;volatile
  9803  032C  2B2E               	goto	i1l3256
  9804  032D                     i1l1157:	
  9805                           ;main.c: 71:         do { LATAbits.LATA7 = 0; } while(0);
  9806                           
  9807  032D  1396               	bcf	22,7	;volatile
  9808  032E                     i1l3256:
  9809                           
  9810                           ;main.c: 73:     adc_result_t value = ADCC_GetSingleConversion(channel_ANA0);
  9811  032E  3000               	movlw	0
  9812  032F  3183  23DA  3183   	fcall	_ADCC_GetSingleConversion
  9813  0332  0871               	movf	?_ADCC_GetSingleConversion+1,w
  9814  0333  00F4               	movwf	timerInterrupt@value+1
  9815  0334  0870               	movf	?_ADCC_GetSingleConversion,w
  9816  0335  00F3               	movwf	timerInterrupt@value
  9817  0336                     i1l3258:
  9818                           
  9819                           ;main.c: 74:     if(value > 0x2FD || value < 0xFF){
  9820  0336  3002               	movlw	2
  9821  0337  0274               	subwf	timerInterrupt@value+1,w
  9822  0338  30FE               	movlw	254
  9823  0339  1903               	skipnz
  9824  033A  0273               	subwf	timerInterrupt@value,w
  9825  033B  1803               	skipnc
  9826  033C  2B3E               	goto	u132_21
  9827  033D  2B3F               	goto	u132_20
  9828  033E                     u132_21:
  9829  033E  2B48               	goto	i1l1162
  9830  033F                     u132_20:
  9831  033F                     i1l3260:
  9832  033F  3000               	movlw	0
  9833  0340  0274               	subwf	timerInterrupt@value+1,w
  9834  0341  30FF               	movlw	255
  9835  0342  1903               	skipnz
  9836  0343  0273               	subwf	timerInterrupt@value,w
  9837  0344  1803               	skipnc
  9838  0345  2B47               	goto	u133_21
  9839  0346  2B48               	goto	u133_20
  9840  0347                     u133_21:
  9841  0347  2B4B               	goto	i1l1165
  9842  0348                     u133_20:
  9843  0348                     i1l1162:	
  9844                           ;main.c: 75:         do { LATAbits.LATA4 = 1; } while(0);
  9845                           
  9846  0348  0020               	movlb	0	; select bank0
  9847  0349  1616               	bsf	22,4	;volatile
  9848  034A  2B4D               	goto	i1l1167
  9849  034B                     i1l1165:	
  9850                           ;main.c: 77:         do { LATAbits.LATA4 = 0; } while(0);
  9851                           
  9852  034B  0020               	movlb	0	; select bank0
  9853  034C  1216               	bcf	22,4	;volatile
  9854  034D                     i1l1167:
  9855  034D  0008               	return
  9856  034E                     __end_of_timerInterrupt:
  9857                           
  9858                           	psect	text24
  9859  03DA                     __ptext24:	
  9860 ;; *************** function _ADCC_GetSingleConversion *****************
  9861 ;; Defined at:
  9862 ;;		line 132 in file "mcc_generated_files/adcc.c"
  9863 ;; Parameters:    Size  Location     Type
  9864 ;;  channel         1    wreg     enum E12206
  9865 ;; Auto vars:     Size  Location     Type
  9866 ;;  channel         1    2[COMMON] enum E12206
  9867 ;; Return value:  Size  Location     Type
  9868 ;;                  2    0[COMMON] unsigned short 
  9869 ;; Registers used:
  9870 ;;		wreg
  9871 ;; Tracked objects:
  9872 ;;		On entry : 0/0
  9873 ;;		On exit  : 0/0
  9874 ;;		Unchanged: 0/0
  9875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9877 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9879 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9880 ;;Total ram usage:        3 bytes
  9881 ;; Hardware stack levels used: 1
  9882 ;; This function calls:
  9883 ;;		Nothing
  9884 ;; This function is called by:
  9885 ;;		_timerInterrupt
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           
  9890                           ;psect for function _ADCC_GetSingleConversion
  9891  03DA                     _ADCC_GetSingleConversion:
  9892                           
  9893                           ;incstack = 0
  9894                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
  9895                           ;ADCC_GetSingleConversion@channel stored from wreg
  9896  03DA  00F2               	movwf	ADCC_GetSingleConversion@channel
  9897  03DB                     i1l3238:
  9898                           
  9899                           ;mcc_generated_files/adcc.c: 132: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 133: {;mcc_generated_files/adcc.c: 135:     ADPCH = 
      +                          channel;
  9900  03DB  0872               	movf	ADCC_GetSingleConversion@channel,w
  9901  03DC  0021               	movlb	1	; select bank1
  9902  03DD  009E               	movwf	30	;volatile
  9903  03DE                     i1l3240:
  9904                           
  9905                           ;mcc_generated_files/adcc.c: 138:     ADCON0bits.ADON = 1;
  9906  03DE  1793               	bsf	19,7	;volatile
  9907  03DF                     i1l3242:
  9908                           
  9909                           ;mcc_generated_files/adcc.c: 141:     ADCON0bits.ADCONT = 0;
  9910  03DF  1313               	bcf	19,6	;volatile
  9911  03E0                     i1l3244:
  9912                           
  9913                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADGO = 1;
  9914  03E0  1413               	bsf	19,0	;volatile
  9915  03E1                     i1l3246:
  9916                           
  9917                           ;mcc_generated_files/adcc.c: 147:     __nop();
  9918  03E1  0000               	nop
  9919  03E2                     i1l655:	
  9920                           ;mcc_generated_files/adcc.c: 151:     {;mcc_generated_files/adcc.c: 152:     }
  9921                           
  9922                           
  9923                           ;mcc_generated_files/adcc.c: 150:     while (ADCON0bits.ADGO)
  9924  03E2  0021               	movlb	1	; select bank1
  9925  03E3  1813               	btfsc	19,0	;volatile
  9926  03E4  2BE6               	goto	u130_21
  9927  03E5  2BE7               	goto	u130_20
  9928  03E6                     u130_21:
  9929  03E6  2BE2               	goto	i1l655
  9930  03E7                     u130_20:
  9931  03E7                     i1l3248:
  9932                           
  9933                           ;mcc_generated_files/adcc.c: 156:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9934  03E7  080D               	movf	13,w	;volatile
  9935  03E8  00F1               	movwf	?_ADCC_GetSingleConversion+1
  9936  03E9  080C               	movf	12,w	;volatile
  9937  03EA  00F0               	movwf	?_ADCC_GetSingleConversion
  9938  03EB                     i1l658:
  9939  03EB  0008               	return
  9940  03EC                     __end_of_ADCC_GetSingleConversion:
  9941  007E                     btemp	set	126	;btemp
  9942  007E                     int$flags	set	126
  9943  007E                     wtemp0	set	126
  9944                           
  9945                           	psect	config
  9946                           
  9947                           ;Config register CONFIG1 @ 0x8007
  9948                           ;	External Oscillator mode selection bits
  9949                           ;	FEXTOSC = OFF, Oscillator not enabled
  9950                           ;	Power-up default value for COSC bits
  9951                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  9952                           ;	Clock Out Enable bit
  9953                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  9954                           ;	Clock Switch Enable bit
  9955                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  9956                           ;	Fail-Safe Clock Monitor Enable bit
  9957                           ;	FCMEN = ON, FSCM timer enabled
  9958  8007                     	org	32775
  9959  8007  3FEC               	dw	16364
  9960                           
  9961                           ;Config register CONFIG2 @ 0x8008
  9962                           ;	Master Clear Enable bit
  9963                           ;	MCLRE = ON, MCLR pin is Master Clear function
  9964                           ;	Power-up Timer Enable bit
  9965                           ;	PWRTE = OFF, PWRT disabled
  9966                           ;	Low-Power BOR enable bit
  9967                           ;	LPBOREN = OFF, ULPBOR disabled
  9968                           ;	Brown-out reset enable bits
  9969                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  9970                           ;	Brown-out Reset Voltage Selection
  9971                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  9972                           ;	Zero-cross detect disable
  9973                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  9974                           ;	Peripheral Pin Select one-way control
  9975                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  9976                           ;	Stack Overflow/Underflow Reset Enable bit
  9977                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  9978                           ;	Background Debugger
  9979                           ;	DEBUG = OFF, Background Debugger disabled
  9980  8008                     	org	32776
  9981  8008  3FFF               	dw	16383
  9982                           
  9983                           ;Config register CONFIG3 @ 0x8009
  9984                           ;	WDT Period Select bits
  9985                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9986                           ;	WDT operating mode
  9987                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  9988                           ;	WDT Window Select bits
  9989                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  9990                           ;	WDT input clock selector
  9991                           ;	WDTCCS = SC, Software Control
  9992  8009                     	org	32777
  9993  8009  3F9F               	dw	16287
  9994                           
  9995                           ;Config register CONFIG4 @ 0x800A
  9996                           ;	UserNVM self-write protection bits
  9997                           ;	WRT = OFF, Write protection off
  9998                           ;	Scanner Enable bit
  9999                           ;	SCANE = available, Scanner module is available for use
 10000                           ;	Low Voltage Programming Enable bit
 10001                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 10002  800A                     	org	32778
 10003  800A  3FFF               	dw	16383
 10004                           
 10005                           ;Config register CONFIG5 @ 0x800B
 10006                           ;	UserNVM Program memory code protection bit
 10007                           ;	CP = OFF, Program Memory code protection disabled
 10008                           ;	DataNVM code protection bit
 10009                           ;	CPD = OFF, Data EEPROM code protection disabled
 10010  800B                     	org	32779
 10011  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    32
    Data        0
    BSS         29
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     48      77
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$3169$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1485$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    parseEPROMInitialization@checksum	PTR unsigned char  size(1) Largest target is 1
		 -> main@checksum(BANK0[1]), 

    parseEPROMInitialization@CLKM	PTR unsigned char  size(1) Largest target is 1
		 -> main@CLKM(BANK0[1]), 

    parseEPROMInitialization@CLKH	PTR unsigned char  size(1) Largest target is 1
		 -> main@CLKH(BANK0[1]), 

    parseEPROMInitialization@ALAF	PTR unsigned char  size(1) Largest target is 1
		 -> main@ALAF(BANK0[1]), 

    parseEPROMInitialization@ALAL	PTR unsigned char  size(1) Largest target is 1
		 -> main@ALAL(BANK0[1]), 

    parseEPROMInitialization@ALAT	PTR unsigned char  size(1) Largest target is 1
		 -> main@ALAT(BANK0[1]), 

    parseEPROMInitialization@TALA	PTR unsigned char  size(1) Largest target is 1
		 -> main@TALA(BANK0[1]), 

    parseEPROMInitialization@PMON	PTR unsigned char  size(1) Largest target is 1
		 -> main@PMON(BANK0[1]), 

    parseEPROMInitialization@RI	PTR unsigned char  size(1) Largest target is 1
		 -> main@RI(BANK0[1]), 

    parseEPROMInitialization@WI	PTR unsigned char  size(1) Largest target is 1
		 -> main@WI(BANK0[1]), 

    parseEPROMInitialization@NR	PTR unsigned char  size(1) Largest target is 1
		 -> main@NR(BANK0[1]), 

    parseEPROMInitialization@NREG	PTR unsigned char  size(1) Largest target is 1
		 -> main@NREG(BANK0[1]), 

    parseEPROMInitialization@magic_word	PTR unsigned char  size(1) Largest target is 1
		 -> main@magic_word(BANK0[1]), 

    parseEPROMReading@luminosity	PTR unsigned char  size(1) Largest target is 1
		 -> main@luminosity(BANK0[1]), 

    parseEPROMReading@temperature	PTR unsigned char  size(1) Largest target is 1
		 -> main@temperature(BANK0[1]), 

    parseEPROMReading@seconds	PTR unsigned char  size(1) Largest target is 1
		 -> main@seconds(BANK0[1]), 

    parseEPROMReading@minutes	PTR unsigned char  size(1) Largest target is 1
		 -> main@minutes(BANK0[1]), 

    parseEPROMReading@hours	PTR unsigned char  size(1) Largest target is 1
		 -> main@hours(BANK0[1]), 

    S1485$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1485$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1485$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12595[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerInterrupt(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerInterrupt(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    S679$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_CallBack->_timerInterrupt
    _timerInterrupt->_ADCC_GetSingleConversion

Critical Paths under _main in BANK0

    _main->_parseEPROMInitialization
    _main->_parseEPROMReading
    _main->_storeEPROMBuild
    _storeEPROMBuild->_operADDR
    _parseEPROMReading->_operADDR
    _parseEPROMInitialization->_DATAEE_ReadByte
    _initializeEPROM->_DATAEE_WriteByte
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                52    52      0   14489
                                             16 BANK0     32    32      0
                            _OpenI2C
                                 _S1
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _initializeEPROM
           _parseEPROMInitialization
                  _parseEPROMReading
                    _storeEPROMBuild
 ---------------------------------------------------------------------------------
 (1) _storeEPROMBuild                                      9     4      5    4238
                                              7 BANK0      9     4      5
                   _DATAEE_WriteByte
                           _operADDR
 ---------------------------------------------------------------------------------
 (1) _parseEPROMReading                                    9     4      5    2589
                                              7 BANK0      9     4      5
                    _DATAEE_ReadByte
                           _operADDR
 ---------------------------------------------------------------------------------
 (2) _operADDR                                             7     5      2      77
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _parseEPROMInitialization                            14     2     12    3201
                                              2 BANK0     14     2     12
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2    1682
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initializeEPROM                                      1     1      0    3367
                                              4 BANK0      1     1      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3    3367
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _S1                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     307
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     307
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0      67
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                     _timerInterrupt *
 ---------------------------------------------------------------------------------
 (7) _timerInterrupt                                       2     2      0      67
                                              3 COMMON     2     2      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (8) _ADCC_GetSingleConversion                             3     1      2      22
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenI2C
   _S1
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _initializeEPROM
     _DATAEE_WriteByte
   _parseEPROMInitialization
     _DATAEE_ReadByte
   _parseEPROMReading
     _DATAEE_ReadByte
     _operADDR
   _storeEPROMBuild
     _DATAEE_WriteByte
     _operADDR

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _timerInterrupt *
         _ADCC_GetSingleConversion
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       9       2       64.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     30      4D       5       96.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      56      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      56      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 28 21:06:20 2021

       __size_of_parseEPROMInitialization 00B9                 ?_parseEPROMInitialization 0022  
                                      l23 0419                                        _S1 0433  
                                     ?_S1 0070                                       l436 02EE  
                                     l532 03AF                                       l482 0458  
                                     l643 03C6                                       l476 03D9  
                                     l565 0464                                       l479 0450  
                                     l770 0371                                       l773 040C  
                                     l767 0366                                       l769 036A  
                                     l878 0447                           _timer1ReloadVal 0077  
                 __size_of_PMD_Initialize 0008                                       wreg 0009  
                    _I2C1_DO_RX_NACK_STOP 0000                                      ??_S1 0075  
                                    l1150 043D                                      l1302 00DE  
                                    l1148 043C                                      l1290 0325  
                                    l3300 02DF                                      l1284 02F2  
                                    l1293 0200                                      l3310 02EB  
                                    l3302 02E1                                      l1286 02F7  
                                    l1287 02FC                                      l3320 0446  
                                    l3304 02E3                                      l3312 0451  
                                    l1288 0301                                      l1296 02A9  
                                    l1289 0306                                      l3330 03B0  
                                    l3314 043E                                      l3322 0448  
                                    l3306 02E6                                      l1299 025A  
                                    l3332 03C3                                      l3316 0443  
                                    l3324 044B                                      l3308 02E9  
                                    l3430 0413                                      l3334 03C5  
                                    l3318 0444                                      l3326 044C  
                                    l3270 02B6                                      l3262 02AA  
                                    l3432 0415                                      l3328 044F  
                                    l3280 02C1                                      l3272 02B8  
                                    l3264 02B0                                      l3600 0408  
                                    l3434 0416                                      l3426 040D  
                                    l3290 02D5                                      l3282 02C3  
                                    l3274 02BA                                      l3266 02B2  
                                    l3602 0409                                      l3436 0418  
                                    l3428 0412                                      l3292 02D7  
                                    l3284 02CF                                      l3276 02BD  
                                    l3268 02B4                                      l3604 040B  
                                    l3612 030B                                      l3454 0433  
                                    l3294 02D9                                      l3286 02D1  
                                    l3278 02BF                                      l3550 045F  
                                    l3630 03D0                                      l3614 0321  
                                    l3456 0438                                      l3296 02DB  
                                    l3288 02D3                                      l3560 039B  
                                    l3552 0392                                      l3632 03D3  
                                    l3624 03C7                                      l3608 02F1  
                                    l3640 0266                                      l3298 02DD  
                                    l3562 039D                                      l3554 0395  
                                    l3634 03D6                                      l3626 03CA  
                                    l3570 034E                                      l3650 0203  
                                    l3642 0271                                      l3564 03A2  
                                    l3556 0397                                      l3628 03CD  
                                    l3580 0360                                      l3572 0356  
                                    l3636 0173                                      l3660 024A  
                                    l3652 020C                                      l3644 027F  
                                    l3566 03A4                                      l3558 0399  
                                    l3582 0361                                      l3574 035A  
                                    l3590 03FD                                      l3662 0028  
                                    l3718 0313                                      l3654 021A  
                                    l3646 028D                                      l3638 025D  
                                    l3670 00E8                                      l3568 03AC  
                                    l3584 0363                                      l3576 035E  
                                    l3592 0401                                      l3656 022A  
                                    l3648 029B                                      l3680 00F9  
                                    l3672 00E9                                      l3664 00DF  
                                    l3586 0365                                      l3578 035F  
                                    l3594 0405                                      l3658 023A  
                                    l3682 0112                                      l3674 00F1  
                                    l3666 00E4                                      l3588 036B  
                                    l3596 0406                                      l3684 0115  
                                    l3676 00F3                                      l3668 00E7  
                                    l3598 0407                                      l3686 0163  
                                    l3678 00F6                                      u1420 036A  
                                    u1421 0369                                      _LATA 0016  
                                    _LATB 0017                                      _LATC 0018  
                                    _LATD 0019                                      _LATE 001A  
                                    u1370 0438                                      u1371 0437  
                                    u1380 043C                                      u1381 043B  
                                    u1437 0169                  parseEPROMReading@minutes 0027  
                parseEPROMReading@seconds 0028                                      _PMD0 0796  
                                    _PMD1 0797                                      _PMD2 0798  
                                    _PMD3 0799                                      _PMD4 079A  
                                    _PMD5 079B                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                             main@minutes 003F                               main@seconds 0040  
                                    _main 00DF                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                                    start 0018                ??_TMR1_SetInterruptHandler 0075  
                        ??_timerInterrupt 0073                              main@checksum 004F  
                         __end_of_OpenI2C 041A                 __size_of_DATAEE_WriteByte 0024  
          __size_of_OSCILLATOR_Initialize 0009                         _parseEPROMReading 0201  
           __end_of_OSCILLATOR_Initialize 0451                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                         ??_initializeEPROM 0024  
                                   _ADPRE 009C                                     _ADRPT 010D  
                                   _T1CLK 0211                                     _T1CON 020E  
                      ?_parseEPROMReading 0027                                     i1l562 0432  
                                   i1l546 03FC                                     i1l558 0426  
                                   i1l655 03E2                                     i1l568 0465  
                                   i1l658 03EB                                     i1l499 0016  
              __end_of_i2c1_fsmStateTable 0392                                     _OSCEN 0891  
                                   _TMR1H 020D                                     _TMR1L 020C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                         ??_I2C1_Initialize 0075  
                        __end_of_TMR1_ISR 0427                           _DATAEE_ReadByte 03FD  
                     ??_parseEPROMReading 002C                    storeEPROMBuild@minutes 0027  
                  storeEPROMBuild@seconds 0028                   __end_of_TMR1_Initialize 03B0  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 03EC  
                         __initialization 001A                              __end_of_main 0173  
               __end_of_parseEPROMReading 025B               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 0030                                    _ADACCH 0091  
                                  _ADACCL 0090                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                                    _ADUTHL 0110  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                                    _T1GATE 0210  
                                  _T1GCON 020F                   storeEPROMBuild@dataAddr 002E  
                                  _RC3PPS 0F23                   TMR1_WriteTimer@timerVal 0070  
                                  _RC4PPS 0F24                                    i1l1162 0348  
                                  i1l1154 032B                                    i1l1165 034B  
                                  i1l1157 032D                                    i1l1167 034D  
                                  _ODCONA 0F3A                                    _ODCONB 0F45  
                                  _ODCONC 0F50                                    _ODCOND 0F5B  
                                  _ODCONE 0F66                                    i1l3240 03DE  
                                  i1l3242 03DF                                    i1l3244 03E0  
                                  i1l3260 033F                                    i1l3246 03E1  
                                  i1l3238 03DB                                    i1l3254 0326  
                                  i1l3248 03E7                                    u130_20 03E7  
                                  i1l3256 032E                                    i1l3360 03F4  
                                  u130_21 03E6                                    i1l3258 0336  
                                  i1l3370 042D                                    i1l3362 03F6  
                                  i1l3354 03EC                                    i1l3450 041A  
                                  i1l3356 03F1                                    i1l3364 03F8  
                                  i1l3452 041C                                    i1l3366 03FA  
                                  i1l3358 03F2                                    u131_20 032B  
                                  i1l3368 0427                                    u131_21 032A  
                                  i1l3490 000F                                    i1l3492 0013  
                                  i1l3486 0006                                    u132_20 033F  
                                  u140_20 000F                                    i1l3488 000A  
                                  u132_21 033E                                    u140_21 000E  
                                  u133_20 0348                                    u141_20 0013  
                                  u133_21 0347                                    u141_21 0012  
                                  u134_20 03F1                                    u134_21 03F0  
                                  u135_20 042D                                    u135_21 042C  
                                  _INLVLA 0F3C                                    _INLVLB 0F47  
                                  _INLVLC 0F52                                    _INLVLD 0F5D  
                                  _INLVLE 0F68                                    u139_20 000A  
                                  u139_21 0009                                    _OSCFRQ 0893  
                               ??_OpenI2C 0075                          _I2C1_DO_TX_EMPTY 0000  
    __end_of_TMR1_DefaultInterruptHandler 0466     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0465                          __end_of_operADDR 0326  
                                  main@RI 0047                                    main@NR 0045  
                                  main@WI 0046                   __end_of_DATAEE_ReadByte 040D  
                         _ADCC_Initialize 03B0                     _I2C1_DO_SEND_ADR_READ 0000  
                          _PMD_Initialize 0451         __size_of_ADCC_GetSingleConversion 0012  
               ?_ADCC_GetSingleConversion 0070  TMR1_SetInterruptHandler@InterruptHandler 0020  
                 __end_of_TMR1_WriteTimer 03FD                   _I2C1_DO_RX_NACK_RESTART 0000  
                   __end_of_TMR1_CallBack 0433                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 03C7                   __end_of__initialization 0022  
                      ?_SYSTEM_Initialize 0070                   _rdBlkRegCompleteHandler 0000  
                          __pcstackCOMMON 0070                       ??_SYSTEM_Initialize 0075  
                __size_of_storeEPROMBuild 004F        parseEPROMInitialization@magic_word 002F  
              __size_of_parseEPROMReading 005A                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                          _DATAEE_WriteByte 034E  
                    storeEPROMBuild@hours 002D                                __end_of_S1 043E  
                  __end_of_PMD_Initialize 0459                    main@readRingBufferAddr 003C  
               __end_of_SYSTEM_Initialize 03DA                                __pbssBANK0 0050  
                              __pnvCOMMON 0075                     _rd1RegCompleteHandler 0000  
            parseEPROMInitialization@ALAF 002A              parseEPROMInitialization@ALAL 0029  
            parseEPROMInitialization@ALAT 0028              parseEPROMInitialization@CLKH 002B  
            parseEPROMInitialization@CLKM 002C              parseEPROMInitialization@TALA 0027  
            parseEPROMInitialization@NREG 0022              parseEPROMInitialization@PMON 0026  
                       _I2C1_DO_SEND_STOP 0000                           _initializeEPROM 0173  
                   _wr1RegCompleteHandler 0000                                __pmaintext 00DF  
                              ??_TMR1_ISR 0075                   __end_of_ADCC_Initialize 03C7  
                              __pintentry 0004                           _I2C1_Initialize 043E  
                          main@magic_word 0043                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                                   _ADPREVH 008F  
                                 _ADPREVL 008E                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112                           ?_PMD_Initialize 0070  
                        ?_DATAEE_ReadByte 0020                                   _OSCCON1 088D  
                                 _OSCCON3 088F                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                                 _NVMCON1 081E                                   _NVMCON2 081F  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                          ?_TMR1_WriteTimer 0070  
                    DATAEE_WriteByte@bAdd 0020                        _i2c1_fsmStateTable 0372  
                               ?_operADDR 0020                                   _OpenI2C 040D  
                _parseEPROMInitialization 0026                                   __ptext1 025B  
                                 __ptext2 0201                                   __ptext3 02EF  
                                 __ptext4 0026                                   __ptext5 03FD  
                                 __ptext6 0173                                   __ptext7 034E  
                                 __ptext8 03C7                                   __ptext9 0392  
          ??_TMR1_DefaultInterruptHandler 0070                         ??_storeEPROMBuild 002C  
                               _T1CONbits 020E                     _OSCILLATOR_Initialize 0448  
       __size_of_TMR1_SetInterruptHandler 0006                  ??_PIN_MANAGER_Initialize 0075  
               ?_TMR1_SetInterruptHandler 0020                parseEPROMInitialization@RI 0025  
              parseEPROMInitialization@NR 0023                parseEPROMInitialization@WI 0024  
                storeEPROMBuild@operation 002B                __size_of_SYSTEM_Initialize 0013  
                                 clrloop0 045A                            main@luminosity 0042  
                    end_of_initialization 0022                   __end_of_initializeEPROM 0201  
                  _I2C1_DO_SEND_ADR_WRITE 0000                                ??_operADDR 0022  
            parseEPROMReading@temperature 0029                   __end_of_I2C1_Initialize 0448  
                             _I2C1_Status 0050                          ?_ADCC_Initialize 0070  
        __end_of_ADCC_GetSingleConversion 03EC                 storeEPROMBuild@luminosity 002A  
              _I2C1_DO_SEND_RESTART_WRITE 0000                                 _PORTAbits 000C  
                               _PORTBbits 000D                   __size_of_timerInterrupt 0028  
                               _TRISCbits 0013                       timerInterrupt@value 0073  
                __end_of_DATAEE_WriteByte 0372                    parseEPROMReading@hours 002D  
                          _I2C1_DO_RX_ACK 0000                         __size_of_TMR1_ISR 000D  
              storeEPROMBuild@temperature 0029                    ?_OSCILLATOR_Initialize 0070  
                     start_initialization 001A           __size_of_PIN_MANAGER_Initialize 0045  
                        ?_initializeEPROM 0070                       DATAEE_ReadByte@bAdd 0020  
                        ?_I2C1_Initialize 0070                  __size_of_TMR1_Initialize 001E  
                        ??_PMD_Initialize 0075                    __size_of_TMR1_CallBack 000C  
                _ADCC_GetSingleConversion 03DA                      _I2C1_DO_SEND_RESTART 0000  
                               ___latbits 0002                             __pcstackBANK0 0020  
              ??_parseEPROMInitialization 002E                 parseEPROMReading@dataAddr 002E  
                   _rd2RegCompleteHandler 0000                                  ?_OpenI2C 0070  
                  _PIN_MANAGER_Initialize 02AA                     _wr2RegCompleteHandler 0000  
                       __size_of_operADDR 0037                           _storeEPROMBuild 025B  
        __end_of_TMR1_SetInterruptHandler 0465           ADCC_GetSingleConversion@channel 0072  
            ??_INTERRUPT_InterruptManager 0075                            _timerInterrupt 0326  
                __size_of_DATAEE_ReadByte 0010                               __size_of_S1 000B  
                           _TMR1_CallBack 0427                                  _LATAbits 0016  
                              _I2C1_DO_RX 0000                                _I2C1_DO_TX 0000  
                               clear_ram0 0459                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0014                                  _PIR3bits 070F  
                                _PIR4bits 0710                 _I2C1_DO_SEND_RESTART_READ 0000  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR1_ISR 041A                                  _SSP1STAT 018F  
                  __end_of_timerInterrupt 034E                         ??_TMR1_Initialize 0075  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                               main@hours 003E                     DATAEE_WriteByte@bData 0022  
                           _I2C1_DO_RESET 0000                            ?_TMR1_CallBack 0070  
                       ?_DATAEE_WriteByte 0020                   __end_of_storeEPROMBuild 02AA  
                      ??_DATAEE_WriteByte 0075                                _ADSTATbits 0097  
                        __size_of_OpenI2C 000D                   ??_OSCILLATOR_Initialize 0075  
                         ?_timerInterrupt 0070                  _TMR1_SetInterruptHandler 045F  
                   _TMR1_InterruptHandler 0075                  __size_of_ADCC_Initialize 0017  
                                __ptext10 045F                                  __ptext11 0451  
                                __ptext20 03EC                                  __ptext12 02AA  
                                __ptext21 0427                                  __ptext13 0448  
                              _T1GCONbits 020F                                  __ptext22 0465  
                                __ptext14 043E                                  __ptext23 0326  
                                __ptext15 03B0                                  __ptext24 03DA  
                                __ptext16 0433                                  __ptext17 040D  
                                __ptext19 041A          __end_of_parseEPROMInitialization 00DF  
                            _SSP1CON1bits 0190                              _SSP1CON2bits 0191  
             DATAEE_WriteByte@GIEBitValue 0023                  _I2C1_CallbackReturnReset 0000  
                           __size_of_main 0094                                  _operADDR 02EF  
                       ??_DATAEE_ReadByte 0075                                  main@ALAF 004C  
                                main@ALAL 004B                                  main@ALAT 004A  
                                main@CLKH 004D                ??_ADCC_GetSingleConversion 0072  
                                main@CLKM 004E                                  main@TALA 0049  
                                int$flags 007E                                  main@NREG 0044  
                                main@PMON 0048        __end_of_INTERRUPT_InterruptManager 0018  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                              _I2C1_DO_IDLE 0000  
                            _I2C1_DO_RCEN 0000                           main@temperature 0041  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
                         ??_TMR1_CallBack 0075          parseEPROMInitialization@checksum 002D  
                                intlevel1 0000                          ?_storeEPROMBuild 0027  
                 ?_PIN_MANAGER_Initialize 0070                   _I2C1_CallbackReturnStop 0000  
             parseEPROMReading@luminosity 002A                      _I2C1_DO_ADDRESS_NACK 0000  
                __size_of_initializeEPROM 008E                  __size_of_I2C1_Initialize 000A  
                           __pstringtext1 0372                          operADDR@dataAddr 0025  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
              parseEPROMReading@operation 002B            __end_of_PIN_MANAGER_Initialize 02EF  
                       ??_ADCC_Initialize 0075                           _TMR1_Initialize 0392  
                       operADDR@operation 0024  
=======


Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 29 18:44:21 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	intentry,global,class=CODE,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    79                           	dabs	1,0x7E,2
    80  0000                     
    81                           ; Version 2.35
    82                           ; Generated 13/04/2021 GMT
    83                           ; 
    84                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution. Publication is not required when
    98                           ;        this file is used in an embedded application.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC16F18875 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0008                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001C                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  008C                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  008E                     	;# 
   154  008F                     	;# 
   155  0090                     	;# 
   156  0090                     	;# 
   157  0091                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0095                     	;# 
   161  0096                     	;# 
   162  0097                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009A                     	;# 
   166  009B                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  0110                     	;# 
   176  0110                     	;# 
   177  0111                     	;# 
   178  0112                     	;# 
   179  0112                     	;# 
   180  0113                     	;# 
   181  0114                     	;# 
   182  0114                     	;# 
   183  0115                     	;# 
   184  0116                     	;# 
   185  0116                     	;# 
   186  0117                     	;# 
   187  0119                     	;# 
   188  0119                     	;# 
   189  0119                     	;# 
   190  011A                     	;# 
   191  011A                     	;# 
   192  011A                     	;# 
   193  011B                     	;# 
   194  011B                     	;# 
   195  011B                     	;# 
   196  011B                     	;# 
   197  011B                     	;# 
   198  011C                     	;# 
   199  011C                     	;# 
   200  011C                     	;# 
   201  011D                     	;# 
   202  011D                     	;# 
   203  011D                     	;# 
   204  011E                     	;# 
   205  011E                     	;# 
   206  011E                     	;# 
   207  011F                     	;# 
   208  011F                     	;# 
   209  011F                     	;# 
   210  011F                     	;# 
   211  011F                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  018E                     	;# 
   215  018F                     	;# 
   216  0190                     	;# 
   217  0191                     	;# 
   218  0192                     	;# 
   219  0196                     	;# 
   220  0197                     	;# 
   221  0198                     	;# 
   222  0199                     	;# 
   223  019A                     	;# 
   224  019B                     	;# 
   225  019C                     	;# 
   226  020C                     	;# 
   227  020C                     	;# 
   228  020D                     	;# 
   229  020E                     	;# 
   230  020F                     	;# 
   231  020F                     	;# 
   232  0210                     	;# 
   233  0210                     	;# 
   234  0211                     	;# 
   235  0211                     	;# 
   236  0212                     	;# 
   237  0212                     	;# 
   238  0213                     	;# 
   239  0214                     	;# 
   240  0215                     	;# 
   241  0215                     	;# 
   242  0216                     	;# 
   243  0216                     	;# 
   244  0217                     	;# 
   245  0217                     	;# 
   246  0218                     	;# 
   247  0218                     	;# 
   248  0219                     	;# 
   249  021A                     	;# 
   250  021B                     	;# 
   251  021B                     	;# 
   252  021C                     	;# 
   253  021C                     	;# 
   254  021D                     	;# 
   255  021D                     	;# 
   256  021E                     	;# 
   257  021F                     	;# 
   258  028C                     	;# 
   259  028C                     	;# 
   260  028D                     	;# 
   261  028D                     	;# 
   262  028E                     	;# 
   263  028F                     	;# 
   264  0290                     	;# 
   265  0290                     	;# 
   266  0291                     	;# 
   267  0292                     	;# 
   268  0292                     	;# 
   269  0293                     	;# 
   270  0293                     	;# 
   271  0294                     	;# 
   272  0295                     	;# 
   273  0296                     	;# 
   274  0296                     	;# 
   275  0297                     	;# 
   276  0298                     	;# 
   277  0298                     	;# 
   278  0299                     	;# 
   279  0299                     	;# 
   280  029A                     	;# 
   281  029B                     	;# 
   282  029C                     	;# 
   283  029C                     	;# 
   284  029D                     	;# 
   285  030C                     	;# 
   286  030C                     	;# 
   287  030D                     	;# 
   288  030E                     	;# 
   289  030F                     	;# 
   290  0310                     	;# 
   291  0310                     	;# 
   292  0311                     	;# 
   293  0312                     	;# 
   294  0313                     	;# 
   295  0314                     	;# 
   296  0314                     	;# 
   297  0315                     	;# 
   298  0316                     	;# 
   299  0317                     	;# 
   300  0318                     	;# 
   301  0318                     	;# 
   302  0319                     	;# 
   303  031A                     	;# 
   304  031B                     	;# 
   305  031C                     	;# 
   306  031C                     	;# 
   307  031D                     	;# 
   308  031E                     	;# 
   309  031F                     	;# 
   310  038C                     	;# 
   311  038C                     	;# 
   312  038D                     	;# 
   313  038E                     	;# 
   314  0390                     	;# 
   315  0390                     	;# 
   316  0391                     	;# 
   317  0392                     	;# 
   318  040C                     	;# 
   319  040D                     	;# 
   320  040E                     	;# 
   321  040F                     	;# 
   322  0410                     	;# 
   323  0411                     	;# 
   324  0416                     	;# 
   325  0416                     	;# 
   326  0417                     	;# 
   327  0418                     	;# 
   328  0418                     	;# 
   329  0419                     	;# 
   330  041A                     	;# 
   331  041A                     	;# 
   332  041B                     	;# 
   333  041C                     	;# 
   334  041C                     	;# 
   335  041D                     	;# 
   336  041E                     	;# 
   337  041F                     	;# 
   338  048C                     	;# 
   339  048C                     	;# 
   340  048D                     	;# 
   341  048E                     	;# 
   342  048F                     	;# 
   343  048F                     	;# 
   344  0490                     	;# 
   345  0491                     	;# 
   346  0492                     	;# 
   347  0492                     	;# 
   348  0493                     	;# 
   349  0494                     	;# 
   350  0495                     	;# 
   351  0495                     	;# 
   352  0496                     	;# 
   353  0497                     	;# 
   354  0498                     	;# 
   355  0499                     	;# 
   356  049A                     	;# 
   357  049B                     	;# 
   358  049C                     	;# 
   359  049D                     	;# 
   360  050C                     	;# 
   361  050C                     	;# 
   362  050D                     	;# 
   363  050E                     	;# 
   364  050F                     	;# 
   365  050F                     	;# 
   366  0510                     	;# 
   367  0511                     	;# 
   368  0512                     	;# 
   369  0512                     	;# 
   370  0513                     	;# 
   371  0514                     	;# 
   372  0515                     	;# 
   373  0515                     	;# 
   374  0516                     	;# 
   375  0517                     	;# 
   376  0518                     	;# 
   377  0519                     	;# 
   378  051A                     	;# 
   379  051B                     	;# 
   380  051C                     	;# 
   381  051D                     	;# 
   382  058C                     	;# 
   383  058C                     	;# 
   384  058D                     	;# 
   385  058E                     	;# 
   386  058F                     	;# 
   387  058F                     	;# 
   388  0590                     	;# 
   389  0591                     	;# 
   390  0592                     	;# 
   391  0593                     	;# 
   392  060C                     	;# 
   393  060D                     	;# 
   394  060E                     	;# 
   395  060F                     	;# 
   396  0610                     	;# 
   397  0611                     	;# 
   398  0612                     	;# 
   399  0613                     	;# 
   400  0614                     	;# 
   401  0616                     	;# 
   402  0617                     	;# 
   403  0618                     	;# 
   404  0619                     	;# 
   405  061A                     	;# 
   406  061B                     	;# 
   407  061C                     	;# 
   408  061D                     	;# 
   409  061E                     	;# 
   410  068C                     	;# 
   411  068D                     	;# 
   412  068E                     	;# 
   413  068F                     	;# 
   414  0690                     	;# 
   415  0691                     	;# 
   416  0692                     	;# 
   417  0693                     	;# 
   418  0694                     	;# 
   419  070C                     	;# 
   420  070D                     	;# 
   421  070E                     	;# 
   422  070F                     	;# 
   423  0710                     	;# 
   424  0711                     	;# 
   425  0712                     	;# 
   426  0713                     	;# 
   427  0714                     	;# 
   428  0716                     	;# 
   429  0717                     	;# 
   430  0718                     	;# 
   431  0719                     	;# 
   432  071A                     	;# 
   433  071B                     	;# 
   434  071C                     	;# 
   435  071D                     	;# 
   436  071E                     	;# 
   437  0796                     	;# 
   438  0797                     	;# 
   439  0798                     	;# 
   440  0799                     	;# 
   441  079A                     	;# 
   442  079B                     	;# 
   443  080C                     	;# 
   444  080D                     	;# 
   445  080E                     	;# 
   446  080F                     	;# 
   447  0810                     	;# 
   448  0811                     	;# 
   449  0812                     	;# 
   450  0813                     	;# 
   451  0814                     	;# 
   452  081A                     	;# 
   453  081B                     	;# 
   454  081C                     	;# 
   455  081D                     	;# 
   456  081E                     	;# 
   457  081F                     	;# 
   458  088C                     	;# 
   459  088D                     	;# 
   460  088E                     	;# 
   461  088F                     	;# 
   462  0890                     	;# 
   463  0891                     	;# 
   464  0892                     	;# 
   465  0893                     	;# 
   466  0895                     	;# 
   467  0896                     	;# 
   468  0897                     	;# 
   469  0898                     	;# 
   470  0899                     	;# 
   471  089A                     	;# 
   472  089B                     	;# 
   473  090C                     	;# 
   474  090E                     	;# 
   475  090F                     	;# 
   476  091F                     	;# 
   477  091F                     	;# 
   478  098F                     	;# 
   479  098F                     	;# 
   480  0990                     	;# 
   481  0991                     	;# 
   482  0992                     	;# 
   483  0993                     	;# 
   484  0994                     	;# 
   485  0995                     	;# 
   486  0996                     	;# 
   487  0997                     	;# 
   488  0E0F                     	;# 
   489  0E10                     	;# 
   490  0E11                     	;# 
   491  0E12                     	;# 
   492  0E13                     	;# 
   493  0E14                     	;# 
   494  0E15                     	;# 
   495  0E16                     	;# 
   496  0E17                     	;# 
   497  0E18                     	;# 
   498  0E19                     	;# 
   499  0E1A                     	;# 
   500  0E1B                     	;# 
   501  0E1C                     	;# 
   502  0E1D                     	;# 
   503  0E1E                     	;# 
   504  0E1F                     	;# 
   505  0E20                     	;# 
   506  0E21                     	;# 
   507  0E22                     	;# 
   508  0E23                     	;# 
   509  0E24                     	;# 
   510  0E25                     	;# 
   511  0E26                     	;# 
   512  0E27                     	;# 
   513  0E28                     	;# 
   514  0E29                     	;# 
   515  0E2A                     	;# 
   516  0E2B                     	;# 
   517  0E2C                     	;# 
   518  0E2D                     	;# 
   519  0E2E                     	;# 
   520  0E2F                     	;# 
   521  0E30                     	;# 
   522  0E31                     	;# 
   523  0E32                     	;# 
   524  0E33                     	;# 
   525  0E34                     	;# 
   526  0E35                     	;# 
   527  0E36                     	;# 
   528  0E37                     	;# 
   529  0E8F                     	;# 
   530  0E90                     	;# 
   531  0E91                     	;# 
   532  0E92                     	;# 
   533  0E93                     	;# 
   534  0E94                     	;# 
   535  0E95                     	;# 
   536  0E96                     	;# 
   537  0E97                     	;# 
   538  0E9C                     	;# 
   539  0E9D                     	;# 
   540  0E9E                     	;# 
   541  0EA1                     	;# 
   542  0EA2                     	;# 
   543  0EA3                     	;# 
   544  0EA4                     	;# 
   545  0EA5                     	;# 
   546  0EA9                     	;# 
   547  0EAA                     	;# 
   548  0EAB                     	;# 
   549  0EAC                     	;# 
   550  0EB1                     	;# 
   551  0EB2                     	;# 
   552  0EB3                     	;# 
   553  0EB8                     	;# 
   554  0EB9                     	;# 
   555  0EBA                     	;# 
   556  0EBB                     	;# 
   557  0EBC                     	;# 
   558  0EBD                     	;# 
   559  0EBE                     	;# 
   560  0EC3                     	;# 
   561  0EC5                     	;# 
   562  0EC6                     	;# 
   563  0EC7                     	;# 
   564  0EC8                     	;# 
   565  0EC9                     	;# 
   566  0ECA                     	;# 
   567  0ECB                     	;# 
   568  0ECC                     	;# 
   569  0F10                     	;# 
   570  0F11                     	;# 
   571  0F12                     	;# 
   572  0F13                     	;# 
   573  0F14                     	;# 
   574  0F15                     	;# 
   575  0F16                     	;# 
   576  0F17                     	;# 
   577  0F18                     	;# 
   578  0F19                     	;# 
   579  0F1A                     	;# 
   580  0F1B                     	;# 
   581  0F1C                     	;# 
   582  0F1D                     	;# 
   583  0F1E                     	;# 
   584  0F1F                     	;# 
   585  0F20                     	;# 
   586  0F21                     	;# 
   587  0F22                     	;# 
   588  0F23                     	;# 
   589  0F24                     	;# 
   590  0F25                     	;# 
   591  0F26                     	;# 
   592  0F27                     	;# 
   593  0F28                     	;# 
   594  0F29                     	;# 
   595  0F2A                     	;# 
   596  0F2B                     	;# 
   597  0F2C                     	;# 
   598  0F2D                     	;# 
   599  0F2E                     	;# 
   600  0F2F                     	;# 
   601  0F30                     	;# 
   602  0F31                     	;# 
   603  0F32                     	;# 
   604  0F38                     	;# 
   605  0F39                     	;# 
   606  0F3A                     	;# 
   607  0F3B                     	;# 
   608  0F3C                     	;# 
   609  0F3D                     	;# 
   610  0F3E                     	;# 
   611  0F3F                     	;# 
   612  0F40                     	;# 
   613  0F41                     	;# 
   614  0F43                     	;# 
   615  0F44                     	;# 
   616  0F45                     	;# 
   617  0F46                     	;# 
   618  0F47                     	;# 
   619  0F48                     	;# 
   620  0F49                     	;# 
   621  0F4A                     	;# 
   622  0F4B                     	;# 
   623  0F4C                     	;# 
   624  0F4E                     	;# 
   625  0F4F                     	;# 
   626  0F50                     	;# 
   627  0F51                     	;# 
   628  0F52                     	;# 
   629  0F53                     	;# 
   630  0F54                     	;# 
   631  0F55                     	;# 
   632  0F56                     	;# 
   633  0F57                     	;# 
   634  0F59                     	;# 
   635  0F5A                     	;# 
   636  0F5B                     	;# 
   637  0F5C                     	;# 
   638  0F5D                     	;# 
   639  0F61                     	;# 
   640  0F62                     	;# 
   641  0F64                     	;# 
   642  0F65                     	;# 
   643  0F66                     	;# 
   644  0F67                     	;# 
   645  0F68                     	;# 
   646  0F69                     	;# 
   647  0F6A                     	;# 
   648  0F6B                     	;# 
   649  0F6C                     	;# 
   650  0F6D                     	;# 
   651  0FE4                     	;# 
   652  0FE5                     	;# 
   653  0FE6                     	;# 
   654  0FE7                     	;# 
   655  0FE8                     	;# 
   656  0FE9                     	;# 
   657  0FEA                     	;# 
   658  0FEB                     	;# 
   659  0FED                     	;# 
   660  0FEE                     	;# 
   661  0FEF                     	;# 
   662  0000                     	;# 
   663  0001                     	;# 
   664  0002                     	;# 
   665  0003                     	;# 
   666  0004                     	;# 
   667  0005                     	;# 
   668  0006                     	;# 
   669  0007                     	;# 
   670  0008                     	;# 
   671  0009                     	;# 
   672  000A                     	;# 
   673  000B                     	;# 
   674  000C                     	;# 
   675  000D                     	;# 
   676  000E                     	;# 
   677  000F                     	;# 
   678  0010                     	;# 
   679  0011                     	;# 
   680  0012                     	;# 
   681  0013                     	;# 
   682  0014                     	;# 
   683  0015                     	;# 
   684  0016                     	;# 
   685  0017                     	;# 
   686  0018                     	;# 
   687  0019                     	;# 
   688  001A                     	;# 
   689  001C                     	;# 
   690  001C                     	;# 
   691  001D                     	;# 
   692  001D                     	;# 
   693  001E                     	;# 
   694  001F                     	;# 
   695  008C                     	;# 
   696  008C                     	;# 
   697  008D                     	;# 
   698  008E                     	;# 
   699  008E                     	;# 
   700  008F                     	;# 
   701  0090                     	;# 
   702  0090                     	;# 
   703  0091                     	;# 
   704  0093                     	;# 
   705  0094                     	;# 
   706  0095                     	;# 
   707  0096                     	;# 
   708  0097                     	;# 
   709  0098                     	;# 
   710  0099                     	;# 
   711  009A                     	;# 
   712  009B                     	;# 
   713  009C                     	;# 
   714  009D                     	;# 
   715  009E                     	;# 
   716  010C                     	;# 
   717  010D                     	;# 
   718  010E                     	;# 
   719  010E                     	;# 
   720  010F                     	;# 
   721  0110                     	;# 
   722  0110                     	;# 
   723  0111                     	;# 
   724  0112                     	;# 
   725  0112                     	;# 
   726  0113                     	;# 
   727  0114                     	;# 
   728  0114                     	;# 
   729  0115                     	;# 
   730  0116                     	;# 
   731  0116                     	;# 
   732  0117                     	;# 
   733  0119                     	;# 
   734  0119                     	;# 
   735  0119                     	;# 
   736  011A                     	;# 
   737  011A                     	;# 
   738  011A                     	;# 
   739  011B                     	;# 
   740  011B                     	;# 
   741  011B                     	;# 
   742  011B                     	;# 
   743  011B                     	;# 
   744  011C                     	;# 
   745  011C                     	;# 
   746  011C                     	;# 
   747  011D                     	;# 
   748  011D                     	;# 
   749  011D                     	;# 
   750  011E                     	;# 
   751  011E                     	;# 
   752  011E                     	;# 
   753  011F                     	;# 
   754  011F                     	;# 
   755  011F                     	;# 
   756  011F                     	;# 
   757  011F                     	;# 
   758  018C                     	;# 
   759  018D                     	;# 
   760  018E                     	;# 
   761  018F                     	;# 
   762  0190                     	;# 
   763  0191                     	;# 
   764  0192                     	;# 
   765  0196                     	;# 
   766  0197                     	;# 
   767  0198                     	;# 
   768  0199                     	;# 
   769  019A                     	;# 
   770  019B                     	;# 
   771  019C                     	;# 
   772  020C                     	;# 
   773  020C                     	;# 
   774  020D                     	;# 
   775  020E                     	;# 
   776  020F                     	;# 
   777  020F                     	;# 
   778  0210                     	;# 
   779  0210                     	;# 
   780  0211                     	;# 
   781  0211                     	;# 
   782  0212                     	;# 
   783  0212                     	;# 
   784  0213                     	;# 
   785  0214                     	;# 
   786  0215                     	;# 
   787  0215                     	;# 
   788  0216                     	;# 
   789  0216                     	;# 
   790  0217                     	;# 
   791  0217                     	;# 
   792  0218                     	;# 
   793  0218                     	;# 
   794  0219                     	;# 
   795  021A                     	;# 
   796  021B                     	;# 
   797  021B                     	;# 
   798  021C                     	;# 
   799  021C                     	;# 
   800  021D                     	;# 
   801  021D                     	;# 
   802  021E                     	;# 
   803  021F                     	;# 
   804  028C                     	;# 
   805  028C                     	;# 
   806  028D                     	;# 
   807  028D                     	;# 
   808  028E                     	;# 
   809  028F                     	;# 
   810  0290                     	;# 
   811  0290                     	;# 
   812  0291                     	;# 
   813  0292                     	;# 
   814  0292                     	;# 
   815  0293                     	;# 
   816  0293                     	;# 
   817  0294                     	;# 
   818  0295                     	;# 
   819  0296                     	;# 
   820  0296                     	;# 
   821  0297                     	;# 
   822  0298                     	;# 
   823  0298                     	;# 
   824  0299                     	;# 
   825  0299                     	;# 
   826  029A                     	;# 
   827  029B                     	;# 
   828  029C                     	;# 
   829  029C                     	;# 
   830  029D                     	;# 
   831  030C                     	;# 
   832  030C                     	;# 
   833  030D                     	;# 
   834  030E                     	;# 
   835  030F                     	;# 
   836  0310                     	;# 
   837  0310                     	;# 
   838  0311                     	;# 
   839  0312                     	;# 
   840  0313                     	;# 
   841  0314                     	;# 
   842  0314                     	;# 
   843  0315                     	;# 
   844  0316                     	;# 
   845  0317                     	;# 
   846  0318                     	;# 
   847  0318                     	;# 
   848  0319                     	;# 
   849  031A                     	;# 
   850  031B                     	;# 
   851  031C                     	;# 
   852  031C                     	;# 
   853  031D                     	;# 
   854  031E                     	;# 
   855  031F                     	;# 
   856  038C                     	;# 
   857  038C                     	;# 
   858  038D                     	;# 
   859  038E                     	;# 
   860  0390                     	;# 
   861  0390                     	;# 
   862  0391                     	;# 
   863  0392                     	;# 
   864  040C                     	;# 
   865  040D                     	;# 
   866  040E                     	;# 
   867  040F                     	;# 
   868  0410                     	;# 
   869  0411                     	;# 
   870  0416                     	;# 
   871  0416                     	;# 
   872  0417                     	;# 
   873  0418                     	;# 
   874  0418                     	;# 
   875  0419                     	;# 
   876  041A                     	;# 
   877  041A                     	;# 
   878  041B                     	;# 
   879  041C                     	;# 
   880  041C                     	;# 
   881  041D                     	;# 
   882  041E                     	;# 
   883  041F                     	;# 
   884  048C                     	;# 
   885  048C                     	;# 
   886  048D                     	;# 
   887  048E                     	;# 
   888  048F                     	;# 
   889  048F                     	;# 
   890  0490                     	;# 
   891  0491                     	;# 
   892  0492                     	;# 
   893  0492                     	;# 
   894  0493                     	;# 
   895  0494                     	;# 
   896  0495                     	;# 
   897  0495                     	;# 
   898  0496                     	;# 
   899  0497                     	;# 
   900  0498                     	;# 
   901  0499                     	;# 
   902  049A                     	;# 
   903  049B                     	;# 
   904  049C                     	;# 
   905  049D                     	;# 
   906  050C                     	;# 
   907  050C                     	;# 
   908  050D                     	;# 
   909  050E                     	;# 
   910  050F                     	;# 
   911  050F                     	;# 
   912  0510                     	;# 
   913  0511                     	;# 
   914  0512                     	;# 
   915  0512                     	;# 
   916  0513                     	;# 
   917  0514                     	;# 
   918  0515                     	;# 
   919  0515                     	;# 
   920  0516                     	;# 
   921  0517                     	;# 
   922  0518                     	;# 
   923  0519                     	;# 
   924  051A                     	;# 
   925  051B                     	;# 
   926  051C                     	;# 
   927  051D                     	;# 
   928  058C                     	;# 
   929  058C                     	;# 
   930  058D                     	;# 
   931  058E                     	;# 
   932  058F                     	;# 
   933  058F                     	;# 
   934  0590                     	;# 
   935  0591                     	;# 
   936  0592                     	;# 
   937  0593                     	;# 
   938  060C                     	;# 
   939  060D                     	;# 
   940  060E                     	;# 
   941  060F                     	;# 
   942  0610                     	;# 
   943  0611                     	;# 
   944  0612                     	;# 
   945  0613                     	;# 
   946  0614                     	;# 
   947  0616                     	;# 
   948  0617                     	;# 
   949  0618                     	;# 
   950  0619                     	;# 
   951  061A                     	;# 
   952  061B                     	;# 
   953  061C                     	;# 
   954  061D                     	;# 
   955  061E                     	;# 
   956  068C                     	;# 
   957  068D                     	;# 
   958  068E                     	;# 
   959  068F                     	;# 
   960  0690                     	;# 
   961  0691                     	;# 
   962  0692                     	;# 
   963  0693                     	;# 
   964  0694                     	;# 
   965  070C                     	;# 
   966  070D                     	;# 
   967  070E                     	;# 
   968  070F                     	;# 
   969  0710                     	;# 
   970  0711                     	;# 
   971  0712                     	;# 
   972  0713                     	;# 
   973  0714                     	;# 
   974  0716                     	;# 
   975  0717                     	;# 
   976  0718                     	;# 
   977  0719                     	;# 
   978  071A                     	;# 
   979  071B                     	;# 
   980  071C                     	;# 
   981  071D                     	;# 
   982  071E                     	;# 
   983  0796                     	;# 
   984  0797                     	;# 
   985  0798                     	;# 
   986  0799                     	;# 
   987  079A                     	;# 
   988  079B                     	;# 
   989  080C                     	;# 
   990  080D                     	;# 
   991  080E                     	;# 
   992  080F                     	;# 
   993  0810                     	;# 
   994  0811                     	;# 
   995  0812                     	;# 
   996  0813                     	;# 
   997  0814                     	;# 
   998  081A                     	;# 
   999  081B                     	;# 
  1000  081C                     	;# 
  1001  081D                     	;# 
  1002  081E                     	;# 
  1003  081F                     	;# 
  1004  088C                     	;# 
  1005  088D                     	;# 
  1006  088E                     	;# 
  1007  088F                     	;# 
  1008  0890                     	;# 
  1009  0891                     	;# 
  1010  0892                     	;# 
  1011  0893                     	;# 
  1012  0895                     	;# 
  1013  0896                     	;# 
  1014  0897                     	;# 
  1015  0898                     	;# 
  1016  0899                     	;# 
  1017  089A                     	;# 
  1018  089B                     	;# 
  1019  090C                     	;# 
  1020  090E                     	;# 
  1021  090F                     	;# 
  1022  091F                     	;# 
  1023  091F                     	;# 
  1024  098F                     	;# 
  1025  098F                     	;# 
  1026  0990                     	;# 
  1027  0991                     	;# 
  1028  0992                     	;# 
  1029  0993                     	;# 
  1030  0994                     	;# 
  1031  0995                     	;# 
  1032  0996                     	;# 
  1033  0997                     	;# 
  1034  0E0F                     	;# 
  1035  0E10                     	;# 
  1036  0E11                     	;# 
  1037  0E12                     	;# 
  1038  0E13                     	;# 
  1039  0E14                     	;# 
  1040  0E15                     	;# 
  1041  0E16                     	;# 
  1042  0E17                     	;# 
  1043  0E18                     	;# 
  1044  0E19                     	;# 
  1045  0E1A                     	;# 
  1046  0E1B                     	;# 
  1047  0E1C                     	;# 
  1048  0E1D                     	;# 
  1049  0E1E                     	;# 
  1050  0E1F                     	;# 
  1051  0E20                     	;# 
  1052  0E21                     	;# 
  1053  0E22                     	;# 
  1054  0E23                     	;# 
  1055  0E24                     	;# 
  1056  0E25                     	;# 
  1057  0E26                     	;# 
  1058  0E27                     	;# 
  1059  0E28                     	;# 
  1060  0E29                     	;# 
  1061  0E2A                     	;# 
  1062  0E2B                     	;# 
  1063  0E2C                     	;# 
  1064  0E2D                     	;# 
  1065  0E2E                     	;# 
  1066  0E2F                     	;# 
  1067  0E30                     	;# 
  1068  0E31                     	;# 
  1069  0E32                     	;# 
  1070  0E33                     	;# 
  1071  0E34                     	;# 
  1072  0E35                     	;# 
  1073  0E36                     	;# 
  1074  0E37                     	;# 
  1075  0E8F                     	;# 
  1076  0E90                     	;# 
  1077  0E91                     	;# 
  1078  0E92                     	;# 
  1079  0E93                     	;# 
  1080  0E94                     	;# 
  1081  0E95                     	;# 
  1082  0E96                     	;# 
  1083  0E97                     	;# 
  1084  0E9C                     	;# 
  1085  0E9D                     	;# 
  1086  0E9E                     	;# 
  1087  0EA1                     	;# 
  1088  0EA2                     	;# 
  1089  0EA3                     	;# 
  1090  0EA4                     	;# 
  1091  0EA5                     	;# 
  1092  0EA9                     	;# 
  1093  0EAA                     	;# 
  1094  0EAB                     	;# 
  1095  0EAC                     	;# 
  1096  0EB1                     	;# 
  1097  0EB2                     	;# 
  1098  0EB3                     	;# 
  1099  0EB8                     	;# 
  1100  0EB9                     	;# 
  1101  0EBA                     	;# 
  1102  0EBB                     	;# 
  1103  0EBC                     	;# 
  1104  0EBD                     	;# 
  1105  0EBE                     	;# 
  1106  0EC3                     	;# 
  1107  0EC5                     	;# 
  1108  0EC6                     	;# 
  1109  0EC7                     	;# 
  1110  0EC8                     	;# 
  1111  0EC9                     	;# 
  1112  0ECA                     	;# 
  1113  0ECB                     	;# 
  1114  0ECC                     	;# 
  1115  0F10                     	;# 
  1116  0F11                     	;# 
  1117  0F12                     	;# 
  1118  0F13                     	;# 
  1119  0F14                     	;# 
  1120  0F15                     	;# 
  1121  0F16                     	;# 
  1122  0F17                     	;# 
  1123  0F18                     	;# 
  1124  0F19                     	;# 
  1125  0F1A                     	;# 
  1126  0F1B                     	;# 
  1127  0F1C                     	;# 
  1128  0F1D                     	;# 
  1129  0F1E                     	;# 
  1130  0F1F                     	;# 
  1131  0F20                     	;# 
  1132  0F21                     	;# 
  1133  0F22                     	;# 
  1134  0F23                     	;# 
  1135  0F24                     	;# 
  1136  0F25                     	;# 
  1137  0F26                     	;# 
  1138  0F27                     	;# 
  1139  0F28                     	;# 
  1140  0F29                     	;# 
  1141  0F2A                     	;# 
  1142  0F2B                     	;# 
  1143  0F2C                     	;# 
  1144  0F2D                     	;# 
  1145  0F2E                     	;# 
  1146  0F2F                     	;# 
  1147  0F30                     	;# 
  1148  0F31                     	;# 
  1149  0F32                     	;# 
  1150  0F38                     	;# 
  1151  0F39                     	;# 
  1152  0F3A                     	;# 
  1153  0F3B                     	;# 
  1154  0F3C                     	;# 
  1155  0F3D                     	;# 
  1156  0F3E                     	;# 
  1157  0F3F                     	;# 
  1158  0F40                     	;# 
  1159  0F41                     	;# 
  1160  0F43                     	;# 
  1161  0F44                     	;# 
  1162  0F45                     	;# 
  1163  0F46                     	;# 
  1164  0F47                     	;# 
  1165  0F48                     	;# 
  1166  0F49                     	;# 
  1167  0F4A                     	;# 
  1168  0F4B                     	;# 
  1169  0F4C                     	;# 
  1170  0F4E                     	;# 
  1171  0F4F                     	;# 
  1172  0F50                     	;# 
  1173  0F51                     	;# 
  1174  0F52                     	;# 
  1175  0F53                     	;# 
  1176  0F54                     	;# 
  1177  0F55                     	;# 
  1178  0F56                     	;# 
  1179  0F57                     	;# 
  1180  0F59                     	;# 
  1181  0F5A                     	;# 
  1182  0F5B                     	;# 
  1183  0F5C                     	;# 
  1184  0F5D                     	;# 
  1185  0F61                     	;# 
  1186  0F62                     	;# 
  1187  0F64                     	;# 
  1188  0F65                     	;# 
  1189  0F66                     	;# 
  1190  0F67                     	;# 
  1191  0F68                     	;# 
  1192  0F69                     	;# 
  1193  0F6A                     	;# 
  1194  0F6B                     	;# 
  1195  0F6C                     	;# 
  1196  0F6D                     	;# 
  1197  0FE4                     	;# 
  1198  0FE5                     	;# 
  1199  0FE6                     	;# 
  1200  0FE7                     	;# 
  1201  0FE8                     	;# 
  1202  0FE9                     	;# 
  1203  0FEA                     	;# 
  1204  0FEB                     	;# 
  1205  0FED                     	;# 
  1206  0FEE                     	;# 
  1207  0FEF                     	;# 
  1208  0000                     	;# 
  1209  0001                     	;# 
  1210  0002                     	;# 
  1211  0003                     	;# 
  1212  0004                     	;# 
  1213  0005                     	;# 
  1214  0006                     	;# 
  1215  0007                     	;# 
  1216  0008                     	;# 
  1217  0009                     	;# 
  1218  000A                     	;# 
  1219  000B                     	;# 
  1220  000C                     	;# 
  1221  000D                     	;# 
  1222  000E                     	;# 
  1223  000F                     	;# 
  1224  0010                     	;# 
  1225  0011                     	;# 
  1226  0012                     	;# 
  1227  0013                     	;# 
  1228  0014                     	;# 
  1229  0015                     	;# 
  1230  0016                     	;# 
  1231  0017                     	;# 
  1232  0018                     	;# 
  1233  0019                     	;# 
  1234  001A                     	;# 
  1235  001C                     	;# 
  1236  001C                     	;# 
  1237  001D                     	;# 
  1238  001D                     	;# 
  1239  001E                     	;# 
  1240  001F                     	;# 
  1241  008C                     	;# 
  1242  008C                     	;# 
  1243  008D                     	;# 
  1244  008E                     	;# 
  1245  008E                     	;# 
  1246  008F                     	;# 
  1247  0090                     	;# 
  1248  0090                     	;# 
  1249  0091                     	;# 
  1250  0093                     	;# 
  1251  0094                     	;# 
  1252  0095                     	;# 
  1253  0096                     	;# 
  1254  0097                     	;# 
  1255  0098                     	;# 
  1256  0099                     	;# 
  1257  009A                     	;# 
  1258  009B                     	;# 
  1259  009C                     	;# 
  1260  009D                     	;# 
  1261  009E                     	;# 
  1262  010C                     	;# 
  1263  010D                     	;# 
  1264  010E                     	;# 
  1265  010E                     	;# 
  1266  010F                     	;# 
  1267  0110                     	;# 
  1268  0110                     	;# 
  1269  0111                     	;# 
  1270  0112                     	;# 
  1271  0112                     	;# 
  1272  0113                     	;# 
  1273  0114                     	;# 
  1274  0114                     	;# 
  1275  0115                     	;# 
  1276  0116                     	;# 
  1277  0116                     	;# 
  1278  0117                     	;# 
  1279  0119                     	;# 
  1280  0119                     	;# 
  1281  0119                     	;# 
  1282  011A                     	;# 
  1283  011A                     	;# 
  1284  011A                     	;# 
  1285  011B                     	;# 
  1286  011B                     	;# 
  1287  011B                     	;# 
  1288  011B                     	;# 
  1289  011B                     	;# 
  1290  011C                     	;# 
  1291  011C                     	;# 
  1292  011C                     	;# 
  1293  011D                     	;# 
  1294  011D                     	;# 
  1295  011D                     	;# 
  1296  011E                     	;# 
  1297  011E                     	;# 
  1298  011E                     	;# 
  1299  011F                     	;# 
  1300  011F                     	;# 
  1301  011F                     	;# 
  1302  011F                     	;# 
  1303  011F                     	;# 
  1304  018C                     	;# 
  1305  018D                     	;# 
  1306  018E                     	;# 
  1307  018F                     	;# 
  1308  0190                     	;# 
  1309  0191                     	;# 
  1310  0192                     	;# 
  1311  0196                     	;# 
  1312  0197                     	;# 
  1313  0198                     	;# 
  1314  0199                     	;# 
  1315  019A                     	;# 
  1316  019B                     	;# 
  1317  019C                     	;# 
  1318  020C                     	;# 
  1319  020C                     	;# 
  1320  020D                     	;# 
  1321  020E                     	;# 
  1322  020F                     	;# 
  1323  020F                     	;# 
  1324  0210                     	;# 
  1325  0210                     	;# 
  1326  0211                     	;# 
  1327  0211                     	;# 
  1328  0212                     	;# 
  1329  0212                     	;# 
  1330  0213                     	;# 
  1331  0214                     	;# 
  1332  0215                     	;# 
  1333  0215                     	;# 
  1334  0216                     	;# 
  1335  0216                     	;# 
  1336  0217                     	;# 
  1337  0217                     	;# 
  1338  0218                     	;# 
  1339  0218                     	;# 
  1340  0219                     	;# 
  1341  021A                     	;# 
  1342  021B                     	;# 
  1343  021B                     	;# 
  1344  021C                     	;# 
  1345  021C                     	;# 
  1346  021D                     	;# 
  1347  021D                     	;# 
  1348  021E                     	;# 
  1349  021F                     	;# 
  1350  028C                     	;# 
  1351  028C                     	;# 
  1352  028D                     	;# 
  1353  028D                     	;# 
  1354  028E                     	;# 
  1355  028F                     	;# 
  1356  0290                     	;# 
  1357  0290                     	;# 
  1358  0291                     	;# 
  1359  0292                     	;# 
  1360  0292                     	;# 
  1361  0293                     	;# 
  1362  0293                     	;# 
  1363  0294                     	;# 
  1364  0295                     	;# 
  1365  0296                     	;# 
  1366  0296                     	;# 
  1367  0297                     	;# 
  1368  0298                     	;# 
  1369  0298                     	;# 
  1370  0299                     	;# 
  1371  0299                     	;# 
  1372  029A                     	;# 
  1373  029B                     	;# 
  1374  029C                     	;# 
  1375  029C                     	;# 
  1376  029D                     	;# 
  1377  030C                     	;# 
  1378  030C                     	;# 
  1379  030D                     	;# 
  1380  030E                     	;# 
  1381  030F                     	;# 
  1382  0310                     	;# 
  1383  0310                     	;# 
  1384  0311                     	;# 
  1385  0312                     	;# 
  1386  0313                     	;# 
  1387  0314                     	;# 
  1388  0314                     	;# 
  1389  0315                     	;# 
  1390  0316                     	;# 
  1391  0317                     	;# 
  1392  0318                     	;# 
  1393  0318                     	;# 
  1394  0319                     	;# 
  1395  031A                     	;# 
  1396  031B                     	;# 
  1397  031C                     	;# 
  1398  031C                     	;# 
  1399  031D                     	;# 
  1400  031E                     	;# 
  1401  031F                     	;# 
  1402  038C                     	;# 
  1403  038C                     	;# 
  1404  038D                     	;# 
  1405  038E                     	;# 
  1406  0390                     	;# 
  1407  0390                     	;# 
  1408  0391                     	;# 
  1409  0392                     	;# 
  1410  040C                     	;# 
  1411  040D                     	;# 
  1412  040E                     	;# 
  1413  040F                     	;# 
  1414  0410                     	;# 
  1415  0411                     	;# 
  1416  0416                     	;# 
  1417  0416                     	;# 
  1418  0417                     	;# 
  1419  0418                     	;# 
  1420  0418                     	;# 
  1421  0419                     	;# 
  1422  041A                     	;# 
  1423  041A                     	;# 
  1424  041B                     	;# 
  1425  041C                     	;# 
  1426  041C                     	;# 
  1427  041D                     	;# 
  1428  041E                     	;# 
  1429  041F                     	;# 
  1430  048C                     	;# 
  1431  048C                     	;# 
  1432  048D                     	;# 
  1433  048E                     	;# 
  1434  048F                     	;# 
  1435  048F                     	;# 
  1436  0490                     	;# 
  1437  0491                     	;# 
  1438  0492                     	;# 
  1439  0492                     	;# 
  1440  0493                     	;# 
  1441  0494                     	;# 
  1442  0495                     	;# 
  1443  0495                     	;# 
  1444  0496                     	;# 
  1445  0497                     	;# 
  1446  0498                     	;# 
  1447  0499                     	;# 
  1448  049A                     	;# 
  1449  049B                     	;# 
  1450  049C                     	;# 
  1451  049D                     	;# 
  1452  050C                     	;# 
  1453  050C                     	;# 
  1454  050D                     	;# 
  1455  050E                     	;# 
  1456  050F                     	;# 
  1457  050F                     	;# 
  1458  0510                     	;# 
  1459  0511                     	;# 
  1460  0512                     	;# 
  1461  0512                     	;# 
  1462  0513                     	;# 
  1463  0514                     	;# 
  1464  0515                     	;# 
  1465  0515                     	;# 
  1466  0516                     	;# 
  1467  0517                     	;# 
  1468  0518                     	;# 
  1469  0519                     	;# 
  1470  051A                     	;# 
  1471  051B                     	;# 
  1472  051C                     	;# 
  1473  051D                     	;# 
  1474  058C                     	;# 
  1475  058C                     	;# 
  1476  058D                     	;# 
  1477  058E                     	;# 
  1478  058F                     	;# 
  1479  058F                     	;# 
  1480  0590                     	;# 
  1481  0591                     	;# 
  1482  0592                     	;# 
  1483  0593                     	;# 
  1484  060C                     	;# 
  1485  060D                     	;# 
  1486  060E                     	;# 
  1487  060F                     	;# 
  1488  0610                     	;# 
  1489  0611                     	;# 
  1490  0612                     	;# 
  1491  0613                     	;# 
  1492  0614                     	;# 
  1493  0616                     	;# 
  1494  0617                     	;# 
  1495  0618                     	;# 
  1496  0619                     	;# 
  1497  061A                     	;# 
  1498  061B                     	;# 
  1499  061C                     	;# 
  1500  061D                     	;# 
  1501  061E                     	;# 
  1502  068C                     	;# 
  1503  068D                     	;# 
  1504  068E                     	;# 
  1505  068F                     	;# 
  1506  0690                     	;# 
  1507  0691                     	;# 
  1508  0692                     	;# 
  1509  0693                     	;# 
  1510  0694                     	;# 
  1511  070C                     	;# 
  1512  070D                     	;# 
  1513  070E                     	;# 
  1514  070F                     	;# 
  1515  0710                     	;# 
  1516  0711                     	;# 
  1517  0712                     	;# 
  1518  0713                     	;# 
  1519  0714                     	;# 
  1520  0716                     	;# 
  1521  0717                     	;# 
  1522  0718                     	;# 
  1523  0719                     	;# 
  1524  071A                     	;# 
  1525  071B                     	;# 
  1526  071C                     	;# 
  1527  071D                     	;# 
  1528  071E                     	;# 
  1529  0796                     	;# 
  1530  0797                     	;# 
  1531  0798                     	;# 
  1532  0799                     	;# 
  1533  079A                     	;# 
  1534  079B                     	;# 
  1535  080C                     	;# 
  1536  080D                     	;# 
  1537  080E                     	;# 
  1538  080F                     	;# 
  1539  0810                     	;# 
  1540  0811                     	;# 
  1541  0812                     	;# 
  1542  0813                     	;# 
  1543  0814                     	;# 
  1544  081A                     	;# 
  1545  081B                     	;# 
  1546  081C                     	;# 
  1547  081D                     	;# 
  1548  081E                     	;# 
  1549  081F                     	;# 
  1550  088C                     	;# 
  1551  088D                     	;# 
  1552  088E                     	;# 
  1553  088F                     	;# 
  1554  0890                     	;# 
  1555  0891                     	;# 
  1556  0892                     	;# 
  1557  0893                     	;# 
  1558  0895                     	;# 
  1559  0896                     	;# 
  1560  0897                     	;# 
  1561  0898                     	;# 
  1562  0899                     	;# 
  1563  089A                     	;# 
  1564  089B                     	;# 
  1565  090C                     	;# 
  1566  090E                     	;# 
  1567  090F                     	;# 
  1568  091F                     	;# 
  1569  091F                     	;# 
  1570  098F                     	;# 
  1571  098F                     	;# 
  1572  0990                     	;# 
  1573  0991                     	;# 
  1574  0992                     	;# 
  1575  0993                     	;# 
  1576  0994                     	;# 
  1577  0995                     	;# 
  1578  0996                     	;# 
  1579  0997                     	;# 
  1580  0E0F                     	;# 
  1581  0E10                     	;# 
  1582  0E11                     	;# 
  1583  0E12                     	;# 
  1584  0E13                     	;# 
  1585  0E14                     	;# 
  1586  0E15                     	;# 
  1587  0E16                     	;# 
  1588  0E17                     	;# 
  1589  0E18                     	;# 
  1590  0E19                     	;# 
  1591  0E1A                     	;# 
  1592  0E1B                     	;# 
  1593  0E1C                     	;# 
  1594  0E1D                     	;# 
  1595  0E1E                     	;# 
  1596  0E1F                     	;# 
  1597  0E20                     	;# 
  1598  0E21                     	;# 
  1599  0E22                     	;# 
  1600  0E23                     	;# 
  1601  0E24                     	;# 
  1602  0E25                     	;# 
  1603  0E26                     	;# 
  1604  0E27                     	;# 
  1605  0E28                     	;# 
  1606  0E29                     	;# 
  1607  0E2A                     	;# 
  1608  0E2B                     	;# 
  1609  0E2C                     	;# 
  1610  0E2D                     	;# 
  1611  0E2E                     	;# 
  1612  0E2F                     	;# 
  1613  0E30                     	;# 
  1614  0E31                     	;# 
  1615  0E32                     	;# 
  1616  0E33                     	;# 
  1617  0E34                     	;# 
  1618  0E35                     	;# 
  1619  0E36                     	;# 
  1620  0E37                     	;# 
  1621  0E8F                     	;# 
  1622  0E90                     	;# 
  1623  0E91                     	;# 
  1624  0E92                     	;# 
  1625  0E93                     	;# 
  1626  0E94                     	;# 
  1627  0E95                     	;# 
  1628  0E96                     	;# 
  1629  0E97                     	;# 
  1630  0E9C                     	;# 
  1631  0E9D                     	;# 
  1632  0E9E                     	;# 
  1633  0EA1                     	;# 
  1634  0EA2                     	;# 
  1635  0EA3                     	;# 
  1636  0EA4                     	;# 
  1637  0EA5                     	;# 
  1638  0EA9                     	;# 
  1639  0EAA                     	;# 
  1640  0EAB                     	;# 
  1641  0EAC                     	;# 
  1642  0EB1                     	;# 
  1643  0EB2                     	;# 
  1644  0EB3                     	;# 
  1645  0EB8                     	;# 
  1646  0EB9                     	;# 
  1647  0EBA                     	;# 
  1648  0EBB                     	;# 
  1649  0EBC                     	;# 
  1650  0EBD                     	;# 
  1651  0EBE                     	;# 
  1652  0EC3                     	;# 
  1653  0EC5                     	;# 
  1654  0EC6                     	;# 
  1655  0EC7                     	;# 
  1656  0EC8                     	;# 
  1657  0EC9                     	;# 
  1658  0ECA                     	;# 
  1659  0ECB                     	;# 
  1660  0ECC                     	;# 
  1661  0F10                     	;# 
  1662  0F11                     	;# 
  1663  0F12                     	;# 
  1664  0F13                     	;# 
  1665  0F14                     	;# 
  1666  0F15                     	;# 
  1667  0F16                     	;# 
  1668  0F17                     	;# 
  1669  0F18                     	;# 
  1670  0F19                     	;# 
  1671  0F1A                     	;# 
  1672  0F1B                     	;# 
  1673  0F1C                     	;# 
  1674  0F1D                     	;# 
  1675  0F1E                     	;# 
  1676  0F1F                     	;# 
  1677  0F20                     	;# 
  1678  0F21                     	;# 
  1679  0F22                     	;# 
  1680  0F23                     	;# 
  1681  0F24                     	;# 
  1682  0F25                     	;# 
  1683  0F26                     	;# 
  1684  0F27                     	;# 
  1685  0F28                     	;# 
  1686  0F29                     	;# 
  1687  0F2A                     	;# 
  1688  0F2B                     	;# 
  1689  0F2C                     	;# 
  1690  0F2D                     	;# 
  1691  0F2E                     	;# 
  1692  0F2F                     	;# 
  1693  0F30                     	;# 
  1694  0F31                     	;# 
  1695  0F32                     	;# 
  1696  0F38                     	;# 
  1697  0F39                     	;# 
  1698  0F3A                     	;# 
  1699  0F3B                     	;# 
  1700  0F3C                     	;# 
  1701  0F3D                     	;# 
  1702  0F3E                     	;# 
  1703  0F3F                     	;# 
  1704  0F40                     	;# 
  1705  0F41                     	;# 
  1706  0F43                     	;# 
  1707  0F44                     	;# 
  1708  0F45                     	;# 
  1709  0F46                     	;# 
  1710  0F47                     	;# 
  1711  0F48                     	;# 
  1712  0F49                     	;# 
  1713  0F4A                     	;# 
  1714  0F4B                     	;# 
  1715  0F4C                     	;# 
  1716  0F4E                     	;# 
  1717  0F4F                     	;# 
  1718  0F50                     	;# 
  1719  0F51                     	;# 
  1720  0F52                     	;# 
  1721  0F53                     	;# 
  1722  0F54                     	;# 
  1723  0F55                     	;# 
  1724  0F56                     	;# 
  1725  0F57                     	;# 
  1726  0F59                     	;# 
  1727  0F5A                     	;# 
  1728  0F5B                     	;# 
  1729  0F5C                     	;# 
  1730  0F5D                     	;# 
  1731  0F61                     	;# 
  1732  0F62                     	;# 
  1733  0F64                     	;# 
  1734  0F65                     	;# 
  1735  0F66                     	;# 
  1736  0F67                     	;# 
  1737  0F68                     	;# 
  1738  0F69                     	;# 
  1739  0F6A                     	;# 
  1740  0F6B                     	;# 
  1741  0F6C                     	;# 
  1742  0F6D                     	;# 
  1743  0FE4                     	;# 
  1744  0FE5                     	;# 
  1745  0FE6                     	;# 
  1746  0FE7                     	;# 
  1747  0FE8                     	;# 
  1748  0FE9                     	;# 
  1749  0FEA                     	;# 
  1750  0FEB                     	;# 
  1751  0FED                     	;# 
  1752  0FEE                     	;# 
  1753  0FEF                     	;# 
  1754  0000                     	;# 
  1755  0001                     	;# 
  1756  0002                     	;# 
  1757  0003                     	;# 
  1758  0004                     	;# 
  1759  0005                     	;# 
  1760  0006                     	;# 
  1761  0007                     	;# 
  1762  0008                     	;# 
  1763  0009                     	;# 
  1764  000A                     	;# 
  1765  000B                     	;# 
  1766  000C                     	;# 
  1767  000D                     	;# 
  1768  000E                     	;# 
  1769  000F                     	;# 
  1770  0010                     	;# 
  1771  0011                     	;# 
  1772  0012                     	;# 
  1773  0013                     	;# 
  1774  0014                     	;# 
  1775  0015                     	;# 
  1776  0016                     	;# 
  1777  0017                     	;# 
  1778  0018                     	;# 
  1779  0019                     	;# 
  1780  001A                     	;# 
  1781  001C                     	;# 
  1782  001C                     	;# 
  1783  001D                     	;# 
  1784  001D                     	;# 
  1785  001E                     	;# 
  1786  001F                     	;# 
  1787  008C                     	;# 
  1788  008C                     	;# 
  1789  008D                     	;# 
  1790  008E                     	;# 
  1791  008E                     	;# 
  1792  008F                     	;# 
  1793  0090                     	;# 
  1794  0090                     	;# 
  1795  0091                     	;# 
  1796  0093                     	;# 
  1797  0094                     	;# 
  1798  0095                     	;# 
  1799  0096                     	;# 
  1800  0097                     	;# 
  1801  0098                     	;# 
  1802  0099                     	;# 
  1803  009A                     	;# 
  1804  009B                     	;# 
  1805  009C                     	;# 
  1806  009D                     	;# 
  1807  009E                     	;# 
  1808  010C                     	;# 
  1809  010D                     	;# 
  1810  010E                     	;# 
  1811  010E                     	;# 
  1812  010F                     	;# 
  1813  0110                     	;# 
  1814  0110                     	;# 
  1815  0111                     	;# 
  1816  0112                     	;# 
  1817  0112                     	;# 
  1818  0113                     	;# 
  1819  0114                     	;# 
  1820  0114                     	;# 
  1821  0115                     	;# 
  1822  0116                     	;# 
  1823  0116                     	;# 
  1824  0117                     	;# 
  1825  0119                     	;# 
  1826  0119                     	;# 
  1827  0119                     	;# 
  1828  011A                     	;# 
  1829  011A                     	;# 
  1830  011A                     	;# 
  1831  011B                     	;# 
  1832  011B                     	;# 
  1833  011B                     	;# 
  1834  011B                     	;# 
  1835  011B                     	;# 
  1836  011C                     	;# 
  1837  011C                     	;# 
  1838  011C                     	;# 
  1839  011D                     	;# 
  1840  011D                     	;# 
  1841  011D                     	;# 
  1842  011E                     	;# 
  1843  011E                     	;# 
  1844  011E                     	;# 
  1845  011F                     	;# 
  1846  011F                     	;# 
  1847  011F                     	;# 
  1848  011F                     	;# 
  1849  011F                     	;# 
  1850  018C                     	;# 
  1851  018D                     	;# 
  1852  018E                     	;# 
  1853  018F                     	;# 
  1854  0190                     	;# 
  1855  0191                     	;# 
  1856  0192                     	;# 
  1857  0196                     	;# 
  1858  0197                     	;# 
  1859  0198                     	;# 
  1860  0199                     	;# 
  1861  019A                     	;# 
  1862  019B                     	;# 
  1863  019C                     	;# 
  1864  020C                     	;# 
  1865  020C                     	;# 
  1866  020D                     	;# 
  1867  020E                     	;# 
  1868  020F                     	;# 
  1869  020F                     	;# 
  1870  0210                     	;# 
  1871  0210                     	;# 
  1872  0211                     	;# 
  1873  0211                     	;# 
  1874  0212                     	;# 
  1875  0212                     	;# 
  1876  0213                     	;# 
  1877  0214                     	;# 
  1878  0215                     	;# 
  1879  0215                     	;# 
  1880  0216                     	;# 
  1881  0216                     	;# 
  1882  0217                     	;# 
  1883  0217                     	;# 
  1884  0218                     	;# 
  1885  0218                     	;# 
  1886  0219                     	;# 
  1887  021A                     	;# 
  1888  021B                     	;# 
  1889  021B                     	;# 
  1890  021C                     	;# 
  1891  021C                     	;# 
  1892  021D                     	;# 
  1893  021D                     	;# 
  1894  021E                     	;# 
  1895  021F                     	;# 
  1896  028C                     	;# 
  1897  028C                     	;# 
  1898  028D                     	;# 
  1899  028D                     	;# 
  1900  028E                     	;# 
  1901  028F                     	;# 
  1902  0290                     	;# 
  1903  0290                     	;# 
  1904  0291                     	;# 
  1905  0292                     	;# 
  1906  0292                     	;# 
  1907  0293                     	;# 
  1908  0293                     	;# 
  1909  0294                     	;# 
  1910  0295                     	;# 
  1911  0296                     	;# 
  1912  0296                     	;# 
  1913  0297                     	;# 
  1914  0298                     	;# 
  1915  0298                     	;# 
  1916  0299                     	;# 
  1917  0299                     	;# 
  1918  029A                     	;# 
  1919  029B                     	;# 
  1920  029C                     	;# 
  1921  029C                     	;# 
  1922  029D                     	;# 
  1923  030C                     	;# 
  1924  030C                     	;# 
  1925  030D                     	;# 
  1926  030E                     	;# 
  1927  030F                     	;# 
  1928  0310                     	;# 
  1929  0310                     	;# 
  1930  0311                     	;# 
  1931  0312                     	;# 
  1932  0313                     	;# 
  1933  0314                     	;# 
  1934  0314                     	;# 
  1935  0315                     	;# 
  1936  0316                     	;# 
  1937  0317                     	;# 
  1938  0318                     	;# 
  1939  0318                     	;# 
  1940  0319                     	;# 
  1941  031A                     	;# 
  1942  031B                     	;# 
  1943  031C                     	;# 
  1944  031C                     	;# 
  1945  031D                     	;# 
  1946  031E                     	;# 
  1947  031F                     	;# 
  1948  038C                     	;# 
  1949  038C                     	;# 
  1950  038D                     	;# 
  1951  038E                     	;# 
  1952  0390                     	;# 
  1953  0390                     	;# 
  1954  0391                     	;# 
  1955  0392                     	;# 
  1956  040C                     	;# 
  1957  040D                     	;# 
  1958  040E                     	;# 
  1959  040F                     	;# 
  1960  0410                     	;# 
  1961  0411                     	;# 
  1962  0416                     	;# 
  1963  0416                     	;# 
  1964  0417                     	;# 
  1965  0418                     	;# 
  1966  0418                     	;# 
  1967  0419                     	;# 
  1968  041A                     	;# 
  1969  041A                     	;# 
  1970  041B                     	;# 
  1971  041C                     	;# 
  1972  041C                     	;# 
  1973  041D                     	;# 
  1974  041E                     	;# 
  1975  041F                     	;# 
  1976  048C                     	;# 
  1977  048C                     	;# 
  1978  048D                     	;# 
  1979  048E                     	;# 
  1980  048F                     	;# 
  1981  048F                     	;# 
  1982  0490                     	;# 
  1983  0491                     	;# 
  1984  0492                     	;# 
  1985  0492                     	;# 
  1986  0493                     	;# 
  1987  0494                     	;# 
  1988  0495                     	;# 
  1989  0495                     	;# 
  1990  0496                     	;# 
  1991  0497                     	;# 
  1992  0498                     	;# 
  1993  0499                     	;# 
  1994  049A                     	;# 
  1995  049B                     	;# 
  1996  049C                     	;# 
  1997  049D                     	;# 
  1998  050C                     	;# 
  1999  050C                     	;# 
  2000  050D                     	;# 
  2001  050E                     	;# 
  2002  050F                     	;# 
  2003  050F                     	;# 
  2004  0510                     	;# 
  2005  0511                     	;# 
  2006  0512                     	;# 
  2007  0512                     	;# 
  2008  0513                     	;# 
  2009  0514                     	;# 
  2010  0515                     	;# 
  2011  0515                     	;# 
  2012  0516                     	;# 
  2013  0517                     	;# 
  2014  0518                     	;# 
  2015  0519                     	;# 
  2016  051A                     	;# 
  2017  051B                     	;# 
  2018  051C                     	;# 
  2019  051D                     	;# 
  2020  058C                     	;# 
  2021  058C                     	;# 
  2022  058D                     	;# 
  2023  058E                     	;# 
  2024  058F                     	;# 
  2025  058F                     	;# 
  2026  0590                     	;# 
  2027  0591                     	;# 
  2028  0592                     	;# 
  2029  0593                     	;# 
  2030  060C                     	;# 
  2031  060D                     	;# 
  2032  060E                     	;# 
  2033  060F                     	;# 
  2034  0610                     	;# 
  2035  0611                     	;# 
  2036  0612                     	;# 
  2037  0613                     	;# 
  2038  0614                     	;# 
  2039  0616                     	;# 
  2040  0617                     	;# 
  2041  0618                     	;# 
  2042  0619                     	;# 
  2043  061A                     	;# 
  2044  061B                     	;# 
  2045  061C                     	;# 
  2046  061D                     	;# 
  2047  061E                     	;# 
  2048  068C                     	;# 
  2049  068D                     	;# 
  2050  068E                     	;# 
  2051  068F                     	;# 
  2052  0690                     	;# 
  2053  0691                     	;# 
  2054  0692                     	;# 
  2055  0693                     	;# 
  2056  0694                     	;# 
  2057  070C                     	;# 
  2058  070D                     	;# 
  2059  070E                     	;# 
  2060  070F                     	;# 
  2061  0710                     	;# 
  2062  0711                     	;# 
  2063  0712                     	;# 
  2064  0713                     	;# 
  2065  0714                     	;# 
  2066  0716                     	;# 
  2067  0717                     	;# 
  2068  0718                     	;# 
  2069  0719                     	;# 
  2070  071A                     	;# 
  2071  071B                     	;# 
  2072  071C                     	;# 
  2073  071D                     	;# 
  2074  071E                     	;# 
  2075  0796                     	;# 
  2076  0797                     	;# 
  2077  0798                     	;# 
  2078  0799                     	;# 
  2079  079A                     	;# 
  2080  079B                     	;# 
  2081  080C                     	;# 
  2082  080D                     	;# 
  2083  080E                     	;# 
  2084  080F                     	;# 
  2085  0810                     	;# 
  2086  0811                     	;# 
  2087  0812                     	;# 
  2088  0813                     	;# 
  2089  0814                     	;# 
  2090  081A                     	;# 
  2091  081B                     	;# 
  2092  081C                     	;# 
  2093  081D                     	;# 
  2094  081E                     	;# 
  2095  081F                     	;# 
  2096  088C                     	;# 
  2097  088D                     	;# 
  2098  088E                     	;# 
  2099  088F                     	;# 
  2100  0890                     	;# 
  2101  0891                     	;# 
  2102  0892                     	;# 
  2103  0893                     	;# 
  2104  0895                     	;# 
  2105  0896                     	;# 
  2106  0897                     	;# 
  2107  0898                     	;# 
  2108  0899                     	;# 
  2109  089A                     	;# 
  2110  089B                     	;# 
  2111  090C                     	;# 
  2112  090E                     	;# 
  2113  090F                     	;# 
  2114  091F                     	;# 
  2115  091F                     	;# 
  2116  098F                     	;# 
  2117  098F                     	;# 
  2118  0990                     	;# 
  2119  0991                     	;# 
  2120  0992                     	;# 
  2121  0993                     	;# 
  2122  0994                     	;# 
  2123  0995                     	;# 
  2124  0996                     	;# 
  2125  0997                     	;# 
  2126  0E0F                     	;# 
  2127  0E10                     	;# 
  2128  0E11                     	;# 
  2129  0E12                     	;# 
  2130  0E13                     	;# 
  2131  0E14                     	;# 
  2132  0E15                     	;# 
  2133  0E16                     	;# 
  2134  0E17                     	;# 
  2135  0E18                     	;# 
  2136  0E19                     	;# 
  2137  0E1A                     	;# 
  2138  0E1B                     	;# 
  2139  0E1C                     	;# 
  2140  0E1D                     	;# 
  2141  0E1E                     	;# 
  2142  0E1F                     	;# 
  2143  0E20                     	;# 
  2144  0E21                     	;# 
  2145  0E22                     	;# 
  2146  0E23                     	;# 
  2147  0E24                     	;# 
  2148  0E25                     	;# 
  2149  0E26                     	;# 
  2150  0E27                     	;# 
  2151  0E28                     	;# 
  2152  0E29                     	;# 
  2153  0E2A                     	;# 
  2154  0E2B                     	;# 
  2155  0E2C                     	;# 
  2156  0E2D                     	;# 
  2157  0E2E                     	;# 
  2158  0E2F                     	;# 
  2159  0E30                     	;# 
  2160  0E31                     	;# 
  2161  0E32                     	;# 
  2162  0E33                     	;# 
  2163  0E34                     	;# 
  2164  0E35                     	;# 
  2165  0E36                     	;# 
  2166  0E37                     	;# 
  2167  0E8F                     	;# 
  2168  0E90                     	;# 
  2169  0E91                     	;# 
  2170  0E92                     	;# 
  2171  0E93                     	;# 
  2172  0E94                     	;# 
  2173  0E95                     	;# 
  2174  0E96                     	;# 
  2175  0E97                     	;# 
  2176  0E9C                     	;# 
  2177  0E9D                     	;# 
  2178  0E9E                     	;# 
  2179  0EA1                     	;# 
  2180  0EA2                     	;# 
  2181  0EA3                     	;# 
  2182  0EA4                     	;# 
  2183  0EA5                     	;# 
  2184  0EA9                     	;# 
  2185  0EAA                     	;# 
  2186  0EAB                     	;# 
  2187  0EAC                     	;# 
  2188  0EB1                     	;# 
  2189  0EB2                     	;# 
  2190  0EB3                     	;# 
  2191  0EB8                     	;# 
  2192  0EB9                     	;# 
  2193  0EBA                     	;# 
  2194  0EBB                     	;# 
  2195  0EBC                     	;# 
  2196  0EBD                     	;# 
  2197  0EBE                     	;# 
  2198  0EC3                     	;# 
  2199  0EC5                     	;# 
  2200  0EC6                     	;# 
  2201  0EC7                     	;# 
  2202  0EC8                     	;# 
  2203  0EC9                     	;# 
  2204  0ECA                     	;# 
  2205  0ECB                     	;# 
  2206  0ECC                     	;# 
  2207  0F10                     	;# 
  2208  0F11                     	;# 
  2209  0F12                     	;# 
  2210  0F13                     	;# 
  2211  0F14                     	;# 
  2212  0F15                     	;# 
  2213  0F16                     	;# 
  2214  0F17                     	;# 
  2215  0F18                     	;# 
  2216  0F19                     	;# 
  2217  0F1A                     	;# 
  2218  0F1B                     	;# 
  2219  0F1C                     	;# 
  2220  0F1D                     	;# 
  2221  0F1E                     	;# 
  2222  0F1F                     	;# 
  2223  0F20                     	;# 
  2224  0F21                     	;# 
  2225  0F22                     	;# 
  2226  0F23                     	;# 
  2227  0F24                     	;# 
  2228  0F25                     	;# 
  2229  0F26                     	;# 
  2230  0F27                     	;# 
  2231  0F28                     	;# 
  2232  0F29                     	;# 
  2233  0F2A                     	;# 
  2234  0F2B                     	;# 
  2235  0F2C                     	;# 
  2236  0F2D                     	;# 
  2237  0F2E                     	;# 
  2238  0F2F                     	;# 
  2239  0F30                     	;# 
  2240  0F31                     	;# 
  2241  0F32                     	;# 
  2242  0F38                     	;# 
  2243  0F39                     	;# 
  2244  0F3A                     	;# 
  2245  0F3B                     	;# 
  2246  0F3C                     	;# 
  2247  0F3D                     	;# 
  2248  0F3E                     	;# 
  2249  0F3F                     	;# 
  2250  0F40                     	;# 
  2251  0F41                     	;# 
  2252  0F43                     	;# 
  2253  0F44                     	;# 
  2254  0F45                     	;# 
  2255  0F46                     	;# 
  2256  0F47                     	;# 
  2257  0F48                     	;# 
  2258  0F49                     	;# 
  2259  0F4A                     	;# 
  2260  0F4B                     	;# 
  2261  0F4C                     	;# 
  2262  0F4E                     	;# 
  2263  0F4F                     	;# 
  2264  0F50                     	;# 
  2265  0F51                     	;# 
  2266  0F52                     	;# 
  2267  0F53                     	;# 
  2268  0F54                     	;# 
  2269  0F55                     	;# 
  2270  0F56                     	;# 
  2271  0F57                     	;# 
  2272  0F59                     	;# 
  2273  0F5A                     	;# 
  2274  0F5B                     	;# 
  2275  0F5C                     	;# 
  2276  0F5D                     	;# 
  2277  0F61                     	;# 
  2278  0F62                     	;# 
  2279  0F64                     	;# 
  2280  0F65                     	;# 
  2281  0F66                     	;# 
  2282  0F67                     	;# 
  2283  0F68                     	;# 
  2284  0F69                     	;# 
  2285  0F6A                     	;# 
  2286  0F6B                     	;# 
  2287  0F6C                     	;# 
  2288  0F6D                     	;# 
  2289  0FE4                     	;# 
  2290  0FE5                     	;# 
  2291  0FE6                     	;# 
  2292  0FE7                     	;# 
  2293  0FE8                     	;# 
  2294  0FE9                     	;# 
  2295  0FEA                     	;# 
  2296  0FEB                     	;# 
  2297  0FED                     	;# 
  2298  0FEE                     	;# 
  2299  0FEF                     	;# 
  2300  0000                     	;# 
  2301  0001                     	;# 
  2302  0002                     	;# 
  2303  0003                     	;# 
  2304  0004                     	;# 
  2305  0005                     	;# 
  2306  0006                     	;# 
  2307  0007                     	;# 
  2308  0008                     	;# 
  2309  0009                     	;# 
  2310  000A                     	;# 
  2311  000B                     	;# 
  2312  000C                     	;# 
  2313  000D                     	;# 
  2314  000E                     	;# 
  2315  000F                     	;# 
  2316  0010                     	;# 
  2317  0011                     	;# 
  2318  0012                     	;# 
  2319  0013                     	;# 
  2320  0014                     	;# 
  2321  0015                     	;# 
  2322  0016                     	;# 
  2323  0017                     	;# 
  2324  0018                     	;# 
  2325  0019                     	;# 
  2326  001A                     	;# 
  2327  001C                     	;# 
  2328  001C                     	;# 
  2329  001D                     	;# 
  2330  001D                     	;# 
  2331  001E                     	;# 
  2332  001F                     	;# 
  2333  008C                     	;# 
  2334  008C                     	;# 
  2335  008D                     	;# 
  2336  008E                     	;# 
  2337  008E                     	;# 
  2338  008F                     	;# 
  2339  0090                     	;# 
  2340  0090                     	;# 
  2341  0091                     	;# 
  2342  0093                     	;# 
  2343  0094                     	;# 
  2344  0095                     	;# 
  2345  0096                     	;# 
  2346  0097                     	;# 
  2347  0098                     	;# 
  2348  0099                     	;# 
  2349  009A                     	;# 
  2350  009B                     	;# 
  2351  009C                     	;# 
  2352  009D                     	;# 
  2353  009E                     	;# 
  2354  010C                     	;# 
  2355  010D                     	;# 
  2356  010E                     	;# 
  2357  010E                     	;# 
  2358  010F                     	;# 
  2359  0110                     	;# 
  2360  0110                     	;# 
  2361  0111                     	;# 
  2362  0112                     	;# 
  2363  0112                     	;# 
  2364  0113                     	;# 
  2365  0114                     	;# 
  2366  0114                     	;# 
  2367  0115                     	;# 
  2368  0116                     	;# 
  2369  0116                     	;# 
  2370  0117                     	;# 
  2371  0119                     	;# 
  2372  0119                     	;# 
  2373  0119                     	;# 
  2374  011A                     	;# 
  2375  011A                     	;# 
  2376  011A                     	;# 
  2377  011B                     	;# 
  2378  011B                     	;# 
  2379  011B                     	;# 
  2380  011B                     	;# 
  2381  011B                     	;# 
  2382  011C                     	;# 
  2383  011C                     	;# 
  2384  011C                     	;# 
  2385  011D                     	;# 
  2386  011D                     	;# 
  2387  011D                     	;# 
  2388  011E                     	;# 
  2389  011E                     	;# 
  2390  011E                     	;# 
  2391  011F                     	;# 
  2392  011F                     	;# 
  2393  011F                     	;# 
  2394  011F                     	;# 
  2395  011F                     	;# 
  2396  018C                     	;# 
  2397  018D                     	;# 
  2398  018E                     	;# 
  2399  018F                     	;# 
  2400  0190                     	;# 
  2401  0191                     	;# 
  2402  0192                     	;# 
  2403  0196                     	;# 
  2404  0197                     	;# 
  2405  0198                     	;# 
  2406  0199                     	;# 
  2407  019A                     	;# 
  2408  019B                     	;# 
  2409  019C                     	;# 
  2410  020C                     	;# 
  2411  020C                     	;# 
  2412  020D                     	;# 
  2413  020E                     	;# 
  2414  020F                     	;# 
  2415  020F                     	;# 
  2416  0210                     	;# 
  2417  0210                     	;# 
  2418  0211                     	;# 
  2419  0211                     	;# 
  2420  0212                     	;# 
  2421  0212                     	;# 
  2422  0213                     	;# 
  2423  0214                     	;# 
  2424  0215                     	;# 
  2425  0215                     	;# 
  2426  0216                     	;# 
  2427  0216                     	;# 
  2428  0217                     	;# 
  2429  0217                     	;# 
  2430  0218                     	;# 
  2431  0218                     	;# 
  2432  0219                     	;# 
  2433  021A                     	;# 
  2434  021B                     	;# 
  2435  021B                     	;# 
  2436  021C                     	;# 
  2437  021C                     	;# 
  2438  021D                     	;# 
  2439  021D                     	;# 
  2440  021E                     	;# 
  2441  021F                     	;# 
  2442  028C                     	;# 
  2443  028C                     	;# 
  2444  028D                     	;# 
  2445  028D                     	;# 
  2446  028E                     	;# 
  2447  028F                     	;# 
  2448  0290                     	;# 
  2449  0290                     	;# 
  2450  0291                     	;# 
  2451  0292                     	;# 
  2452  0292                     	;# 
  2453  0293                     	;# 
  2454  0293                     	;# 
  2455  0294                     	;# 
  2456  0295                     	;# 
  2457  0296                     	;# 
  2458  0296                     	;# 
  2459  0297                     	;# 
  2460  0298                     	;# 
  2461  0298                     	;# 
  2462  0299                     	;# 
  2463  0299                     	;# 
  2464  029A                     	;# 
  2465  029B                     	;# 
  2466  029C                     	;# 
  2467  029C                     	;# 
  2468  029D                     	;# 
  2469  030C                     	;# 
  2470  030C                     	;# 
  2471  030D                     	;# 
  2472  030E                     	;# 
  2473  030F                     	;# 
  2474  0310                     	;# 
  2475  0310                     	;# 
  2476  0311                     	;# 
  2477  0312                     	;# 
  2478  0313                     	;# 
  2479  0314                     	;# 
  2480  0314                     	;# 
  2481  0315                     	;# 
  2482  0316                     	;# 
  2483  0317                     	;# 
  2484  0318                     	;# 
  2485  0318                     	;# 
  2486  0319                     	;# 
  2487  031A                     	;# 
  2488  031B                     	;# 
  2489  031C                     	;# 
  2490  031C                     	;# 
  2491  031D                     	;# 
  2492  031E                     	;# 
  2493  031F                     	;# 
  2494  038C                     	;# 
  2495  038C                     	;# 
  2496  038D                     	;# 
  2497  038E                     	;# 
  2498  0390                     	;# 
  2499  0390                     	;# 
  2500  0391                     	;# 
  2501  0392                     	;# 
  2502  040C                     	;# 
  2503  040D                     	;# 
  2504  040E                     	;# 
  2505  040F                     	;# 
  2506  0410                     	;# 
  2507  0411                     	;# 
  2508  0416                     	;# 
  2509  0416                     	;# 
  2510  0417                     	;# 
  2511  0418                     	;# 
  2512  0418                     	;# 
  2513  0419                     	;# 
  2514  041A                     	;# 
  2515  041A                     	;# 
  2516  041B                     	;# 
  2517  041C                     	;# 
  2518  041C                     	;# 
  2519  041D                     	;# 
  2520  041E                     	;# 
  2521  041F                     	;# 
  2522  048C                     	;# 
  2523  048C                     	;# 
  2524  048D                     	;# 
  2525  048E                     	;# 
  2526  048F                     	;# 
  2527  048F                     	;# 
  2528  0490                     	;# 
  2529  0491                     	;# 
  2530  0492                     	;# 
  2531  0492                     	;# 
  2532  0493                     	;# 
  2533  0494                     	;# 
  2534  0495                     	;# 
  2535  0495                     	;# 
  2536  0496                     	;# 
  2537  0497                     	;# 
  2538  0498                     	;# 
  2539  0499                     	;# 
  2540  049A                     	;# 
  2541  049B                     	;# 
  2542  049C                     	;# 
  2543  049D                     	;# 
  2544  050C                     	;# 
  2545  050C                     	;# 
  2546  050D                     	;# 
  2547  050E                     	;# 
  2548  050F                     	;# 
  2549  050F                     	;# 
  2550  0510                     	;# 
  2551  0511                     	;# 
  2552  0512                     	;# 
  2553  0512                     	;# 
  2554  0513                     	;# 
  2555  0514                     	;# 
  2556  0515                     	;# 
  2557  0515                     	;# 
  2558  0516                     	;# 
  2559  0517                     	;# 
  2560  0518                     	;# 
  2561  0519                     	;# 
  2562  051A                     	;# 
  2563  051B                     	;# 
  2564  051C                     	;# 
  2565  051D                     	;# 
  2566  058C                     	;# 
  2567  058C                     	;# 
  2568  058D                     	;# 
  2569  058E                     	;# 
  2570  058F                     	;# 
  2571  058F                     	;# 
  2572  0590                     	;# 
  2573  0591                     	;# 
  2574  0592                     	;# 
  2575  0593                     	;# 
  2576  060C                     	;# 
  2577  060D                     	;# 
  2578  060E                     	;# 
  2579  060F                     	;# 
  2580  0610                     	;# 
  2581  0611                     	;# 
  2582  0612                     	;# 
  2583  0613                     	;# 
  2584  0614                     	;# 
  2585  0616                     	;# 
  2586  0617                     	;# 
  2587  0618                     	;# 
  2588  0619                     	;# 
  2589  061A                     	;# 
  2590  061B                     	;# 
  2591  061C                     	;# 
  2592  061D                     	;# 
  2593  061E                     	;# 
  2594  068C                     	;# 
  2595  068D                     	;# 
  2596  068E                     	;# 
  2597  068F                     	;# 
  2598  0690                     	;# 
  2599  0691                     	;# 
  2600  0692                     	;# 
  2601  0693                     	;# 
  2602  0694                     	;# 
  2603  070C                     	;# 
  2604  070D                     	;# 
  2605  070E                     	;# 
  2606  070F                     	;# 
  2607  0710                     	;# 
  2608  0711                     	;# 
  2609  0712                     	;# 
  2610  0713                     	;# 
  2611  0714                     	;# 
  2612  0716                     	;# 
  2613  0717                     	;# 
  2614  0718                     	;# 
  2615  0719                     	;# 
  2616  071A                     	;# 
  2617  071B                     	;# 
  2618  071C                     	;# 
  2619  071D                     	;# 
  2620  071E                     	;# 
  2621  0796                     	;# 
  2622  0797                     	;# 
  2623  0798                     	;# 
  2624  0799                     	;# 
  2625  079A                     	;# 
  2626  079B                     	;# 
  2627  080C                     	;# 
  2628  080D                     	;# 
  2629  080E                     	;# 
  2630  080F                     	;# 
  2631  0810                     	;# 
  2632  0811                     	;# 
  2633  0812                     	;# 
  2634  0813                     	;# 
  2635  0814                     	;# 
  2636  081A                     	;# 
  2637  081B                     	;# 
  2638  081C                     	;# 
  2639  081D                     	;# 
  2640  081E                     	;# 
  2641  081F                     	;# 
  2642  088C                     	;# 
  2643  088D                     	;# 
  2644  088E                     	;# 
  2645  088F                     	;# 
  2646  0890                     	;# 
  2647  0891                     	;# 
  2648  0892                     	;# 
  2649  0893                     	;# 
  2650  0895                     	;# 
  2651  0896                     	;# 
  2652  0897                     	;# 
  2653  0898                     	;# 
  2654  0899                     	;# 
  2655  089A                     	;# 
  2656  089B                     	;# 
  2657  090C                     	;# 
  2658  090E                     	;# 
  2659  090F                     	;# 
  2660  091F                     	;# 
  2661  091F                     	;# 
  2662  098F                     	;# 
  2663  098F                     	;# 
  2664  0990                     	;# 
  2665  0991                     	;# 
  2666  0992                     	;# 
  2667  0993                     	;# 
  2668  0994                     	;# 
  2669  0995                     	;# 
  2670  0996                     	;# 
  2671  0997                     	;# 
  2672  0E0F                     	;# 
  2673  0E10                     	;# 
  2674  0E11                     	;# 
  2675  0E12                     	;# 
  2676  0E13                     	;# 
  2677  0E14                     	;# 
  2678  0E15                     	;# 
  2679  0E16                     	;# 
  2680  0E17                     	;# 
  2681  0E18                     	;# 
  2682  0E19                     	;# 
  2683  0E1A                     	;# 
  2684  0E1B                     	;# 
  2685  0E1C                     	;# 
  2686  0E1D                     	;# 
  2687  0E1E                     	;# 
  2688  0E1F                     	;# 
  2689  0E20                     	;# 
  2690  0E21                     	;# 
  2691  0E22                     	;# 
  2692  0E23                     	;# 
  2693  0E24                     	;# 
  2694  0E25                     	;# 
  2695  0E26                     	;# 
  2696  0E27                     	;# 
  2697  0E28                     	;# 
  2698  0E29                     	;# 
  2699  0E2A                     	;# 
  2700  0E2B                     	;# 
  2701  0E2C                     	;# 
  2702  0E2D                     	;# 
  2703  0E2E                     	;# 
  2704  0E2F                     	;# 
  2705  0E30                     	;# 
  2706  0E31                     	;# 
  2707  0E32                     	;# 
  2708  0E33                     	;# 
  2709  0E34                     	;# 
  2710  0E35                     	;# 
  2711  0E36                     	;# 
  2712  0E37                     	;# 
  2713  0E8F                     	;# 
  2714  0E90                     	;# 
  2715  0E91                     	;# 
  2716  0E92                     	;# 
  2717  0E93                     	;# 
  2718  0E94                     	;# 
  2719  0E95                     	;# 
  2720  0E96                     	;# 
  2721  0E97                     	;# 
  2722  0E9C                     	;# 
  2723  0E9D                     	;# 
  2724  0E9E                     	;# 
  2725  0EA1                     	;# 
  2726  0EA2                     	;# 
  2727  0EA3                     	;# 
  2728  0EA4                     	;# 
  2729  0EA5                     	;# 
  2730  0EA9                     	;# 
  2731  0EAA                     	;# 
  2732  0EAB                     	;# 
  2733  0EAC                     	;# 
  2734  0EB1                     	;# 
  2735  0EB2                     	;# 
  2736  0EB3                     	;# 
  2737  0EB8                     	;# 
  2738  0EB9                     	;# 
  2739  0EBA                     	;# 
  2740  0EBB                     	;# 
  2741  0EBC                     	;# 
  2742  0EBD                     	;# 
  2743  0EBE                     	;# 
  2744  0EC3                     	;# 
  2745  0EC5                     	;# 
  2746  0EC6                     	;# 
  2747  0EC7                     	;# 
  2748  0EC8                     	;# 
  2749  0EC9                     	;# 
  2750  0ECA                     	;# 
  2751  0ECB                     	;# 
  2752  0ECC                     	;# 
  2753  0F10                     	;# 
  2754  0F11                     	;# 
  2755  0F12                     	;# 
  2756  0F13                     	;# 
  2757  0F14                     	;# 
  2758  0F15                     	;# 
  2759  0F16                     	;# 
  2760  0F17                     	;# 
  2761  0F18                     	;# 
  2762  0F19                     	;# 
  2763  0F1A                     	;# 
  2764  0F1B                     	;# 
  2765  0F1C                     	;# 
  2766  0F1D                     	;# 
  2767  0F1E                     	;# 
  2768  0F1F                     	;# 
  2769  0F20                     	;# 
  2770  0F21                     	;# 
  2771  0F22                     	;# 
  2772  0F23                     	;# 
  2773  0F24                     	;# 
  2774  0F25                     	;# 
  2775  0F26                     	;# 
  2776  0F27                     	;# 
  2777  0F28                     	;# 
  2778  0F29                     	;# 
  2779  0F2A                     	;# 
  2780  0F2B                     	;# 
  2781  0F2C                     	;# 
  2782  0F2D                     	;# 
  2783  0F2E                     	;# 
  2784  0F2F                     	;# 
  2785  0F30                     	;# 
  2786  0F31                     	;# 
  2787  0F32                     	;# 
  2788  0F38                     	;# 
  2789  0F39                     	;# 
  2790  0F3A                     	;# 
  2791  0F3B                     	;# 
  2792  0F3C                     	;# 
  2793  0F3D                     	;# 
  2794  0F3E                     	;# 
  2795  0F3F                     	;# 
  2796  0F40                     	;# 
  2797  0F41                     	;# 
  2798  0F43                     	;# 
  2799  0F44                     	;# 
  2800  0F45                     	;# 
  2801  0F46                     	;# 
  2802  0F47                     	;# 
  2803  0F48                     	;# 
  2804  0F49                     	;# 
  2805  0F4A                     	;# 
  2806  0F4B                     	;# 
  2807  0F4C                     	;# 
  2808  0F4E                     	;# 
  2809  0F4F                     	;# 
  2810  0F50                     	;# 
  2811  0F51                     	;# 
  2812  0F52                     	;# 
  2813  0F53                     	;# 
  2814  0F54                     	;# 
  2815  0F55                     	;# 
  2816  0F56                     	;# 
  2817  0F57                     	;# 
  2818  0F59                     	;# 
  2819  0F5A                     	;# 
  2820  0F5B                     	;# 
  2821  0F5C                     	;# 
  2822  0F5D                     	;# 
  2823  0F61                     	;# 
  2824  0F62                     	;# 
  2825  0F64                     	;# 
  2826  0F65                     	;# 
  2827  0F66                     	;# 
  2828  0F67                     	;# 
  2829  0F68                     	;# 
  2830  0F69                     	;# 
  2831  0F6A                     	;# 
  2832  0F6B                     	;# 
  2833  0F6C                     	;# 
  2834  0F6D                     	;# 
  2835  0FE4                     	;# 
  2836  0FE5                     	;# 
  2837  0FE6                     	;# 
  2838  0FE7                     	;# 
  2839  0FE8                     	;# 
  2840  0FE9                     	;# 
  2841  0FEA                     	;# 
  2842  0FEB                     	;# 
  2843  0FED                     	;# 
  2844  0FEE                     	;# 
  2845  0FEF                     	;# 
  2846  0000                     	;# 
  2847  0001                     	;# 
  2848  0002                     	;# 
  2849  0003                     	;# 
  2850  0004                     	;# 
  2851  0005                     	;# 
  2852  0006                     	;# 
  2853  0007                     	;# 
  2854  0008                     	;# 
  2855  0009                     	;# 
  2856  000A                     	;# 
  2857  000B                     	;# 
  2858  000C                     	;# 
  2859  000D                     	;# 
  2860  000E                     	;# 
  2861  000F                     	;# 
  2862  0010                     	;# 
  2863  0011                     	;# 
  2864  0012                     	;# 
  2865  0013                     	;# 
  2866  0014                     	;# 
  2867  0015                     	;# 
  2868  0016                     	;# 
  2869  0017                     	;# 
  2870  0018                     	;# 
  2871  0019                     	;# 
  2872  001A                     	;# 
  2873  001C                     	;# 
  2874  001C                     	;# 
  2875  001D                     	;# 
  2876  001D                     	;# 
  2877  001E                     	;# 
  2878  001F                     	;# 
  2879  008C                     	;# 
  2880  008C                     	;# 
  2881  008D                     	;# 
  2882  008E                     	;# 
  2883  008E                     	;# 
  2884  008F                     	;# 
  2885  0090                     	;# 
  2886  0090                     	;# 
  2887  0091                     	;# 
  2888  0093                     	;# 
  2889  0094                     	;# 
  2890  0095                     	;# 
  2891  0096                     	;# 
  2892  0097                     	;# 
  2893  0098                     	;# 
  2894  0099                     	;# 
  2895  009A                     	;# 
  2896  009B                     	;# 
  2897  009C                     	;# 
  2898  009D                     	;# 
  2899  009E                     	;# 
  2900  010C                     	;# 
  2901  010D                     	;# 
  2902  010E                     	;# 
  2903  010E                     	;# 
  2904  010F                     	;# 
  2905  0110                     	;# 
  2906  0110                     	;# 
  2907  0111                     	;# 
  2908  0112                     	;# 
  2909  0112                     	;# 
  2910  0113                     	;# 
  2911  0114                     	;# 
  2912  0114                     	;# 
  2913  0115                     	;# 
  2914  0116                     	;# 
  2915  0116                     	;# 
  2916  0117                     	;# 
  2917  0119                     	;# 
  2918  0119                     	;# 
  2919  0119                     	;# 
  2920  011A                     	;# 
  2921  011A                     	;# 
  2922  011A                     	;# 
  2923  011B                     	;# 
  2924  011B                     	;# 
  2925  011B                     	;# 
  2926  011B                     	;# 
  2927  011B                     	;# 
  2928  011C                     	;# 
  2929  011C                     	;# 
  2930  011C                     	;# 
  2931  011D                     	;# 
  2932  011D                     	;# 
  2933  011D                     	;# 
  2934  011E                     	;# 
  2935  011E                     	;# 
  2936  011E                     	;# 
  2937  011F                     	;# 
  2938  011F                     	;# 
  2939  011F                     	;# 
  2940  011F                     	;# 
  2941  011F                     	;# 
  2942  018C                     	;# 
  2943  018D                     	;# 
  2944  018E                     	;# 
  2945  018F                     	;# 
  2946  0190                     	;# 
  2947  0191                     	;# 
  2948  0192                     	;# 
  2949  0196                     	;# 
  2950  0197                     	;# 
  2951  0198                     	;# 
  2952  0199                     	;# 
  2953  019A                     	;# 
  2954  019B                     	;# 
  2955  019C                     	;# 
  2956  020C                     	;# 
  2957  020C                     	;# 
  2958  020D                     	;# 
  2959  020E                     	;# 
  2960  020F                     	;# 
  2961  020F                     	;# 
  2962  0210                     	;# 
  2963  0210                     	;# 
  2964  0211                     	;# 
  2965  0211                     	;# 
  2966  0212                     	;# 
  2967  0212                     	;# 
  2968  0213                     	;# 
  2969  0214                     	;# 
  2970  0215                     	;# 
  2971  0215                     	;# 
  2972  0216                     	;# 
  2973  0216                     	;# 
  2974  0217                     	;# 
  2975  0217                     	;# 
  2976  0218                     	;# 
  2977  0218                     	;# 
  2978  0219                     	;# 
  2979  021A                     	;# 
  2980  021B                     	;# 
  2981  021B                     	;# 
  2982  021C                     	;# 
  2983  021C                     	;# 
  2984  021D                     	;# 
  2985  021D                     	;# 
  2986  021E                     	;# 
  2987  021F                     	;# 
  2988  028C                     	;# 
  2989  028C                     	;# 
  2990  028D                     	;# 
  2991  028D                     	;# 
  2992  028E                     	;# 
  2993  028F                     	;# 
  2994  0290                     	;# 
  2995  0290                     	;# 
  2996  0291                     	;# 
  2997  0292                     	;# 
  2998  0292                     	;# 
  2999  0293                     	;# 
  3000  0293                     	;# 
  3001  0294                     	;# 
  3002  0295                     	;# 
  3003  0296                     	;# 
  3004  0296                     	;# 
  3005  0297                     	;# 
  3006  0298                     	;# 
  3007  0298                     	;# 
  3008  0299                     	;# 
  3009  0299                     	;# 
  3010  029A                     	;# 
  3011  029B                     	;# 
  3012  029C                     	;# 
  3013  029C                     	;# 
  3014  029D                     	;# 
  3015  030C                     	;# 
  3016  030C                     	;# 
  3017  030D                     	;# 
  3018  030E                     	;# 
  3019  030F                     	;# 
  3020  0310                     	;# 
  3021  0310                     	;# 
  3022  0311                     	;# 
  3023  0312                     	;# 
  3024  0313                     	;# 
  3025  0314                     	;# 
  3026  0314                     	;# 
  3027  0315                     	;# 
  3028  0316                     	;# 
  3029  0317                     	;# 
  3030  0318                     	;# 
  3031  0318                     	;# 
  3032  0319                     	;# 
  3033  031A                     	;# 
  3034  031B                     	;# 
  3035  031C                     	;# 
  3036  031C                     	;# 
  3037  031D                     	;# 
  3038  031E                     	;# 
  3039  031F                     	;# 
  3040  038C                     	;# 
  3041  038C                     	;# 
  3042  038D                     	;# 
  3043  038E                     	;# 
  3044  0390                     	;# 
  3045  0390                     	;# 
  3046  0391                     	;# 
  3047  0392                     	;# 
  3048  040C                     	;# 
  3049  040D                     	;# 
  3050  040E                     	;# 
  3051  040F                     	;# 
  3052  0410                     	;# 
  3053  0411                     	;# 
  3054  0416                     	;# 
  3055  0416                     	;# 
  3056  0417                     	;# 
  3057  0418                     	;# 
  3058  0418                     	;# 
  3059  0419                     	;# 
  3060  041A                     	;# 
  3061  041A                     	;# 
  3062  041B                     	;# 
  3063  041C                     	;# 
  3064  041C                     	;# 
  3065  041D                     	;# 
  3066  041E                     	;# 
  3067  041F                     	;# 
  3068  048C                     	;# 
  3069  048C                     	;# 
  3070  048D                     	;# 
  3071  048E                     	;# 
  3072  048F                     	;# 
  3073  048F                     	;# 
  3074  0490                     	;# 
  3075  0491                     	;# 
  3076  0492                     	;# 
  3077  0492                     	;# 
  3078  0493                     	;# 
  3079  0494                     	;# 
  3080  0495                     	;# 
  3081  0495                     	;# 
  3082  0496                     	;# 
  3083  0497                     	;# 
  3084  0498                     	;# 
  3085  0499                     	;# 
  3086  049A                     	;# 
  3087  049B                     	;# 
  3088  049C                     	;# 
  3089  049D                     	;# 
  3090  050C                     	;# 
  3091  050C                     	;# 
  3092  050D                     	;# 
  3093  050E                     	;# 
  3094  050F                     	;# 
  3095  050F                     	;# 
  3096  0510                     	;# 
  3097  0511                     	;# 
  3098  0512                     	;# 
  3099  0512                     	;# 
  3100  0513                     	;# 
  3101  0514                     	;# 
  3102  0515                     	;# 
  3103  0515                     	;# 
  3104  0516                     	;# 
  3105  0517                     	;# 
  3106  0518                     	;# 
  3107  0519                     	;# 
  3108  051A                     	;# 
  3109  051B                     	;# 
  3110  051C                     	;# 
  3111  051D                     	;# 
  3112  058C                     	;# 
  3113  058C                     	;# 
  3114  058D                     	;# 
  3115  058E                     	;# 
  3116  058F                     	;# 
  3117  058F                     	;# 
  3118  0590                     	;# 
  3119  0591                     	;# 
  3120  0592                     	;# 
  3121  0593                     	;# 
  3122  060C                     	;# 
  3123  060D                     	;# 
  3124  060E                     	;# 
  3125  060F                     	;# 
  3126  0610                     	;# 
  3127  0611                     	;# 
  3128  0612                     	;# 
  3129  0613                     	;# 
  3130  0614                     	;# 
  3131  0616                     	;# 
  3132  0617                     	;# 
  3133  0618                     	;# 
  3134  0619                     	;# 
  3135  061A                     	;# 
  3136  061B                     	;# 
  3137  061C                     	;# 
  3138  061D                     	;# 
  3139  061E                     	;# 
  3140  068C                     	;# 
  3141  068D                     	;# 
  3142  068E                     	;# 
  3143  068F                     	;# 
  3144  0690                     	;# 
  3145  0691                     	;# 
  3146  0692                     	;# 
  3147  0693                     	;# 
  3148  0694                     	;# 
  3149  070C                     	;# 
  3150  070D                     	;# 
  3151  070E                     	;# 
  3152  070F                     	;# 
  3153  0710                     	;# 
  3154  0711                     	;# 
  3155  0712                     	;# 
  3156  0713                     	;# 
  3157  0714                     	;# 
  3158  0716                     	;# 
  3159  0717                     	;# 
  3160  0718                     	;# 
  3161  0719                     	;# 
  3162  071A                     	;# 
  3163  071B                     	;# 
  3164  071C                     	;# 
  3165  071D                     	;# 
  3166  071E                     	;# 
  3167  0796                     	;# 
  3168  0797                     	;# 
  3169  0798                     	;# 
  3170  0799                     	;# 
  3171  079A                     	;# 
  3172  079B                     	;# 
  3173  080C                     	;# 
  3174  080D                     	;# 
  3175  080E                     	;# 
  3176  080F                     	;# 
  3177  0810                     	;# 
  3178  0811                     	;# 
  3179  0812                     	;# 
  3180  0813                     	;# 
  3181  0814                     	;# 
  3182  081A                     	;# 
  3183  081B                     	;# 
  3184  081C                     	;# 
  3185  081D                     	;# 
  3186  081E                     	;# 
  3187  081F                     	;# 
  3188  088C                     	;# 
  3189  088D                     	;# 
  3190  088E                     	;# 
  3191  088F                     	;# 
  3192  0890                     	;# 
  3193  0891                     	;# 
  3194  0892                     	;# 
  3195  0893                     	;# 
  3196  0895                     	;# 
  3197  0896                     	;# 
  3198  0897                     	;# 
  3199  0898                     	;# 
  3200  0899                     	;# 
  3201  089A                     	;# 
  3202  089B                     	;# 
  3203  090C                     	;# 
  3204  090E                     	;# 
  3205  090F                     	;# 
  3206  091F                     	;# 
  3207  091F                     	;# 
  3208  098F                     	;# 
  3209  098F                     	;# 
  3210  0990                     	;# 
  3211  0991                     	;# 
  3212  0992                     	;# 
  3213  0993                     	;# 
  3214  0994                     	;# 
  3215  0995                     	;# 
  3216  0996                     	;# 
  3217  0997                     	;# 
  3218  0E0F                     	;# 
  3219  0E10                     	;# 
  3220  0E11                     	;# 
  3221  0E12                     	;# 
  3222  0E13                     	;# 
  3223  0E14                     	;# 
  3224  0E15                     	;# 
  3225  0E16                     	;# 
  3226  0E17                     	;# 
  3227  0E18                     	;# 
  3228  0E19                     	;# 
  3229  0E1A                     	;# 
  3230  0E1B                     	;# 
  3231  0E1C                     	;# 
  3232  0E1D                     	;# 
  3233  0E1E                     	;# 
  3234  0E1F                     	;# 
  3235  0E20                     	;# 
  3236  0E21                     	;# 
  3237  0E22                     	;# 
  3238  0E23                     	;# 
  3239  0E24                     	;# 
  3240  0E25                     	;# 
  3241  0E26                     	;# 
  3242  0E27                     	;# 
  3243  0E28                     	;# 
  3244  0E29                     	;# 
  3245  0E2A                     	;# 
  3246  0E2B                     	;# 
  3247  0E2C                     	;# 
  3248  0E2D                     	;# 
  3249  0E2E                     	;# 
  3250  0E2F                     	;# 
  3251  0E30                     	;# 
  3252  0E31                     	;# 
  3253  0E32                     	;# 
  3254  0E33                     	;# 
  3255  0E34                     	;# 
  3256  0E35                     	;# 
  3257  0E36                     	;# 
  3258  0E37                     	;# 
  3259  0E8F                     	;# 
  3260  0E90                     	;# 
  3261  0E91                     	;# 
  3262  0E92                     	;# 
  3263  0E93                     	;# 
  3264  0E94                     	;# 
  3265  0E95                     	;# 
  3266  0E96                     	;# 
  3267  0E97                     	;# 
  3268  0E9C                     	;# 
  3269  0E9D                     	;# 
  3270  0E9E                     	;# 
  3271  0EA1                     	;# 
  3272  0EA2                     	;# 
  3273  0EA3                     	;# 
  3274  0EA4                     	;# 
  3275  0EA5                     	;# 
  3276  0EA9                     	;# 
  3277  0EAA                     	;# 
  3278  0EAB                     	;# 
  3279  0EAC                     	;# 
  3280  0EB1                     	;# 
  3281  0EB2                     	;# 
  3282  0EB3                     	;# 
  3283  0EB8                     	;# 
  3284  0EB9                     	;# 
  3285  0EBA                     	;# 
  3286  0EBB                     	;# 
  3287  0EBC                     	;# 
  3288  0EBD                     	;# 
  3289  0EBE                     	;# 
  3290  0EC3                     	;# 
  3291  0EC5                     	;# 
  3292  0EC6                     	;# 
  3293  0EC7                     	;# 
  3294  0EC8                     	;# 
  3295  0EC9                     	;# 
  3296  0ECA                     	;# 
  3297  0ECB                     	;# 
  3298  0ECC                     	;# 
  3299  0F10                     	;# 
  3300  0F11                     	;# 
  3301  0F12                     	;# 
  3302  0F13                     	;# 
  3303  0F14                     	;# 
  3304  0F15                     	;# 
  3305  0F16                     	;# 
  3306  0F17                     	;# 
  3307  0F18                     	;# 
  3308  0F19                     	;# 
  3309  0F1A                     	;# 
  3310  0F1B                     	;# 
  3311  0F1C                     	;# 
  3312  0F1D                     	;# 
  3313  0F1E                     	;# 
  3314  0F1F                     	;# 
  3315  0F20                     	;# 
  3316  0F21                     	;# 
  3317  0F22                     	;# 
  3318  0F23                     	;# 
  3319  0F24                     	;# 
  3320  0F25                     	;# 
  3321  0F26                     	;# 
  3322  0F27                     	;# 
  3323  0F28                     	;# 
  3324  0F29                     	;# 
  3325  0F2A                     	;# 
  3326  0F2B                     	;# 
  3327  0F2C                     	;# 
  3328  0F2D                     	;# 
  3329  0F2E                     	;# 
  3330  0F2F                     	;# 
  3331  0F30                     	;# 
  3332  0F31                     	;# 
  3333  0F32                     	;# 
  3334  0F38                     	;# 
  3335  0F39                     	;# 
  3336  0F3A                     	;# 
  3337  0F3B                     	;# 
  3338  0F3C                     	;# 
  3339  0F3D                     	;# 
  3340  0F3E                     	;# 
  3341  0F3F                     	;# 
  3342  0F40                     	;# 
  3343  0F41                     	;# 
  3344  0F43                     	;# 
  3345  0F44                     	;# 
  3346  0F45                     	;# 
  3347  0F46                     	;# 
  3348  0F47                     	;# 
  3349  0F48                     	;# 
  3350  0F49                     	;# 
  3351  0F4A                     	;# 
  3352  0F4B                     	;# 
  3353  0F4C                     	;# 
  3354  0F4E                     	;# 
  3355  0F4F                     	;# 
  3356  0F50                     	;# 
  3357  0F51                     	;# 
  3358  0F52                     	;# 
  3359  0F53                     	;# 
  3360  0F54                     	;# 
  3361  0F55                     	;# 
  3362  0F56                     	;# 
  3363  0F57                     	;# 
  3364  0F59                     	;# 
  3365  0F5A                     	;# 
  3366  0F5B                     	;# 
  3367  0F5C                     	;# 
  3368  0F5D                     	;# 
  3369  0F61                     	;# 
  3370  0F62                     	;# 
  3371  0F64                     	;# 
  3372  0F65                     	;# 
  3373  0F66                     	;# 
  3374  0F67                     	;# 
  3375  0F68                     	;# 
  3376  0F69                     	;# 
  3377  0F6A                     	;# 
  3378  0F6B                     	;# 
  3379  0F6C                     	;# 
  3380  0F6D                     	;# 
  3381  0FE4                     	;# 
  3382  0FE5                     	;# 
  3383  0FE6                     	;# 
  3384  0FE7                     	;# 
  3385  0FE8                     	;# 
  3386  0FE9                     	;# 
  3387  0FEA                     	;# 
  3388  0FEB                     	;# 
  3389  0FED                     	;# 
  3390  0FEE                     	;# 
  3391  0FEF                     	;# 
  3392  0000                     	;# 
  3393  0001                     	;# 
  3394  0002                     	;# 
  3395  0003                     	;# 
  3396  0004                     	;# 
  3397  0005                     	;# 
  3398  0006                     	;# 
  3399  0007                     	;# 
  3400  0008                     	;# 
  3401  0009                     	;# 
  3402  000A                     	;# 
  3403  000B                     	;# 
  3404  000C                     	;# 
  3405  000D                     	;# 
  3406  000E                     	;# 
  3407  000F                     	;# 
  3408  0010                     	;# 
  3409  0011                     	;# 
  3410  0012                     	;# 
  3411  0013                     	;# 
  3412  0014                     	;# 
  3413  0015                     	;# 
  3414  0016                     	;# 
  3415  0017                     	;# 
  3416  0018                     	;# 
  3417  0019                     	;# 
  3418  001A                     	;# 
  3419  001C                     	;# 
  3420  001C                     	;# 
  3421  001D                     	;# 
  3422  001D                     	;# 
  3423  001E                     	;# 
  3424  001F                     	;# 
  3425  008C                     	;# 
  3426  008C                     	;# 
  3427  008D                     	;# 
  3428  008E                     	;# 
  3429  008E                     	;# 
  3430  008F                     	;# 
  3431  0090                     	;# 
  3432  0090                     	;# 
  3433  0091                     	;# 
  3434  0093                     	;# 
  3435  0094                     	;# 
  3436  0095                     	;# 
  3437  0096                     	;# 
  3438  0097                     	;# 
  3439  0098                     	;# 
  3440  0099                     	;# 
  3441  009A                     	;# 
  3442  009B                     	;# 
  3443  009C                     	;# 
  3444  009D                     	;# 
  3445  009E                     	;# 
  3446  010C                     	;# 
  3447  010D                     	;# 
  3448  010E                     	;# 
  3449  010E                     	;# 
  3450  010F                     	;# 
  3451  0110                     	;# 
  3452  0110                     	;# 
  3453  0111                     	;# 
  3454  0112                     	;# 
  3455  0112                     	;# 
  3456  0113                     	;# 
  3457  0114                     	;# 
  3458  0114                     	;# 
  3459  0115                     	;# 
  3460  0116                     	;# 
  3461  0116                     	;# 
  3462  0117                     	;# 
  3463  0119                     	;# 
  3464  0119                     	;# 
  3465  0119                     	;# 
  3466  011A                     	;# 
  3467  011A                     	;# 
  3468  011A                     	;# 
  3469  011B                     	;# 
  3470  011B                     	;# 
  3471  011B                     	;# 
  3472  011B                     	;# 
  3473  011B                     	;# 
  3474  011C                     	;# 
  3475  011C                     	;# 
  3476  011C                     	;# 
  3477  011D                     	;# 
  3478  011D                     	;# 
  3479  011D                     	;# 
  3480  011E                     	;# 
  3481  011E                     	;# 
  3482  011E                     	;# 
  3483  011F                     	;# 
  3484  011F                     	;# 
  3485  011F                     	;# 
  3486  011F                     	;# 
  3487  011F                     	;# 
  3488  018C                     	;# 
  3489  018D                     	;# 
  3490  018E                     	;# 
  3491  018F                     	;# 
  3492  0190                     	;# 
  3493  0191                     	;# 
  3494  0192                     	;# 
  3495  0196                     	;# 
  3496  0197                     	;# 
  3497  0198                     	;# 
  3498  0199                     	;# 
  3499  019A                     	;# 
  3500  019B                     	;# 
  3501  019C                     	;# 
  3502  020C                     	;# 
  3503  020C                     	;# 
  3504  020D                     	;# 
  3505  020E                     	;# 
  3506  020F                     	;# 
  3507  020F                     	;# 
  3508  0210                     	;# 
  3509  0210                     	;# 
  3510  0211                     	;# 
  3511  0211                     	;# 
  3512  0212                     	;# 
  3513  0212                     	;# 
  3514  0213                     	;# 
  3515  0214                     	;# 
  3516  0215                     	;# 
  3517  0215                     	;# 
  3518  0216                     	;# 
  3519  0216                     	;# 
  3520  0217                     	;# 
  3521  0217                     	;# 
  3522  0218                     	;# 
  3523  0218                     	;# 
  3524  0219                     	;# 
  3525  021A                     	;# 
  3526  021B                     	;# 
  3527  021B                     	;# 
  3528  021C                     	;# 
  3529  021C                     	;# 
  3530  021D                     	;# 
  3531  021D                     	;# 
  3532  021E                     	;# 
  3533  021F                     	;# 
  3534  028C                     	;# 
  3535  028C                     	;# 
  3536  028D                     	;# 
  3537  028D                     	;# 
  3538  028E                     	;# 
  3539  028F                     	;# 
  3540  0290                     	;# 
  3541  0290                     	;# 
  3542  0291                     	;# 
  3543  0292                     	;# 
  3544  0292                     	;# 
  3545  0293                     	;# 
  3546  0293                     	;# 
  3547  0294                     	;# 
  3548  0295                     	;# 
  3549  0296                     	;# 
  3550  0296                     	;# 
  3551  0297                     	;# 
  3552  0298                     	;# 
  3553  0298                     	;# 
  3554  0299                     	;# 
  3555  0299                     	;# 
  3556  029A                     	;# 
  3557  029B                     	;# 
  3558  029C                     	;# 
  3559  029C                     	;# 
  3560  029D                     	;# 
  3561  030C                     	;# 
  3562  030C                     	;# 
  3563  030D                     	;# 
  3564  030E                     	;# 
  3565  030F                     	;# 
  3566  0310                     	;# 
  3567  0310                     	;# 
  3568  0311                     	;# 
  3569  0312                     	;# 
  3570  0313                     	;# 
  3571  0314                     	;# 
  3572  0314                     	;# 
  3573  0315                     	;# 
  3574  0316                     	;# 
  3575  0317                     	;# 
  3576  0318                     	;# 
  3577  0318                     	;# 
  3578  0319                     	;# 
  3579  031A                     	;# 
  3580  031B                     	;# 
  3581  031C                     	;# 
  3582  031C                     	;# 
  3583  031D                     	;# 
  3584  031E                     	;# 
  3585  031F                     	;# 
  3586  038C                     	;# 
  3587  038C                     	;# 
  3588  038D                     	;# 
  3589  038E                     	;# 
  3590  0390                     	;# 
  3591  0390                     	;# 
  3592  0391                     	;# 
  3593  0392                     	;# 
  3594  040C                     	;# 
  3595  040D                     	;# 
  3596  040E                     	;# 
  3597  040F                     	;# 
  3598  0410                     	;# 
  3599  0411                     	;# 
  3600  0416                     	;# 
  3601  0416                     	;# 
  3602  0417                     	;# 
  3603  0418                     	;# 
  3604  0418                     	;# 
  3605  0419                     	;# 
  3606  041A                     	;# 
  3607  041A                     	;# 
  3608  041B                     	;# 
  3609  041C                     	;# 
  3610  041C                     	;# 
  3611  041D                     	;# 
  3612  041E                     	;# 
  3613  041F                     	;# 
  3614  048C                     	;# 
  3615  048C                     	;# 
  3616  048D                     	;# 
  3617  048E                     	;# 
  3618  048F                     	;# 
  3619  048F                     	;# 
  3620  0490                     	;# 
  3621  0491                     	;# 
  3622  0492                     	;# 
  3623  0492                     	;# 
  3624  0493                     	;# 
  3625  0494                     	;# 
  3626  0495                     	;# 
  3627  0495                     	;# 
  3628  0496                     	;# 
  3629  0497                     	;# 
  3630  0498                     	;# 
  3631  0499                     	;# 
  3632  049A                     	;# 
  3633  049B                     	;# 
  3634  049C                     	;# 
  3635  049D                     	;# 
  3636  050C                     	;# 
  3637  050C                     	;# 
  3638  050D                     	;# 
  3639  050E                     	;# 
  3640  050F                     	;# 
  3641  050F                     	;# 
  3642  0510                     	;# 
  3643  0511                     	;# 
  3644  0512                     	;# 
  3645  0512                     	;# 
  3646  0513                     	;# 
  3647  0514                     	;# 
  3648  0515                     	;# 
  3649  0515                     	;# 
  3650  0516                     	;# 
  3651  0517                     	;# 
  3652  0518                     	;# 
  3653  0519                     	;# 
  3654  051A                     	;# 
  3655  051B                     	;# 
  3656  051C                     	;# 
  3657  051D                     	;# 
  3658  058C                     	;# 
  3659  058C                     	;# 
  3660  058D                     	;# 
  3661  058E                     	;# 
  3662  058F                     	;# 
  3663  058F                     	;# 
  3664  0590                     	;# 
  3665  0591                     	;# 
  3666  0592                     	;# 
  3667  0593                     	;# 
  3668  060C                     	;# 
  3669  060D                     	;# 
  3670  060E                     	;# 
  3671  060F                     	;# 
  3672  0610                     	;# 
  3673  0611                     	;# 
  3674  0612                     	;# 
  3675  0613                     	;# 
  3676  0614                     	;# 
  3677  0616                     	;# 
  3678  0617                     	;# 
  3679  0618                     	;# 
  3680  0619                     	;# 
  3681  061A                     	;# 
  3682  061B                     	;# 
  3683  061C                     	;# 
  3684  061D                     	;# 
  3685  061E                     	;# 
  3686  068C                     	;# 
  3687  068D                     	;# 
  3688  068E                     	;# 
  3689  068F                     	;# 
  3690  0690                     	;# 
  3691  0691                     	;# 
  3692  0692                     	;# 
  3693  0693                     	;# 
  3694  0694                     	;# 
  3695  070C                     	;# 
  3696  070D                     	;# 
  3697  070E                     	;# 
  3698  070F                     	;# 
  3699  0710                     	;# 
  3700  0711                     	;# 
  3701  0712                     	;# 
  3702  0713                     	;# 
  3703  0714                     	;# 
  3704  0716                     	;# 
  3705  0717                     	;# 
  3706  0718                     	;# 
  3707  0719                     	;# 
  3708  071A                     	;# 
  3709  071B                     	;# 
  3710  071C                     	;# 
  3711  071D                     	;# 
  3712  071E                     	;# 
  3713  0796                     	;# 
  3714  0797                     	;# 
  3715  0798                     	;# 
  3716  0799                     	;# 
  3717  079A                     	;# 
  3718  079B                     	;# 
  3719  080C                     	;# 
  3720  080D                     	;# 
  3721  080E                     	;# 
  3722  080F                     	;# 
  3723  0810                     	;# 
  3724  0811                     	;# 
  3725  0812                     	;# 
  3726  0813                     	;# 
  3727  0814                     	;# 
  3728  081A                     	;# 
  3729  081B                     	;# 
  3730  081C                     	;# 
  3731  081D                     	;# 
  3732  081E                     	;# 
  3733  081F                     	;# 
  3734  088C                     	;# 
  3735  088D                     	;# 
  3736  088E                     	;# 
  3737  088F                     	;# 
  3738  0890                     	;# 
  3739  0891                     	;# 
  3740  0892                     	;# 
  3741  0893                     	;# 
  3742  0895                     	;# 
  3743  0896                     	;# 
  3744  0897                     	;# 
  3745  0898                     	;# 
  3746  0899                     	;# 
  3747  089A                     	;# 
  3748  089B                     	;# 
  3749  090C                     	;# 
  3750  090E                     	;# 
  3751  090F                     	;# 
  3752  091F                     	;# 
  3753  091F                     	;# 
  3754  098F                     	;# 
  3755  098F                     	;# 
  3756  0990                     	;# 
  3757  0991                     	;# 
  3758  0992                     	;# 
  3759  0993                     	;# 
  3760  0994                     	;# 
  3761  0995                     	;# 
  3762  0996                     	;# 
  3763  0997                     	;# 
  3764  0E0F                     	;# 
  3765  0E10                     	;# 
  3766  0E11                     	;# 
  3767  0E12                     	;# 
  3768  0E13                     	;# 
  3769  0E14                     	;# 
  3770  0E15                     	;# 
  3771  0E16                     	;# 
  3772  0E17                     	;# 
  3773  0E18                     	;# 
  3774  0E19                     	;# 
  3775  0E1A                     	;# 
  3776  0E1B                     	;# 
  3777  0E1C                     	;# 
  3778  0E1D                     	;# 
  3779  0E1E                     	;# 
  3780  0E1F                     	;# 
  3781  0E20                     	;# 
  3782  0E21                     	;# 
  3783  0E22                     	;# 
  3784  0E23                     	;# 
  3785  0E24                     	;# 
  3786  0E25                     	;# 
  3787  0E26                     	;# 
  3788  0E27                     	;# 
  3789  0E28                     	;# 
  3790  0E29                     	;# 
  3791  0E2A                     	;# 
  3792  0E2B                     	;# 
  3793  0E2C                     	;# 
  3794  0E2D                     	;# 
  3795  0E2E                     	;# 
  3796  0E2F                     	;# 
  3797  0E30                     	;# 
  3798  0E31                     	;# 
  3799  0E32                     	;# 
  3800  0E33                     	;# 
  3801  0E34                     	;# 
  3802  0E35                     	;# 
  3803  0E36                     	;# 
  3804  0E37                     	;# 
  3805  0E8F                     	;# 
  3806  0E90                     	;# 
  3807  0E91                     	;# 
  3808  0E92                     	;# 
  3809  0E93                     	;# 
  3810  0E94                     	;# 
  3811  0E95                     	;# 
  3812  0E96                     	;# 
  3813  0E97                     	;# 
  3814  0E9C                     	;# 
  3815  0E9D                     	;# 
  3816  0E9E                     	;# 
  3817  0EA1                     	;# 
  3818  0EA2                     	;# 
  3819  0EA3                     	;# 
  3820  0EA4                     	;# 
  3821  0EA5                     	;# 
  3822  0EA9                     	;# 
  3823  0EAA                     	;# 
  3824  0EAB                     	;# 
  3825  0EAC                     	;# 
  3826  0EB1                     	;# 
  3827  0EB2                     	;# 
  3828  0EB3                     	;# 
  3829  0EB8                     	;# 
  3830  0EB9                     	;# 
  3831  0EBA                     	;# 
  3832  0EBB                     	;# 
  3833  0EBC                     	;# 
  3834  0EBD                     	;# 
  3835  0EBE                     	;# 
  3836  0EC3                     	;# 
  3837  0EC5                     	;# 
  3838  0EC6                     	;# 
  3839  0EC7                     	;# 
  3840  0EC8                     	;# 
  3841  0EC9                     	;# 
  3842  0ECA                     	;# 
  3843  0ECB                     	;# 
  3844  0ECC                     	;# 
  3845  0F10                     	;# 
  3846  0F11                     	;# 
  3847  0F12                     	;# 
  3848  0F13                     	;# 
  3849  0F14                     	;# 
  3850  0F15                     	;# 
  3851  0F16                     	;# 
  3852  0F17                     	;# 
  3853  0F18                     	;# 
  3854  0F19                     	;# 
  3855  0F1A                     	;# 
  3856  0F1B                     	;# 
  3857  0F1C                     	;# 
  3858  0F1D                     	;# 
  3859  0F1E                     	;# 
  3860  0F1F                     	;# 
  3861  0F20                     	;# 
  3862  0F21                     	;# 
  3863  0F22                     	;# 
  3864  0F23                     	;# 
  3865  0F24                     	;# 
  3866  0F25                     	;# 
  3867  0F26                     	;# 
  3868  0F27                     	;# 
  3869  0F28                     	;# 
  3870  0F29                     	;# 
  3871  0F2A                     	;# 
  3872  0F2B                     	;# 
  3873  0F2C                     	;# 
  3874  0F2D                     	;# 
  3875  0F2E                     	;# 
  3876  0F2F                     	;# 
  3877  0F30                     	;# 
  3878  0F31                     	;# 
  3879  0F32                     	;# 
  3880  0F38                     	;# 
  3881  0F39                     	;# 
  3882  0F3A                     	;# 
  3883  0F3B                     	;# 
  3884  0F3C                     	;# 
  3885  0F3D                     	;# 
  3886  0F3E                     	;# 
  3887  0F3F                     	;# 
  3888  0F40                     	;# 
  3889  0F41                     	;# 
  3890  0F43                     	;# 
  3891  0F44                     	;# 
  3892  0F45                     	;# 
  3893  0F46                     	;# 
  3894  0F47                     	;# 
  3895  0F48                     	;# 
  3896  0F49                     	;# 
  3897  0F4A                     	;# 
  3898  0F4B                     	;# 
  3899  0F4C                     	;# 
  3900  0F4E                     	;# 
  3901  0F4F                     	;# 
  3902  0F50                     	;# 
  3903  0F51                     	;# 
  3904  0F52                     	;# 
  3905  0F53                     	;# 
  3906  0F54                     	;# 
  3907  0F55                     	;# 
  3908  0F56                     	;# 
  3909  0F57                     	;# 
  3910  0F59                     	;# 
  3911  0F5A                     	;# 
  3912  0F5B                     	;# 
  3913  0F5C                     	;# 
  3914  0F5D                     	;# 
  3915  0F61                     	;# 
  3916  0F62                     	;# 
  3917  0F64                     	;# 
  3918  0F65                     	;# 
  3919  0F66                     	;# 
  3920  0F67                     	;# 
  3921  0F68                     	;# 
  3922  0F69                     	;# 
  3923  0F6A                     	;# 
  3924  0F6B                     	;# 
  3925  0F6C                     	;# 
  3926  0F6D                     	;# 
  3927  0FE4                     	;# 
  3928  0FE5                     	;# 
  3929  0FE6                     	;# 
  3930  0FE7                     	;# 
  3931  0FE8                     	;# 
  3932  0FE9                     	;# 
  3933  0FEA                     	;# 
  3934  0FEB                     	;# 
  3935  0FED                     	;# 
  3936  0FEE                     	;# 
  3937  0FEF                     	;# 
  3938  0000                     	;# 
  3939  0001                     	;# 
  3940  0002                     	;# 
  3941  0003                     	;# 
  3942  0004                     	;# 
  3943  0005                     	;# 
  3944  0006                     	;# 
  3945  0007                     	;# 
  3946  0008                     	;# 
  3947  0009                     	;# 
  3948  000A                     	;# 
  3949  000B                     	;# 
  3950  000C                     	;# 
  3951  000D                     	;# 
  3952  000E                     	;# 
  3953  000F                     	;# 
  3954  0010                     	;# 
  3955  0011                     	;# 
  3956  0012                     	;# 
  3957  0013                     	;# 
  3958  0014                     	;# 
  3959  0015                     	;# 
  3960  0016                     	;# 
  3961  0017                     	;# 
  3962  0018                     	;# 
  3963  0019                     	;# 
  3964  001A                     	;# 
  3965  001C                     	;# 
  3966  001C                     	;# 
  3967  001D                     	;# 
  3968  001D                     	;# 
  3969  001E                     	;# 
  3970  001F                     	;# 
  3971  008C                     	;# 
  3972  008C                     	;# 
  3973  008D                     	;# 
  3974  008E                     	;# 
  3975  008E                     	;# 
  3976  008F                     	;# 
  3977  0090                     	;# 
  3978  0090                     	;# 
  3979  0091                     	;# 
  3980  0093                     	;# 
  3981  0094                     	;# 
  3982  0095                     	;# 
  3983  0096                     	;# 
  3984  0097                     	;# 
  3985  0098                     	;# 
  3986  0099                     	;# 
  3987  009A                     	;# 
  3988  009B                     	;# 
  3989  009C                     	;# 
  3990  009D                     	;# 
  3991  009E                     	;# 
  3992  010C                     	;# 
  3993  010D                     	;# 
  3994  010E                     	;# 
  3995  010E                     	;# 
  3996  010F                     	;# 
  3997  0110                     	;# 
  3998  0110                     	;# 
  3999  0111                     	;# 
  4000  0112                     	;# 
  4001  0112                     	;# 
  4002  0113                     	;# 
  4003  0114                     	;# 
  4004  0114                     	;# 
  4005  0115                     	;# 
  4006  0116                     	;# 
  4007  0116                     	;# 
  4008  0117                     	;# 
  4009  0119                     	;# 
  4010  0119                     	;# 
  4011  0119                     	;# 
  4012  011A                     	;# 
  4013  011A                     	;# 
  4014  011A                     	;# 
  4015  011B                     	;# 
  4016  011B                     	;# 
  4017  011B                     	;# 
  4018  011B                     	;# 
  4019  011B                     	;# 
  4020  011C                     	;# 
  4021  011C                     	;# 
  4022  011C                     	;# 
  4023  011D                     	;# 
  4024  011D                     	;# 
  4025  011D                     	;# 
  4026  011E                     	;# 
  4027  011E                     	;# 
  4028  011E                     	;# 
  4029  011F                     	;# 
  4030  011F                     	;# 
  4031  011F                     	;# 
  4032  011F                     	;# 
  4033  011F                     	;# 
  4034  018C                     	;# 
  4035  018D                     	;# 
  4036  018E                     	;# 
  4037  018F                     	;# 
  4038  0190                     	;# 
  4039  0191                     	;# 
  4040  0192                     	;# 
  4041  0196                     	;# 
  4042  0197                     	;# 
  4043  0198                     	;# 
  4044  0199                     	;# 
  4045  019A                     	;# 
  4046  019B                     	;# 
  4047  019C                     	;# 
  4048  020C                     	;# 
  4049  020C                     	;# 
  4050  020D                     	;# 
  4051  020E                     	;# 
  4052  020F                     	;# 
  4053  020F                     	;# 
  4054  0210                     	;# 
  4055  0210                     	;# 
  4056  0211                     	;# 
  4057  0211                     	;# 
  4058  0212                     	;# 
  4059  0212                     	;# 
  4060  0213                     	;# 
  4061  0214                     	;# 
  4062  0215                     	;# 
  4063  0215                     	;# 
  4064  0216                     	;# 
  4065  0216                     	;# 
  4066  0217                     	;# 
  4067  0217                     	;# 
  4068  0218                     	;# 
  4069  0218                     	;# 
  4070  0219                     	;# 
  4071  021A                     	;# 
  4072  021B                     	;# 
  4073  021B                     	;# 
  4074  021C                     	;# 
  4075  021C                     	;# 
  4076  021D                     	;# 
  4077  021D                     	;# 
  4078  021E                     	;# 
  4079  021F                     	;# 
  4080  028C                     	;# 
  4081  028C                     	;# 
  4082  028D                     	;# 
  4083  028D                     	;# 
  4084  028E                     	;# 
  4085  028F                     	;# 
  4086  0290                     	;# 
  4087  0290                     	;# 
  4088  0291                     	;# 
  4089  0292                     	;# 
  4090  0292                     	;# 
  4091  0293                     	;# 
  4092  0293                     	;# 
  4093  0294                     	;# 
  4094  0295                     	;# 
  4095  0296                     	;# 
  4096  0296                     	;# 
  4097  0297                     	;# 
  4098  0298                     	;# 
  4099  0298                     	;# 
  4100  0299                     	;# 
  4101  0299                     	;# 
  4102  029A                     	;# 
  4103  029B                     	;# 
  4104  029C                     	;# 
  4105  029C                     	;# 
  4106  029D                     	;# 
  4107  030C                     	;# 
  4108  030C                     	;# 
  4109  030D                     	;# 
  4110  030E                     	;# 
  4111  030F                     	;# 
  4112  0310                     	;# 
  4113  0310                     	;# 
  4114  0311                     	;# 
  4115  0312                     	;# 
  4116  0313                     	;# 
  4117  0314                     	;# 
  4118  0314                     	;# 
  4119  0315                     	;# 
  4120  0316                     	;# 
  4121  0317                     	;# 
  4122  0318                     	;# 
  4123  0318                     	;# 
  4124  0319                     	;# 
  4125  031A                     	;# 
  4126  031B                     	;# 
  4127  031C                     	;# 
  4128  031C                     	;# 
  4129  031D                     	;# 
  4130  031E                     	;# 
  4131  031F                     	;# 
  4132  038C                     	;# 
  4133  038C                     	;# 
  4134  038D                     	;# 
  4135  038E                     	;# 
  4136  0390                     	;# 
  4137  0390                     	;# 
  4138  0391                     	;# 
  4139  0392                     	;# 
  4140  040C                     	;# 
  4141  040D                     	;# 
  4142  040E                     	;# 
  4143  040F                     	;# 
  4144  0410                     	;# 
  4145  0411                     	;# 
  4146  0416                     	;# 
  4147  0416                     	;# 
  4148  0417                     	;# 
  4149  0418                     	;# 
  4150  0418                     	;# 
  4151  0419                     	;# 
  4152  041A                     	;# 
  4153  041A                     	;# 
  4154  041B                     	;# 
  4155  041C                     	;# 
  4156  041C                     	;# 
  4157  041D                     	;# 
  4158  041E                     	;# 
  4159  041F                     	;# 
  4160  048C                     	;# 
  4161  048C                     	;# 
  4162  048D                     	;# 
  4163  048E                     	;# 
  4164  048F                     	;# 
  4165  048F                     	;# 
  4166  0490                     	;# 
  4167  0491                     	;# 
  4168  0492                     	;# 
  4169  0492                     	;# 
  4170  0493                     	;# 
  4171  0494                     	;# 
  4172  0495                     	;# 
  4173  0495                     	;# 
  4174  0496                     	;# 
  4175  0497                     	;# 
  4176  0498                     	;# 
  4177  0499                     	;# 
  4178  049A                     	;# 
  4179  049B                     	;# 
  4180  049C                     	;# 
  4181  049D                     	;# 
  4182  050C                     	;# 
  4183  050C                     	;# 
  4184  050D                     	;# 
  4185  050E                     	;# 
  4186  050F                     	;# 
  4187  050F                     	;# 
  4188  0510                     	;# 
  4189  0511                     	;# 
  4190  0512                     	;# 
  4191  0512                     	;# 
  4192  0513                     	;# 
  4193  0514                     	;# 
  4194  0515                     	;# 
  4195  0515                     	;# 
  4196  0516                     	;# 
  4197  0517                     	;# 
  4198  0518                     	;# 
  4199  0519                     	;# 
  4200  051A                     	;# 
  4201  051B                     	;# 
  4202  051C                     	;# 
  4203  051D                     	;# 
  4204  058C                     	;# 
  4205  058C                     	;# 
  4206  058D                     	;# 
  4207  058E                     	;# 
  4208  058F                     	;# 
  4209  058F                     	;# 
  4210  0590                     	;# 
  4211  0591                     	;# 
  4212  0592                     	;# 
  4213  0593                     	;# 
  4214  060C                     	;# 
  4215  060D                     	;# 
  4216  060E                     	;# 
  4217  060F                     	;# 
  4218  0610                     	;# 
  4219  0611                     	;# 
  4220  0612                     	;# 
  4221  0613                     	;# 
  4222  0614                     	;# 
  4223  0616                     	;# 
  4224  0617                     	;# 
  4225  0618                     	;# 
  4226  0619                     	;# 
  4227  061A                     	;# 
  4228  061B                     	;# 
  4229  061C                     	;# 
  4230  061D                     	;# 
  4231  061E                     	;# 
  4232  068C                     	;# 
  4233  068D                     	;# 
  4234  068E                     	;# 
  4235  068F                     	;# 
  4236  0690                     	;# 
  4237  0691                     	;# 
  4238  0692                     	;# 
  4239  0693                     	;# 
  4240  0694                     	;# 
  4241  070C                     	;# 
  4242  070D                     	;# 
  4243  070E                     	;# 
  4244  070F                     	;# 
  4245  0710                     	;# 
  4246  0711                     	;# 
  4247  0712                     	;# 
  4248  0713                     	;# 
  4249  0714                     	;# 
  4250  0716                     	;# 
  4251  0717                     	;# 
  4252  0718                     	;# 
  4253  0719                     	;# 
  4254  071A                     	;# 
  4255  071B                     	;# 
  4256  071C                     	;# 
  4257  071D                     	;# 
  4258  071E                     	;# 
  4259  0796                     	;# 
  4260  0797                     	;# 
  4261  0798                     	;# 
  4262  0799                     	;# 
  4263  079A                     	;# 
  4264  079B                     	;# 
  4265  080C                     	;# 
  4266  080D                     	;# 
  4267  080E                     	;# 
  4268  080F                     	;# 
  4269  0810                     	;# 
  4270  0811                     	;# 
  4271  0812                     	;# 
  4272  0813                     	;# 
  4273  0814                     	;# 
  4274  081A                     	;# 
  4275  081B                     	;# 
  4276  081C                     	;# 
  4277  081D                     	;# 
  4278  081E                     	;# 
  4279  081F                     	;# 
  4280  088C                     	;# 
  4281  088D                     	;# 
  4282  088E                     	;# 
  4283  088F                     	;# 
  4284  0890                     	;# 
  4285  0891                     	;# 
  4286  0892                     	;# 
  4287  0893                     	;# 
  4288  0895                     	;# 
  4289  0896                     	;# 
  4290  0897                     	;# 
  4291  0898                     	;# 
  4292  0899                     	;# 
  4293  089A                     	;# 
  4294  089B                     	;# 
  4295  090C                     	;# 
  4296  090E                     	;# 
  4297  090F                     	;# 
  4298  091F                     	;# 
  4299  091F                     	;# 
  4300  098F                     	;# 
  4301  098F                     	;# 
  4302  0990                     	;# 
  4303  0991                     	;# 
  4304  0992                     	;# 
  4305  0993                     	;# 
  4306  0994                     	;# 
  4307  0995                     	;# 
  4308  0996                     	;# 
  4309  0997                     	;# 
  4310  0E0F                     	;# 
  4311  0E10                     	;# 
  4312  0E11                     	;# 
  4313  0E12                     	;# 
  4314  0E13                     	;# 
  4315  0E14                     	;# 
  4316  0E15                     	;# 
  4317  0E16                     	;# 
  4318  0E17                     	;# 
  4319  0E18                     	;# 
  4320  0E19                     	;# 
  4321  0E1A                     	;# 
  4322  0E1B                     	;# 
  4323  0E1C                     	;# 
  4324  0E1D                     	;# 
  4325  0E1E                     	;# 
  4326  0E1F                     	;# 
  4327  0E20                     	;# 
  4328  0E21                     	;# 
  4329  0E22                     	;# 
  4330  0E23                     	;# 
  4331  0E24                     	;# 
  4332  0E25                     	;# 
  4333  0E26                     	;# 
  4334  0E27                     	;# 
  4335  0E28                     	;# 
  4336  0E29                     	;# 
  4337  0E2A                     	;# 
  4338  0E2B                     	;# 
  4339  0E2C                     	;# 
  4340  0E2D                     	;# 
  4341  0E2E                     	;# 
  4342  0E2F                     	;# 
  4343  0E30                     	;# 
  4344  0E31                     	;# 
  4345  0E32                     	;# 
  4346  0E33                     	;# 
  4347  0E34                     	;# 
  4348  0E35                     	;# 
  4349  0E36                     	;# 
  4350  0E37                     	;# 
  4351  0E8F                     	;# 
  4352  0E90                     	;# 
  4353  0E91                     	;# 
  4354  0E92                     	;# 
  4355  0E93                     	;# 
  4356  0E94                     	;# 
  4357  0E95                     	;# 
  4358  0E96                     	;# 
  4359  0E97                     	;# 
  4360  0E9C                     	;# 
  4361  0E9D                     	;# 
  4362  0E9E                     	;# 
  4363  0EA1                     	;# 
  4364  0EA2                     	;# 
  4365  0EA3                     	;# 
  4366  0EA4                     	;# 
  4367  0EA5                     	;# 
  4368  0EA9                     	;# 
  4369  0EAA                     	;# 
  4370  0EAB                     	;# 
  4371  0EAC                     	;# 
  4372  0EB1                     	;# 
  4373  0EB2                     	;# 
  4374  0EB3                     	;# 
  4375  0EB8                     	;# 
  4376  0EB9                     	;# 
  4377  0EBA                     	;# 
  4378  0EBB                     	;# 
  4379  0EBC                     	;# 
  4380  0EBD                     	;# 
  4381  0EBE                     	;# 
  4382  0EC3                     	;# 
  4383  0EC5                     	;# 
  4384  0EC6                     	;# 
  4385  0EC7                     	;# 
  4386  0EC8                     	;# 
  4387  0EC9                     	;# 
  4388  0ECA                     	;# 
  4389  0ECB                     	;# 
  4390  0ECC                     	;# 
  4391  0F10                     	;# 
  4392  0F11                     	;# 
  4393  0F12                     	;# 
  4394  0F13                     	;# 
  4395  0F14                     	;# 
  4396  0F15                     	;# 
  4397  0F16                     	;# 
  4398  0F17                     	;# 
  4399  0F18                     	;# 
  4400  0F19                     	;# 
  4401  0F1A                     	;# 
  4402  0F1B                     	;# 
  4403  0F1C                     	;# 
  4404  0F1D                     	;# 
  4405  0F1E                     	;# 
  4406  0F1F                     	;# 
  4407  0F20                     	;# 
  4408  0F21                     	;# 
  4409  0F22                     	;# 
  4410  0F23                     	;# 
  4411  0F24                     	;# 
  4412  0F25                     	;# 
  4413  0F26                     	;# 
  4414  0F27                     	;# 
  4415  0F28                     	;# 
  4416  0F29                     	;# 
  4417  0F2A                     	;# 
  4418  0F2B                     	;# 
  4419  0F2C                     	;# 
  4420  0F2D                     	;# 
  4421  0F2E                     	;# 
  4422  0F2F                     	;# 
  4423  0F30                     	;# 
  4424  0F31                     	;# 
  4425  0F32                     	;# 
  4426  0F38                     	;# 
  4427  0F39                     	;# 
  4428  0F3A                     	;# 
  4429  0F3B                     	;# 
  4430  0F3C                     	;# 
  4431  0F3D                     	;# 
  4432  0F3E                     	;# 
  4433  0F3F                     	;# 
  4434  0F40                     	;# 
  4435  0F41                     	;# 
  4436  0F43                     	;# 
  4437  0F44                     	;# 
  4438  0F45                     	;# 
  4439  0F46                     	;# 
  4440  0F47                     	;# 
  4441  0F48                     	;# 
  4442  0F49                     	;# 
  4443  0F4A                     	;# 
  4444  0F4B                     	;# 
  4445  0F4C                     	;# 
  4446  0F4E                     	;# 
  4447  0F4F                     	;# 
  4448  0F50                     	;# 
  4449  0F51                     	;# 
  4450  0F52                     	;# 
  4451  0F53                     	;# 
  4452  0F54                     	;# 
  4453  0F55                     	;# 
  4454  0F56                     	;# 
  4455  0F57                     	;# 
  4456  0F59                     	;# 
  4457  0F5A                     	;# 
  4458  0F5B                     	;# 
  4459  0F5C                     	;# 
  4460  0F5D                     	;# 
  4461  0F61                     	;# 
  4462  0F62                     	;# 
  4463  0F64                     	;# 
  4464  0F65                     	;# 
  4465  0F66                     	;# 
  4466  0F67                     	;# 
  4467  0F68                     	;# 
  4468  0F69                     	;# 
  4469  0F6A                     	;# 
  4470  0F6B                     	;# 
  4471  0F6C                     	;# 
  4472  0F6D                     	;# 
  4473  0FE4                     	;# 
  4474  0FE5                     	;# 
  4475  0FE6                     	;# 
  4476  0FE7                     	;# 
  4477  0FE8                     	;# 
  4478  0FE9                     	;# 
  4479  0FEA                     	;# 
  4480  0FEB                     	;# 
  4481  0FED                     	;# 
  4482  0FEE                     	;# 
  4483  0FEF                     	;# 
  4484  0000                     	;# 
  4485  0001                     	;# 
  4486  0002                     	;# 
  4487  0003                     	;# 
  4488  0004                     	;# 
  4489  0005                     	;# 
  4490  0006                     	;# 
  4491  0007                     	;# 
  4492  0008                     	;# 
  4493  0009                     	;# 
  4494  000A                     	;# 
  4495  000B                     	;# 
  4496  000C                     	;# 
  4497  000D                     	;# 
  4498  000E                     	;# 
  4499  000F                     	;# 
  4500  0010                     	;# 
  4501  0011                     	;# 
  4502  0012                     	;# 
  4503  0013                     	;# 
  4504  0014                     	;# 
  4505  0015                     	;# 
  4506  0016                     	;# 
  4507  0017                     	;# 
  4508  0018                     	;# 
  4509  0019                     	;# 
  4510  001A                     	;# 
  4511  001C                     	;# 
  4512  001C                     	;# 
  4513  001D                     	;# 
  4514  001D                     	;# 
  4515  001E                     	;# 
  4516  001F                     	;# 
  4517  008C                     	;# 
  4518  008C                     	;# 
  4519  008D                     	;# 
  4520  008E                     	;# 
  4521  008E                     	;# 
  4522  008F                     	;# 
  4523  0090                     	;# 
  4524  0090                     	;# 
  4525  0091                     	;# 
  4526  0093                     	;# 
  4527  0094                     	;# 
  4528  0095                     	;# 
  4529  0096                     	;# 
  4530  0097                     	;# 
  4531  0098                     	;# 
  4532  0099                     	;# 
  4533  009A                     	;# 
  4534  009B                     	;# 
  4535  009C                     	;# 
  4536  009D                     	;# 
  4537  009E                     	;# 
  4538  010C                     	;# 
  4539  010D                     	;# 
  4540  010E                     	;# 
  4541  010E                     	;# 
  4542  010F                     	;# 
  4543  0110                     	;# 
  4544  0110                     	;# 
  4545  0111                     	;# 
  4546  0112                     	;# 
  4547  0112                     	;# 
  4548  0113                     	;# 
  4549  0114                     	;# 
  4550  0114                     	;# 
  4551  0115                     	;# 
  4552  0116                     	;# 
  4553  0116                     	;# 
  4554  0117                     	;# 
  4555  0119                     	;# 
  4556  0119                     	;# 
  4557  0119                     	;# 
  4558  011A                     	;# 
  4559  011A                     	;# 
  4560  011A                     	;# 
  4561  011B                     	;# 
  4562  011B                     	;# 
  4563  011B                     	;# 
  4564  011B                     	;# 
  4565  011B                     	;# 
  4566  011C                     	;# 
  4567  011C                     	;# 
  4568  011C                     	;# 
  4569  011D                     	;# 
  4570  011D                     	;# 
  4571  011D                     	;# 
  4572  011E                     	;# 
  4573  011E                     	;# 
  4574  011E                     	;# 
  4575  011F                     	;# 
  4576  011F                     	;# 
  4577  011F                     	;# 
  4578  011F                     	;# 
  4579  011F                     	;# 
  4580  018C                     	;# 
  4581  018D                     	;# 
  4582  018E                     	;# 
  4583  018F                     	;# 
  4584  0190                     	;# 
  4585  0191                     	;# 
  4586  0192                     	;# 
  4587  0196                     	;# 
  4588  0197                     	;# 
  4589  0198                     	;# 
  4590  0199                     	;# 
  4591  019A                     	;# 
  4592  019B                     	;# 
  4593  019C                     	;# 
  4594  020C                     	;# 
  4595  020C                     	;# 
  4596  020D                     	;# 
  4597  020E                     	;# 
  4598  020F                     	;# 
  4599  020F                     	;# 
  4600  0210                     	;# 
  4601  0210                     	;# 
  4602  0211                     	;# 
  4603  0211                     	;# 
  4604  0212                     	;# 
  4605  0212                     	;# 
  4606  0213                     	;# 
  4607  0214                     	;# 
  4608  0215                     	;# 
  4609  0215                     	;# 
  4610  0216                     	;# 
  4611  0216                     	;# 
  4612  0217                     	;# 
  4613  0217                     	;# 
  4614  0218                     	;# 
  4615  0218                     	;# 
  4616  0219                     	;# 
  4617  021A                     	;# 
  4618  021B                     	;# 
  4619  021B                     	;# 
  4620  021C                     	;# 
  4621  021C                     	;# 
  4622  021D                     	;# 
  4623  021D                     	;# 
  4624  021E                     	;# 
  4625  021F                     	;# 
  4626  028C                     	;# 
  4627  028C                     	;# 
  4628  028D                     	;# 
  4629  028D                     	;# 
  4630  028E                     	;# 
  4631  028F                     	;# 
  4632  0290                     	;# 
  4633  0290                     	;# 
  4634  0291                     	;# 
  4635  0292                     	;# 
  4636  0292                     	;# 
  4637  0293                     	;# 
  4638  0293                     	;# 
  4639  0294                     	;# 
  4640  0295                     	;# 
  4641  0296                     	;# 
  4642  0296                     	;# 
  4643  0297                     	;# 
  4644  0298                     	;# 
  4645  0298                     	;# 
  4646  0299                     	;# 
  4647  0299                     	;# 
  4648  029A                     	;# 
  4649  029B                     	;# 
  4650  029C                     	;# 
  4651  029C                     	;# 
  4652  029D                     	;# 
  4653  030C                     	;# 
  4654  030C                     	;# 
  4655  030D                     	;# 
  4656  030E                     	;# 
  4657  030F                     	;# 
  4658  0310                     	;# 
  4659  0310                     	;# 
  4660  0311                     	;# 
  4661  0312                     	;# 
  4662  0313                     	;# 
  4663  0314                     	;# 
  4664  0314                     	;# 
  4665  0315                     	;# 
  4666  0316                     	;# 
  4667  0317                     	;# 
  4668  0318                     	;# 
  4669  0318                     	;# 
  4670  0319                     	;# 
  4671  031A                     	;# 
  4672  031B                     	;# 
  4673  031C                     	;# 
  4674  031C                     	;# 
  4675  031D                     	;# 
  4676  031E                     	;# 
  4677  031F                     	;# 
  4678  038C                     	;# 
  4679  038C                     	;# 
  4680  038D                     	;# 
  4681  038E                     	;# 
  4682  0390                     	;# 
  4683  0390                     	;# 
  4684  0391                     	;# 
  4685  0392                     	;# 
  4686  040C                     	;# 
  4687  040D                     	;# 
  4688  040E                     	;# 
  4689  040F                     	;# 
  4690  0410                     	;# 
  4691  0411                     	;# 
  4692  0416                     	;# 
  4693  0416                     	;# 
  4694  0417                     	;# 
  4695  0418                     	;# 
  4696  0418                     	;# 
  4697  0419                     	;# 
  4698  041A                     	;# 
  4699  041A                     	;# 
  4700  041B                     	;# 
  4701  041C                     	;# 
  4702  041C                     	;# 
  4703  041D                     	;# 
  4704  041E                     	;# 
  4705  041F                     	;# 
  4706  048C                     	;# 
  4707  048C                     	;# 
  4708  048D                     	;# 
  4709  048E                     	;# 
  4710  048F                     	;# 
  4711  048F                     	;# 
  4712  0490                     	;# 
  4713  0491                     	;# 
  4714  0492                     	;# 
  4715  0492                     	;# 
  4716  0493                     	;# 
  4717  0494                     	;# 
  4718  0495                     	;# 
  4719  0495                     	;# 
  4720  0496                     	;# 
  4721  0497                     	;# 
  4722  0498                     	;# 
  4723  0499                     	;# 
  4724  049A                     	;# 
  4725  049B                     	;# 
  4726  049C                     	;# 
  4727  049D                     	;# 
  4728  050C                     	;# 
  4729  050C                     	;# 
  4730  050D                     	;# 
  4731  050E                     	;# 
  4732  050F                     	;# 
  4733  050F                     	;# 
  4734  0510                     	;# 
  4735  0511                     	;# 
  4736  0512                     	;# 
  4737  0512                     	;# 
  4738  0513                     	;# 
  4739  0514                     	;# 
  4740  0515                     	;# 
  4741  0515                     	;# 
  4742  0516                     	;# 
  4743  0517                     	;# 
  4744  0518                     	;# 
  4745  0519                     	;# 
  4746  051A                     	;# 
  4747  051B                     	;# 
  4748  051C                     	;# 
  4749  051D                     	;# 
  4750  058C                     	;# 
  4751  058C                     	;# 
  4752  058D                     	;# 
  4753  058E                     	;# 
  4754  058F                     	;# 
  4755  058F                     	;# 
  4756  0590                     	;# 
  4757  0591                     	;# 
  4758  0592                     	;# 
  4759  0593                     	;# 
  4760  060C                     	;# 
  4761  060D                     	;# 
  4762  060E                     	;# 
  4763  060F                     	;# 
  4764  0610                     	;# 
  4765  0611                     	;# 
  4766  0612                     	;# 
  4767  0613                     	;# 
  4768  0614                     	;# 
  4769  0616                     	;# 
  4770  0617                     	;# 
  4771  0618                     	;# 
  4772  0619                     	;# 
  4773  061A                     	;# 
  4774  061B                     	;# 
  4775  061C                     	;# 
  4776  061D                     	;# 
  4777  061E                     	;# 
  4778  068C                     	;# 
  4779  068D                     	;# 
  4780  068E                     	;# 
  4781  068F                     	;# 
  4782  0690                     	;# 
  4783  0691                     	;# 
  4784  0692                     	;# 
  4785  0693                     	;# 
  4786  0694                     	;# 
  4787  070C                     	;# 
  4788  070D                     	;# 
  4789  070E                     	;# 
  4790  070F                     	;# 
  4791  0710                     	;# 
  4792  0711                     	;# 
  4793  0712                     	;# 
  4794  0713                     	;# 
  4795  0714                     	;# 
  4796  0716                     	;# 
  4797  0717                     	;# 
  4798  0718                     	;# 
  4799  0719                     	;# 
  4800  071A                     	;# 
  4801  071B                     	;# 
  4802  071C                     	;# 
  4803  071D                     	;# 
  4804  071E                     	;# 
  4805  0796                     	;# 
  4806  0797                     	;# 
  4807  0798                     	;# 
  4808  0799                     	;# 
  4809  079A                     	;# 
  4810  079B                     	;# 
  4811  080C                     	;# 
  4812  080D                     	;# 
  4813  080E                     	;# 
  4814  080F                     	;# 
  4815  0810                     	;# 
  4816  0811                     	;# 
  4817  0812                     	;# 
  4818  0813                     	;# 
  4819  0814                     	;# 
  4820  081A                     	;# 
  4821  081B                     	;# 
  4822  081C                     	;# 
  4823  081D                     	;# 
  4824  081E                     	;# 
  4825  081F                     	;# 
  4826  088C                     	;# 
  4827  088D                     	;# 
  4828  088E                     	;# 
  4829  088F                     	;# 
  4830  0890                     	;# 
  4831  0891                     	;# 
  4832  0892                     	;# 
  4833  0893                     	;# 
  4834  0895                     	;# 
  4835  0896                     	;# 
  4836  0897                     	;# 
  4837  0898                     	;# 
  4838  0899                     	;# 
  4839  089A                     	;# 
  4840  089B                     	;# 
  4841  090C                     	;# 
  4842  090E                     	;# 
  4843  090F                     	;# 
  4844  091F                     	;# 
  4845  091F                     	;# 
  4846  098F                     	;# 
  4847  098F                     	;# 
  4848  0990                     	;# 
  4849  0991                     	;# 
  4850  0992                     	;# 
  4851  0993                     	;# 
  4852  0994                     	;# 
  4853  0995                     	;# 
  4854  0996                     	;# 
  4855  0997                     	;# 
  4856  0E0F                     	;# 
  4857  0E10                     	;# 
  4858  0E11                     	;# 
  4859  0E12                     	;# 
  4860  0E13                     	;# 
  4861  0E14                     	;# 
  4862  0E15                     	;# 
  4863  0E16                     	;# 
  4864  0E17                     	;# 
  4865  0E18                     	;# 
  4866  0E19                     	;# 
  4867  0E1A                     	;# 
  4868  0E1B                     	;# 
  4869  0E1C                     	;# 
  4870  0E1D                     	;# 
  4871  0E1E                     	;# 
  4872  0E1F                     	;# 
  4873  0E20                     	;# 
  4874  0E21                     	;# 
  4875  0E22                     	;# 
  4876  0E23                     	;# 
  4877  0E24                     	;# 
  4878  0E25                     	;# 
  4879  0E26                     	;# 
  4880  0E27                     	;# 
  4881  0E28                     	;# 
  4882  0E29                     	;# 
  4883  0E2A                     	;# 
  4884  0E2B                     	;# 
  4885  0E2C                     	;# 
  4886  0E2D                     	;# 
  4887  0E2E                     	;# 
  4888  0E2F                     	;# 
  4889  0E30                     	;# 
  4890  0E31                     	;# 
  4891  0E32                     	;# 
  4892  0E33                     	;# 
  4893  0E34                     	;# 
  4894  0E35                     	;# 
  4895  0E36                     	;# 
  4896  0E37                     	;# 
  4897  0E8F                     	;# 
  4898  0E90                     	;# 
  4899  0E91                     	;# 
  4900  0E92                     	;# 
  4901  0E93                     	;# 
  4902  0E94                     	;# 
  4903  0E95                     	;# 
  4904  0E96                     	;# 
  4905  0E97                     	;# 
  4906  0E9C                     	;# 
  4907  0E9D                     	;# 
  4908  0E9E                     	;# 
  4909  0EA1                     	;# 
  4910  0EA2                     	;# 
  4911  0EA3                     	;# 
  4912  0EA4                     	;# 
  4913  0EA5                     	;# 
  4914  0EA9                     	;# 
  4915  0EAA                     	;# 
  4916  0EAB                     	;# 
  4917  0EAC                     	;# 
  4918  0EB1                     	;# 
  4919  0EB2                     	;# 
  4920  0EB3                     	;# 
  4921  0EB8                     	;# 
  4922  0EB9                     	;# 
  4923  0EBA                     	;# 
  4924  0EBB                     	;# 
  4925  0EBC                     	;# 
  4926  0EBD                     	;# 
  4927  0EBE                     	;# 
  4928  0EC3                     	;# 
  4929  0EC5                     	;# 
  4930  0EC6                     	;# 
  4931  0EC7                     	;# 
  4932  0EC8                     	;# 
  4933  0EC9                     	;# 
  4934  0ECA                     	;# 
  4935  0ECB                     	;# 
  4936  0ECC                     	;# 
  4937  0F10                     	;# 
  4938  0F11                     	;# 
  4939  0F12                     	;# 
  4940  0F13                     	;# 
  4941  0F14                     	;# 
  4942  0F15                     	;# 
  4943  0F16                     	;# 
  4944  0F17                     	;# 
  4945  0F18                     	;# 
  4946  0F19                     	;# 
  4947  0F1A                     	;# 
  4948  0F1B                     	;# 
  4949  0F1C                     	;# 
  4950  0F1D                     	;# 
  4951  0F1E                     	;# 
  4952  0F1F                     	;# 
  4953  0F20                     	;# 
  4954  0F21                     	;# 
  4955  0F22                     	;# 
  4956  0F23                     	;# 
  4957  0F24                     	;# 
  4958  0F25                     	;# 
  4959  0F26                     	;# 
  4960  0F27                     	;# 
  4961  0F28                     	;# 
  4962  0F29                     	;# 
  4963  0F2A                     	;# 
  4964  0F2B                     	;# 
  4965  0F2C                     	;# 
  4966  0F2D                     	;# 
  4967  0F2E                     	;# 
  4968  0F2F                     	;# 
  4969  0F30                     	;# 
  4970  0F31                     	;# 
  4971  0F32                     	;# 
  4972  0F38                     	;# 
  4973  0F39                     	;# 
  4974  0F3A                     	;# 
  4975  0F3B                     	;# 
  4976  0F3C                     	;# 
  4977  0F3D                     	;# 
  4978  0F3E                     	;# 
  4979  0F3F                     	;# 
  4980  0F40                     	;# 
  4981  0F41                     	;# 
  4982  0F43                     	;# 
  4983  0F44                     	;# 
  4984  0F45                     	;# 
  4985  0F46                     	;# 
  4986  0F47                     	;# 
  4987  0F48                     	;# 
  4988  0F49                     	;# 
  4989  0F4A                     	;# 
  4990  0F4B                     	;# 
  4991  0F4C                     	;# 
  4992  0F4E                     	;# 
  4993  0F4F                     	;# 
  4994  0F50                     	;# 
  4995  0F51                     	;# 
  4996  0F52                     	;# 
  4997  0F53                     	;# 
  4998  0F54                     	;# 
  4999  0F55                     	;# 
  5000  0F56                     	;# 
  5001  0F57                     	;# 
  5002  0F59                     	;# 
  5003  0F5A                     	;# 
  5004  0F5B                     	;# 
  5005  0F5C                     	;# 
  5006  0F5D                     	;# 
  5007  0F61                     	;# 
  5008  0F62                     	;# 
  5009  0F64                     	;# 
  5010  0F65                     	;# 
  5011  0F66                     	;# 
  5012  0F67                     	;# 
  5013  0F68                     	;# 
  5014  0F69                     	;# 
  5015  0F6A                     	;# 
  5016  0F6B                     	;# 
  5017  0F6C                     	;# 
  5018  0F6D                     	;# 
  5019  0FE4                     	;# 
  5020  0FE5                     	;# 
  5021  0FE6                     	;# 
  5022  0FE7                     	;# 
  5023  0FE8                     	;# 
  5024  0FE9                     	;# 
  5025  0FEA                     	;# 
  5026  0FEB                     	;# 
  5027  0FED                     	;# 
  5028  0FEE                     	;# 
  5029  0FEF                     	;# 
  5030  0000                     	;# 
  5031  0001                     	;# 
  5032  0002                     	;# 
  5033  0003                     	;# 
  5034  0004                     	;# 
  5035  0005                     	;# 
  5036  0006                     	;# 
  5037  0007                     	;# 
  5038  0008                     	;# 
  5039  0009                     	;# 
  5040  000A                     	;# 
  5041  000B                     	;# 
  5042  000C                     	;# 
  5043  000D                     	;# 
  5044  000E                     	;# 
  5045  000F                     	;# 
  5046  0010                     	;# 
  5047  0011                     	;# 
  5048  0012                     	;# 
  5049  0013                     	;# 
  5050  0014                     	;# 
  5051  0015                     	;# 
  5052  0016                     	;# 
  5053  0017                     	;# 
  5054  0018                     	;# 
  5055  0019                     	;# 
  5056  001A                     	;# 
  5057  001C                     	;# 
  5058  001C                     	;# 
  5059  001D                     	;# 
  5060  001D                     	;# 
  5061  001E                     	;# 
  5062  001F                     	;# 
  5063  008C                     	;# 
  5064  008C                     	;# 
  5065  008D                     	;# 
  5066  008E                     	;# 
  5067  008E                     	;# 
  5068  008F                     	;# 
  5069  0090                     	;# 
  5070  0090                     	;# 
  5071  0091                     	;# 
  5072  0093                     	;# 
  5073  0094                     	;# 
  5074  0095                     	;# 
  5075  0096                     	;# 
  5076  0097                     	;# 
  5077  0098                     	;# 
  5078  0099                     	;# 
  5079  009A                     	;# 
  5080  009B                     	;# 
  5081  009C                     	;# 
  5082  009D                     	;# 
  5083  009E                     	;# 
  5084  010C                     	;# 
  5085  010D                     	;# 
  5086  010E                     	;# 
  5087  010E                     	;# 
  5088  010F                     	;# 
  5089  0110                     	;# 
  5090  0110                     	;# 
  5091  0111                     	;# 
  5092  0112                     	;# 
  5093  0112                     	;# 
  5094  0113                     	;# 
  5095  0114                     	;# 
  5096  0114                     	;# 
  5097  0115                     	;# 
  5098  0116                     	;# 
  5099  0116                     	;# 
  5100  0117                     	;# 
  5101  0119                     	;# 
  5102  0119                     	;# 
  5103  0119                     	;# 
  5104  011A                     	;# 
  5105  011A                     	;# 
  5106  011A                     	;# 
  5107  011B                     	;# 
  5108  011B                     	;# 
  5109  011B                     	;# 
  5110  011B                     	;# 
  5111  011B                     	;# 
  5112  011C                     	;# 
  5113  011C                     	;# 
  5114  011C                     	;# 
  5115  011D                     	;# 
  5116  011D                     	;# 
  5117  011D                     	;# 
  5118  011E                     	;# 
  5119  011E                     	;# 
  5120  011E                     	;# 
  5121  011F                     	;# 
  5122  011F                     	;# 
  5123  011F                     	;# 
  5124  011F                     	;# 
  5125  011F                     	;# 
  5126  018C                     	;# 
  5127  018D                     	;# 
  5128  018E                     	;# 
  5129  018F                     	;# 
  5130  0190                     	;# 
  5131  0191                     	;# 
  5132  0192                     	;# 
  5133  0196                     	;# 
  5134  0197                     	;# 
  5135  0198                     	;# 
  5136  0199                     	;# 
  5137  019A                     	;# 
  5138  019B                     	;# 
  5139  019C                     	;# 
  5140  020C                     	;# 
  5141  020C                     	;# 
  5142  020D                     	;# 
  5143  020E                     	;# 
  5144  020F                     	;# 
  5145  020F                     	;# 
  5146  0210                     	;# 
  5147  0210                     	;# 
  5148  0211                     	;# 
  5149  0211                     	;# 
  5150  0212                     	;# 
  5151  0212                     	;# 
  5152  0213                     	;# 
  5153  0214                     	;# 
  5154  0215                     	;# 
  5155  0215                     	;# 
  5156  0216                     	;# 
  5157  0216                     	;# 
  5158  0217                     	;# 
  5159  0217                     	;# 
  5160  0218                     	;# 
  5161  0218                     	;# 
  5162  0219                     	;# 
  5163  021A                     	;# 
  5164  021B                     	;# 
  5165  021B                     	;# 
  5166  021C                     	;# 
  5167  021C                     	;# 
  5168  021D                     	;# 
  5169  021D                     	;# 
  5170  021E                     	;# 
  5171  021F                     	;# 
  5172  028C                     	;# 
  5173  028C                     	;# 
  5174  028D                     	;# 
  5175  028D                     	;# 
  5176  028E                     	;# 
  5177  028F                     	;# 
  5178  0290                     	;# 
  5179  0290                     	;# 
  5180  0291                     	;# 
  5181  0292                     	;# 
  5182  0292                     	;# 
  5183  0293                     	;# 
  5184  0293                     	;# 
  5185  0294                     	;# 
  5186  0295                     	;# 
  5187  0296                     	;# 
  5188  0296                     	;# 
  5189  0297                     	;# 
  5190  0298                     	;# 
  5191  0298                     	;# 
  5192  0299                     	;# 
  5193  0299                     	;# 
  5194  029A                     	;# 
  5195  029B                     	;# 
  5196  029C                     	;# 
  5197  029C                     	;# 
  5198  029D                     	;# 
  5199  030C                     	;# 
  5200  030C                     	;# 
  5201  030D                     	;# 
  5202  030E                     	;# 
  5203  030F                     	;# 
  5204  0310                     	;# 
  5205  0310                     	;# 
  5206  0311                     	;# 
  5207  0312                     	;# 
  5208  0313                     	;# 
  5209  0314                     	;# 
  5210  0314                     	;# 
  5211  0315                     	;# 
  5212  0316                     	;# 
  5213  0317                     	;# 
  5214  0318                     	;# 
  5215  0318                     	;# 
  5216  0319                     	;# 
  5217  031A                     	;# 
  5218  031B                     	;# 
  5219  031C                     	;# 
  5220  031C                     	;# 
  5221  031D                     	;# 
  5222  031E                     	;# 
  5223  031F                     	;# 
  5224  038C                     	;# 
  5225  038C                     	;# 
  5226  038D                     	;# 
  5227  038E                     	;# 
  5228  0390                     	;# 
  5229  0390                     	;# 
  5230  0391                     	;# 
  5231  0392                     	;# 
  5232  040C                     	;# 
  5233  040D                     	;# 
  5234  040E                     	;# 
  5235  040F                     	;# 
  5236  0410                     	;# 
  5237  0411                     	;# 
  5238  0416                     	;# 
  5239  0416                     	;# 
  5240  0417                     	;# 
  5241  0418                     	;# 
  5242  0418                     	;# 
  5243  0419                     	;# 
  5244  041A                     	;# 
  5245  041A                     	;# 
  5246  041B                     	;# 
  5247  041C                     	;# 
  5248  041C                     	;# 
  5249  041D                     	;# 
  5250  041E                     	;# 
  5251  041F                     	;# 
  5252  048C                     	;# 
  5253  048C                     	;# 
  5254  048D                     	;# 
  5255  048E                     	;# 
  5256  048F                     	;# 
  5257  048F                     	;# 
  5258  0490                     	;# 
  5259  0491                     	;# 
  5260  0492                     	;# 
  5261  0492                     	;# 
  5262  0493                     	;# 
  5263  0494                     	;# 
  5264  0495                     	;# 
  5265  0495                     	;# 
  5266  0496                     	;# 
  5267  0497                     	;# 
  5268  0498                     	;# 
  5269  0499                     	;# 
  5270  049A                     	;# 
  5271  049B                     	;# 
  5272  049C                     	;# 
  5273  049D                     	;# 
  5274  050C                     	;# 
  5275  050C                     	;# 
  5276  050D                     	;# 
  5277  050E                     	;# 
  5278  050F                     	;# 
  5279  050F                     	;# 
  5280  0510                     	;# 
  5281  0511                     	;# 
  5282  0512                     	;# 
  5283  0512                     	;# 
  5284  0513                     	;# 
  5285  0514                     	;# 
  5286  0515                     	;# 
  5287  0515                     	;# 
  5288  0516                     	;# 
  5289  0517                     	;# 
  5290  0518                     	;# 
  5291  0519                     	;# 
  5292  051A                     	;# 
  5293  051B                     	;# 
  5294  051C                     	;# 
  5295  051D                     	;# 
  5296  058C                     	;# 
  5297  058C                     	;# 
  5298  058D                     	;# 
  5299  058E                     	;# 
  5300  058F                     	;# 
  5301  058F                     	;# 
  5302  0590                     	;# 
  5303  0591                     	;# 
  5304  0592                     	;# 
  5305  0593                     	;# 
  5306  060C                     	;# 
  5307  060D                     	;# 
  5308  060E                     	;# 
  5309  060F                     	;# 
  5310  0610                     	;# 
  5311  0611                     	;# 
  5312  0612                     	;# 
  5313  0613                     	;# 
  5314  0614                     	;# 
  5315  0616                     	;# 
  5316  0617                     	;# 
  5317  0618                     	;# 
  5318  0619                     	;# 
  5319  061A                     	;# 
  5320  061B                     	;# 
  5321  061C                     	;# 
  5322  061D                     	;# 
  5323  061E                     	;# 
  5324  068C                     	;# 
  5325  068D                     	;# 
  5326  068E                     	;# 
  5327  068F                     	;# 
  5328  0690                     	;# 
  5329  0691                     	;# 
  5330  0692                     	;# 
  5331  0693                     	;# 
  5332  0694                     	;# 
  5333  070C                     	;# 
  5334  070D                     	;# 
  5335  070E                     	;# 
  5336  070F                     	;# 
  5337  0710                     	;# 
  5338  0711                     	;# 
  5339  0712                     	;# 
  5340  0713                     	;# 
  5341  0714                     	;# 
  5342  0716                     	;# 
  5343  0717                     	;# 
  5344  0718                     	;# 
  5345  0719                     	;# 
  5346  071A                     	;# 
  5347  071B                     	;# 
  5348  071C                     	;# 
  5349  071D                     	;# 
  5350  071E                     	;# 
  5351  0796                     	;# 
  5352  0797                     	;# 
  5353  0798                     	;# 
  5354  0799                     	;# 
  5355  079A                     	;# 
  5356  079B                     	;# 
  5357  080C                     	;# 
  5358  080D                     	;# 
  5359  080E                     	;# 
  5360  080F                     	;# 
  5361  0810                     	;# 
  5362  0811                     	;# 
  5363  0812                     	;# 
  5364  0813                     	;# 
  5365  0814                     	;# 
  5366  081A                     	;# 
  5367  081B                     	;# 
  5368  081C                     	;# 
  5369  081D                     	;# 
  5370  081E                     	;# 
  5371  081F                     	;# 
  5372  088C                     	;# 
  5373  088D                     	;# 
  5374  088E                     	;# 
  5375  088F                     	;# 
  5376  0890                     	;# 
  5377  0891                     	;# 
  5378  0892                     	;# 
  5379  0893                     	;# 
  5380  0895                     	;# 
  5381  0896                     	;# 
  5382  0897                     	;# 
  5383  0898                     	;# 
  5384  0899                     	;# 
  5385  089A                     	;# 
  5386  089B                     	;# 
  5387  090C                     	;# 
  5388  090E                     	;# 
  5389  090F                     	;# 
  5390  091F                     	;# 
  5391  091F                     	;# 
  5392  098F                     	;# 
  5393  098F                     	;# 
  5394  0990                     	;# 
  5395  0991                     	;# 
  5396  0992                     	;# 
  5397  0993                     	;# 
  5398  0994                     	;# 
  5399  0995                     	;# 
  5400  0996                     	;# 
  5401  0997                     	;# 
  5402  0E0F                     	;# 
  5403  0E10                     	;# 
  5404  0E11                     	;# 
  5405  0E12                     	;# 
  5406  0E13                     	;# 
  5407  0E14                     	;# 
  5408  0E15                     	;# 
  5409  0E16                     	;# 
  5410  0E17                     	;# 
  5411  0E18                     	;# 
  5412  0E19                     	;# 
  5413  0E1A                     	;# 
  5414  0E1B                     	;# 
  5415  0E1C                     	;# 
  5416  0E1D                     	;# 
  5417  0E1E                     	;# 
  5418  0E1F                     	;# 
  5419  0E20                     	;# 
  5420  0E21                     	;# 
  5421  0E22                     	;# 
  5422  0E23                     	;# 
  5423  0E24                     	;# 
  5424  0E25                     	;# 
  5425  0E26                     	;# 
  5426  0E27                     	;# 
  5427  0E28                     	;# 
  5428  0E29                     	;# 
  5429  0E2A                     	;# 
  5430  0E2B                     	;# 
  5431  0E2C                     	;# 
  5432  0E2D                     	;# 
  5433  0E2E                     	;# 
  5434  0E2F                     	;# 
  5435  0E30                     	;# 
  5436  0E31                     	;# 
  5437  0E32                     	;# 
  5438  0E33                     	;# 
  5439  0E34                     	;# 
  5440  0E35                     	;# 
  5441  0E36                     	;# 
  5442  0E37                     	;# 
  5443  0E8F                     	;# 
  5444  0E90                     	;# 
  5445  0E91                     	;# 
  5446  0E92                     	;# 
  5447  0E93                     	;# 
  5448  0E94                     	;# 
  5449  0E95                     	;# 
  5450  0E96                     	;# 
  5451  0E97                     	;# 
  5452  0E9C                     	;# 
  5453  0E9D                     	;# 
  5454  0E9E                     	;# 
  5455  0EA1                     	;# 
  5456  0EA2                     	;# 
  5457  0EA3                     	;# 
  5458  0EA4                     	;# 
  5459  0EA5                     	;# 
  5460  0EA9                     	;# 
  5461  0EAA                     	;# 
  5462  0EAB                     	;# 
  5463  0EAC                     	;# 
  5464  0EB1                     	;# 
  5465  0EB2                     	;# 
  5466  0EB3                     	;# 
  5467  0EB8                     	;# 
  5468  0EB9                     	;# 
  5469  0EBA                     	;# 
  5470  0EBB                     	;# 
  5471  0EBC                     	;# 
  5472  0EBD                     	;# 
  5473  0EBE                     	;# 
  5474  0EC3                     	;# 
  5475  0EC5                     	;# 
  5476  0EC6                     	;# 
  5477  0EC7                     	;# 
  5478  0EC8                     	;# 
  5479  0EC9                     	;# 
  5480  0ECA                     	;# 
  5481  0ECB                     	;# 
  5482  0ECC                     	;# 
  5483  0F10                     	;# 
  5484  0F11                     	;# 
  5485  0F12                     	;# 
  5486  0F13                     	;# 
  5487  0F14                     	;# 
  5488  0F15                     	;# 
  5489  0F16                     	;# 
  5490  0F17                     	;# 
  5491  0F18                     	;# 
  5492  0F19                     	;# 
  5493  0F1A                     	;# 
  5494  0F1B                     	;# 
  5495  0F1C                     	;# 
  5496  0F1D                     	;# 
  5497  0F1E                     	;# 
  5498  0F1F                     	;# 
  5499  0F20                     	;# 
  5500  0F21                     	;# 
  5501  0F22                     	;# 
  5502  0F23                     	;# 
  5503  0F24                     	;# 
  5504  0F25                     	;# 
  5505  0F26                     	;# 
  5506  0F27                     	;# 
  5507  0F28                     	;# 
  5508  0F29                     	;# 
  5509  0F2A                     	;# 
  5510  0F2B                     	;# 
  5511  0F2C                     	;# 
  5512  0F2D                     	;# 
  5513  0F2E                     	;# 
  5514  0F2F                     	;# 
  5515  0F30                     	;# 
  5516  0F31                     	;# 
  5517  0F32                     	;# 
  5518  0F38                     	;# 
  5519  0F39                     	;# 
  5520  0F3A                     	;# 
  5521  0F3B                     	;# 
  5522  0F3C                     	;# 
  5523  0F3D                     	;# 
  5524  0F3E                     	;# 
  5525  0F3F                     	;# 
  5526  0F40                     	;# 
  5527  0F41                     	;# 
  5528  0F43                     	;# 
  5529  0F44                     	;# 
  5530  0F45                     	;# 
  5531  0F46                     	;# 
  5532  0F47                     	;# 
  5533  0F48                     	;# 
  5534  0F49                     	;# 
  5535  0F4A                     	;# 
  5536  0F4B                     	;# 
  5537  0F4C                     	;# 
  5538  0F4E                     	;# 
  5539  0F4F                     	;# 
  5540  0F50                     	;# 
  5541  0F51                     	;# 
  5542  0F52                     	;# 
  5543  0F53                     	;# 
  5544  0F54                     	;# 
  5545  0F55                     	;# 
  5546  0F56                     	;# 
  5547  0F57                     	;# 
  5548  0F59                     	;# 
  5549  0F5A                     	;# 
  5550  0F5B                     	;# 
  5551  0F5C                     	;# 
  5552  0F5D                     	;# 
  5553  0F61                     	;# 
  5554  0F62                     	;# 
  5555  0F64                     	;# 
  5556  0F65                     	;# 
  5557  0F66                     	;# 
  5558  0F67                     	;# 
  5559  0F68                     	;# 
  5560  0F69                     	;# 
  5561  0F6A                     	;# 
  5562  0F6B                     	;# 
  5563  0F6C                     	;# 
  5564  0F6D                     	;# 
  5565  0FE4                     	;# 
  5566  0FE5                     	;# 
  5567  0FE6                     	;# 
  5568  0FE7                     	;# 
  5569  0FE8                     	;# 
  5570  0FE9                     	;# 
  5571  0FEA                     	;# 
  5572  0FEB                     	;# 
  5573  0FED                     	;# 
  5574  0FEE                     	;# 
  5575  0FEF                     	;# 
  5576  0000                     	;# 
  5577  0001                     	;# 
  5578  0002                     	;# 
  5579  0003                     	;# 
  5580  0004                     	;# 
  5581  0005                     	;# 
  5582  0006                     	;# 
  5583  0007                     	;# 
  5584  0008                     	;# 
  5585  0009                     	;# 
  5586  000A                     	;# 
  5587  000B                     	;# 
  5588  000C                     	;# 
  5589  000D                     	;# 
  5590  000E                     	;# 
  5591  000F                     	;# 
  5592  0010                     	;# 
  5593  0011                     	;# 
  5594  0012                     	;# 
  5595  0013                     	;# 
  5596  0014                     	;# 
  5597  0015                     	;# 
  5598  0016                     	;# 
  5599  0017                     	;# 
  5600  0018                     	;# 
  5601  0019                     	;# 
  5602  001A                     	;# 
  5603  001C                     	;# 
  5604  001C                     	;# 
  5605  001D                     	;# 
  5606  001D                     	;# 
  5607  001E                     	;# 
  5608  001F                     	;# 
  5609  008C                     	;# 
  5610  008C                     	;# 
  5611  008D                     	;# 
  5612  008E                     	;# 
  5613  008E                     	;# 
  5614  008F                     	;# 
  5615  0090                     	;# 
  5616  0090                     	;# 
  5617  0091                     	;# 
  5618  0093                     	;# 
  5619  0094                     	;# 
  5620  0095                     	;# 
  5621  0096                     	;# 
  5622  0097                     	;# 
  5623  0098                     	;# 
  5624  0099                     	;# 
  5625  009A                     	;# 
  5626  009B                     	;# 
  5627  009C                     	;# 
  5628  009D                     	;# 
  5629  009E                     	;# 
  5630  010C                     	;# 
  5631  010D                     	;# 
  5632  010E                     	;# 
  5633  010E                     	;# 
  5634  010F                     	;# 
  5635  0110                     	;# 
  5636  0110                     	;# 
  5637  0111                     	;# 
  5638  0112                     	;# 
  5639  0112                     	;# 
  5640  0113                     	;# 
  5641  0114                     	;# 
  5642  0114                     	;# 
  5643  0115                     	;# 
  5644  0116                     	;# 
  5645  0116                     	;# 
  5646  0117                     	;# 
  5647  0119                     	;# 
  5648  0119                     	;# 
  5649  0119                     	;# 
  5650  011A                     	;# 
  5651  011A                     	;# 
  5652  011A                     	;# 
  5653  011B                     	;# 
  5654  011B                     	;# 
  5655  011B                     	;# 
  5656  011B                     	;# 
  5657  011B                     	;# 
  5658  011C                     	;# 
  5659  011C                     	;# 
  5660  011C                     	;# 
  5661  011D                     	;# 
  5662  011D                     	;# 
  5663  011D                     	;# 
  5664  011E                     	;# 
  5665  011E                     	;# 
  5666  011E                     	;# 
  5667  011F                     	;# 
  5668  011F                     	;# 
  5669  011F                     	;# 
  5670  011F                     	;# 
  5671  011F                     	;# 
  5672  018C                     	;# 
  5673  018D                     	;# 
  5674  018E                     	;# 
  5675  018F                     	;# 
  5676  0190                     	;# 
  5677  0191                     	;# 
  5678  0192                     	;# 
  5679  0196                     	;# 
  5680  0197                     	;# 
  5681  0198                     	;# 
  5682  0199                     	;# 
  5683  019A                     	;# 
  5684  019B                     	;# 
  5685  019C                     	;# 
  5686  020C                     	;# 
  5687  020C                     	;# 
  5688  020D                     	;# 
  5689  020E                     	;# 
  5690  020F                     	;# 
  5691  020F                     	;# 
  5692  0210                     	;# 
  5693  0210                     	;# 
  5694  0211                     	;# 
  5695  0211                     	;# 
  5696  0212                     	;# 
  5697  0212                     	;# 
  5698  0213                     	;# 
  5699  0214                     	;# 
  5700  0215                     	;# 
  5701  0215                     	;# 
  5702  0216                     	;# 
  5703  0216                     	;# 
  5704  0217                     	;# 
  5705  0217                     	;# 
  5706  0218                     	;# 
  5707  0218                     	;# 
  5708  0219                     	;# 
  5709  021A                     	;# 
  5710  021B                     	;# 
  5711  021B                     	;# 
  5712  021C                     	;# 
  5713  021C                     	;# 
  5714  021D                     	;# 
  5715  021D                     	;# 
  5716  021E                     	;# 
  5717  021F                     	;# 
  5718  028C                     	;# 
  5719  028C                     	;# 
  5720  028D                     	;# 
  5721  028D                     	;# 
  5722  028E                     	;# 
  5723  028F                     	;# 
  5724  0290                     	;# 
  5725  0290                     	;# 
  5726  0291                     	;# 
  5727  0292                     	;# 
  5728  0292                     	;# 
  5729  0293                     	;# 
  5730  0293                     	;# 
  5731  0294                     	;# 
  5732  0295                     	;# 
  5733  0296                     	;# 
  5734  0296                     	;# 
  5735  0297                     	;# 
  5736  0298                     	;# 
  5737  0298                     	;# 
  5738  0299                     	;# 
  5739  0299                     	;# 
  5740  029A                     	;# 
  5741  029B                     	;# 
  5742  029C                     	;# 
  5743  029C                     	;# 
  5744  029D                     	;# 
  5745  030C                     	;# 
  5746  030C                     	;# 
  5747  030D                     	;# 
  5748  030E                     	;# 
  5749  030F                     	;# 
  5750  0310                     	;# 
  5751  0310                     	;# 
  5752  0311                     	;# 
  5753  0312                     	;# 
  5754  0313                     	;# 
  5755  0314                     	;# 
  5756  0314                     	;# 
  5757  0315                     	;# 
  5758  0316                     	;# 
  5759  0317                     	;# 
  5760  0318                     	;# 
  5761  0318                     	;# 
  5762  0319                     	;# 
  5763  031A                     	;# 
  5764  031B                     	;# 
  5765  031C                     	;# 
  5766  031C                     	;# 
  5767  031D                     	;# 
  5768  031E                     	;# 
  5769  031F                     	;# 
  5770  038C                     	;# 
  5771  038C                     	;# 
  5772  038D                     	;# 
  5773  038E                     	;# 
  5774  0390                     	;# 
  5775  0390                     	;# 
  5776  0391                     	;# 
  5777  0392                     	;# 
  5778  040C                     	;# 
  5779  040D                     	;# 
  5780  040E                     	;# 
  5781  040F                     	;# 
  5782  0410                     	;# 
  5783  0411                     	;# 
  5784  0416                     	;# 
  5785  0416                     	;# 
  5786  0417                     	;# 
  5787  0418                     	;# 
  5788  0418                     	;# 
  5789  0419                     	;# 
  5790  041A                     	;# 
  5791  041A                     	;# 
  5792  041B                     	;# 
  5793  041C                     	;# 
  5794  041C                     	;# 
  5795  041D                     	;# 
  5796  041E                     	;# 
  5797  041F                     	;# 
  5798  048C                     	;# 
  5799  048C                     	;# 
  5800  048D                     	;# 
  5801  048E                     	;# 
  5802  048F                     	;# 
  5803  048F                     	;# 
  5804  0490                     	;# 
  5805  0491                     	;# 
  5806  0492                     	;# 
  5807  0492                     	;# 
  5808  0493                     	;# 
  5809  0494                     	;# 
  5810  0495                     	;# 
  5811  0495                     	;# 
  5812  0496                     	;# 
  5813  0497                     	;# 
  5814  0498                     	;# 
  5815  0499                     	;# 
  5816  049A                     	;# 
  5817  049B                     	;# 
  5818  049C                     	;# 
  5819  049D                     	;# 
  5820  050C                     	;# 
  5821  050C                     	;# 
  5822  050D                     	;# 
  5823  050E                     	;# 
  5824  050F                     	;# 
  5825  050F                     	;# 
  5826  0510                     	;# 
  5827  0511                     	;# 
  5828  0512                     	;# 
  5829  0512                     	;# 
  5830  0513                     	;# 
  5831  0514                     	;# 
  5832  0515                     	;# 
  5833  0515                     	;# 
  5834  0516                     	;# 
  5835  0517                     	;# 
  5836  0518                     	;# 
  5837  0519                     	;# 
  5838  051A                     	;# 
  5839  051B                     	;# 
  5840  051C                     	;# 
  5841  051D                     	;# 
  5842  058C                     	;# 
  5843  058C                     	;# 
  5844  058D                     	;# 
  5845  058E                     	;# 
  5846  058F                     	;# 
  5847  058F                     	;# 
  5848  0590                     	;# 
  5849  0591                     	;# 
  5850  0592                     	;# 
  5851  0593                     	;# 
  5852  060C                     	;# 
  5853  060D                     	;# 
  5854  060E                     	;# 
  5855  060F                     	;# 
  5856  0610                     	;# 
  5857  0611                     	;# 
  5858  0612                     	;# 
  5859  0613                     	;# 
  5860  0614                     	;# 
  5861  0616                     	;# 
  5862  0617                     	;# 
  5863  0618                     	;# 
  5864  0619                     	;# 
  5865  061A                     	;# 
  5866  061B                     	;# 
  5867  061C                     	;# 
  5868  061D                     	;# 
  5869  061E                     	;# 
  5870  068C                     	;# 
  5871  068D                     	;# 
  5872  068E                     	;# 
  5873  068F                     	;# 
  5874  0690                     	;# 
  5875  0691                     	;# 
  5876  0692                     	;# 
  5877  0693                     	;# 
  5878  0694                     	;# 
  5879  070C                     	;# 
  5880  070D                     	;# 
  5881  070E                     	;# 
  5882  070F                     	;# 
  5883  0710                     	;# 
  5884  0711                     	;# 
  5885  0712                     	;# 
  5886  0713                     	;# 
  5887  0714                     	;# 
  5888  0716                     	;# 
  5889  0717                     	;# 
  5890  0718                     	;# 
  5891  0719                     	;# 
  5892  071A                     	;# 
  5893  071B                     	;# 
  5894  071C                     	;# 
  5895  071D                     	;# 
  5896  071E                     	;# 
  5897  0796                     	;# 
  5898  0797                     	;# 
  5899  0798                     	;# 
  5900  0799                     	;# 
  5901  079A                     	;# 
  5902  079B                     	;# 
  5903  080C                     	;# 
  5904  080D                     	;# 
  5905  080E                     	;# 
  5906  080F                     	;# 
  5907  0810                     	;# 
  5908  0811                     	;# 
  5909  0812                     	;# 
  5910  0813                     	;# 
  5911  0814                     	;# 
  5912  081A                     	;# 
  5913  081B                     	;# 
  5914  081C                     	;# 
  5915  081D                     	;# 
  5916  081E                     	;# 
  5917  081F                     	;# 
  5918  088C                     	;# 
  5919  088D                     	;# 
  5920  088E                     	;# 
  5921  088F                     	;# 
  5922  0890                     	;# 
  5923  0891                     	;# 
  5924  0892                     	;# 
  5925  0893                     	;# 
  5926  0895                     	;# 
  5927  0896                     	;# 
  5928  0897                     	;# 
  5929  0898                     	;# 
  5930  0899                     	;# 
  5931  089A                     	;# 
  5932  089B                     	;# 
  5933  090C                     	;# 
  5934  090E                     	;# 
  5935  090F                     	;# 
  5936  091F                     	;# 
  5937  091F                     	;# 
  5938  098F                     	;# 
  5939  098F                     	;# 
  5940  0990                     	;# 
  5941  0991                     	;# 
  5942  0992                     	;# 
  5943  0993                     	;# 
  5944  0994                     	;# 
  5945  0995                     	;# 
  5946  0996                     	;# 
  5947  0997                     	;# 
  5948  0E0F                     	;# 
  5949  0E10                     	;# 
  5950  0E11                     	;# 
  5951  0E12                     	;# 
  5952  0E13                     	;# 
  5953  0E14                     	;# 
  5954  0E15                     	;# 
  5955  0E16                     	;# 
  5956  0E17                     	;# 
  5957  0E18                     	;# 
  5958  0E19                     	;# 
  5959  0E1A                     	;# 
  5960  0E1B                     	;# 
  5961  0E1C                     	;# 
  5962  0E1D                     	;# 
  5963  0E1E                     	;# 
  5964  0E1F                     	;# 
  5965  0E20                     	;# 
  5966  0E21                     	;# 
  5967  0E22                     	;# 
  5968  0E23                     	;# 
  5969  0E24                     	;# 
  5970  0E25                     	;# 
  5971  0E26                     	;# 
  5972  0E27                     	;# 
  5973  0E28                     	;# 
  5974  0E29                     	;# 
  5975  0E2A                     	;# 
  5976  0E2B                     	;# 
  5977  0E2C                     	;# 
  5978  0E2D                     	;# 
  5979  0E2E                     	;# 
  5980  0E2F                     	;# 
  5981  0E30                     	;# 
  5982  0E31                     	;# 
  5983  0E32                     	;# 
  5984  0E33                     	;# 
  5985  0E34                     	;# 
  5986  0E35                     	;# 
  5987  0E36                     	;# 
  5988  0E37                     	;# 
  5989  0E8F                     	;# 
  5990  0E90                     	;# 
  5991  0E91                     	;# 
  5992  0E92                     	;# 
  5993  0E93                     	;# 
  5994  0E94                     	;# 
  5995  0E95                     	;# 
  5996  0E96                     	;# 
  5997  0E97                     	;# 
  5998  0E9C                     	;# 
  5999  0E9D                     	;# 
  6000  0E9E                     	;# 
  6001  0EA1                     	;# 
  6002  0EA2                     	;# 
  6003  0EA3                     	;# 
  6004  0EA4                     	;# 
  6005  0EA5                     	;# 
  6006  0EA9                     	;# 
  6007  0EAA                     	;# 
  6008  0EAB                     	;# 
  6009  0EAC                     	;# 
  6010  0EB1                     	;# 
  6011  0EB2                     	;# 
  6012  0EB3                     	;# 
  6013  0EB8                     	;# 
  6014  0EB9                     	;# 
  6015  0EBA                     	;# 
  6016  0EBB                     	;# 
  6017  0EBC                     	;# 
  6018  0EBD                     	;# 
  6019  0EBE                     	;# 
  6020  0EC3                     	;# 
  6021  0EC5                     	;# 
  6022  0EC6                     	;# 
  6023  0EC7                     	;# 
  6024  0EC8                     	;# 
  6025  0EC9                     	;# 
  6026  0ECA                     	;# 
  6027  0ECB                     	;# 
  6028  0ECC                     	;# 
  6029  0F10                     	;# 
  6030  0F11                     	;# 
  6031  0F12                     	;# 
  6032  0F13                     	;# 
  6033  0F14                     	;# 
  6034  0F15                     	;# 
  6035  0F16                     	;# 
  6036  0F17                     	;# 
  6037  0F18                     	;# 
  6038  0F19                     	;# 
  6039  0F1A                     	;# 
  6040  0F1B                     	;# 
  6041  0F1C                     	;# 
  6042  0F1D                     	;# 
  6043  0F1E                     	;# 
  6044  0F1F                     	;# 
  6045  0F20                     	;# 
  6046  0F21                     	;# 
  6047  0F22                     	;# 
  6048  0F23                     	;# 
  6049  0F24                     	;# 
  6050  0F25                     	;# 
  6051  0F26                     	;# 
  6052  0F27                     	;# 
  6053  0F28                     	;# 
  6054  0F29                     	;# 
  6055  0F2A                     	;# 
  6056  0F2B                     	;# 
  6057  0F2C                     	;# 
  6058  0F2D                     	;# 
  6059  0F2E                     	;# 
  6060  0F2F                     	;# 
  6061  0F30                     	;# 
  6062  0F31                     	;# 
  6063  0F32                     	;# 
  6064  0F38                     	;# 
  6065  0F39                     	;# 
  6066  0F3A                     	;# 
  6067  0F3B                     	;# 
  6068  0F3C                     	;# 
  6069  0F3D                     	;# 
  6070  0F3E                     	;# 
  6071  0F3F                     	;# 
  6072  0F40                     	;# 
  6073  0F41                     	;# 
  6074  0F43                     	;# 
  6075  0F44                     	;# 
  6076  0F45                     	;# 
  6077  0F46                     	;# 
  6078  0F47                     	;# 
  6079  0F48                     	;# 
  6080  0F49                     	;# 
  6081  0F4A                     	;# 
  6082  0F4B                     	;# 
  6083  0F4C                     	;# 
  6084  0F4E                     	;# 
  6085  0F4F                     	;# 
  6086  0F50                     	;# 
  6087  0F51                     	;# 
  6088  0F52                     	;# 
  6089  0F53                     	;# 
  6090  0F54                     	;# 
  6091  0F55                     	;# 
  6092  0F56                     	;# 
  6093  0F57                     	;# 
  6094  0F59                     	;# 
  6095  0F5A                     	;# 
  6096  0F5B                     	;# 
  6097  0F5C                     	;# 
  6098  0F5D                     	;# 
  6099  0F61                     	;# 
  6100  0F62                     	;# 
  6101  0F64                     	;# 
  6102  0F65                     	;# 
  6103  0F66                     	;# 
  6104  0F67                     	;# 
  6105  0F68                     	;# 
  6106  0F69                     	;# 
  6107  0F6A                     	;# 
  6108  0F6B                     	;# 
  6109  0F6C                     	;# 
  6110  0F6D                     	;# 
  6111  0FE4                     	;# 
  6112  0FE5                     	;# 
  6113  0FE6                     	;# 
  6114  0FE7                     	;# 
  6115  0FE8                     	;# 
  6116  0FE9                     	;# 
  6117  0FEA                     	;# 
  6118  0FEB                     	;# 
  6119  0FED                     	;# 
  6120  0FEE                     	;# 
  6121  0FEF                     	;# 
  6122  0000                     	;# 
  6123  0001                     	;# 
  6124  0002                     	;# 
  6125  0003                     	;# 
  6126  0004                     	;# 
  6127  0005                     	;# 
  6128  0006                     	;# 
  6129  0007                     	;# 
  6130  0008                     	;# 
  6131  0009                     	;# 
  6132  000A                     	;# 
  6133  000B                     	;# 
  6134  000C                     	;# 
  6135  000D                     	;# 
  6136  000E                     	;# 
  6137  000F                     	;# 
  6138  0010                     	;# 
  6139  0011                     	;# 
  6140  0012                     	;# 
  6141  0013                     	;# 
  6142  0014                     	;# 
  6143  0015                     	;# 
  6144  0016                     	;# 
  6145  0017                     	;# 
  6146  0018                     	;# 
  6147  0019                     	;# 
  6148  001A                     	;# 
  6149  001C                     	;# 
  6150  001C                     	;# 
  6151  001D                     	;# 
  6152  001D                     	;# 
  6153  001E                     	;# 
  6154  001F                     	;# 
  6155  008C                     	;# 
  6156  008C                     	;# 
  6157  008D                     	;# 
  6158  008E                     	;# 
  6159  008E                     	;# 
  6160  008F                     	;# 
  6161  0090                     	;# 
  6162  0090                     	;# 
  6163  0091                     	;# 
  6164  0093                     	;# 
  6165  0094                     	;# 
  6166  0095                     	;# 
  6167  0096                     	;# 
  6168  0097                     	;# 
  6169  0098                     	;# 
  6170  0099                     	;# 
  6171  009A                     	;# 
  6172  009B                     	;# 
  6173  009C                     	;# 
  6174  009D                     	;# 
  6175  009E                     	;# 
  6176  010C                     	;# 
  6177  010D                     	;# 
  6178  010E                     	;# 
  6179  010E                     	;# 
  6180  010F                     	;# 
  6181  0110                     	;# 
  6182  0110                     	;# 
  6183  0111                     	;# 
  6184  0112                     	;# 
  6185  0112                     	;# 
  6186  0113                     	;# 
  6187  0114                     	;# 
  6188  0114                     	;# 
  6189  0115                     	;# 
  6190  0116                     	;# 
  6191  0116                     	;# 
  6192  0117                     	;# 
  6193  0119                     	;# 
  6194  0119                     	;# 
  6195  0119                     	;# 
  6196  011A                     	;# 
  6197  011A                     	;# 
  6198  011A                     	;# 
  6199  011B                     	;# 
  6200  011B                     	;# 
  6201  011B                     	;# 
  6202  011B                     	;# 
  6203  011B                     	;# 
  6204  011C                     	;# 
  6205  011C                     	;# 
  6206  011C                     	;# 
  6207  011D                     	;# 
  6208  011D                     	;# 
  6209  011D                     	;# 
  6210  011E                     	;# 
  6211  011E                     	;# 
  6212  011E                     	;# 
  6213  011F                     	;# 
  6214  011F                     	;# 
  6215  011F                     	;# 
  6216  011F                     	;# 
  6217  011F                     	;# 
  6218  018C                     	;# 
  6219  018D                     	;# 
  6220  018E                     	;# 
  6221  018F                     	;# 
  6222  0190                     	;# 
  6223  0191                     	;# 
  6224  0192                     	;# 
  6225  0196                     	;# 
  6226  0197                     	;# 
  6227  0198                     	;# 
  6228  0199                     	;# 
  6229  019A                     	;# 
  6230  019B                     	;# 
  6231  019C                     	;# 
  6232  020C                     	;# 
  6233  020C                     	;# 
  6234  020D                     	;# 
  6235  020E                     	;# 
  6236  020F                     	;# 
  6237  020F                     	;# 
  6238  0210                     	;# 
  6239  0210                     	;# 
  6240  0211                     	;# 
  6241  0211                     	;# 
  6242  0212                     	;# 
  6243  0212                     	;# 
  6244  0213                     	;# 
  6245  0214                     	;# 
  6246  0215                     	;# 
  6247  0215                     	;# 
  6248  0216                     	;# 
  6249  0216                     	;# 
  6250  0217                     	;# 
  6251  0217                     	;# 
  6252  0218                     	;# 
  6253  0218                     	;# 
  6254  0219                     	;# 
  6255  021A                     	;# 
  6256  021B                     	;# 
  6257  021B                     	;# 
  6258  021C                     	;# 
  6259  021C                     	;# 
  6260  021D                     	;# 
  6261  021D                     	;# 
  6262  021E                     	;# 
  6263  021F                     	;# 
  6264  028C                     	;# 
  6265  028C                     	;# 
  6266  028D                     	;# 
  6267  028D                     	;# 
  6268  028E                     	;# 
  6269  028F                     	;# 
  6270  0290                     	;# 
  6271  0290                     	;# 
  6272  0291                     	;# 
  6273  0292                     	;# 
  6274  0292                     	;# 
  6275  0293                     	;# 
  6276  0293                     	;# 
  6277  0294                     	;# 
  6278  0295                     	;# 
  6279  0296                     	;# 
  6280  0296                     	;# 
  6281  0297                     	;# 
  6282  0298                     	;# 
  6283  0298                     	;# 
  6284  0299                     	;# 
  6285  0299                     	;# 
  6286  029A                     	;# 
  6287  029B                     	;# 
  6288  029C                     	;# 
  6289  029C                     	;# 
  6290  029D                     	;# 
  6291  030C                     	;# 
  6292  030C                     	;# 
  6293  030D                     	;# 
  6294  030E                     	;# 
  6295  030F                     	;# 
  6296  0310                     	;# 
  6297  0310                     	;# 
  6298  0311                     	;# 
  6299  0312                     	;# 
  6300  0313                     	;# 
  6301  0314                     	;# 
  6302  0314                     	;# 
  6303  0315                     	;# 
  6304  0316                     	;# 
  6305  0317                     	;# 
  6306  0318                     	;# 
  6307  0318                     	;# 
  6308  0319                     	;# 
  6309  031A                     	;# 
  6310  031B                     	;# 
  6311  031C                     	;# 
  6312  031C                     	;# 
  6313  031D                     	;# 
  6314  031E                     	;# 
  6315  031F                     	;# 
  6316  038C                     	;# 
  6317  038C                     	;# 
  6318  038D                     	;# 
  6319  038E                     	;# 
  6320  0390                     	;# 
  6321  0390                     	;# 
  6322  0391                     	;# 
  6323  0392                     	;# 
  6324  040C                     	;# 
  6325  040D                     	;# 
  6326  040E                     	;# 
  6327  040F                     	;# 
  6328  0410                     	;# 
  6329  0411                     	;# 
  6330  0416                     	;# 
  6331  0416                     	;# 
  6332  0417                     	;# 
  6333  0418                     	;# 
  6334  0418                     	;# 
  6335  0419                     	;# 
  6336  041A                     	;# 
  6337  041A                     	;# 
  6338  041B                     	;# 
  6339  041C                     	;# 
  6340  041C                     	;# 
  6341  041D                     	;# 
  6342  041E                     	;# 
  6343  041F                     	;# 
  6344  048C                     	;# 
  6345  048C                     	;# 
  6346  048D                     	;# 
  6347  048E                     	;# 
  6348  048F                     	;# 
  6349  048F                     	;# 
  6350  0490                     	;# 
  6351  0491                     	;# 
  6352  0492                     	;# 
  6353  0492                     	;# 
  6354  0493                     	;# 
  6355  0494                     	;# 
  6356  0495                     	;# 
  6357  0495                     	;# 
  6358  0496                     	;# 
  6359  0497                     	;# 
  6360  0498                     	;# 
  6361  0499                     	;# 
  6362  049A                     	;# 
  6363  049B                     	;# 
  6364  049C                     	;# 
  6365  049D                     	;# 
  6366  050C                     	;# 
  6367  050C                     	;# 
  6368  050D                     	;# 
  6369  050E                     	;# 
  6370  050F                     	;# 
  6371  050F                     	;# 
  6372  0510                     	;# 
  6373  0511                     	;# 
  6374  0512                     	;# 
  6375  0512                     	;# 
  6376  0513                     	;# 
  6377  0514                     	;# 
  6378  0515                     	;# 
  6379  0515                     	;# 
  6380  0516                     	;# 
  6381  0517                     	;# 
  6382  0518                     	;# 
  6383  0519                     	;# 
  6384  051A                     	;# 
  6385  051B                     	;# 
  6386  051C                     	;# 
  6387  051D                     	;# 
  6388  058C                     	;# 
  6389  058C                     	;# 
  6390  058D                     	;# 
  6391  058E                     	;# 
  6392  058F                     	;# 
  6393  058F                     	;# 
  6394  0590                     	;# 
  6395  0591                     	;# 
  6396  0592                     	;# 
  6397  0593                     	;# 
  6398  060C                     	;# 
  6399  060D                     	;# 
  6400  060E                     	;# 
  6401  060F                     	;# 
  6402  0610                     	;# 
  6403  0611                     	;# 
  6404  0612                     	;# 
  6405  0613                     	;# 
  6406  0614                     	;# 
  6407  0616                     	;# 
  6408  0617                     	;# 
  6409  0618                     	;# 
  6410  0619                     	;# 
  6411  061A                     	;# 
  6412  061B                     	;# 
  6413  061C                     	;# 
  6414  061D                     	;# 
  6415  061E                     	;# 
  6416  068C                     	;# 
  6417  068D                     	;# 
  6418  068E                     	;# 
  6419  068F                     	;# 
  6420  0690                     	;# 
  6421  0691                     	;# 
  6422  0692                     	;# 
  6423  0693                     	;# 
  6424  0694                     	;# 
  6425  070C                     	;# 
  6426  070D                     	;# 
  6427  070E                     	;# 
  6428  070F                     	;# 
  6429  0710                     	;# 
  6430  0711                     	;# 
  6431  0712                     	;# 
  6432  0713                     	;# 
  6433  0714                     	;# 
  6434  0716                     	;# 
  6435  0717                     	;# 
  6436  0718                     	;# 
  6437  0719                     	;# 
  6438  071A                     	;# 
  6439  071B                     	;# 
  6440  071C                     	;# 
  6441  071D                     	;# 
  6442  071E                     	;# 
  6443  0796                     	;# 
  6444  0797                     	;# 
  6445  0798                     	;# 
  6446  0799                     	;# 
  6447  079A                     	;# 
  6448  079B                     	;# 
  6449  080C                     	;# 
  6450  080D                     	;# 
  6451  080E                     	;# 
  6452  080F                     	;# 
  6453  0810                     	;# 
  6454  0811                     	;# 
  6455  0812                     	;# 
  6456  0813                     	;# 
  6457  0814                     	;# 
  6458  081A                     	;# 
  6459  081B                     	;# 
  6460  081C                     	;# 
  6461  081D                     	;# 
  6462  081E                     	;# 
  6463  081F                     	;# 
  6464  088C                     	;# 
  6465  088D                     	;# 
  6466  088E                     	;# 
  6467  088F                     	;# 
  6468  0890                     	;# 
  6469  0891                     	;# 
  6470  0892                     	;# 
  6471  0893                     	;# 
  6472  0895                     	;# 
  6473  0896                     	;# 
  6474  0897                     	;# 
  6475  0898                     	;# 
  6476  0899                     	;# 
  6477  089A                     	;# 
  6478  089B                     	;# 
  6479  090C                     	;# 
  6480  090E                     	;# 
  6481  090F                     	;# 
  6482  091F                     	;# 
  6483  091F                     	;# 
  6484  098F                     	;# 
  6485  098F                     	;# 
  6486  0990                     	;# 
  6487  0991                     	;# 
  6488  0992                     	;# 
  6489  0993                     	;# 
  6490  0994                     	;# 
  6491  0995                     	;# 
  6492  0996                     	;# 
  6493  0997                     	;# 
  6494  0E0F                     	;# 
  6495  0E10                     	;# 
  6496  0E11                     	;# 
  6497  0E12                     	;# 
  6498  0E13                     	;# 
  6499  0E14                     	;# 
  6500  0E15                     	;# 
  6501  0E16                     	;# 
  6502  0E17                     	;# 
  6503  0E18                     	;# 
  6504  0E19                     	;# 
  6505  0E1A                     	;# 
  6506  0E1B                     	;# 
  6507  0E1C                     	;# 
  6508  0E1D                     	;# 
  6509  0E1E                     	;# 
  6510  0E1F                     	;# 
  6511  0E20                     	;# 
  6512  0E21                     	;# 
  6513  0E22                     	;# 
  6514  0E23                     	;# 
  6515  0E24                     	;# 
  6516  0E25                     	;# 
  6517  0E26                     	;# 
  6518  0E27                     	;# 
  6519  0E28                     	;# 
  6520  0E29                     	;# 
  6521  0E2A                     	;# 
  6522  0E2B                     	;# 
  6523  0E2C                     	;# 
  6524  0E2D                     	;# 
  6525  0E2E                     	;# 
  6526  0E2F                     	;# 
  6527  0E30                     	;# 
  6528  0E31                     	;# 
  6529  0E32                     	;# 
  6530  0E33                     	;# 
  6531  0E34                     	;# 
  6532  0E35                     	;# 
  6533  0E36                     	;# 
  6534  0E37                     	;# 
  6535  0E8F                     	;# 
  6536  0E90                     	;# 
  6537  0E91                     	;# 
  6538  0E92                     	;# 
  6539  0E93                     	;# 
  6540  0E94                     	;# 
  6541  0E95                     	;# 
  6542  0E96                     	;# 
  6543  0E97                     	;# 
  6544  0E9C                     	;# 
  6545  0E9D                     	;# 
  6546  0E9E                     	;# 
  6547  0EA1                     	;# 
  6548  0EA2                     	;# 
  6549  0EA3                     	;# 
  6550  0EA4                     	;# 
  6551  0EA5                     	;# 
  6552  0EA9                     	;# 
  6553  0EAA                     	;# 
  6554  0EAB                     	;# 
  6555  0EAC                     	;# 
  6556  0EB1                     	;# 
  6557  0EB2                     	;# 
  6558  0EB3                     	;# 
  6559  0EB8                     	;# 
  6560  0EB9                     	;# 
  6561  0EBA                     	;# 
  6562  0EBB                     	;# 
  6563  0EBC                     	;# 
  6564  0EBD                     	;# 
  6565  0EBE                     	;# 
  6566  0EC3                     	;# 
  6567  0EC5                     	;# 
  6568  0EC6                     	;# 
  6569  0EC7                     	;# 
  6570  0EC8                     	;# 
  6571  0EC9                     	;# 
  6572  0ECA                     	;# 
  6573  0ECB                     	;# 
  6574  0ECC                     	;# 
  6575  0F10                     	;# 
  6576  0F11                     	;# 
  6577  0F12                     	;# 
  6578  0F13                     	;# 
  6579  0F14                     	;# 
  6580  0F15                     	;# 
  6581  0F16                     	;# 
  6582  0F17                     	;# 
  6583  0F18                     	;# 
  6584  0F19                     	;# 
  6585  0F1A                     	;# 
  6586  0F1B                     	;# 
  6587  0F1C                     	;# 
  6588  0F1D                     	;# 
  6589  0F1E                     	;# 
  6590  0F1F                     	;# 
  6591  0F20                     	;# 
  6592  0F21                     	;# 
  6593  0F22                     	;# 
  6594  0F23                     	;# 
  6595  0F24                     	;# 
  6596  0F25                     	;# 
  6597  0F26                     	;# 
  6598  0F27                     	;# 
  6599  0F28                     	;# 
  6600  0F29                     	;# 
  6601  0F2A                     	;# 
  6602  0F2B                     	;# 
  6603  0F2C                     	;# 
  6604  0F2D                     	;# 
  6605  0F2E                     	;# 
  6606  0F2F                     	;# 
  6607  0F30                     	;# 
  6608  0F31                     	;# 
  6609  0F32                     	;# 
  6610  0F38                     	;# 
  6611  0F39                     	;# 
  6612  0F3A                     	;# 
  6613  0F3B                     	;# 
  6614  0F3C                     	;# 
  6615  0F3D                     	;# 
  6616  0F3E                     	;# 
  6617  0F3F                     	;# 
  6618  0F40                     	;# 
  6619  0F41                     	;# 
  6620  0F43                     	;# 
  6621  0F44                     	;# 
  6622  0F45                     	;# 
  6623  0F46                     	;# 
  6624  0F47                     	;# 
  6625  0F48                     	;# 
  6626  0F49                     	;# 
  6627  0F4A                     	;# 
  6628  0F4B                     	;# 
  6629  0F4C                     	;# 
  6630  0F4E                     	;# 
  6631  0F4F                     	;# 
  6632  0F50                     	;# 
  6633  0F51                     	;# 
  6634  0F52                     	;# 
  6635  0F53                     	;# 
  6636  0F54                     	;# 
  6637  0F55                     	;# 
  6638  0F56                     	;# 
  6639  0F57                     	;# 
  6640  0F59                     	;# 
  6641  0F5A                     	;# 
  6642  0F5B                     	;# 
  6643  0F5C                     	;# 
  6644  0F5D                     	;# 
  6645  0F61                     	;# 
  6646  0F62                     	;# 
  6647  0F64                     	;# 
  6648  0F65                     	;# 
  6649  0F66                     	;# 
  6650  0F67                     	;# 
  6651  0F68                     	;# 
  6652  0F69                     	;# 
  6653  0F6A                     	;# 
  6654  0F6B                     	;# 
  6655  0F6C                     	;# 
  6656  0F6D                     	;# 
  6657  0FE4                     	;# 
  6658  0FE5                     	;# 
  6659  0FE6                     	;# 
  6660  0FE7                     	;# 
  6661  0FE8                     	;# 
  6662  0FE9                     	;# 
  6663  0FEA                     	;# 
  6664  0FEB                     	;# 
  6665  0FED                     	;# 
  6666  0FEE                     	;# 
  6667  0FEF                     	;# 
  6668                           
  6669 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  6670  0000                     
  6671 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  6672  0000                     
  6673 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  6674  0000                     
  6675 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  6676  0000                     
  6677 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  6678  0000                     
  6679 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  6680  0000                     
  6681 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  6682  0000                     
  6683 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  6684  0000                     
  6685 ;; Function _I2C1_DO_TX is unused but had its address taken
  6686  0000                     
  6687 ;; Function _I2C1_DO_RX is unused but had its address taken
  6688  0000                     
  6689 ;; Function _I2C1_DO_RCEN is unused but had its address taken
  6690  0000                     
  6691 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  6692  0000                     
  6693 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  6694  0000                     
  6695 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  6696  0000                     
  6697 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  6698  0000                     
  6699 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  6700  0000                     
  6701 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  6702  0000                     
  6703 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  6704  0000                     
  6705 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  6706  0000                     
  6707 ;; Function _I2C1_DO_RESET is unused but had its address taken
  6708  0000                     
  6709 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  6710  0000                     
  6711 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  6712  0000                     
  6713 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  6714  0000                     
  6715                           	psect	stringtext1
  6716  1800                     __pstringtext1:
  6717  1800                     _i2c1_fsmStateTable:
  6718  1800  3400               	retlw	0
  6719  1801  3400               	retlw	0
  6720  1802  3400               	retlw	0
  6721  1803  3400               	retlw	0
  6722  1804  3400               	retlw	0
  6723  1805  3400               	retlw	0
  6724  1806  3400               	retlw	0
  6725  1807  3400               	retlw	0
  6726  1808  3400               	retlw	0
  6727  1809  3400               	retlw	0
  6728  180A  3400               	retlw	0
  6729  180B  3400               	retlw	0
  6730  180C  3400               	retlw	0
  6731  180D  3400               	retlw	0
  6732  180E  3400               	retlw	0
  6733  180F  3400               	retlw	0
  6734  1810  3400               	retlw	0
  6735  1811  3400               	retlw	0
  6736  1812  3400               	retlw	0
  6737  1813  3400               	retlw	0
  6738  1814  3400               	retlw	0
  6739  1815  3400               	retlw	0
  6740  1816  3400               	retlw	0
  6741  1817  3400               	retlw	0
  6742  1818  3400               	retlw	0
  6743  1819  3400               	retlw	0
  6744  181A  3400               	retlw	0
  6745  181B  3400               	retlw	0
  6746  181C  3400               	retlw	0
  6747  181D  3400               	retlw	0
  6748  181E  3400               	retlw	0
  6749  181F  3400               	retlw	0
  6750  1820                     __end_of_i2c1_fsmStateTable:
  6751                           
  6752                           	psect	nvBANK2
  6753  015F                     __pnvBANK2:
  6754  015F                     _TMR1_InterruptHandler:
  6755  015F                     	ds	2
  6756  0161                     _timer1ReloadVal:
  6757  0161                     	ds	2
  6758  000E                     _PORTCbits	set	14
  6759  0016                     _LATAbits	set	22
  6760  000C                     _PORTAbits	set	12
  6761  000D                     _PORTBbits	set	13
  6762  000B                     _INTCONbits	set	11
  6763  0014                     _TRISD	set	20
  6764  0013                     _TRISC	set	19
  6765  0012                     _TRISB	set	18
  6766  0011                     _TRISA	set	17
  6767  0015                     _TRISE	set	21
  6768  0018                     _LATC	set	24
  6769  0017                     _LATB	set	23
  6770  0016                     _LATA	set	22
  6771  0019                     _LATD	set	25
  6772  001A                     _LATE	set	26
  6773  0013                     _TRISCbits	set	19
  6774  0094                     _ADCON1bits	set	148
  6775  008E                     _ADPREVL	set	142
  6776  008F                     _ADPREVH	set	143
  6777  0097                     _ADSTATbits	set	151
  6778  0090                     _ADACCL	set	144
  6779  0091                     _ADACCH	set	145
  6780  0095                     _ADCON2bits	set	149
  6781  0096                     _ADCON3bits	set	150
  6782  008C                     _ADRESL	set	140
  6783  008D                     _ADRESH	set	141
  6784  0093                     _ADCON0bits	set	147
  6785  009D                     _ADACQ	set	157
  6786  0093                     _ADCON0	set	147
  6787  0098                     _ADCLK	set	152
  6788  0099                     _ADACT	set	153
  6789  009A                     _ADREF	set	154
  6790  0097                     _ADSTAT	set	151
  6791  0096                     _ADCON3	set	150
  6792  0095                     _ADCON2	set	149
  6793  0094                     _ADCON1	set	148
  6794  009C                     _ADPRE	set	156
  6795  009B                     _ADCAP	set	155
  6796  009E                     _ADPCH	set	158
  6797  0116                     _ADERRL	set	278
  6798  0117                     _ADERRH	set	279
  6799  0114                     _ADFLTRL	set	276
  6800  0115                     _ADFLTRH	set	277
  6801  010C                     _ADCNT	set	268
  6802  010D                     _ADRPT	set	269
  6803  0113                     _ADSTPTH	set	275
  6804  0112                     _ADSTPTL	set	274
  6805  0111                     _ADUTHH	set	273
  6806  0110                     _ADUTHL	set	272
  6807  010F                     _ADLTHH	set	271
  6808  010E                     _ADLTHL	set	270
  6809  018C                     _SSP1BUF	set	396
  6810  018F                     _SSP1STATbits	set	399
  6811  0191                     _SSP1CON2bits	set	401
  6812  0190                     _SSP1CON1bits	set	400
  6813  018D                     _SSP1ADD	set	397
  6814  0191                     _SSP1CON2	set	401
  6815  0190                     _SSP1CON1	set	400
  6816  018F                     _SSP1STAT	set	399
  6817  020F                     _T1GCONbits	set	527
  6818  020E                     _T1CONbits	set	526
  6819  020E                     _T1CON	set	526
  6820  020C                     _TMR1L	set	524
  6821  020D                     _TMR1H	set	525
  6822  0211                     _T1CLK	set	529
  6823  0210                     _T1GATE	set	528
  6824  020F                     _T1GCON	set	527
  6825  0719                     _PIE3bits	set	1817
  6826  0710                     _PIR4bits	set	1808
  6827  071A                     _PIE4bits	set	1818
  6828  070F                     _PIR3bits	set	1807
  6829  079B                     _PMD5	set	1947
  6830  079A                     _PMD4	set	1946
  6831  0799                     _PMD3	set	1945
  6832  0798                     _PMD2	set	1944
  6833  0797                     _PMD1	set	1943
  6834  0796                     _PMD0	set	1942
  6835  081F                     _NVMCON2	set	2079
  6836  081C                     _NVMDATL	set	2076
  6837  081D                     _NVMDATH	set	2077
  6838  081E                     _NVMCON1bits	set	2078
  6839  081B                     _NVMADRH	set	2075
  6840  081A                     _NVMADRL	set	2074
  6841  0892                     _OSCTUNE	set	2194
  6842  0893                     _OSCFRQ	set	2195
  6843  0891                     _OSCEN	set	2193
  6844  088F                     _OSCCON3	set	2191
  6845  088D                     _OSCCON1	set	2189
  6846  0EC6                     _SSP1DATPPS	set	3782
  6847  0EC5                     _SSP1CLKPPS	set	3781
  6848  0F24                     _RC4PPS	set	3876
  6849  0F23                     _RC3PPS	set	3875
  6850  0F68                     _INLVLE	set	3944
  6851  0F5D                     _INLVLD	set	3933
  6852  0F52                     _INLVLC	set	3922
  6853  0F47                     _INLVLB	set	3911
  6854  0F3C                     _INLVLA	set	3900
  6855  0F67                     _SLRCONE	set	3943
  6856  0F5C                     _SLRCOND	set	3932
  6857  0F51                     _SLRCONC	set	3921
  6858  0F46                     _SLRCONB	set	3910
  6859  0F3B                     _SLRCONA	set	3899
  6860  0F5B                     _ODCOND	set	3931
  6861  0F50                     _ODCONC	set	3920
  6862  0F45                     _ODCONB	set	3909
  6863  0F3A                     _ODCONA	set	3898
  6864  0F66                     _ODCONE	set	3942
  6865  0F4F                     _WPUC	set	3919
  6866  0F39                     _WPUA	set	3897
  6867  0F44                     _WPUB	set	3908
  6868  0F65                     _WPUE	set	3941
  6869  0F5A                     _WPUD	set	3930
  6870  0F38                     _ANSELA	set	3896
  6871  0F64                     _ANSELE	set	3940
  6872  0F43                     _ANSELB	set	3907
  6873  0F4E                     _ANSELC	set	3918
  6874  0F59                     _ANSELD	set	3929
  6875                           
  6876                           	psect	stringtext2
  6877  1820                     __pstringtext2:
  6878  1820                     STR_4:
  6879  1820  3425               	retlw	37	;'%'
  6880  1821  3430               	retlw	48	;'0'
  6881  1822  3432               	retlw	50	;'2'
  6882  1823  3464               	retlw	100	;'d'
  6883  1824  343A               	retlw	58	;':'
  6884  1825  3425               	retlw	37	;'%'
  6885  1826  3430               	retlw	48	;'0'
  6886  1827  3432               	retlw	50	;'2'
  6887  1828  3464               	retlw	100	;'d'
  6888  1829  343A               	retlw	58	;':'
  6889  182A  3425               	retlw	37	;'%'
  6890  182B  3430               	retlw	48	;'0'
  6891  182C  3432               	retlw	50	;'2'
  6892  182D  3464               	retlw	100	;'d'
  6893  182E  3420               	retlw	32	;' '
  6894  182F  3420               	retlw	32	;' '
  6895  1830  3420               	retlw	32	;' '
  6896  1831  3420               	retlw	32	;' '
  6897  1832  3420               	retlw	32	;' '
  6898  1833  3420               	retlw	32	;' '
  6899  1834  3400               	retlw	0
  6900                           
  6901                           	psect	stringtext3
  6902  1835                     __pstringtext3:
  6903  1835                     STR_2:
  6904  1835  3425               	retlw	37	;'%'
  6905  1836  3430               	retlw	48	;'0'
  6906  1837  3432               	retlw	50	;'2'
  6907  1838  3464               	retlw	100	;'d'
  6908  1839  343A               	retlw	58	;':'
  6909  183A  3425               	retlw	37	;'%'
  6910  183B  3430               	retlw	48	;'0'
  6911  183C  3432               	retlw	50	;'2'
  6912  183D  3464               	retlw	100	;'d'
  6913  183E  343A               	retlw	58	;':'
  6914  183F  3425               	retlw	37	;'%'
  6915  1840  3430               	retlw	48	;'0'
  6916  1841  3432               	retlw	50	;'2'
  6917  1842  3464               	retlw	100	;'d'
  6918  1843  3420               	retlw	32	;' '
  6919  1844  3420               	retlw	32	;' '
  6920  1845  3420               	retlw	32	;' '
  6921  1846  3420               	retlw	32	;' '
  6922  1847  3420               	retlw	32	;' '
  6923  1848  3400               	retlw	0
  6924                           
  6925                           	psect	stringtext4
  6926  1849                     __pstringtext4:
  6927  1849                     STR_7:
  6928  1849  3425               	retlw	37	;'%'
  6929  184A  3430               	retlw	48	;'0'
  6930  184B  3432               	retlw	50	;'2'
  6931  184C  3464               	retlw	100	;'d'
  6932  184D  343A               	retlw	58	;':'
  6933  184E  3425               	retlw	37	;'%'
  6934  184F  3430               	retlw	48	;'0'
  6935  1850  3432               	retlw	50	;'2'
  6936  1851  3464               	retlw	100	;'d'
  6937  1852  343A               	retlw	58	;':'
  6938  1853  3425               	retlw	37	;'%'
  6939  1854  3430               	retlw	48	;'0'
  6940  1855  3432               	retlw	50	;'2'
  6941  1856  3464               	retlw	100	;'d'
  6942  1857  3400               	retlw	0
  6943                           
  6944                           	psect	stringtext5
  6945  1858                     __pstringtext5:
  6946  1858                     STR_5:
  6947  1858  3469               	retlw	105	;'i'
  6948  1859  346E               	retlw	110	;'n'
  6949  185A  3473               	retlw	115	;'s'
  6950  185B  3465               	retlw	101	;'e'
  6951  185C  3472               	retlw	114	;'r'
  6952  185D  3474               	retlw	116	;'t'
  6953  185E  3420               	retlw	32	;' '
  6954  185F  3473               	retlw	115	;'s'
  6955  1860  3465               	retlw	101	;'e'
  6956  1861  3463               	retlw	99	;'c'
  6957  1862  346F               	retlw	111	;'o'
  6958  1863  346E               	retlw	110	;'n'
  6959  1864  3464               	retlw	100	;'d'
  6960  1865  3473               	retlw	115	;'s'
  6961  1866  3400               	retlw	0
  6962                           
  6963                           	psect	stringtext6
  6964  1867                     __pstringtext6:
  6965  1867                     STR_3:
  6966  1867  3469               	retlw	105	;'i'
  6967  1868  346E               	retlw	110	;'n'
  6968  1869  3473               	retlw	115	;'s'
  6969  186A  3465               	retlw	101	;'e'
  6970  186B  3472               	retlw	114	;'r'
  6971  186C  3474               	retlw	116	;'t'
  6972  186D  3420               	retlw	32	;' '
  6973  186E  346D               	retlw	109	;'m'
  6974  186F  3469               	retlw	105	;'i'
  6975  1870  346E               	retlw	110	;'n'
  6976  1871  3475               	retlw	117	;'u'
  6977  1872  3474               	retlw	116	;'t'
  6978  1873  3465               	retlw	101	;'e'
  6979  1874  3473               	retlw	115	;'s'
  6980  1875  3400               	retlw	0
  6981                           
  6982                           	psect	stringtext7
  6983  1876                     __pstringtext7:
  6984  1876                     STR_1:
  6985  1876  3469               	retlw	105	;'i'
  6986  1877  346E               	retlw	110	;'n'
  6987  1878  3473               	retlw	115	;'s'
  6988  1879  3465               	retlw	101	;'e'
  6989  187A  3472               	retlw	114	;'r'
  6990  187B  3474               	retlw	116	;'t'
  6991  187C  3420               	retlw	32	;' '
  6992  187D  3468               	retlw	104	;'h'
  6993  187E  346F               	retlw	111	;'o'
  6994  187F  3475               	retlw	117	;'u'
  6995  1880  3472               	retlw	114	;'r'
  6996  1881  3473               	retlw	115	;'s'
  6997  1882  3400               	retlw	0
  6998                           
  6999                           	psect	stringtext8
  7000  1883                     __pstringtext8:
  7001  1883                     STR_9:
  7002  1883  3425               	retlw	37	;'%'
  7003  1884  3430               	retlw	48	;'0'
  7004  1885  3432               	retlw	50	;'2'
  7005  1886  3464               	retlw	100	;'d'
  7006  1887  3420               	retlw	32	;' '
  7007  1888  3443               	retlw	67	;'C'
  7008  1889  3400               	retlw	0
  7009                           
  7010                           	psect	stringtext9
  7011  188A                     __pstringtext9:
  7012  188A                     STR_8:
  7013  188A  3453               	retlw	83	;'S'
  7014  188B  3454               	retlw	84	;'T'
  7015  188C  3452               	retlw	82	;'R'
  7016  188D  3400               	retlw	0
  7017                           
  7018                           	psect	stringtext10
  7019  0000                     __pstringtext10:
  7020  1820                     
  7021                           	psect	cinit
  7022  001A                     start_initialization:	
  7023                           ; #config settings
  7024                           
  7025  001A                     __initialization:
  7026                           
  7027                           ; Clear objects allocated to COMMON
  7028  001A  01FA               	clrf	__pbssCOMMON& (0+127)
  7029  001B  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  7030  001C  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  7031  001D  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  7032                           
  7033                           ; Clear objects allocated to BANK1
  7034  001E  0021               	movlb	1	; select bank1
  7035  001F  01ED               	clrf	__pbssBANK1& (0+127)
  7036  0020  01EE               	clrf	(__pbssBANK1+1)& (0+127)
  7037                           
  7038                           ; Clear objects allocated to BANK2
  7039  0021  3020               	movlw	low __pbssBANK2
  7040  0022  0084               	movwf	4
  7041  0023  3001               	movlw	high __pbssBANK2
  7042  0024  0085               	movwf	5
  7043  0025  303F               	movlw	63
  7044  0026  3194  2405  3180   	fcall	clear_ram0
  7045  0029                     end_of_initialization:	
  7046                           ;End of C runtime variable initialization code
  7047                           
  7048  0029                     __end_of__initialization:
  7049  0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7050  002A  0020               	movlb	0
  7051  002B  3180  282D         	ljmp	_main	;jump to C main() function
  7052                           
  7053                           	psect	bssCOMMON
  7054  007A                     __pbssCOMMON:
  7055  007A                     _prec:
  7056  007A                     	ds	2
  7057  007C                     _flags:
  7058  007C                     	ds	2
  7059                           
  7060                           	psect	bssBANK1
  7061  00ED                     __pbssBANK1:
  7062  00ED                     _width:
  7063  00ED                     	ds	2
  7064                           
  7065                           	psect	bssBANK2
  7066  0120                     __pbssBANK2:
  7067  0120                     _I2C1_Status:
  7068  0120                     	ds	29
  7069  013D                     _nout:
  7070  013D                     	ds	2
  7071  013F                     _dbuf:
  7072  013F                     	ds	32
  7073                           
  7074                           	psect	clrtext
  7075  1405                     clear_ram0:	
  7076                           ;	Called with FSR0 containing the base address, and
  7077                           ;	WREG with the size to clear
  7078                           
  7079  1405  0064               	clrwdt	;clear the watchdog before getting into this loop
  7080  1406                     clrloop0:
  7081  1406  0180               	clrf	0	;clear RAM location pointed to by FSR
  7082  1407  3101               	addfsr 0,1
  7083  1408  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7084  1409  2C06               	goto	clrloop0	;have we reached the end yet?
  7085  140A  3400               	retlw	0	;all done for this memory range, return
  7086                           
  7087                           	psect	cstackBANK1
  7088  00A0                     __pcstackBANK1:
  7089  00A0                     ?_vfprintf:
  7090  00A0                     vfprintf@fmt:	
  7091                           ; 2 bytes @ 0x0
  7092                           
  7093                           
  7094                           ; 2 bytes @ 0x0
  7095  00A0                     	ds	2
  7096  00A2                     vfprintf@ap:
  7097                           
  7098                           ; 1 bytes @ 0x2
  7099  00A2                     	ds	1
  7100  00A3                     vfprintf@fp:
  7101                           
  7102                           ; 1 bytes @ 0x3
  7103  00A3                     	ds	1
  7104  00A4                     vfprintf@cfmt:
  7105                           
  7106                           ; 2 bytes @ 0x4
  7107  00A4                     	ds	2
  7108  00A6                     ?_sprintf:
  7109  00A6                     sprintf@fmt:	
  7110                           ; 2 bytes @ 0x6
  7111                           
  7112                           
  7113                           ; 2 bytes @ 0x6
  7114  00A6                     	ds	8
  7115  00AE                     ??_sprintf:
  7116                           
  7117                           ; 1 bytes @ 0xE
  7118  00AE                     	ds	1
  7119  00AF                     sprintf@ap:
  7120                           
  7121                           ; 1 bytes @ 0xF
  7122  00AF                     	ds	1
  7123  00B0                     sprintf@s:
  7124                           
  7125                           ; 1 bytes @ 0x10
  7126  00B0                     	ds	1
  7127  00B1                     sprintf@f:
  7128                           
  7129                           ; 5 bytes @ 0x11
  7130  00B1                     	ds	5
  7131  00B6                     ??_main:
  7132                           
  7133                           ; 1 bytes @ 0x16
  7134  00B6                     	ds	12
  7135  00C2                     main@readRingBufferAddr:
  7136                           
  7137                           ; 2 bytes @ 0x22
  7138  00C2                     	ds	2
  7139  00C4                     main@buf:
  7140                           
  7141                           ; 17 bytes @ 0x24
  7142  00C4                     	ds	17
  7143  00D5                     main@c:
  7144                           
  7145                           ; 1 bytes @ 0x35
  7146  00D5                     	ds	1
  7147  00D6                     main@hours:
  7148                           
  7149                           ; 1 bytes @ 0x36
  7150  00D6                     	ds	1
  7151  00D7                     main@minutes:
  7152                           
  7153                           ; 1 bytes @ 0x37
  7154  00D7                     	ds	1
  7155  00D8                     main@seconds:
  7156                           
  7157                           ; 1 bytes @ 0x38
  7158  00D8                     	ds	1
  7159  00D9                     main@temperature:
  7160                           
  7161                           ; 1 bytes @ 0x39
  7162  00D9                     	ds	1
  7163  00DA                     main@luminosity:
  7164                           
  7165                           ; 1 bytes @ 0x3A
  7166  00DA                     	ds	1
  7167  00DB                     main@magic_word:
  7168                           
  7169                           ; 1 bytes @ 0x3B
  7170  00DB                     	ds	1
  7171  00DC                     main@NREG:
  7172                           
  7173                           ; 1 bytes @ 0x3C
  7174  00DC                     	ds	1
  7175  00DD                     main@NR:
  7176                           
  7177                           ; 1 bytes @ 0x3D
  7178  00DD                     	ds	1
  7179  00DE                     main@WI:
  7180                           
  7181                           ; 1 bytes @ 0x3E
  7182  00DE                     	ds	1
  7183  00DF                     main@RI:
  7184                           
  7185                           ; 1 bytes @ 0x3F
  7186  00DF                     	ds	1
  7187  00E0                     main@PMON:
  7188                           
  7189                           ; 1 bytes @ 0x40
  7190  00E0                     	ds	1
  7191  00E1                     main@TALA:
  7192                           
  7193                           ; 1 bytes @ 0x41
  7194  00E1                     	ds	1
  7195  00E2                     main@ALAT:
  7196                           
  7197                           ; 1 bytes @ 0x42
  7198  00E2                     	ds	1
  7199  00E3                     main@ALAL:
  7200                           
  7201                           ; 1 bytes @ 0x43
  7202  00E3                     	ds	1
  7203  00E4                     main@ALAF:
  7204                           
  7205                           ; 1 bytes @ 0x44
  7206  00E4                     	ds	1
  7207  00E5                     main@CLKH:
  7208                           
  7209                           ; 1 bytes @ 0x45
  7210  00E5                     	ds	1
  7211  00E6                     main@CLKM:
  7212                           
  7213                           ; 1 bytes @ 0x46
  7214  00E6                     	ds	1
  7215  00E7                     main@checksum:
  7216                           
  7217                           ; 1 bytes @ 0x47
  7218  00E7                     	ds	1
  7219  00E8                     main@h:
  7220                           
  7221                           ; 1 bytes @ 0x48
  7222  00E8                     	ds	1
  7223  00E9                     main@m:
  7224                           
  7225                           ; 1 bytes @ 0x49
  7226  00E9                     	ds	1
  7227  00EA                     main@s:
  7228                           
  7229                           ; 1 bytes @ 0x4A
  7230  00EA                     	ds	1
  7231  00EB                     main@dataAddr:
  7232                           
  7233                           ; 2 bytes @ 0x4B
  7234  00EB                     	ds	2
  7235                           
  7236                           	psect	cstackCOMMON
  7237  0070                     __pcstackCOMMON:
  7238  0070                     ?_PMD_Initialize:
  7239  0070                     ?_I2C1_Initialize:	
  7240                           ; 1 bytes @ 0x0
  7241                           
  7242  0070                     ?_OSCILLATOR_Initialize:	
  7243                           ; 1 bytes @ 0x0
  7244                           
  7245  0070                     ?_ADCC_Initialize:	
  7246                           ; 1 bytes @ 0x0
  7247                           
  7248  0070                     ?_TMR1_Initialize:	
  7249                           ; 1 bytes @ 0x0
  7250                           
  7251  0070                     ?_TMR1_ISR:	
  7252                           ; 1 bytes @ 0x0
  7253                           
  7254  0070                     ?_TMR1_DefaultInterruptHandler:	
  7255                           ; 1 bytes @ 0x0
  7256                           
  7257  0070                     ??_TMR1_DefaultInterruptHandler:	
  7258                           ; 1 bytes @ 0x0
  7259                           
  7260  0070                     ?_TMR1_CallBack:	
  7261                           ; 1 bytes @ 0x0
  7262                           
  7263  0070                     ?_initializeEPROM:	
  7264                           ; 1 bytes @ 0x0
  7265                           
  7266  0070                     ?_putch:	
  7267                           ; 1 bytes @ 0x0
  7268                           
  7269  0070                     ?_OpenI2C:	
  7270                           ; 1 bytes @ 0x0
  7271                           
  7272  0070                     ?_ReadI2C:	
  7273                           ; 1 bytes @ 0x0
  7274                           
  7275  0070                     ?_WriteI2C:	
  7276                           ; 1 bytes @ 0x0
  7277                           
  7278  0070                     ?_LCDsend:	
  7279                           ; 1 bytes @ 0x0
  7280                           
  7281  0070                     ?_LCDrecv:	
  7282                           ; 1 bytes @ 0x0
  7283                           
  7284  0070                     ?_LCDinit:	
  7285                           ; 1 bytes @ 0x0
  7286                           
  7287  0070                     ?_LCDcmd:	
  7288                           ; 1 bytes @ 0x0
  7289                           
  7290  0070                     ?_LCDchar:	
  7291                           ; 1 bytes @ 0x0
  7292                           
  7293  0070                     ?_PIN_MANAGER_Initialize:	
  7294                           ; 1 bytes @ 0x0
  7295                           
  7296  0070                     ?_SYSTEM_Initialize:	
  7297                           ; 1 bytes @ 0x0
  7298                           
  7299  0070                     ?_INTERRUPT_InterruptManager:	
  7300                           ; 1 bytes @ 0x0
  7301                           
  7302  0070                     ?_TMR1_WriteTimer:	
  7303                           ; 1 bytes @ 0x0
  7304                           
  7305  0070                     ?_S1:	
  7306                           ; 1 bytes @ 0x0
  7307                           
  7308  0070                     ?_timerInterrupt:	
  7309                           ; 1 bytes @ 0x0
  7310                           
  7311  0070                     ?_readTC74:	
  7312                           ; 1 bytes @ 0x0
  7313                           
  7314  0070                     ?_main:	
  7315                           ; 1 bytes @ 0x0
  7316                           
  7317  0070                     ?i1_DATAEE_WriteByte:	
  7318                           ; 1 bytes @ 0x0
  7319                           
  7320  0070                     ?i1_DATAEE_ReadByte:	
  7321                           ; 1 bytes @ 0x0
  7322                           
  7323  0070                     ?_ADCC_GetSingleConversion:	
  7324                           ; 1 bytes @ 0x0
  7325                           
  7326  0070                     putch@c:	
  7327                           ; 2 bytes @ 0x0
  7328                           
  7329  0070                     TMR1_WriteTimer@timerVal:	
  7330                           ; 1 bytes @ 0x0
  7331                           
  7332  0070                     i1DATAEE_WriteByte@bAdd:	
  7333                           ; 2 bytes @ 0x0
  7334                           
  7335  0070                     i1DATAEE_ReadByte@bAdd:	
  7336                           ; 2 bytes @ 0x0
  7337                           
  7338                           
  7339                           ; 2 bytes @ 0x0
  7340  0070                     	ds	2
  7341  0072                     ??_TMR1_WriteTimer:
  7342  0072                     ??_ADCC_GetSingleConversion:	
  7343                           ; 1 bytes @ 0x2
  7344                           
  7345  0072                     ??i1_DATAEE_ReadByte:	
  7346                           ; 1 bytes @ 0x2
  7347                           
  7348  0072                     ADCC_GetSingleConversion@channel:	
  7349                           ; 1 bytes @ 0x2
  7350                           
  7351  0072                     i1DATAEE_WriteByte@bData:	
  7352                           ; 1 bytes @ 0x2
  7353                           
  7354                           
  7355                           ; 1 bytes @ 0x2
  7356  0072                     	ds	1
  7357  0073                     ??i1_DATAEE_WriteByte:
  7358  0073                     i1DATAEE_WriteByte@GIEBitValue:	
  7359                           ; 1 bytes @ 0x3
  7360                           
  7361                           
  7362                           ; 1 bytes @ 0x3
  7363  0073                     	ds	1
  7364  0074                     ??_timerInterrupt:
  7365                           
  7366                           ; 1 bytes @ 0x4
  7367  0074                     	ds	1
  7368  0075                     timerInterrupt@value:
  7369                           
  7370                           ; 2 bytes @ 0x5
  7371  0075                     	ds	2
  7372  0077                     timerInterrupt@h:
  7373                           
  7374                           ; 1 bytes @ 0x7
  7375  0077                     	ds	1
  7376  0078                     timerInterrupt@m:
  7377                           
  7378                           ; 1 bytes @ 0x8
  7379  0078                     	ds	1
  7380  0079                     timerInterrupt@s:
  7381                           
  7382                           ; 1 bytes @ 0x9
  7383  0079                     	ds	1
  7384  007A                     ??_TMR1_ISR:
  7385  007A                     ??_TMR1_CallBack:	
  7386                           ; 1 bytes @ 0xA
  7387                           
  7388  007A                     ??_INTERRUPT_InterruptManager:	
  7389                           ; 1 bytes @ 0xA
  7390                           
  7391                           
  7392                           	psect	cstackBANK0
  7393  0020                     __pcstackBANK0:	
  7394                           ; 1 bytes @ 0xA
  7395                           
  7396  0020                     ??_PMD_Initialize:
  7397  0020                     ??_I2C1_Initialize:	
  7398                           ; 1 bytes @ 0x0
  7399                           
  7400  0020                     ??_OSCILLATOR_Initialize:	
  7401                           ; 1 bytes @ 0x0
  7402                           
  7403  0020                     ??_ADCC_Initialize:	
  7404                           ; 1 bytes @ 0x0
  7405                           
  7406  0020                     ?_TMR1_SetInterruptHandler:	
  7407                           ; 1 bytes @ 0x0
  7408                           
  7409  0020                     ??_putch:	
  7410                           ; 1 bytes @ 0x0
  7411                           
  7412  0020                     ??_OpenI2C:	
  7413                           ; 1 bytes @ 0x0
  7414                           
  7415  0020                     ??_ReadI2C:	
  7416                           ; 1 bytes @ 0x0
  7417                           
  7418  0020                     ??_WriteI2C:	
  7419                           ; 1 bytes @ 0x0
  7420                           
  7421  0020                     ??_PIN_MANAGER_Initialize:	
  7422                           ; 1 bytes @ 0x0
  7423                           
  7424  0020                     ?_DATAEE_WriteByte:	
  7425                           ; 1 bytes @ 0x0
  7426                           
  7427  0020                     ?_DATAEE_ReadByte:	
  7428                           ; 1 bytes @ 0x0
  7429                           
  7430  0020                     ??_S1:	
  7431                           ; 1 bytes @ 0x0
  7432                           
  7433  0020                     ?_fputc:	
  7434                           ; 1 bytes @ 0x0
  7435                           
  7436  0020                     ?_strlen:	
  7437                           ; 2 bytes @ 0x0
  7438                           
  7439  0020                     ?_isdigit:	
  7440                           ; 2 bytes @ 0x0
  7441                           
  7442  0020                     ?_isspace:	
  7443                           ; 2 bytes @ 0x0
  7444                           
  7445  0020                     ?_operADDR:	
  7446                           ; 2 bytes @ 0x0
  7447                           
  7448  0020                     ?___wmul:	
  7449                           ; 2 bytes @ 0x0
  7450                           
  7451  0020                     ?___aodiv:	
  7452                           ; 2 bytes @ 0x0
  7453                           
  7454  0020                     ?___aomod:	
  7455                           ; 8 bytes @ 0x0
  7456                           
  7457  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  7458                           ; 8 bytes @ 0x0
  7459                           
  7460  0020                     DATAEE_WriteByte@bAdd:	
  7461                           ; 2 bytes @ 0x0
  7462                           
  7463  0020                     DATAEE_ReadByte@bAdd:	
  7464                           ; 2 bytes @ 0x0
  7465                           
  7466  0020                     ___wmul@multiplier:	
  7467                           ; 2 bytes @ 0x0
  7468                           
  7469  0020                     isdigit@c:	
  7470                           ; 2 bytes @ 0x0
  7471                           
  7472  0020                     isspace@c:	
  7473                           ; 2 bytes @ 0x0
  7474                           
  7475  0020                     fputc@c:	
  7476                           ; 2 bytes @ 0x0
  7477                           
  7478  0020                     ___aodiv@divisor:	
  7479                           ; 2 bytes @ 0x0
  7480                           
  7481  0020                     ___aomod@divisor:	
  7482                           ; 8 bytes @ 0x0
  7483                           
  7484                           
  7485                           ; 8 bytes @ 0x0
  7486  0020                     	ds	1
  7487  0021                     WriteI2C@data_out:
  7488                           
  7489                           ; 1 bytes @ 0x1
  7490  0021                     	ds	1
  7491  0022                     ??_TMR1_Initialize:
  7492  0022                     ??_TMR1_SetInterruptHandler:	
  7493                           ; 1 bytes @ 0x2
  7494                           
  7495  0022                     ?_parseEPROMInitialization:	
  7496                           ; 1 bytes @ 0x2
  7497                           
  7498  0022                     ??_strlen:	
  7499                           ; 1 bytes @ 0x2
  7500                           
  7501  0022                     ??_isdigit:	
  7502                           ; 1 bytes @ 0x2
  7503                           
  7504  0022                     ??_isspace:	
  7505                           ; 1 bytes @ 0x2
  7506                           
  7507  0022                     ??_LCDsend:	
  7508                           ; 1 bytes @ 0x2
  7509                           
  7510  0022                     ??_LCDrecv:	
  7511                           ; 1 bytes @ 0x2
  7512                           
  7513  0022                     ?_LCDsend2x4:	
  7514                           ; 1 bytes @ 0x2
  7515                           
  7516  0022                     ??_SYSTEM_Initialize:	
  7517                           ; 1 bytes @ 0x2
  7518                           
  7519  0022                     ??_DATAEE_ReadByte:	
  7520                           ; 1 bytes @ 0x2
  7521                           
  7522  0022                     ??_readTC74:	
  7523                           ; 1 bytes @ 0x2
  7524                           
  7525  0022                     ??_operADDR:	
  7526                           ; 1 bytes @ 0x2
  7527                           
  7528  0022                     LCDsend2x4@mode:	
  7529                           ; 1 bytes @ 0x2
  7530                           
  7531  0022                     DATAEE_WriteByte@bData:	
  7532                           ; 1 bytes @ 0x2
  7533                           
  7534  0022                     parseEPROMInitialization@NREG:	
  7535                           ; 1 bytes @ 0x2
  7536                           
  7537  0022                     fputc@fp:	
  7538                           ; 1 bytes @ 0x2
  7539                           
  7540  0022                     ___wmul@multiplicand:	
  7541                           ; 1 bytes @ 0x2
  7542                           
  7543                           
  7544                           ; 2 bytes @ 0x2
  7545  0022                     	ds	1
  7546  0023                     ??_fputc:
  7547  0023                     ??_LCDsend2x4:	
  7548                           ; 1 bytes @ 0x3
  7549                           
  7550  0023                     ??_DATAEE_WriteByte:	
  7551                           ; 1 bytes @ 0x3
  7552                           
  7553  0023                     LCDsend@c:	
  7554                           ; 1 bytes @ 0x3
  7555                           
  7556  0023                     DATAEE_WriteByte@GIEBitValue:	
  7557                           ; 1 bytes @ 0x3
  7558                           
  7559  0023                     readTC74@value:	
  7560                           ; 1 bytes @ 0x3
  7561                           
  7562  0023                     parseEPROMInitialization@NR:	
  7563                           ; 1 bytes @ 0x3
  7564                           
  7565  0023                     strlen@a:	
  7566                           ; 1 bytes @ 0x3
  7567                           
  7568                           
  7569                           ; 1 bytes @ 0x3
  7570  0023                     	ds	1
  7571  0024                     ??_initializeEPROM:
  7572  0024                     ??___wmul:	
  7573                           ; 1 bytes @ 0x4
  7574                           
  7575  0024                     LCDrecv@hc:	
  7576                           ; 1 bytes @ 0x4
  7577                           
  7578  0024                     operADDR@operation:	
  7579                           ; 1 bytes @ 0x4
  7580                           
  7581  0024                     parseEPROMInitialization@WI:	
  7582                           ; 1 bytes @ 0x4
  7583                           
  7584  0024                     _isspace$3000:	
  7585                           ; 1 bytes @ 0x4
  7586                           
  7587  0024                     strlen@s:	
  7588                           ; 1 bytes @ 0x4
  7589                           
  7590  0024                     ___wmul@product:	
  7591                           ; 1 bytes @ 0x4
  7592                           
  7593                           
  7594                           ; 2 bytes @ 0x4
  7595  0024                     	ds	1
  7596  0025                     LCDrecv@lc:
  7597  0025                     LCDsend2x4@c:	
  7598                           ; 1 bytes @ 0x5
  7599                           
  7600  0025                     parseEPROMInitialization@RI:	
  7601                           ; 1 bytes @ 0x5
  7602                           
  7603  0025                     operADDR@dataAddr:	
  7604                           ; 1 bytes @ 0x5
  7605                           
  7606                           
  7607                           ; 2 bytes @ 0x5
  7608  0025                     	ds	1
  7609  0026                     ?_atoi:
  7610  0026                     LCDrecv@mode:	
  7611                           ; 2 bytes @ 0x6
  7612                           
  7613  0026                     LCDsend2x4@hc:	
  7614                           ; 1 bytes @ 0x6
  7615                           
  7616  0026                     parseEPROMInitialization@PMON:	
  7617                           ; 1 bytes @ 0x6
  7618                           
  7619  0026                     atoi@s:	
  7620                           ; 1 bytes @ 0x6
  7621                           
  7622                           
  7623                           ; 2 bytes @ 0x6
  7624  0026                     	ds	1
  7625  0027                     ?_storeEPROMBuild:
  7626  0027                     ?_parseEPROMReading:	
  7627                           ; 1 bytes @ 0x7
  7628                           
  7629  0027                     ?_LCDbusy:	
  7630                           ; 1 bytes @ 0x7
  7631                           
  7632  0027                     LCDsend2x4@lc:	
  7633                           ; 2 bytes @ 0x7
  7634                           
  7635  0027                     storeEPROMBuild@minutes:	
  7636                           ; 1 bytes @ 0x7
  7637                           
  7638  0027                     parseEPROMReading@minutes:	
  7639                           ; 1 bytes @ 0x7
  7640                           
  7641  0027                     parseEPROMInitialization@TALA:	
  7642                           ; 1 bytes @ 0x7
  7643                           
  7644                           
  7645                           ; 1 bytes @ 0x7
  7646  0027                     	ds	1
  7647  0028                     ??_atoi:
  7648  0028                     ??_LCDinit:	
  7649                           ; 1 bytes @ 0x8
  7650                           
  7651  0028                     ??_LCDcmd:	
  7652                           ; 1 bytes @ 0x8
  7653                           
  7654  0028                     ??_LCDchar:	
  7655                           ; 1 bytes @ 0x8
  7656                           
  7657  0028                     ?_fputs:	
  7658                           ; 1 bytes @ 0x8
  7659                           
  7660  0028                     LCDcmd@c:	
  7661                           ; 2 bytes @ 0x8
  7662                           
  7663  0028                     LCDchar@c:	
  7664                           ; 1 bytes @ 0x8
  7665                           
  7666  0028                     storeEPROMBuild@seconds:	
  7667                           ; 1 bytes @ 0x8
  7668                           
  7669  0028                     parseEPROMReading@seconds:	
  7670                           ; 1 bytes @ 0x8
  7671                           
  7672  0028                     parseEPROMInitialization@ALAT:	
  7673                           ; 1 bytes @ 0x8
  7674                           
  7675  0028                     fputs@fp:	
  7676                           ; 1 bytes @ 0x8
  7677                           
  7678  0028                     ___aodiv@dividend:	
  7679                           ; 1 bytes @ 0x8
  7680                           
  7681  0028                     ___aomod@dividend:	
  7682                           ; 8 bytes @ 0x8
  7683                           
  7684                           
  7685                           ; 8 bytes @ 0x8
  7686  0028                     	ds	1
  7687  0029                     ??_fputs:
  7688  0029                     ?_LCDstr:	
  7689                           ; 1 bytes @ 0x9
  7690                           
  7691  0029                     ??_LCDbusy:	
  7692                           ; 1 bytes @ 0x9
  7693                           
  7694  0029                     ?_LCDpos:	
  7695                           ; 1 bytes @ 0x9
  7696                           
  7697  0029                     LCDpos@c:	
  7698                           ; 1 bytes @ 0x9
  7699                           
  7700  0029                     storeEPROMBuild@temperature:	
  7701                           ; 1 bytes @ 0x9
  7702                           
  7703  0029                     parseEPROMReading@temperature:	
  7704                           ; 1 bytes @ 0x9
  7705                           
  7706  0029                     parseEPROMInitialization@ALAL:	
  7707                           ; 1 bytes @ 0x9
  7708                           
  7709  0029                     LCDstr@p:	
  7710                           ; 1 bytes @ 0x9
  7711                           
  7712                           
  7713                           ; 2 bytes @ 0x9
  7714  0029                     	ds	1
  7715  002A                     ??_LCDpos:
  7716  002A                     storeEPROMBuild@luminosity:	
  7717                           ; 1 bytes @ 0xA
  7718                           
  7719  002A                     parseEPROMReading@luminosity:	
  7720                           ; 1 bytes @ 0xA
  7721                           
  7722  002A                     parseEPROMInitialization@ALAF:	
  7723                           ; 1 bytes @ 0xA
  7724                           
  7725                           
  7726                           ; 1 bytes @ 0xA
  7727  002A                     	ds	1
  7728  002B                     ??_LCDstr:
  7729  002B                     LCDpos@l:	
  7730                           ; 1 bytes @ 0xB
  7731                           
  7732  002B                     storeEPROMBuild@operation:	
  7733                           ; 1 bytes @ 0xB
  7734                           
  7735  002B                     parseEPROMReading@operation:	
  7736                           ; 1 bytes @ 0xB
  7737                           
  7738  002B                     parseEPROMInitialization@CLKH:	
  7739                           ; 1 bytes @ 0xB
  7740                           
  7741                           
  7742                           ; 1 bytes @ 0xB
  7743  002B                     	ds	1
  7744  002C                     ??_storeEPROMBuild:
  7745  002C                     ??_parseEPROMReading:	
  7746                           ; 1 bytes @ 0xC
  7747                           
  7748  002C                     LCDpos@p:	
  7749                           ; 1 bytes @ 0xC
  7750                           
  7751  002C                     parseEPROMInitialization@CLKM:	
  7752                           ; 1 bytes @ 0xC
  7753                           
  7754  002C                     fputs@c:	
  7755                           ; 1 bytes @ 0xC
  7756                           
  7757  002C                     atoi@neg:	
  7758                           ; 1 bytes @ 0xC
  7759                           
  7760                           
  7761                           ; 2 bytes @ 0xC
  7762  002C                     	ds	1
  7763  002D                     storeEPROMBuild@hours:
  7764  002D                     parseEPROMReading@hours:	
  7765                           ; 1 bytes @ 0xD
  7766                           
  7767  002D                     parseEPROMInitialization@checksum:	
  7768                           ; 1 bytes @ 0xD
  7769                           
  7770  002D                     fputs@i:	
  7771                           ; 1 bytes @ 0xD
  7772                           
  7773                           
  7774                           ; 2 bytes @ 0xD
  7775  002D                     	ds	1
  7776  002E                     ??_parseEPROMInitialization:
  7777  002E                     LCDstr@c:	
  7778                           ; 1 bytes @ 0xE
  7779                           
  7780  002E                     storeEPROMBuild@dataAddr:	
  7781                           ; 1 bytes @ 0xE
  7782                           
  7783  002E                     parseEPROMReading@dataAddr:	
  7784                           ; 2 bytes @ 0xE
  7785                           
  7786  002E                     _atoi$2982:	
  7787                           ; 2 bytes @ 0xE
  7788                           
  7789                           
  7790                           ; 2 bytes @ 0xE
  7791  002E                     	ds	1
  7792  002F                     parseEPROMInitialization@magic_word:
  7793  002F                     fputs@s:	
  7794                           ; 1 bytes @ 0xF
  7795                           
  7796                           
  7797                           ; 1 bytes @ 0xF
  7798  002F                     	ds	1
  7799  0030                     ??___aodiv:
  7800  0030                     ??___aomod:	
  7801                           ; 1 bytes @ 0x10
  7802                           
  7803  0030                     ?_pad:	
  7804                           ; 1 bytes @ 0x10
  7805                           
  7806  0030                     pad@buf:	
  7807                           ; 2 bytes @ 0x10
  7808                           
  7809  0030                     _atoi$2984:	
  7810                           ; 1 bytes @ 0x10
  7811                           
  7812                           
  7813                           ; 2 bytes @ 0x10
  7814  0030                     	ds	1
  7815  0031                     ___aodiv@counter:
  7816  0031                     ___aomod@counter:	
  7817                           ; 1 bytes @ 0x11
  7818                           
  7819  0031                     pad@p:	
  7820                           ; 1 bytes @ 0x11
  7821                           
  7822                           
  7823                           ; 2 bytes @ 0x11
  7824  0031                     	ds	1
  7825  0032                     ___aodiv@sign:
  7826  0032                     ___aomod@sign:	
  7827                           ; 1 bytes @ 0x12
  7828                           
  7829  0032                     _atoi$2983:	
  7830                           ; 1 bytes @ 0x12
  7831                           
  7832                           
  7833                           ; 1 bytes @ 0x12
  7834  0032                     	ds	1
  7835  0033                     ??_pad:
  7836  0033                     ?_abs:	
  7837                           ; 1 bytes @ 0x13
  7838                           
  7839  0033                     abs@a:	
  7840                           ; 2 bytes @ 0x13
  7841                           
  7842  0033                     atoi@n:	
  7843                           ; 2 bytes @ 0x13
  7844                           
  7845  0033                     ___aodiv@quotient:	
  7846                           ; 2 bytes @ 0x13
  7847                           
  7848                           
  7849                           ; 8 bytes @ 0x13
  7850  0033                     	ds	1
  7851  0034                     pad@i:
  7852                           
  7853                           ; 2 bytes @ 0x14
  7854  0034                     	ds	1
  7855  0035                     ??_abs:
  7856                           
  7857                           ; 1 bytes @ 0x15
  7858  0035                     	ds	1
  7859  0036                     pad@w:
  7860                           
  7861                           ; 2 bytes @ 0x16
  7862  0036                     	ds	2
  7863  0038                     pad@fp:
  7864                           
  7865                           ; 1 bytes @ 0x18
  7866  0038                     	ds	3
  7867  003B                     ?_dtoa:
  7868  003B                     dtoa@d:	
  7869                           ; 2 bytes @ 0x1B
  7870                           
  7871                           
  7872                           ; 8 bytes @ 0x1B
  7873  003B                     	ds	8
  7874  0043                     ??_dtoa:
  7875                           
  7876                           ; 1 bytes @ 0x23
  7877  0043                     	ds	3
  7878  0046                     _dtoa$2947:
  7879                           
  7880                           ; 2 bytes @ 0x26
  7881  0046                     	ds	2
  7882  0048                     dtoa@fp:
  7883                           
  7884                           ; 1 bytes @ 0x28
  7885  0048                     	ds	1
  7886  0049                     dtoa@p:
  7887                           
  7888                           ; 2 bytes @ 0x29
  7889  0049                     	ds	2
  7890  004B                     dtoa@w:
  7891                           
  7892                           ; 2 bytes @ 0x2B
  7893  004B                     	ds	2
  7894  004D                     dtoa@s:
  7895                           
  7896                           ; 2 bytes @ 0x2D
  7897  004D                     	ds	2
  7898  004F                     dtoa@n:
  7899                           
  7900                           ; 8 bytes @ 0x2F
  7901  004F                     	ds	8
  7902  0057                     dtoa@i:
  7903                           
  7904                           ; 2 bytes @ 0x37
  7905  0057                     	ds	2
  7906  0059                     ?_vfpfcnvrt:
  7907  0059                     vfpfcnvrt@fmt:	
  7908                           ; 2 bytes @ 0x39
  7909                           
  7910                           
  7911                           ; 1 bytes @ 0x39
  7912  0059                     	ds	1
  7913  005A                     vfpfcnvrt@ap:
  7914                           
  7915                           ; 1 bytes @ 0x3A
  7916  005A                     	ds	1
  7917  005B                     ??_vfpfcnvrt:
  7918                           
  7919                           ; 1 bytes @ 0x3B
  7920  005B                     	ds	6
  7921  0061                     vfpfcnvrt@ll:
  7922                           
  7923                           ; 8 bytes @ 0x41
  7924  0061                     	ds	8
  7925  0069                     vfpfcnvrt@done:
  7926                           
  7927                           ; 2 bytes @ 0x49
  7928  0069                     	ds	2
  7929  006B                     _vfpfcnvrt$2962:
  7930                           
  7931                           ; 2 bytes @ 0x4B
  7932  006B                     	ds	2
  7933  006D                     vfpfcnvrt@fp:
  7934                           
  7935                           ; 1 bytes @ 0x4D
  7936  006D                     	ds	1
  7937  006E                     ??_vfprintf:
  7938                           
  7939                           ; 1 bytes @ 0x4E
  7940  006E                     	ds	2
  7941                           
  7942                           	psect	maintext
  7943  002D                     __pmaintext:	
  7944 ;;
  7945 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  7946 ;;
  7947 ;; *************** function _main *****************
  7948 ;; Defined at:
  7949 ;;		line 139 in file "main.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;		None
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;  buf            17   36[BANK1 ] unsigned char [17]
  7954 ;;  dataAddr        2   75[BANK1 ] unsigned short 
  7955 ;;  dataeeAddr      2    0        unsigned short 
  7956 ;;  readRingBuff    2   34[BANK1 ] unsigned short 
  7957 ;;  writeRingBuf    2    0        unsigned short 
  7958 ;;  s               1   74[BANK1 ] unsigned char 
  7959 ;;  m               1   73[BANK1 ] unsigned char 
  7960 ;;  h               1   72[BANK1 ] unsigned char 
  7961 ;;  checksum        1   71[BANK1 ] unsigned char 
  7962 ;;  CLKM            1   70[BANK1 ] unsigned char 
  7963 ;;  CLKH            1   69[BANK1 ] unsigned char 
  7964 ;;  ALAF            1   68[BANK1 ] unsigned char 
  7965 ;;  ALAL            1   67[BANK1 ] unsigned char 
  7966 ;;  ALAT            1   66[BANK1 ] unsigned char 
  7967 ;;  TALA            1   65[BANK1 ] unsigned char 
  7968 ;;  PMON            1   64[BANK1 ] unsigned char 
  7969 ;;  RI              1   63[BANK1 ] unsigned char 
  7970 ;;  WI              1   62[BANK1 ] unsigned char 
  7971 ;;  NR              1   61[BANK1 ] unsigned char 
  7972 ;;  NREG            1   60[BANK1 ] unsigned char 
  7973 ;;  magic_word      1   59[BANK1 ] unsigned char 
  7974 ;;  luminosity      1   58[BANK1 ] unsigned char 
  7975 ;;  temperature     1   57[BANK1 ] unsigned char 
  7976 ;;  seconds         1   56[BANK1 ] unsigned char 
  7977 ;;  minutes         1   55[BANK1 ] unsigned char 
  7978 ;;  hours           1   54[BANK1 ] unsigned char 
  7979 ;;  dataeeData      1    0        unsigned char 
  7980 ;;  c               1   53[BANK1 ] unsigned char 
  7981 ;;  FILIPE          1    0        unsigned char 
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  1    wreg      void 
  7984 ;; Registers used:
  7985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7986 ;; Tracked objects:
  7987 ;;		On entry : B1F/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7992 ;;      Locals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0
  7993 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  7994 ;;      Totals:         0       0      55       0       0       0       0       0       0       0       0       0       
      +0       0
  7995 ;;Total ram usage:       55 bytes
  7996 ;; Hardware stack levels required when called: 13
  7997 ;; This function calls:
  7998 ;;		_DATAEE_ReadByte
  7999 ;;		_DATAEE_WriteByte
  8000 ;;		_LCDbusy
  8001 ;;		_LCDcmd
  8002 ;;		_LCDinit
  8003 ;;		_LCDpos
  8004 ;;		_LCDstr
  8005 ;;		_OpenI2C
  8006 ;;		_S1
  8007 ;;		_SYSTEM_Initialize
  8008 ;;		_TMR1_SetInterruptHandler
  8009 ;;		_initializeEPROM
  8010 ;;		_parseEPROMInitialization
  8011 ;;		_parseEPROMReading
  8012 ;;		_readTC74
  8013 ;;		_sprintf
  8014 ;;		_storeEPROMBuild
  8015 ;; This function is called by:
  8016 ;;		Startup code after reset
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020                           
  8021                           ;psect for function _main
  8022  002D                     _main:
  8023  002D                     l5604:	
  8024                           ;incstack = 0
  8025                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8026                           
  8027                           
  8028                           ;main.c: 144:     uint16_t readRingBufferAddr = 0xFF;
  8029  002D  30FF               	movlw	255
  8030  002E  0021               	movlb	1	; select bank1
  8031  002F  00C2               	movwf	main@readRingBufferAddr^(0+128)
  8032  0030  3000               	movlw	0
  8033  0031  00C3               	movwf	(main@readRingBufferAddr^(0+128)+1)
  8034  0032                     l5606:
  8035                           
  8036                           ;main.c: 146:     SYSTEM_Initialize();
  8037  0032  3194  24C4  3180   	fcall	_SYSTEM_Initialize
  8038  0035                     l5608:
  8039                           
  8040                           ;main.c: 152:     (INTCONbits.GIE = 1);
  8041  0035  178B               	bsf	11,7	;volatile
  8042  0036                     l5610:
  8043                           
  8044                           ;main.c: 155:     (INTCONbits.PEIE = 1);
  8045  0036  170B               	bsf	11,6	;volatile
  8046  0037                     l5612:
  8047  0037  0020               	movlb	0	; select bank0
  8048  0038  1716               	bsf	22,6	;volatile
  8049  0039                     l5614:
  8050                           
  8051                           ;main.c: 167:     OpenI2C();
  8052  0039  3194  2464  3180   	fcall	_OpenI2C
  8053  003C                     l5616:
  8054                           
  8055                           ;main.c: 172:     LCDinit();
  8056  003C  3188  20E1  3180   	fcall	_LCDinit
  8057  003F                     l5618:
  8058  003F                     l5620:
  8059  003F                     l5622:
  8060                           
  8061                           ;main.c: 176:     DATAEE_WriteByte(dataeeAddr,dataeeData);
  8062  003F  3010               	movlw	16
  8063  0040  0020               	movlb	0	; select bank0
  8064  0041  00A0               	movwf	DATAEE_WriteByte@bAdd
  8065  0042  30F0               	movlw	240
  8066  0043  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8067  0044  3055               	movlw	85
  8068  0045  0021               	movlb	1	; select bank1
  8069  0046  00B6               	movwf	??_main^(0+128)
  8070  0047  0836               	movf	??_main^(0+128),w
  8071  0048  0020               	movlb	0	; select bank0
  8072  0049  00A2               	movwf	DATAEE_WriteByte@bData
  8073  004A  3196  2638  3180   	fcall	_DATAEE_WriteByte
  8074  004D                     l5624:
  8075                           
  8076                           ;main.c: 178:     __nop();
  8077  004D  0000               	nop
  8078  004E                     l5626:
  8079  004E  3010               	movlw	16
  8080  004F  0020               	movlb	0	; select bank0
  8081  0050  00A0               	movwf	DATAEE_ReadByte@bAdd
  8082  0051  30F0               	movlw	240
  8083  0052  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  8084  0053  3194  247F  3180   	fcall	_DATAEE_ReadByte
  8085  0056                     l5628:
  8086                           
  8087                           ;main.c: 180:     __nop();
  8088  0056  0000               	nop
  8089  0057                     l5630:
  8090                           
  8091                           ;main.c: 182:     initializeEPROM();
  8092  0057  3189  21F1  3180   	fcall	_initializeEPROM
  8093  005A                     l5632:
  8094                           
  8095                           ;main.c: 184:     storeEPROMBuild(11,59,17,25,2,101);
  8096  005A  303B               	movlw	59
  8097  005B  0021               	movlb	1	; select bank1
  8098  005C  00B6               	movwf	??_main^(0+128)
  8099  005D  0836               	movf	??_main^(0+128),w
  8100  005E  0020               	movlb	0	; select bank0
  8101  005F  00A7               	movwf	storeEPROMBuild@minutes
  8102  0060  3011               	movlw	17
  8103  0061  0021               	movlb	1	; select bank1
  8104  0062  00B7               	movwf	(??_main+1)^(0+128)
  8105  0063  0837               	movf	(??_main+1)^(0+128),w
  8106  0064  0020               	movlb	0	; select bank0
  8107  0065  00A8               	movwf	storeEPROMBuild@seconds
  8108  0066  3019               	movlw	25
  8109  0067  0021               	movlb	1	; select bank1
  8110  0068  00B8               	movwf	(??_main+2)^(0+128)
  8111  0069  0838               	movf	(??_main+2)^(0+128),w
  8112  006A  0020               	movlb	0	; select bank0
  8113  006B  00A9               	movwf	storeEPROMBuild@temperature
  8114  006C  3002               	movlw	2
  8115  006D  0021               	movlb	1	; select bank1
  8116  006E  00B9               	movwf	(??_main+3)^(0+128)
  8117  006F  0839               	movf	(??_main+3)^(0+128),w
  8118  0070  0020               	movlb	0	; select bank0
  8119  0071  00AA               	movwf	storeEPROMBuild@luminosity
  8120  0072  3065               	movlw	101
  8121  0073  0021               	movlb	1	; select bank1
  8122  0074  00BA               	movwf	(??_main+4)^(0+128)
  8123  0075  083A               	movf	(??_main+4)^(0+128),w
  8124  0076  0020               	movlb	0	; select bank0
  8125  0077  00AB               	movwf	storeEPROMBuild@operation
  8126  0078  300B               	movlw	11
  8127  0079  3197  270D  3180   	fcall	_storeEPROMBuild
  8128  007C                     l5634:
  8129                           
  8130                           ;main.c: 186:     uint8_t hours,minutes,seconds,temperature,luminosity;;main.c: 187:    
      +                           uint8_t magic_word,NREG,NR,WI,RI,PMON,TALA,ALAT,ALAL,ALAF,CLKH,CLKM,checksum;;main.c: 1
      +                          88:     uint8_t h=0;
  8131  007C  0021               	movlb	1	; select bank1
  8132  007D  01E8               	clrf	main@h^(0+128)
  8133  007E                     l5636:
  8134                           
  8135                           ;main.c: 189:     uint8_t m=0;
  8136  007E  01E9               	clrf	main@m^(0+128)
  8137  007F                     l5638:
  8138                           
  8139                           ;main.c: 190:     uint8_t s=0;
  8140  007F  01EA               	clrf	main@s^(0+128)
  8141  0080                     l5640:
  8142                           
  8143                           ;main.c: 192:     LCDcmd(0x80);
  8144  0080  3080               	movlw	128
  8145  0081  3194  240B  3180   	fcall	_LCDcmd
  8146  0084                     l5642:
  8147                           
  8148                           ;main.c: 193:     LCDstr("insert hours");
  8149  0084  3076               	movlw	low (STR_1| (0+32768))
  8150  0085  0020               	movlb	0	; select bank0
  8151  0086  00A9               	movwf	LCDstr@p
  8152  0087  3098               	movlw	high (STR_1| (0+32768))
  8153  0088  00AA               	movwf	LCDstr@p+1
  8154  0089  3195  2507  3180   	fcall	_LCDstr
  8155  008C                     l5644:
  8156                           
  8157                           ;main.c: 194:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  8158  008C  3002               	movlw	2
  8159  008D  0021               	movlb	1	; select bank1
  8160  008E  00B7               	movwf	(??_main^(0+128)+1)
  8161  008F  3045               	movlw	69
  8162  0090  00B6               	movwf	??_main^(0+128)
  8163  0091  30A9               	movlw	169
  8164  0092                     u4397:
  8165  0092  0B89               	decfsz	9,f
  8166  0093  2892               	goto	u4397
  8167  0094  0BB6               	decfsz	??_main^(0+128),f
  8168  0095  2892               	goto	u4397
  8169  0096  0BB7               	decfsz	(??_main^(0+128)+1),f
  8170  0097  2892               	goto	u4397
  8171  0098  3200               	nop2
  8172                           
  8173                           ;main.c: 195:     while(PORTCbits.RC5==1){
  8174  0099  28E0               	goto	l5658
  8175  009A                     l1298:
  8176                           
  8177                           ;main.c: 196:         if(PORTBbits.RB4==0){
  8178  009A  1A0D               	btfsc	13,4	;volatile
  8179  009B  289D               	goto	u4271
  8180  009C  289E               	goto	u4270
  8181  009D                     u4271:
  8182  009D  28AC               	goto	l5650
  8183  009E                     u4270:
  8184  009E                     l5646:
  8185                           
  8186                           ;main.c: 197:             h++;
  8187  009E  3001               	movlw	1
  8188  009F  0021               	movlb	1	; select bank1
  8189  00A0  00B6               	movwf	??_main^(0+128)
  8190  00A1  0836               	movf	??_main^(0+128),w
  8191  00A2  07E8               	addwf	main@h^(0+128),f
  8192  00A3                     l5648:
  8193                           
  8194                           ;main.c: 198:             _delay((unsigned long)((250)*(1000000/4000.0)));
  8195  00A3  3052               	movlw	82
  8196  00A4  0021               	movlb	1	; select bank1
  8197  00A5  00B6               	movwf	??_main^(0+128)
  8198  00A6  3029               	movlw	41
  8199  00A7                     u4407:
  8200  00A7  0B89               	decfsz	9,f
  8201  00A8  28A7               	goto	u4407
  8202  00A9  0BB6               	decfsz	??_main^(0+128),f
  8203  00AA  28A7               	goto	u4407
  8204  00AB  3200               	nop2
  8205  00AC                     l5650:
  8206  00AC  3194  24B1  3180   	fcall	_LCDbusy
  8207  00AF  0020               	movlb	0	; select bank0
  8208  00B0  0827               	movf	?_LCDbusy,w
  8209  00B1  0428               	iorwf	?_LCDbusy+1,w
  8210  00B2  1D03               	btfss	3,2
  8211  00B3  28B5               	goto	u4281
  8212  00B4  28B6               	goto	u4280
  8213  00B5                     u4281:
  8214  00B5  28AC               	goto	l5650
  8215  00B6                     u4280:
  8216  00B6                     l5652:
  8217                           
  8218                           ;main.c: 201:         LCDcmd(0x80);
  8219  00B6  3080               	movlw	128
  8220  00B7  3194  240B  3180   	fcall	_LCDcmd
  8221  00BA                     l5654:
  8222                           
  8223                           ;main.c: 202:         sprintf(buf, "%02d:%02d:%02d     ", h, m, s);
  8224  00BA  3035               	movlw	low (STR_2| (0+32768))
  8225  00BB  0021               	movlb	1	; select bank1
  8226  00BC  00A6               	movwf	sprintf@fmt^(0+128)
  8227  00BD  3098               	movlw	high (STR_2| (0+32768))
  8228  00BE  00A7               	movwf	(sprintf@fmt^(0+128)+1)
  8229  00BF  0868               	movf	main@h^(0+128),w
  8230  00C0  00B6               	movwf	??_main^(0+128)
  8231  00C1  01B7               	clrf	(??_main^(0+128)+1)
  8232  00C2  0836               	movf	??_main^(0+128),w
  8233  00C3  00A8               	movwf	(?_sprintf^(0+128)+2)
  8234  00C4  0837               	movf	(??_main+1)^(0+128),w
  8235  00C5  00A9               	movwf	((?_sprintf+1)^(0+128)+2)
  8236  00C6  0869               	movf	main@m^(0+128),w
  8237  00C7  00B8               	movwf	(??_main+2)^(0+128)
  8238  00C8  01B9               	clrf	((??_main+2)^(0+128)+1)
  8239  00C9  0838               	movf	(??_main+2)^(0+128),w
  8240  00CA  00AA               	movwf	(?_sprintf^(0+128)+4)
  8241  00CB  0839               	movf	(??_main+3)^(0+128),w
  8242  00CC  00AB               	movwf	((?_sprintf+1)^(0+128)+4)
  8243  00CD  086A               	movf	main@s^(0+128),w
  8244  00CE  00BA               	movwf	(??_main+4)^(0+128)
  8245  00CF  01BB               	clrf	((??_main+4)^(0+128)+1)
  8246  00D0  083A               	movf	(??_main+4)^(0+128),w
  8247  00D1  00AC               	movwf	(?_sprintf^(0+128)+6)
  8248  00D2  083B               	movf	(??_main+5)^(0+128),w
  8249  00D3  00AD               	movwf	((?_sprintf+1)^(0+128)+6)
  8250  00D4  30C4               	movlw	(low (main@buf| 0))& (0+255)
  8251  00D5  3196  2615  3180   	fcall	_sprintf
  8252  00D8                     l5656:
  8253                           
  8254                           ;main.c: 203:         LCDstr(buf);
  8255  00D8  30C4               	movlw	low main@buf
  8256  00D9  0020               	movlb	0	; select bank0
  8257  00DA  00A9               	movwf	LCDstr@p
  8258  00DB  3000               	movlw	high main@buf
  8259  00DC  00AA               	movwf	LCDstr@p+1
  8260  00DD  3195  2507  3180   	fcall	_LCDstr
  8261  00E0                     l5658:
  8262                           
  8263                           ;main.c: 195:     while(PORTCbits.RC5==1){
  8264  00E0  0020               	movlb	0	; select bank0
  8265  00E1  1A8E               	btfsc	14,5	;volatile
  8266  00E2  28E4               	goto	u4291
  8267  00E3  28E5               	goto	u4290
  8268  00E4                     u4291:
  8269  00E4  289A               	goto	l1298
  8270  00E5                     u4290:
  8271  00E5                     l5660:
  8272                           
  8273                           ;main.c: 205:     LCDcmd(0x80);
  8274  00E5  3080               	movlw	128
  8275  00E6  3194  240B  3180   	fcall	_LCDcmd
  8276  00E9                     l5662:
  8277                           
  8278                           ;main.c: 206:     LCDstr("insert minutes");
  8279  00E9  3067               	movlw	low (STR_3| (0+32768))
  8280  00EA  0020               	movlb	0	; select bank0
  8281  00EB  00A9               	movwf	LCDstr@p
  8282  00EC  3098               	movlw	high (STR_3| (0+32768))
  8283  00ED  00AA               	movwf	LCDstr@p+1
  8284  00EE  3195  2507  3180   	fcall	_LCDstr
  8285  00F1                     l5664:
  8286                           
  8287                           ;main.c: 207:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  8288  00F1  3002               	movlw	2
  8289  00F2  0021               	movlb	1	; select bank1
  8290  00F3  00B7               	movwf	(??_main^(0+128)+1)
  8291  00F4  3045               	movlw	69
  8292  00F5  00B6               	movwf	??_main^(0+128)
  8293  00F6  30A9               	movlw	169
  8294  00F7                     u4417:
  8295  00F7  0B89               	decfsz	9,f
  8296  00F8  28F7               	goto	u4417
  8297  00F9  0BB6               	decfsz	??_main^(0+128),f
  8298  00FA  28F7               	goto	u4417
  8299  00FB  0BB7               	decfsz	(??_main^(0+128)+1),f
  8300  00FC  28F7               	goto	u4417
  8301  00FD  3200               	nop2
  8302                           
  8303                           ;main.c: 209:     while(PORTCbits.RC5==1){
  8304  00FE  2945               	goto	l5678
  8305  00FF                     l1305:
  8306                           
  8307                           ;main.c: 210:         if(PORTBbits.RB4==0){
  8308  00FF  1A0D               	btfsc	13,4	;volatile
  8309  0100  2902               	goto	u4301
  8310  0101  2903               	goto	u4300
  8311  0102                     u4301:
  8312  0102  2908               	goto	l5668
  8313  0103                     u4300:
  8314  0103                     l5666:
  8315                           
  8316                           ;main.c: 211:             m++;
  8317  0103  3001               	movlw	1
  8318  0104  0021               	movlb	1	; select bank1
  8319  0105  00B6               	movwf	??_main^(0+128)
  8320  0106  0836               	movf	??_main^(0+128),w
  8321  0107  07E9               	addwf	main@m^(0+128),f
  8322  0108                     l5668:
  8323  0108  3194  24B1  3180   	fcall	_LCDbusy
  8324  010B  0020               	movlb	0	; select bank0
  8325  010C  0827               	movf	?_LCDbusy,w
  8326  010D  0428               	iorwf	?_LCDbusy+1,w
  8327  010E  1D03               	btfss	3,2
  8328  010F  2911               	goto	u4311
  8329  0110  2912               	goto	u4310
  8330  0111                     u4311:
  8331  0111  2908               	goto	l5668
  8332  0112                     u4310:
  8333  0112                     l5670:
  8334                           
  8335                           ;main.c: 214:         LCDcmd(0x80);
  8336  0112  3080               	movlw	128
  8337  0113  3194  240B  3180   	fcall	_LCDcmd
  8338  0116                     l5672:
  8339                           
  8340                           ;main.c: 215:         sprintf(buf, "%02d:%02d:%02d      ", h, m, s);
  8341  0116  3020               	movlw	low (STR_4| (0+32768))
  8342  0117  0021               	movlb	1	; select bank1
  8343  0118  00A6               	movwf	sprintf@fmt^(0+128)
  8344  0119  3098               	movlw	high (STR_4| (0+32768))
  8345  011A  00A7               	movwf	(sprintf@fmt^(0+128)+1)
  8346  011B  0868               	movf	main@h^(0+128),w
  8347  011C  00B6               	movwf	??_main^(0+128)
  8348  011D  01B7               	clrf	(??_main^(0+128)+1)
  8349  011E  0836               	movf	??_main^(0+128),w
  8350  011F  00A8               	movwf	(?_sprintf^(0+128)+2)
  8351  0120  0837               	movf	(??_main+1)^(0+128),w
  8352  0121  00A9               	movwf	((?_sprintf+1)^(0+128)+2)
  8353  0122  0869               	movf	main@m^(0+128),w
  8354  0123  00B8               	movwf	(??_main+2)^(0+128)
  8355  0124  01B9               	clrf	((??_main+2)^(0+128)+1)
  8356  0125  0838               	movf	(??_main+2)^(0+128),w
  8357  0126  00AA               	movwf	(?_sprintf^(0+128)+4)
  8358  0127  0839               	movf	(??_main+3)^(0+128),w
  8359  0128  00AB               	movwf	((?_sprintf+1)^(0+128)+4)
  8360  0129  086A               	movf	main@s^(0+128),w
  8361  012A  00BA               	movwf	(??_main+4)^(0+128)
  8362  012B  01BB               	clrf	((??_main+4)^(0+128)+1)
  8363  012C  083A               	movf	(??_main+4)^(0+128),w
  8364  012D  00AC               	movwf	(?_sprintf^(0+128)+6)
  8365  012E  083B               	movf	(??_main+5)^(0+128),w
  8366  012F  00AD               	movwf	((?_sprintf+1)^(0+128)+6)
  8367  0130  30C4               	movlw	(low (main@buf| 0))& (0+255)
  8368  0131  3196  2615  3180   	fcall	_sprintf
  8369  0134                     l5674:
  8370                           
  8371                           ;main.c: 216:         LCDstr(buf);
  8372  0134  30C4               	movlw	low main@buf
  8373  0135  0020               	movlb	0	; select bank0
  8374  0136  00A9               	movwf	LCDstr@p
  8375  0137  3000               	movlw	high main@buf
  8376  0138  00AA               	movwf	LCDstr@p+1
  8377  0139  3195  2507  3180   	fcall	_LCDstr
  8378  013C                     l5676:
  8379                           
  8380                           ;main.c: 217:         _delay((unsigned long)((250)*(1000000/4000.0)));
  8381  013C  3052               	movlw	82
  8382  013D  0021               	movlb	1	; select bank1
  8383  013E  00B6               	movwf	??_main^(0+128)
  8384  013F  3029               	movlw	41
  8385  0140                     u4427:
  8386  0140  0B89               	decfsz	9,f
  8387  0141  2940               	goto	u4427
  8388  0142  0BB6               	decfsz	??_main^(0+128),f
  8389  0143  2940               	goto	u4427
  8390  0144  3200               	nop2
  8391  0145                     l5678:
  8392                           
  8393                           ;main.c: 209:     while(PORTCbits.RC5==1){
  8394  0145  0020               	movlb	0	; select bank0
  8395  0146  1A8E               	btfsc	14,5	;volatile
  8396  0147  2949               	goto	u4321
  8397  0148  294A               	goto	u4320
  8398  0149                     u4321:
  8399  0149  28FF               	goto	l1305
  8400  014A                     u4320:
  8401  014A                     l5680:
  8402                           
  8403                           ;main.c: 219:     LCDcmd(0x80);
  8404  014A  3080               	movlw	128
  8405  014B  3194  240B  3180   	fcall	_LCDcmd
  8406  014E                     l5682:
  8407                           
  8408                           ;main.c: 220:     LCDstr("insert seconds");
  8409  014E  3058               	movlw	low (STR_5| (0+32768))
  8410  014F  0020               	movlb	0	; select bank0
  8411  0150  00A9               	movwf	LCDstr@p
  8412  0151  3098               	movlw	high (STR_5| (0+32768))
  8413  0152  00AA               	movwf	LCDstr@p+1
  8414  0153  3195  2507  3180   	fcall	_LCDstr
  8415  0156                     l5684:
  8416                           
  8417                           ;main.c: 221:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  8418  0156  3002               	movlw	2
  8419  0157  0021               	movlb	1	; select bank1
  8420  0158  00B7               	movwf	(??_main^(0+128)+1)
  8421  0159  3045               	movlw	69
  8422  015A  00B6               	movwf	??_main^(0+128)
  8423  015B  30A9               	movlw	169
  8424  015C                     u4437:
  8425  015C  0B89               	decfsz	9,f
  8426  015D  295C               	goto	u4437
  8427  015E  0BB6               	decfsz	??_main^(0+128),f
  8428  015F  295C               	goto	u4437
  8429  0160  0BB7               	decfsz	(??_main^(0+128)+1),f
  8430  0161  295C               	goto	u4437
  8431  0162  3200               	nop2
  8432                           
  8433                           ;main.c: 223:     while(PORTCbits.RC5==1){
  8434  0163  29AA               	goto	l5698
  8435  0164                     l1312:
  8436                           
  8437                           ;main.c: 224:         if(PORTBbits.RB4==0){
  8438  0164  1A0D               	btfsc	13,4	;volatile
  8439  0165  2967               	goto	u4331
  8440  0166  2968               	goto	u4330
  8441  0167                     u4331:
  8442  0167  296D               	goto	l5688
  8443  0168                     u4330:
  8444  0168                     l5686:
  8445                           
  8446                           ;main.c: 225:             s++;
  8447  0168  3001               	movlw	1
  8448  0169  0021               	movlb	1	; select bank1
  8449  016A  00B6               	movwf	??_main^(0+128)
  8450  016B  0836               	movf	??_main^(0+128),w
  8451  016C  07EA               	addwf	main@s^(0+128),f
  8452  016D                     l5688:
  8453  016D  3194  24B1  3180   	fcall	_LCDbusy
  8454  0170  0020               	movlb	0	; select bank0
  8455  0171  0827               	movf	?_LCDbusy,w
  8456  0172  0428               	iorwf	?_LCDbusy+1,w
  8457  0173  1D03               	btfss	3,2
  8458  0174  2976               	goto	u4341
  8459  0175  2977               	goto	u4340
  8460  0176                     u4341:
  8461  0176  296D               	goto	l5688
  8462  0177                     u4340:
  8463  0177                     l5690:
  8464                           
  8465                           ;main.c: 228:         LCDcmd(0x80);
  8466  0177  3080               	movlw	128
  8467  0178  3194  240B  3180   	fcall	_LCDcmd
  8468  017B                     l5692:
  8469                           
  8470                           ;main.c: 229:         sprintf(buf, "%02d:%02d:%02d      ", h, m, s);
  8471  017B  3020               	movlw	low (STR_4| (0+32768))
  8472  017C  0021               	movlb	1	; select bank1
  8473  017D  00A6               	movwf	sprintf@fmt^(0+128)
  8474  017E  3098               	movlw	high (STR_4| (0+32768))
  8475  017F  00A7               	movwf	(sprintf@fmt^(0+128)+1)
  8476  0180  0868               	movf	main@h^(0+128),w
  8477  0181  00B6               	movwf	??_main^(0+128)
  8478  0182  01B7               	clrf	(??_main^(0+128)+1)
  8479  0183  0836               	movf	??_main^(0+128),w
  8480  0184  00A8               	movwf	(?_sprintf^(0+128)+2)
  8481  0185  0837               	movf	(??_main+1)^(0+128),w
  8482  0186  00A9               	movwf	((?_sprintf+1)^(0+128)+2)
  8483  0187  0869               	movf	main@m^(0+128),w
  8484  0188  00B8               	movwf	(??_main+2)^(0+128)
  8485  0189  01B9               	clrf	((??_main+2)^(0+128)+1)
  8486  018A  0838               	movf	(??_main+2)^(0+128),w
  8487  018B  00AA               	movwf	(?_sprintf^(0+128)+4)
  8488  018C  0839               	movf	(??_main+3)^(0+128),w
  8489  018D  00AB               	movwf	((?_sprintf+1)^(0+128)+4)
  8490  018E  086A               	movf	main@s^(0+128),w
  8491  018F  00BA               	movwf	(??_main+4)^(0+128)
  8492  0190  01BB               	clrf	((??_main+4)^(0+128)+1)
  8493  0191  083A               	movf	(??_main+4)^(0+128),w
  8494  0192  00AC               	movwf	(?_sprintf^(0+128)+6)
  8495  0193  083B               	movf	(??_main+5)^(0+128),w
  8496  0194  00AD               	movwf	((?_sprintf+1)^(0+128)+6)
  8497  0195  30C4               	movlw	(low (main@buf| 0))& (0+255)
  8498  0196  3196  2615  3180   	fcall	_sprintf
  8499  0199                     l5694:
  8500                           
  8501                           ;main.c: 230:         LCDstr(buf);
  8502  0199  30C4               	movlw	low main@buf
  8503  019A  0020               	movlb	0	; select bank0
  8504  019B  00A9               	movwf	LCDstr@p
  8505  019C  3000               	movlw	high main@buf
  8506  019D  00AA               	movwf	LCDstr@p+1
  8507  019E  3195  2507  3180   	fcall	_LCDstr
  8508  01A1                     l5696:
  8509                           
  8510                           ;main.c: 231:         _delay((unsigned long)((250)*(1000000/4000.0)));
  8511  01A1  3052               	movlw	82
  8512  01A2  0021               	movlb	1	; select bank1
  8513  01A3  00B6               	movwf	??_main^(0+128)
  8514  01A4  3029               	movlw	41
  8515  01A5                     u4447:
  8516  01A5  0B89               	decfsz	9,f
  8517  01A6  29A5               	goto	u4447
  8518  01A7  0BB6               	decfsz	??_main^(0+128),f
  8519  01A8  29A5               	goto	u4447
  8520  01A9  3200               	nop2
  8521  01AA                     l5698:
  8522                           
  8523                           ;main.c: 223:     while(PORTCbits.RC5==1){
  8524  01AA  0020               	movlb	0	; select bank0
  8525  01AB  1A8E               	btfsc	14,5	;volatile
  8526  01AC  29AE               	goto	u4351
  8527  01AD  29AF               	goto	u4350
  8528  01AE                     u4351:
  8529  01AE  2964               	goto	l1312
  8530  01AF                     u4350:
  8531  01AF                     l5700:
  8532                           
  8533                           ;main.c: 233:     uint16_t dataAddr=0x0020;
  8534  01AF  3020               	movlw	32
  8535  01B0  0021               	movlb	1	; select bank1
  8536  01B1  00EB               	movwf	main@dataAddr^(0+128)
  8537  01B2  3000               	movlw	0
  8538  01B3  00EC               	movwf	(main@dataAddr^(0+128)+1)
  8539  01B4                     l5702:
  8540                           
  8541                           ;main.c: 234:     DATAEE_WriteByte(dataAddr, h);
  8542  01B4  086C               	movf	(main@dataAddr+1)^(0+128),w
  8543  01B5  0020               	movlb	0	; select bank0
  8544  01B6  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8545  01B7  0021               	movlb	1	; select bank1
  8546  01B8  086B               	movf	main@dataAddr^(0+128),w
  8547  01B9  0020               	movlb	0	; select bank0
  8548  01BA  00A0               	movwf	DATAEE_WriteByte@bAdd
  8549  01BB  0021               	movlb	1	; select bank1
  8550  01BC  0868               	movf	main@h^(0+128),w
  8551  01BD  00B6               	movwf	??_main^(0+128)
  8552  01BE  0836               	movf	??_main^(0+128),w
  8553  01BF  0020               	movlb	0	; select bank0
  8554  01C0  00A2               	movwf	DATAEE_WriteByte@bData
  8555  01C1  3196  2638  3180   	fcall	_DATAEE_WriteByte
  8556  01C4                     l5704:
  8557                           
  8558                           ;main.c: 235:     DATAEE_WriteByte(dataAddr+1, m);
  8559  01C4  0021               	movlb	1	; select bank1
  8560  01C5  086B               	movf	main@dataAddr^(0+128),w
  8561  01C6  3E01               	addlw	1
  8562  01C7  0020               	movlb	0	; select bank0
  8563  01C8  00A0               	movwf	DATAEE_WriteByte@bAdd
  8564  01C9  3000               	movlw	0
  8565  01CA  0021               	movlb	1	; select bank1
  8566  01CB  3D6C               	addwfc	(main@dataAddr+1)^(0+128),w
  8567  01CC  0020               	movlb	0	; select bank0
  8568  01CD  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8569  01CE  0021               	movlb	1	; select bank1
  8570  01CF  0869               	movf	main@m^(0+128),w
  8571  01D0  00B6               	movwf	??_main^(0+128)
  8572  01D1  0836               	movf	??_main^(0+128),w
  8573  01D2  0020               	movlb	0	; select bank0
  8574  01D3  00A2               	movwf	DATAEE_WriteByte@bData
  8575  01D4  3196  2638  3180   	fcall	_DATAEE_WriteByte
  8576  01D7                     l5706:
  8577                           
  8578                           ;main.c: 236:     DATAEE_WriteByte(dataAddr+2, s);
  8579  01D7  0021               	movlb	1	; select bank1
  8580  01D8  086B               	movf	main@dataAddr^(0+128),w
  8581  01D9  3E02               	addlw	2
  8582  01DA  0020               	movlb	0	; select bank0
  8583  01DB  00A0               	movwf	DATAEE_WriteByte@bAdd
  8584  01DC  3000               	movlw	0
  8585  01DD  0021               	movlb	1	; select bank1
  8586  01DE  3D6C               	addwfc	(main@dataAddr+1)^(0+128),w
  8587  01DF  0020               	movlb	0	; select bank0
  8588  01E0  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8589  01E1  0021               	movlb	1	; select bank1
  8590  01E2  086A               	movf	main@s^(0+128),w
  8591  01E3  00B6               	movwf	??_main^(0+128)
  8592  01E4  0836               	movf	??_main^(0+128),w
  8593  01E5  0020               	movlb	0	; select bank0
  8594  01E6  00A2               	movwf	DATAEE_WriteByte@bData
  8595  01E7  3196  2638  3180   	fcall	_DATAEE_WriteByte
  8596  01EA                     l5708:
  8597                           
  8598                           ;main.c: 237:     TMR1_SetInterruptHandler(timerInterrupt);
  8599  01EA  3064               	movlw	low _timerInterrupt
  8600  01EB  0020               	movlb	0	; select bank0
  8601  01EC  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  8602  01ED  3009               	movlw	high _timerInterrupt
  8603  01EE  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  8604  01EF  3194  242D  3180   	fcall	_TMR1_SetInterruptHandler
  8605  01F2                     l5710:
  8606                           
  8607                           ;main.c: 239:     {;main.c: 240:         S1();
  8608  01F2  3194  2440  3180   	fcall	_S1
  8609  01F5                     l5712:
  8610                           
  8611                           ;main.c: 241:         parseEPROMReading(&hours,&minutes,&seconds,&temperature,&luminosit
      +                          y,101);
  8612  01F5  30D7               	movlw	(low (main@minutes| 0))& (0+255)
  8613  01F6  0021               	movlb	1	; select bank1
  8614  01F7  00B6               	movwf	??_main^(0+128)
  8615  01F8  0836               	movf	??_main^(0+128),w
  8616  01F9  0020               	movlb	0	; select bank0
  8617  01FA  00A7               	movwf	parseEPROMReading@minutes
  8618  01FB  30D8               	movlw	(low (main@seconds| 0))& (0+255)
  8619  01FC  0021               	movlb	1	; select bank1
  8620  01FD  00B7               	movwf	(??_main+1)^(0+128)
  8621  01FE  0837               	movf	(??_main+1)^(0+128),w
  8622  01FF  0020               	movlb	0	; select bank0
  8623  0200  00A8               	movwf	parseEPROMReading@seconds
  8624  0201  30D9               	movlw	(low (main@temperature| 0))& (0+255)
  8625  0202  0021               	movlb	1	; select bank1
  8626  0203  00B8               	movwf	(??_main+2)^(0+128)
  8627  0204  0838               	movf	(??_main+2)^(0+128),w
  8628  0205  0020               	movlb	0	; select bank0
  8629  0206  00A9               	movwf	parseEPROMReading@temperature
  8630  0207  30DA               	movlw	(low (main@luminosity| 0))& (0+255)
  8631  0208  0021               	movlb	1	; select bank1
  8632  0209  00B9               	movwf	(??_main+3)^(0+128)
  8633  020A  0839               	movf	(??_main+3)^(0+128),w
  8634  020B  0020               	movlb	0	; select bank0
  8635  020C  00AA               	movwf	parseEPROMReading@luminosity
  8636  020D  3065               	movlw	101
  8637  020E  0021               	movlb	1	; select bank1
  8638  020F  00BA               	movwf	(??_main+4)^(0+128)
  8639  0210  083A               	movf	(??_main+4)^(0+128),w
  8640  0211  0020               	movlb	0	; select bank0
  8641  0212  00AB               	movwf	parseEPROMReading@operation
  8642  0213  30D6               	movlw	(low (main@hours| 0))& (0+255)
  8643  0214  3188  2087  3180   	fcall	_parseEPROMReading
  8644  0217                     l5714:
  8645                           
  8646                           ;main.c: 242:         parseEPROMInitialization(&magic_word,&NREG,&NR,&WI,&RI,&PMON,&TALA
      +                          ,&ALAT,&ALAL,&ALAF,&CLKH,&CLKM,&checksum);
  8647  0217  30DC               	movlw	(low (main@NREG| 0))& (0+255)
  8648  0218  0021               	movlb	1	; select bank1
  8649  0219  00B6               	movwf	??_main^(0+128)
  8650  021A  0836               	movf	??_main^(0+128),w
  8651  021B  0020               	movlb	0	; select bank0
  8652  021C  00A2               	movwf	parseEPROMInitialization@NREG
  8653  021D  30DD               	movlw	(low (main@NR| 0))& (0+255)
  8654  021E  0021               	movlb	1	; select bank1
  8655  021F  00B7               	movwf	(??_main+1)^(0+128)
  8656  0220  0837               	movf	(??_main+1)^(0+128),w
  8657  0221  0020               	movlb	0	; select bank0
  8658  0222  00A3               	movwf	parseEPROMInitialization@NR
  8659  0223  30DE               	movlw	(low (main@WI| 0))& (0+255)
  8660  0224  0021               	movlb	1	; select bank1
  8661  0225  00B8               	movwf	(??_main+2)^(0+128)
  8662  0226  0838               	movf	(??_main+2)^(0+128),w
  8663  0227  0020               	movlb	0	; select bank0
  8664  0228  00A4               	movwf	parseEPROMInitialization@WI
  8665  0229  30DF               	movlw	(low (main@RI| 0))& (0+255)
  8666  022A  0021               	movlb	1	; select bank1
  8667  022B  00B9               	movwf	(??_main+3)^(0+128)
  8668  022C  0839               	movf	(??_main+3)^(0+128),w
  8669  022D  0020               	movlb	0	; select bank0
  8670  022E  00A5               	movwf	parseEPROMInitialization@RI
  8671  022F  30E0               	movlw	(low (main@PMON| 0))& (0+255)
  8672  0230  0021               	movlb	1	; select bank1
  8673  0231  00BA               	movwf	(??_main+4)^(0+128)
  8674  0232  083A               	movf	(??_main+4)^(0+128),w
  8675  0233  0020               	movlb	0	; select bank0
  8676  0234  00A6               	movwf	parseEPROMInitialization@PMON
  8677  0235  30E1               	movlw	(low (main@TALA| 0))& (0+255)
  8678  0236  0021               	movlb	1	; select bank1
  8679  0237  00BB               	movwf	(??_main+5)^(0+128)
  8680  0238  083B               	movf	(??_main+5)^(0+128),w
  8681  0239  0020               	movlb	0	; select bank0
  8682  023A  00A7               	movwf	parseEPROMInitialization@TALA
  8683  023B  30E2               	movlw	(low (main@ALAT| 0))& (0+255)
  8684  023C  0021               	movlb	1	; select bank1
  8685  023D  00BC               	movwf	(??_main+6)^(0+128)
  8686  023E  083C               	movf	(??_main+6)^(0+128),w
  8687  023F  0020               	movlb	0	; select bank0
  8688  0240  00A8               	movwf	parseEPROMInitialization@ALAT
  8689  0241  30E3               	movlw	(low (main@ALAL| 0))& (0+255)
  8690  0242  0021               	movlb	1	; select bank1
  8691  0243  00BD               	movwf	(??_main+7)^(0+128)
  8692  0244  083D               	movf	(??_main+7)^(0+128),w
  8693  0245  0020               	movlb	0	; select bank0
  8694  0246  00A9               	movwf	parseEPROMInitialization@ALAL
  8695  0247  30E4               	movlw	(low (main@ALAF| 0))& (0+255)
  8696  0248  0021               	movlb	1	; select bank1
  8697  0249  00BE               	movwf	(??_main+8)^(0+128)
  8698  024A  083E               	movf	(??_main+8)^(0+128),w
  8699  024B  0020               	movlb	0	; select bank0
  8700  024C  00AA               	movwf	parseEPROMInitialization@ALAF
  8701  024D  30E5               	movlw	(low (main@CLKH| 0))& (0+255)
  8702  024E  0021               	movlb	1	; select bank1
  8703  024F  00BF               	movwf	(??_main+9)^(0+128)
  8704  0250  083F               	movf	(??_main+9)^(0+128),w
  8705  0251  0020               	movlb	0	; select bank0
  8706  0252  00AB               	movwf	parseEPROMInitialization@CLKH
  8707  0253  30E6               	movlw	(low (main@CLKM| 0))& (0+255)
  8708  0254  0021               	movlb	1	; select bank1
  8709  0255  00C0               	movwf	(??_main+10)^(0+128)
  8710  0256  0840               	movf	(??_main+10)^(0+128),w
  8711  0257  0020               	movlb	0	; select bank0
  8712  0258  00AC               	movwf	parseEPROMInitialization@CLKM
  8713  0259  30E7               	movlw	(low (main@checksum| 0))& (0+255)
  8714  025A  0021               	movlb	1	; select bank1
  8715  025B  00C1               	movwf	(??_main+11)^(0+128)
  8716  025C  0841               	movf	(??_main+11)^(0+128),w
  8717  025D  0020               	movlb	0	; select bank0
  8718  025E  00AD               	movwf	parseEPROMInitialization@checksum
  8719  025F  30DB               	movlw	(low (main@magic_word| 0))& (0+255)
  8720  0260  318B  232E  3180   	fcall	_parseEPROMInitialization
  8721  0263                     l5716:
  8722                           
  8723                           ;main.c: 243:         h=DATAEE_ReadByte(dataAddr);
  8724  0263  0021               	movlb	1	; select bank1
  8725  0264  086C               	movf	(main@dataAddr+1)^(0+128),w
  8726  0265  0020               	movlb	0	; select bank0
  8727  0266  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  8728  0267  0021               	movlb	1	; select bank1
  8729  0268  086B               	movf	main@dataAddr^(0+128),w
  8730  0269  0020               	movlb	0	; select bank0
  8731  026A  00A0               	movwf	DATAEE_ReadByte@bAdd
  8732  026B  3194  247F  3180   	fcall	_DATAEE_ReadByte
  8733  026E  0021               	movlb	1	; select bank1
  8734  026F  00B6               	movwf	??_main^(0+128)
  8735  0270  0836               	movf	??_main^(0+128),w
  8736  0271  00E8               	movwf	main@h^(0+128)
  8737  0272                     l5718:
  8738                           
  8739                           ;main.c: 244:         m=DATAEE_ReadByte(dataAddr + 1);
  8740  0272  086B               	movf	main@dataAddr^(0+128),w
  8741  0273  3E01               	addlw	1
  8742  0274  0020               	movlb	0	; select bank0
  8743  0275  00A0               	movwf	DATAEE_ReadByte@bAdd
  8744  0276  3000               	movlw	0
  8745  0277  0021               	movlb	1	; select bank1
  8746  0278  3D6C               	addwfc	(main@dataAddr+1)^(0+128),w
  8747  0279  0020               	movlb	0	; select bank0
  8748  027A  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  8749  027B  3194  247F  3180   	fcall	_DATAEE_ReadByte
  8750  027E  0021               	movlb	1	; select bank1
  8751  027F  00B6               	movwf	??_main^(0+128)
  8752  0280  0836               	movf	??_main^(0+128),w
  8753  0281  00E9               	movwf	main@m^(0+128)
  8754  0282                     l5720:
  8755                           
  8756                           ;main.c: 245:         s=DATAEE_ReadByte(dataAddr + 2);
  8757  0282  086B               	movf	main@dataAddr^(0+128),w
  8758  0283  3E02               	addlw	2
  8759  0284  0020               	movlb	0	; select bank0
  8760  0285  00A0               	movwf	DATAEE_ReadByte@bAdd
  8761  0286  3000               	movlw	0
  8762  0287  0021               	movlb	1	; select bank1
  8763  0288  3D6C               	addwfc	(main@dataAddr+1)^(0+128),w
  8764  0289  0020               	movlb	0	; select bank0
  8765  028A  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  8766  028B  3194  247F  3180   	fcall	_DATAEE_ReadByte
  8767  028E  0021               	movlb	1	; select bank1
  8768  028F  00B6               	movwf	??_main^(0+128)
  8769  0290  0836               	movf	??_main^(0+128),w
  8770  0291  00EA               	movwf	main@s^(0+128)
  8771  0292                     l5722:
  8772                           
  8773                           ;main.c: 246:         c = readTC74();
  8774  0292  318E  26B0  3180   	fcall	_readTC74
  8775  0295  0021               	movlb	1	; select bank1
  8776  0296  00B6               	movwf	??_main^(0+128)
  8777  0297  0836               	movf	??_main^(0+128),w
  8778  0298  00D5               	movwf	main@c^(0+128)
  8779  0299                     l5724:
  8780                           
  8781                           ;main.c: 247:         LCDcmd(0x80);
  8782  0299  3080               	movlw	128
  8783  029A  3194  240B  3180   	fcall	_LCDcmd
  8784  029D                     l5726:	
  8785                           ;main.c: 248:         while (LCDbusy());
  8786                           
  8787  029D  3194  24B1  3180   	fcall	_LCDbusy
  8788  02A0  0020               	movlb	0	; select bank0
  8789  02A1  0827               	movf	?_LCDbusy,w
  8790  02A2  0428               	iorwf	?_LCDbusy+1,w
  8791  02A3  1D03               	btfss	3,2
  8792  02A4  2AA6               	goto	u4361
  8793  02A5  2AA7               	goto	u4360
  8794  02A6                     u4361:
  8795  02A6  2A9D               	goto	l5726
  8796  02A7                     u4360:
  8797  02A7                     l5728:
  8798                           
  8799                           ;main.c: 249:         sprintf(buf, "%02d:%02d:%02d", h, m, s);
  8800  02A7  3049               	movlw	low (STR_7| (0+32768))
  8801  02A8  0021               	movlb	1	; select bank1
  8802  02A9  00A6               	movwf	sprintf@fmt^(0+128)
  8803  02AA  3098               	movlw	high (STR_7| (0+32768))
  8804  02AB  00A7               	movwf	(sprintf@fmt^(0+128)+1)
  8805  02AC  0868               	movf	main@h^(0+128),w
  8806  02AD  00B6               	movwf	??_main^(0+128)
  8807  02AE  01B7               	clrf	(??_main^(0+128)+1)
  8808  02AF  0836               	movf	??_main^(0+128),w
  8809  02B0  00A8               	movwf	(?_sprintf^(0+128)+2)
  8810  02B1  0837               	movf	(??_main+1)^(0+128),w
  8811  02B2  00A9               	movwf	((?_sprintf+1)^(0+128)+2)
  8812  02B3  0869               	movf	main@m^(0+128),w
  8813  02B4  00B8               	movwf	(??_main+2)^(0+128)
  8814  02B5  01B9               	clrf	((??_main+2)^(0+128)+1)
  8815  02B6  0838               	movf	(??_main+2)^(0+128),w
  8816  02B7  00AA               	movwf	(?_sprintf^(0+128)+4)
  8817  02B8  0839               	movf	(??_main+3)^(0+128),w
  8818  02B9  00AB               	movwf	((?_sprintf+1)^(0+128)+4)
  8819  02BA  086A               	movf	main@s^(0+128),w
  8820  02BB  00BA               	movwf	(??_main+4)^(0+128)
  8821  02BC  01BB               	clrf	((??_main+4)^(0+128)+1)
  8822  02BD  083A               	movf	(??_main+4)^(0+128),w
  8823  02BE  00AC               	movwf	(?_sprintf^(0+128)+6)
  8824  02BF  083B               	movf	(??_main+5)^(0+128),w
  8825  02C0  00AD               	movwf	((?_sprintf+1)^(0+128)+6)
  8826  02C1  30C4               	movlw	(low (main@buf| 0))& (0+255)
  8827  02C2  3196  2615  3180   	fcall	_sprintf
  8828  02C5                     l5730:
  8829                           
  8830                           ;main.c: 250:         LCDstr(buf);
  8831  02C5  30C4               	movlw	low main@buf
  8832  02C6  0020               	movlb	0	; select bank0
  8833  02C7  00A9               	movwf	LCDstr@p
  8834  02C8  3000               	movlw	high main@buf
  8835  02C9  00AA               	movwf	LCDstr@p+1
  8836  02CA  3195  2507  3180   	fcall	_LCDstr
  8837  02CD                     l5732:
  8838                           
  8839                           ;main.c: 251:         LCDpos(0,11);
  8840  02CD  300B               	movlw	11
  8841  02CE  0021               	movlb	1	; select bank1
  8842  02CF  00B6               	movwf	??_main^(0+128)
  8843  02D0  0836               	movf	??_main^(0+128),w
  8844  02D1  0020               	movlb	0	; select bank0
  8845  02D2  00A9               	movwf	LCDpos@c
  8846  02D3  3000               	movlw	0
  8847  02D4  3195  253D  3180   	fcall	_LCDpos
  8848  02D7                     l5734:	
  8849                           ;main.c: 252:         while (LCDbusy());
  8850                           
  8851  02D7  3194  24B1  3180   	fcall	_LCDbusy
  8852  02DA  0020               	movlb	0	; select bank0
  8853  02DB  0827               	movf	?_LCDbusy,w
  8854  02DC  0428               	iorwf	?_LCDbusy+1,w
  8855  02DD  1D03               	btfss	3,2
  8856  02DE  2AE0               	goto	u4371
  8857  02DF  2AE1               	goto	u4370
  8858  02E0                     u4371:
  8859  02E0  2AD7               	goto	l5734
  8860  02E1                     u4370:
  8861  02E1                     l5736:
  8862                           
  8863                           ;main.c: 253:         LCDstr("STR");
  8864  02E1  308A               	movlw	low (STR_8| (0+32768))
  8865  02E2  00A9               	movwf	LCDstr@p
  8866  02E3  3098               	movlw	high (STR_8| (0+32768))
  8867  02E4  00AA               	movwf	LCDstr@p+1
  8868  02E5  3195  2507  3180   	fcall	_LCDstr
  8869  02E8                     l5738:
  8870                           
  8871                           ;main.c: 255:         LCDcmd(0xc0);
  8872  02E8  30C0               	movlw	192
  8873  02E9  3194  240B  3180   	fcall	_LCDcmd
  8874  02EC                     l5740:
  8875                           
  8876                           ;main.c: 256:         sprintf(buf, "%02d C", c);
  8877  02EC  3083               	movlw	low (STR_9| (0+32768))
  8878  02ED  0021               	movlb	1	; select bank1
  8879  02EE  00A6               	movwf	sprintf@fmt^(0+128)
  8880  02EF  3098               	movlw	high (STR_9| (0+32768))
  8881  02F0  00A7               	movwf	(sprintf@fmt^(0+128)+1)
  8882  02F1  0855               	movf	main@c^(0+128),w
  8883  02F2  00B6               	movwf	??_main^(0+128)
  8884  02F3  01B7               	clrf	(??_main^(0+128)+1)
  8885  02F4  0836               	movf	??_main^(0+128),w
  8886  02F5  00A8               	movwf	(?_sprintf^(0+128)+2)
  8887  02F6  0837               	movf	(??_main+1)^(0+128),w
  8888  02F7  00A9               	movwf	((?_sprintf+1)^(0+128)+2)
  8889  02F8  30C4               	movlw	(low (main@buf| 0))& (0+255)
  8890  02F9  3196  2615  3180   	fcall	_sprintf
  8891  02FC                     l5742:	
  8892                           ;main.c: 257:         while (LCDbusy());
  8893                           
  8894  02FC  3194  24B1  3180   	fcall	_LCDbusy
  8895  02FF  0020               	movlb	0	; select bank0
  8896  0300  0827               	movf	?_LCDbusy,w
  8897  0301  0428               	iorwf	?_LCDbusy+1,w
  8898  0302  1D03               	btfss	3,2
  8899  0303  2B05               	goto	u4381
  8900  0304  2B06               	goto	u4380
  8901  0305                     u4381:
  8902  0305  2AFC               	goto	l5742
  8903  0306                     u4380:
  8904  0306                     l5744:
  8905                           
  8906                           ;main.c: 258:         LCDstr(buf);
  8907  0306  30C4               	movlw	low main@buf
  8908  0307  00A9               	movwf	LCDstr@p
  8909  0308  3000               	movlw	high main@buf
  8910  0309  00AA               	movwf	LCDstr@p+1
  8911  030A  3195  2507  3180   	fcall	_LCDstr
  8912  030D                     l5746:
  8913                           
  8914                           ;main.c: 259:         _delay((unsigned long)((2000)*(1000000/4000.0)));
  8915  030D  3003               	movlw	3
  8916  030E  0021               	movlb	1	; select bank1
  8917  030F  00B7               	movwf	(??_main^(0+128)+1)
  8918  0310  308A               	movlw	138
  8919  0311  00B6               	movwf	??_main^(0+128)
  8920  0312  3055               	movlw	85
  8921  0313                     u4457:
  8922  0313  0B89               	decfsz	9,f
  8923  0314  2B13               	goto	u4457
  8924  0315  0BB6               	decfsz	??_main^(0+128),f
  8925  0316  2B13               	goto	u4457
  8926  0317  0BB7               	decfsz	(??_main^(0+128)+1),f
  8927  0318  2B13               	goto	u4457
  8928  0319  3200               	nop2
  8929  031A  29F2               	goto	l5710
  8930  031B  3180  2818         	ljmp	start
  8931  031D                     __end_of_main:
  8932                           
  8933                           	psect	text1
  8934  170D                     __ptext1:	
  8935 ;; *************** function _storeEPROMBuild *****************
  8936 ;; Defined at:
  8937 ;;		line 50 in file "EPROMlib.c"
  8938 ;; Parameters:    Size  Location     Type
  8939 ;;  hours           1    wreg     unsigned char 
  8940 ;;  minutes         1    7[BANK0 ] unsigned char 
  8941 ;;  seconds         1    8[BANK0 ] unsigned char 
  8942 ;;  temperature     1    9[BANK0 ] unsigned char 
  8943 ;;  luminosity      1   10[BANK0 ] unsigned char 
  8944 ;;  operation       1   11[BANK0 ] unsigned char 
  8945 ;; Auto vars:     Size  Location     Type
  8946 ;;  hours           1   13[BANK0 ] unsigned char 
  8947 ;;  dataAddr        2   14[BANK0 ] unsigned short 
  8948 ;; Return value:  Size  Location     Type
  8949 ;;                  1    wreg      void 
  8950 ;; Registers used:
  8951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8952 ;; Tracked objects:
  8953 ;;		On entry : 0/0
  8954 ;;		On exit  : 0/0
  8955 ;;		Unchanged: 0/0
  8956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8957 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8958 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8959 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8960 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8961 ;;Total ram usage:        9 bytes
  8962 ;; Hardware stack levels used: 1
  8963 ;; Hardware stack levels required when called: 6
  8964 ;; This function calls:
  8965 ;;		_DATAEE_WriteByte
  8966 ;;		_operADDR
  8967 ;; This function is called by:
  8968 ;;		_main
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           
  8973                           ;psect for function _storeEPROMBuild
  8974  170D                     _storeEPROMBuild:
  8975                           
  8976                           ;incstack = 0
  8977                           ; Regs used in _storeEPROMBuild: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8978                           ;storeEPROMBuild@hours stored from wreg
  8979  170D  0020               	movlb	0	; select bank0
  8980  170E  00AD               	movwf	storeEPROMBuild@hours
  8981  170F                     l5102:
  8982                           
  8983                           ;EPROMlib.c: 51:     uint16_t dataAddr;;EPROMlib.c: 53:     dataAddr = operADDR(operatio
      +                          n);
  8984  170F  082B               	movf	storeEPROMBuild@operation,w
  8985  1710  3196  2691  3197   	fcall	_operADDR
  8986  1713  0020               	movlb	0	; select bank0
  8987  1714  0821               	movf	?_operADDR+1,w
  8988  1715  00AF               	movwf	storeEPROMBuild@dataAddr+1
  8989  1716  0820               	movf	?_operADDR,w
  8990  1717  00AE               	movwf	storeEPROMBuild@dataAddr
  8991  1718                     l5104:
  8992                           
  8993                           ;EPROMlib.c: 54:     DATAEE_WriteByte(dataAddr, hours);
  8994  1718  082F               	movf	storeEPROMBuild@dataAddr+1,w
  8995  1719  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8996  171A  082E               	movf	storeEPROMBuild@dataAddr,w
  8997  171B  00A0               	movwf	DATAEE_WriteByte@bAdd
  8998  171C  082D               	movf	storeEPROMBuild@hours,w
  8999  171D  00AC               	movwf	??_storeEPROMBuild
  9000  171E  082C               	movf	??_storeEPROMBuild,w
  9001  171F  00A2               	movwf	DATAEE_WriteByte@bData
  9002  1720  3196  2638  3197   	fcall	_DATAEE_WriteByte
  9003  1723                     l5106:
  9004                           
  9005                           ;EPROMlib.c: 55:     DATAEE_WriteByte(dataAddr + 1, minutes);
  9006  1723  0020               	movlb	0	; select bank0
  9007  1724  082E               	movf	storeEPROMBuild@dataAddr,w
  9008  1725  3E01               	addlw	1
  9009  1726  00A0               	movwf	DATAEE_WriteByte@bAdd
  9010  1727  3000               	movlw	0
  9011  1728  3D2F               	addwfc	storeEPROMBuild@dataAddr+1,w
  9012  1729  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  9013  172A  0827               	movf	storeEPROMBuild@minutes,w
  9014  172B  00AC               	movwf	??_storeEPROMBuild
  9015  172C  082C               	movf	??_storeEPROMBuild,w
  9016  172D  00A2               	movwf	DATAEE_WriteByte@bData
  9017  172E  3196  2638  3197   	fcall	_DATAEE_WriteByte
  9018  1731                     l5108:
  9019                           
  9020                           ;EPROMlib.c: 56:     DATAEE_WriteByte(dataAddr + 2, seconds);
  9021  1731  0020               	movlb	0	; select bank0
  9022  1732  082E               	movf	storeEPROMBuild@dataAddr,w
  9023  1733  3E02               	addlw	2
  9024  1734  00A0               	movwf	DATAEE_WriteByte@bAdd
  9025  1735  3000               	movlw	0
  9026  1736  3D2F               	addwfc	storeEPROMBuild@dataAddr+1,w
  9027  1737  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  9028  1738  0828               	movf	storeEPROMBuild@seconds,w
  9029  1739  00AC               	movwf	??_storeEPROMBuild
  9030  173A  082C               	movf	??_storeEPROMBuild,w
  9031  173B  00A2               	movwf	DATAEE_WriteByte@bData
  9032  173C  3196  2638  3197   	fcall	_DATAEE_WriteByte
  9033  173F                     l5110:
  9034                           
  9035                           ;EPROMlib.c: 57:     DATAEE_WriteByte(dataAddr + 3, temperature);
  9036  173F  0020               	movlb	0	; select bank0
  9037  1740  082E               	movf	storeEPROMBuild@dataAddr,w
  9038  1741  3E03               	addlw	3
  9039  1742  00A0               	movwf	DATAEE_WriteByte@bAdd
  9040  1743  3000               	movlw	0
  9041  1744  3D2F               	addwfc	storeEPROMBuild@dataAddr+1,w
  9042  1745  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  9043  1746  0829               	movf	storeEPROMBuild@temperature,w
  9044  1747  00AC               	movwf	??_storeEPROMBuild
  9045  1748  082C               	movf	??_storeEPROMBuild,w
  9046  1749  00A2               	movwf	DATAEE_WriteByte@bData
  9047  174A  3196  2638  3197   	fcall	_DATAEE_WriteByte
  9048  174D                     l5112:
  9049                           
  9050                           ;EPROMlib.c: 58:     DATAEE_WriteByte(dataAddr + 4, luminosity);
  9051  174D  0020               	movlb	0	; select bank0
  9052  174E  082E               	movf	storeEPROMBuild@dataAddr,w
  9053  174F  3E04               	addlw	4
  9054  1750  00A0               	movwf	DATAEE_WriteByte@bAdd
  9055  1751  3000               	movlw	0
  9056  1752  3D2F               	addwfc	storeEPROMBuild@dataAddr+1,w
  9057  1753  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  9058  1754  082A               	movf	storeEPROMBuild@luminosity,w
  9059  1755  00AC               	movwf	??_storeEPROMBuild
  9060  1756  082C               	movf	??_storeEPROMBuild,w
  9061  1757  00A2               	movwf	DATAEE_WriteByte@bData
  9062  1758  3196  2638  3197   	fcall	_DATAEE_WriteByte
  9063  175B                     l1350:
  9064  175B  0008               	return
  9065  175C                     __end_of_storeEPROMBuild:
  9066                           
  9067                           	psect	text2
  9068  1615                     __ptext2:	
  9069 ;; *************** function _sprintf *****************
  9070 ;; Defined at:
  9071 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  9072 ;; Parameters:    Size  Location     Type
  9073 ;;  s               1    wreg     PTR unsigned char 
  9074 ;;		 -> main@buf(17), 
  9075 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  9076 ;;		 -> STR_9(7), STR_7(15), STR_6(21), STR_4(21), 
  9077 ;;		 -> STR_2(20), 
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;  s               1   16[BANK1 ] PTR unsigned char 
  9080 ;;		 -> main@buf(17), 
  9081 ;;  f               5   17[BANK1 ] struct _IO_FILE
  9082 ;;  ret             2    0        int 
  9083 ;;  ap              1   15[BANK1 ] PTR void [1]
  9084 ;;		 -> ?_sprintf(2), 
  9085 ;; Return value:  Size  Location     Type
  9086 ;;                  2    6[BANK1 ] int 
  9087 ;; Registers used:
  9088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/0
  9091 ;;		On exit  : 0/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9094 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9095 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  9096 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  9098 ;;Total ram usage:       16 bytes
  9099 ;; Hardware stack levels used: 1
  9100 ;; Hardware stack levels required when called: 12
  9101 ;; This function calls:
  9102 ;;		_vfprintf
  9103 ;; This function is called by:
  9104 ;;		_main
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           
  9109                           ;psect for function _sprintf
  9110  1615                     _sprintf:
  9111                           
  9112                           ;incstack = 0
  9113                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9114                           ;sprintf@s stored from wreg
  9115  1615  0021               	movlb	1	; select bank1
  9116  1616  00B0               	movwf	sprintf@s^(0+128)
  9117  1617                     l5114:
  9118  1617  30A8               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  9119  1618  00AE               	movwf	??_sprintf^(0+128)
  9120  1619  082E               	movf	??_sprintf^(0+128),w
  9121  161A  00AF               	movwf	sprintf@ap^(0+128)
  9122  161B  0830               	movf	sprintf@s^(0+128),w
  9123  161C  00AE               	movwf	??_sprintf^(0+128)
  9124  161D  082E               	movf	??_sprintf^(0+128),w
  9125  161E  00B1               	movwf	sprintf@f^(0+128)
  9126  161F                     l5116:
  9127  161F  01B2               	clrf	(sprintf@f^(0+128)+1)
  9128  1620  01B3               	clrf	((sprintf@f+1)^(0+128)+1)
  9129  1621                     l5118:
  9130  1621  01B4               	clrf	(sprintf@f^(0+128)+3)
  9131  1622  01B5               	clrf	((sprintf@f+1)^(0+128)+3)
  9132  1623                     l5120:
  9133  1623  0827               	movf	(sprintf@fmt+1)^(0+128),w
  9134  1624  00A1               	movwf	(vfprintf@fmt+1)^(0+128)
  9135  1625  0826               	movf	sprintf@fmt^(0+128),w
  9136  1626  00A0               	movwf	vfprintf@fmt^(0+128)
  9137  1627  30AF               	movlw	(low (sprintf@ap| 0))& (0+255)
  9138  1628  00AE               	movwf	??_sprintf^(0+128)
  9139  1629  082E               	movf	??_sprintf^(0+128),w
  9140  162A  00A2               	movwf	vfprintf@ap^(0+128)
  9141  162B  30B1               	movlw	(low (sprintf@f| 0))& (0+255)
  9142  162C  3196  265C  3196   	fcall	_vfprintf
  9143  162F                     l5122:
  9144  162F  0021               	movlb	1	; select bank1
  9145  1630  0832               	movf	(sprintf@f^(0+128)+1),w
  9146  1631  0730               	addwf	sprintf@s^(0+128),w
  9147  1632  00AE               	movwf	??_sprintf^(0+128)
  9148  1633  082E               	movf	??_sprintf^(0+128),w
  9149  1634  0086               	movwf	6
  9150  1635  0187               	clrf	7
  9151  1636  0181               	clrf	1
  9152  1637                     l1971:
  9153  1637  0008               	return
  9154  1638                     __end_of_sprintf:
  9155                           
  9156                           	psect	text3
  9157  165C                     __ptext3:	
  9158 ;; *************** function _vfprintf *****************
  9159 ;; Defined at:
  9160 ;;		line 1390 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9161 ;; Parameters:    Size  Location     Type
  9162 ;;  fp              1    wreg     PTR struct _IO_FILE
  9163 ;;		 -> sprintf@f(5), 
  9164 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  9165 ;;		 -> STR_9(7), STR_7(15), STR_6(21), STR_4(21), 
  9166 ;;		 -> STR_2(20), 
  9167 ;;  ap              1    2[BANK1 ] PTR PTR void 
  9168 ;;		 -> sprintf@ap(1), 
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;  fp              1    3[BANK1 ] PTR struct _IO_FILE
  9171 ;;		 -> sprintf@f(5), 
  9172 ;;  cfmt            2    4[BANK1 ] PTR unsigned char 
  9173 ;;		 -> STR_9(7), STR_7(15), STR_6(21), STR_4(21), 
  9174 ;;		 -> STR_2(20), 
  9175 ;; Return value:  Size  Location     Type
  9176 ;;                  2    0[BANK1 ] int 
  9177 ;; Registers used:
  9178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9179 ;; Tracked objects:
  9180 ;;		On entry : 0/0
  9181 ;;		On exit  : 0/0
  9182 ;;		Unchanged: 0/0
  9183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9184 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9185 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9186 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9187 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9188 ;;Total ram usage:        8 bytes
  9189 ;; Hardware stack levels used: 1
  9190 ;; Hardware stack levels required when called: 11
  9191 ;; This function calls:
  9192 ;;		_vfpfcnvrt
  9193 ;; This function is called by:
  9194 ;;		_sprintf
  9195 ;; This function uses a non-reentrant model
  9196 ;;
  9197                           
  9198                           
  9199                           ;psect for function _vfprintf
  9200  165C                     _vfprintf:
  9201                           
  9202                           ;incstack = 0
  9203                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9204                           ;vfprintf@fp stored from wreg
  9205  165C  0021               	movlb	1	; select bank1
  9206  165D  00A3               	movwf	vfprintf@fp^(0+128)
  9207  165E                     l4874:
  9208                           
  9209                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  9210  165E  0821               	movf	(vfprintf@fmt+1)^(0+128),w
  9211  165F  00A5               	movwf	(vfprintf@cfmt+1)^(0+128)
  9212  1660  0820               	movf	vfprintf@fmt^(0+128),w
  9213  1661  00A4               	movwf	vfprintf@cfmt^(0+128)
  9214  1662                     l4876:
  9215                           
  9216                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  9217  1662  0022               	movlb	2	; select bank2
  9218  1663  01BD               	clrf	_nout^(0+256)
  9219  1664  01BE               	clrf	(_nout+1)^(0+256)
  9220                           
  9221                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  9222  1665  2E7E               	goto	l4880
  9223  1666                     l4878:
  9224                           
  9225                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  9226  1666  30A4               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  9227  1667  0020               	movlb	0	; select bank0
  9228  1668  00EE               	movwf	??_vfprintf
  9229  1669  086E               	movf	??_vfprintf,w
  9230  166A  00D9               	movwf	vfpfcnvrt@fmt
  9231  166B  0021               	movlb	1	; select bank1
  9232  166C  0822               	movf	vfprintf@ap^(0+128),w
  9233  166D  0020               	movlb	0	; select bank0
  9234  166E  00EF               	movwf	??_vfprintf+1
  9235  166F  086F               	movf	??_vfprintf+1,w
  9236  1670  00DA               	movwf	vfpfcnvrt@ap
  9237  1671  0021               	movlb	1	; select bank1
  9238  1672  0823               	movf	vfprintf@fp^(0+128),w
  9239  1673  3183  231D  3196   	fcall	_vfpfcnvrt
  9240  1676  0020               	movlb	0	; select bank0
  9241  1677  0859               	movf	?_vfpfcnvrt,w
  9242  1678  0022               	movlb	2	; select bank2
  9243  1679  07BD               	addwf	_nout^(0+256),f
  9244  167A  0020               	movlb	0	; select bank0
  9245  167B  085A               	movf	?_vfpfcnvrt+1,w
  9246  167C  0022               	movlb	2	; select bank2
  9247  167D  3DBE               	addwfc	(_nout+1)^(0+256),f
  9248  167E                     l4880:
  9249                           
  9250                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  9251  167E  0021               	movlb	1	; select bank1
  9252  167F  0824               	movf	vfprintf@cfmt^(0+128),w
  9253  1680  0084               	movwf	4
  9254  1681  0825               	movf	(vfprintf@cfmt+1)^(0+128),w
  9255  1682  0085               	movwf	5
  9256  1683  0012               	moviw fsr0++
  9257  1684  1D03               	btfss	3,2
  9258  1685  2E87               	goto	u3661
  9259  1686  2E88               	goto	u3660
  9260  1687                     u3661:
  9261  1687  2E66               	goto	l4878
  9262  1688                     u3660:
  9263  1688                     l4882:
  9264                           
  9265                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  9266  1688  0022               	movlb	2	; select bank2
  9267  1689  083E               	movf	(_nout+1)^(0+256),w
  9268  168A  0021               	movlb	1	; select bank1
  9269  168B  00A1               	movwf	(?_vfprintf+1)^(0+128)
  9270  168C  0022               	movlb	2	; select bank2
  9271  168D  083D               	movf	_nout^(0+256),w
  9272  168E  0021               	movlb	1	; select bank1
  9273  168F  00A0               	movwf	?_vfprintf^(0+128)
  9274  1690                     l2069:
  9275  1690  0008               	return
  9276  1691                     __end_of_vfprintf:
  9277                           
  9278                           	psect	text4
  9279  031D                     __ptext4:	
  9280 ;; *************** function _vfpfcnvrt *****************
  9281 ;; Defined at:
  9282 ;;		line 692 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;  fp              1    wreg     PTR struct _IO_FILE
  9285 ;;		 -> sprintf@f(5), 
  9286 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  9287 ;;		 -> vfprintf@cfmt(2), 
  9288 ;;  ap              1   58[BANK0 ] PTR PTR void 
  9289 ;;		 -> sprintf@ap(1), 
  9290 ;; Auto vars:     Size  Location     Type
  9291 ;;  fp              1   77[BANK0 ] PTR struct _IO_FILE
  9292 ;;		 -> sprintf@f(5), 
  9293 ;;  ll              8   65[BANK0 ] long long 
  9294 ;;  llu             8    0        unsigned long long 
  9295 ;;  f               4    0        unsigned long long 
  9296 ;;  ct              3    0        unsigned char [3]
  9297 ;;  done            2   73[BANK0 ] int 
  9298 ;;  vp              2    0        PTR void 
  9299 ;;  i               2    0        int 
  9300 ;;  cp              2    0        PTR unsigned char 
  9301 ;;  c               1    0        unsigned char 
  9302 ;; Return value:  Size  Location     Type
  9303 ;;                  2   57[BANK0 ] int 
  9304 ;; Registers used:
  9305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9306 ;; Tracked objects:
  9307 ;;		On entry : 0/0
  9308 ;;		On exit  : 0/0
  9309 ;;		Unchanged: 0/0
  9310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9311 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9312 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9313 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9314 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9315 ;;Total ram usage:       21 bytes
  9316 ;; Hardware stack levels used: 1
  9317 ;; Hardware stack levels required when called: 10
  9318 ;; This function calls:
  9319 ;;		_atoi
  9320 ;;		_dtoa
  9321 ;;		_fputc
  9322 ;;		_isdigit
  9323 ;; This function is called by:
  9324 ;;		_vfprintf
  9325 ;; This function uses a non-reentrant model
  9326 ;;
  9327                           
  9328                           
  9329                           ;psect for function _vfpfcnvrt
  9330  031D                     _vfpfcnvrt:
  9331                           
  9332                           ;incstack = 0
  9333                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9334                           ;vfpfcnvrt@fp stored from wreg
  9335  031D  0020               	movlb	0	; select bank0
  9336  031E  00ED               	movwf	vfpfcnvrt@fp
  9337  031F                     l4528:
  9338                           
  9339                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;D:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;D:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;D:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  9340  031F  0859               	movf	vfpfcnvrt@fmt,w
  9341  0320  0086               	movwf	6
  9342  0321  0187               	clrf	7
  9343  0322  3F40               	moviw [0]fsr1
  9344  0323  00DB               	movwf	??_vfpfcnvrt
  9345  0324  3F41               	moviw [1]fsr1
  9346  0325  00DC               	movwf	??_vfpfcnvrt+1
  9347  0326  085B               	movf	??_vfpfcnvrt,w
  9348  0327  0084               	movwf	4
  9349  0328  085C               	movf	??_vfpfcnvrt+1,w
  9350  0329  0085               	movwf	5
  9351  032A  0012               	moviw fsr0++
  9352  032B  3A25               	xorlw	37
  9353  032C  1D03               	btfss	3,2
  9354  032D  2B2F               	goto	u3181
  9355  032E  2B30               	goto	u3180
  9356  032F                     u3181:
  9357  032F  2C97               	goto	l4608
  9358  0330                     u3180:
  9359  0330                     l4530:
  9360                           
  9361                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  9362  0330  0859               	movf	vfpfcnvrt@fmt,w
  9363  0331  0086               	movwf	6
  9364  0332  0187               	clrf	7
  9365  0333  3001               	movlw	1
  9366  0334  0781               	addwf	1,f
  9367  0335  3141               	addfsr 1,1
  9368  0336  1803               	skipnc
  9369  0337  0A81               	incf	1,f
  9370  0338                     l4532:
  9371                           
  9372                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  9373  0338  0021               	movlb	1	; select bank1
  9374  0339  01ED               	clrf	_width^(0+128)
  9375  033A  01EE               	clrf	(_width+1)^(0+128)
  9376  033B  01FC               	clrf	_flags
  9377  033C  01FD               	clrf	_flags+1
  9378  033D                     l4534:
  9379                           
  9380                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  9381  033D  30FF               	movlw	255
  9382  033E  00FA               	movwf	_prec
  9383  033F  30FF               	movlw	255
  9384  0340  00FB               	movwf	_prec+1
  9385  0341                     l4536:
  9386                           
  9387                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  9388  0341  0020               	movlb	0	; select bank0
  9389  0342  01E9               	clrf	vfpfcnvrt@done
  9390  0343  01EA               	clrf	vfpfcnvrt@done+1
  9391                           
  9392                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  9393  0344  2B80               	goto	l4554
  9394  0345                     l2040:	
  9395                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 713:             
      +                              case '-' :
  9396                           
  9397                           
  9398                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  9399  0345  147C               	bsf	_flags,0
  9400  0346                     l4538:
  9401                           
  9402                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  9403  0346  0859               	movf	vfpfcnvrt@fmt,w
  9404  0347  0086               	movwf	6
  9405  0348  0187               	clrf	7
  9406  0349  3001               	movlw	1
  9407  034A  0781               	addwf	1,f
  9408  034B  3141               	addfsr 1,1
  9409  034C  1803               	skipnc
  9410  034D  0A81               	incf	1,f
  9411                           
  9412                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  9413  034E  2B80               	goto	l4554
  9414  034F                     l2042:	
  9415                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 717:             
      +                              case '0' :
  9416                           
  9417                           
  9418                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  9419  034F  14FC               	bsf	_flags,1
  9420  0350  2B46               	goto	l4538
  9421  0351                     l2043:	
  9422                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 721:             
      +                              case '+' :
  9423                           
  9424                           
  9425                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  9426  0351  157C               	bsf	_flags,2
  9427  0352  2B46               	goto	l4538
  9428  0353                     l2044:	
  9429                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 725:             
      +                              case ' ' :
  9430                           
  9431                           
  9432                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  9433  0353  15FC               	bsf	_flags,3
  9434  0354  2B46               	goto	l4538
  9435  0355                     l2045:	
  9436                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 729:             
      +                              case '#' :
  9437                           
  9438                           
  9439                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  9440  0355  167C               	bsf	_flags,4
  9441  0356  2B46               	goto	l4538
  9442  0357                     l4548:
  9443                           
  9444                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  9445  0357  3001               	movlw	1
  9446  0358  00E9               	movwf	vfpfcnvrt@done
  9447  0359  3000               	movlw	0
  9448  035A  00EA               	movwf	vfpfcnvrt@done+1
  9449                           
  9450                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  9451  035B  2B80               	goto	l4554
  9452  035C                     l4552:
  9453  035C  0859               	movf	vfpfcnvrt@fmt,w
  9454  035D  0086               	movwf	6
  9455  035E  0187               	clrf	7
  9456  035F  3F40               	moviw [0]fsr1
  9457  0360  00DB               	movwf	??_vfpfcnvrt
  9458  0361  3F41               	moviw [1]fsr1
  9459  0362  00DC               	movwf	??_vfpfcnvrt+1
  9460  0363  085B               	movf	??_vfpfcnvrt,w
  9461  0364  0084               	movwf	4
  9462  0365  085C               	movf	??_vfpfcnvrt+1,w
  9463  0366  0085               	movwf	5
  9464  0367  0800               	movf	0,w	;code access
  9465  0368  00DD               	movwf	??_vfpfcnvrt+2
  9466  0369  01DE               	clrf	??_vfpfcnvrt+3
  9467                           
  9468                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9469                           ; Switch size 1, requested type "simple"
  9470                           ; Number of cases is 1, Range of values is 0 to 0
  9471                           ; switch strategies available:
  9472                           ; Name         Instructions Cycles
  9473                           ; simple_byte            4     3 (average)
  9474                           ; direct_byte            8     6 (fixed)
  9475                           ; jumptable            260     6 (fixed)
  9476                           ;	Chosen strategy is simple_byte
  9477  036A  085E               	movf	??_vfpfcnvrt+3,w
  9478  036B  3A00               	xorlw	0	; case 0
  9479  036C  1903               	skipnz
  9480  036D  2B6F               	goto	l5818
  9481  036E  2B57               	goto	l4548
  9482  036F                     l5818:
  9483                           
  9484                           ; Switch size 1, requested type "simple"
  9485                           ; Number of cases is 5, Range of values is 32 to 48
  9486                           ; switch strategies available:
  9487                           ; Name         Instructions Cycles
  9488                           ; simple_byte           16     9 (average)
  9489                           ; direct_byte           43     9 (fixed)
  9490                           ; jumptable            263     9 (fixed)
  9491                           ;	Chosen strategy is simple_byte
  9492  036F  085D               	movf	??_vfpfcnvrt+2,w
  9493  0370  3A20               	xorlw	32	; case 32
  9494  0371  1903               	skipnz
  9495  0372  2B53               	goto	l2044
  9496  0373  3A03               	xorlw	3	; case 35
  9497  0374  1903               	skipnz
  9498  0375  2B55               	goto	l2045
  9499  0376  3A08               	xorlw	8	; case 43
  9500  0377  1903               	skipnz
  9501  0378  2B51               	goto	l2043
  9502  0379  3A06               	xorlw	6	; case 45
  9503  037A  1903               	skipnz
  9504  037B  2B45               	goto	l2040
  9505  037C  3A1D               	xorlw	29	; case 48
  9506  037D  1903               	skipnz
  9507  037E  2B4F               	goto	l2042
  9508  037F  2B57               	goto	l4548
  9509  0380                     l4554:
  9510                           
  9511                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  9512  0380  0869               	movf	vfpfcnvrt@done,w
  9513  0381  046A               	iorwf	vfpfcnvrt@done+1,w
  9514  0382  1903               	btfsc	3,2
  9515  0383  2B85               	goto	u3191
  9516  0384  2B86               	goto	u3190
  9517  0385                     u3191:
  9518  0385  2B5C               	goto	l4552
  9519  0386                     u3190:
  9520  0386                     l2047:
  9521                           
  9522                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  9523  0386  1C7C               	btfss	_flags,0
  9524  0387  2B89               	goto	u3201
  9525  0388  2B8A               	goto	u3200
  9526  0389                     u3201:
  9527  0389  2B8E               	goto	l4558
  9528  038A                     u3200:
  9529  038A                     l4556:
  9530                           
  9531                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  9532  038A  30FD               	movlw	253
  9533  038B  05FC               	andwf	_flags,f
  9534  038C  30FF               	movlw	255
  9535  038D  05FD               	andwf	_flags+1,f
  9536  038E                     l4558:
  9537                           
  9538                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  9539  038E  0859               	movf	vfpfcnvrt@fmt,w
  9540  038F  0086               	movwf	6
  9541  0390  0187               	clrf	7
  9542  0391  3F40               	moviw [0]fsr1
  9543  0392  00DB               	movwf	??_vfpfcnvrt
  9544  0393  3F41               	moviw [1]fsr1
  9545  0394  00DC               	movwf	??_vfpfcnvrt+1
  9546  0395  085B               	movf	??_vfpfcnvrt,w
  9547  0396  0084               	movwf	4
  9548  0397  085C               	movf	??_vfpfcnvrt+1,w
  9549  0398  0085               	movwf	5
  9550  0399  0012               	moviw fsr0++
  9551  039A  3A2A               	xorlw	42
  9552  039B  1D03               	btfss	3,2
  9553  039C  2B9E               	goto	u3211
  9554  039D  2B9F               	goto	u3210
  9555  039E                     u3211:
  9556  039E  2BBF               	goto	l4570
  9557  039F                     u3210:
  9558  039F                     l4560:
  9559                           
  9560                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  9561  039F  0859               	movf	vfpfcnvrt@fmt,w
  9562  03A0  0086               	movwf	6
  9563  03A1  0187               	clrf	7
  9564  03A2  3001               	movlw	1
  9565  03A3  0781               	addwf	1,f
  9566  03A4  3141               	addfsr 1,1
  9567  03A5  1803               	skipnc
  9568  03A6  0A81               	incf	1,f
  9569  03A7                     l4562:
  9570                           
  9571                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  9572  03A7  085A               	movf	vfpfcnvrt@ap,w
  9573  03A8  0086               	movwf	6
  9574  03A9  0187               	clrf	7
  9575  03AA  0801               	movf	1,w
  9576  03AB  0084               	movwf	4
  9577  03AC  0185               	clrf	5
  9578  03AD  3002               	movlw	2
  9579  03AE  0781               	addwf	1,f
  9580  03AF  3F00               	moviw [0]fsr0
  9581  03B0  0021               	movlb	1	; select bank1
  9582  03B1  00ED               	movwf	_width^(0+128)
  9583  03B2  3F01               	moviw [1]fsr0
  9584  03B3  00EE               	movwf	(_width+1)^(0+128)
  9585  03B4                     l4564:
  9586                           
  9587                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  9588  03B4  1FEE               	btfss	(_width+1)^(0+128),7
  9589  03B5  2BB7               	goto	u3221
  9590  03B6  2BB8               	goto	u3220
  9591  03B7                     u3221:
  9592  03B7  2C04               	goto	l4580
  9593  03B8                     u3220:
  9594  03B8                     l4566:
  9595                           
  9596                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  9597  03B8  147C               	bsf	_flags,0
  9598  03B9                     l4568:
  9599                           
  9600                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  9601  03B9  09ED               	comf	_width^(0+128),f
  9602  03BA  09EE               	comf	(_width+1)^(0+128),f
  9603  03BB  0AED               	incf	_width^(0+128),f
  9604  03BC  1903               	skipnz
  9605  03BD  0AEE               	incf	(_width+1)^(0+128),f
  9606  03BE  2C04               	goto	l4580
  9607  03BF                     l4570:
  9608                           
  9609                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  9610  03BF  0859               	movf	vfpfcnvrt@fmt,w
  9611  03C0  0086               	movwf	6
  9612  03C1  0187               	clrf	7
  9613  03C2  3F40               	moviw [0]fsr1
  9614  03C3  00A6               	movwf	atoi@s
  9615  03C4  3F41               	moviw [1]fsr1
  9616  03C5  00A7               	movwf	atoi@s+1
  9617  03C6  318A  227F  3183   	fcall	_atoi
  9618  03C9  0020               	movlb	0	; select bank0
  9619  03CA  0827               	movf	?_atoi+1,w
  9620  03CB  0021               	movlb	1	; select bank1
  9621  03CC  00EE               	movwf	(_width+1)^(0+128)
  9622  03CD  0020               	movlb	0	; select bank0
  9623  03CE  0826               	movf	?_atoi,w
  9624  03CF  0021               	movlb	1	; select bank1
  9625  03D0  00ED               	movwf	_width^(0+128)
  9626                           
  9627                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9628  03D1  2BDA               	goto	l4574
  9629  03D2                     l4572:
  9630                           
  9631                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  9632  03D2  0859               	movf	vfpfcnvrt@fmt,w
  9633  03D3  0086               	movwf	6
  9634  03D4  0187               	clrf	7
  9635  03D5  3001               	movlw	1
  9636  03D6  0781               	addwf	1,f
  9637  03D7  3141               	addfsr 1,1
  9638  03D8  1803               	skipnc
  9639  03D9  0A81               	incf	1,f
  9640  03DA                     l4574:
  9641  03DA  0020               	movlb	0	; select bank0
  9642  03DB  0859               	movf	vfpfcnvrt@fmt,w
  9643  03DC  0086               	movwf	6
  9644  03DD  0187               	clrf	7
  9645  03DE  3F40               	moviw [0]fsr1
  9646  03DF  00DB               	movwf	??_vfpfcnvrt
  9647  03E0  3F41               	moviw [1]fsr1
  9648  03E1  00DC               	movwf	??_vfpfcnvrt+1
  9649  03E2  085B               	movf	??_vfpfcnvrt,w
  9650  03E3  0084               	movwf	4
  9651  03E4  085C               	movf	??_vfpfcnvrt+1,w
  9652  03E5  0085               	movwf	5
  9653  03E6  0800               	movf	0,w	;code access
  9654  03E7  3ED0               	addlw	208
  9655  03E8  00DD               	movwf	??_vfpfcnvrt+2
  9656  03E9  30FF               	movlw	255
  9657  03EA  1803               	skipnc
  9658  03EB  3000               	movlw	0
  9659  03EC  00DE               	movwf	??_vfpfcnvrt+3
  9660  03ED  3000               	movlw	0
  9661  03EE  025E               	subwf	??_vfpfcnvrt+3,w
  9662  03EF  300A               	movlw	10
  9663  03F0  1903               	skipnz
  9664  03F1  025D               	subwf	??_vfpfcnvrt+2,w
  9665  03F2  1C03               	skipc
  9666  03F3  2BF5               	goto	u3231
  9667  03F4  2BF7               	goto	u3230
  9668  03F5                     u3231:
  9669  03F5  3001               	movlw	1
  9670  03F6  2BF8               	goto	u3240
  9671  03F7                     u3230:
  9672  03F7  3000               	movlw	0
  9673  03F8                     u3240:
  9674  03F8  00DF               	movwf	??_vfpfcnvrt+4
  9675  03F9  01E0               	clrf	??_vfpfcnvrt+5
  9676  03FA  085F               	movf	??_vfpfcnvrt+4,w
  9677  03FB  00EB               	movwf	_vfpfcnvrt$2962
  9678  03FC  0860               	movf	??_vfpfcnvrt+5,w
  9679  03FD  00EC               	movwf	_vfpfcnvrt$2962+1
  9680  03FE                     l4578:
  9681  03FE  086B               	movf	_vfpfcnvrt$2962,w
  9682  03FF  046C               	iorwf	_vfpfcnvrt$2962+1,w
  9683  0400  1D03               	btfss	3,2
  9684  0401  2C03               	goto	u3251
  9685  0402  2C04               	goto	u3250
  9686  0403                     u3251:
  9687  0403  2BD2               	goto	l4572
  9688  0404                     u3250:
  9689  0404                     l4580:
  9690                           
  9691                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  9692  0404  0020               	movlb	0	; select bank0
  9693  0405  0859               	movf	vfpfcnvrt@fmt,w
  9694  0406  0086               	movwf	6
  9695  0407  0187               	clrf	7
  9696  0408  3F40               	moviw [0]fsr1
  9697  0409  00DB               	movwf	??_vfpfcnvrt
  9698  040A  3F41               	moviw [1]fsr1
  9699  040B  00DC               	movwf	??_vfpfcnvrt+1
  9700  040C  085B               	movf	??_vfpfcnvrt,w
  9701  040D  0084               	movwf	4
  9702  040E  085C               	movf	??_vfpfcnvrt+1,w
  9703  040F  0085               	movwf	5
  9704  0410  0012               	moviw fsr0++
  9705  0411  3A64               	xorlw	100
  9706  0412  1903               	btfsc	3,2
  9707  0413  2C15               	goto	u3261
  9708  0414  2C16               	goto	u3260
  9709  0415                     u3261:
  9710  0415  2C27               	goto	l4584
  9711  0416                     u3260:
  9712  0416                     l4582:
  9713  0416  0859               	movf	vfpfcnvrt@fmt,w
  9714  0417  0086               	movwf	6
  9715  0418  0187               	clrf	7
  9716  0419  3F40               	moviw [0]fsr1
  9717  041A  00DB               	movwf	??_vfpfcnvrt
  9718  041B  3F41               	moviw [1]fsr1
  9719  041C  00DC               	movwf	??_vfpfcnvrt+1
  9720  041D  085B               	movf	??_vfpfcnvrt,w
  9721  041E  0084               	movwf	4
  9722  041F  085C               	movf	??_vfpfcnvrt+1,w
  9723  0420  0085               	movwf	5
  9724  0421  0012               	moviw fsr0++
  9725  0422  3A69               	xorlw	105
  9726  0423  1D03               	btfss	3,2
  9727  0424  2C26               	goto	u3271
  9728  0425  2C27               	goto	u3270
  9729  0426                     u3271:
  9730  0426  2C62               	goto	l4592
  9731  0427                     u3270:
  9732  0427                     l4584:
  9733                           
  9734                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  9735  0427  0859               	movf	vfpfcnvrt@fmt,w
  9736  0428  0086               	movwf	6
  9737  0429  0187               	clrf	7
  9738  042A  3001               	movlw	1
  9739  042B  0781               	addwf	1,f
  9740  042C  3141               	addfsr 1,1
  9741  042D  1803               	skipnc
  9742  042E  0A81               	incf	1,f
  9743  042F                     l4586:
  9744                           
  9745                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9746  042F  085A               	movf	vfpfcnvrt@ap,w
  9747  0430  0086               	movwf	6
  9748  0431  0187               	clrf	7
  9749  0432  0801               	movf	1,w
  9750  0433  0084               	movwf	4
  9751  0434  0185               	clrf	5
  9752  0435  3002               	movlw	2
  9753  0436  0781               	addwf	1,f
  9754  0437  3F00               	moviw [0]fsr0
  9755  0438  00DB               	movwf	??_vfpfcnvrt
  9756  0439  3F01               	moviw [1]fsr0
  9757  043A  00DC               	movwf	??_vfpfcnvrt+1
  9758  043B  085B               	movf	??_vfpfcnvrt,w
  9759  043C  00E1               	movwf	vfpfcnvrt@ll
  9760  043D  085C               	movf	??_vfpfcnvrt+1,w
  9761  043E  00E2               	movwf	vfpfcnvrt@ll+1
  9762  043F  0D89               	rlf	9,f
  9763  0440  3B89               	subwfb	9,f
  9764  0441  0989               	comf	9,f
  9765  0442  00E3               	movwf	vfpfcnvrt@ll+2
  9766  0443  00E4               	movwf	vfpfcnvrt@ll+3
  9767  0444  00E5               	movwf	vfpfcnvrt@ll+4
  9768  0445  00E6               	movwf	vfpfcnvrt@ll+5
  9769  0446  00E7               	movwf	vfpfcnvrt@ll+6
  9770  0447  00E8               	movwf	vfpfcnvrt@ll+7
  9771  0448                     l4588:
  9772                           
  9773                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  9774  0448  0861               	movf	vfpfcnvrt@ll,w
  9775  0449  00BB               	movwf	dtoa@d
  9776  044A  0862               	movf	vfpfcnvrt@ll+1,w
  9777  044B  00BC               	movwf	dtoa@d+1
  9778  044C  0863               	movf	vfpfcnvrt@ll+2,w
  9779  044D  00BD               	movwf	dtoa@d+2
  9780  044E  0864               	movf	vfpfcnvrt@ll+3,w
  9781  044F  00BE               	movwf	dtoa@d+3
  9782  0450  0865               	movf	vfpfcnvrt@ll+4,w
  9783  0451  00BF               	movwf	dtoa@d+4
  9784  0452  0866               	movf	vfpfcnvrt@ll+5,w
  9785  0453  00C0               	movwf	dtoa@d+5
  9786  0454  0867               	movf	vfpfcnvrt@ll+6,w
  9787  0455  00C1               	movwf	dtoa@d+6
  9788  0456  0868               	movf	vfpfcnvrt@ll+7,w
  9789  0457  00C2               	movwf	dtoa@d+7
  9790  0458  086D               	movf	vfpfcnvrt@fp,w
  9791  0459  3186  2646  3183   	fcall	_dtoa
  9792  045C  0020               	movlb	0	; select bank0
  9793  045D  083C               	movf	?_dtoa+1,w
  9794  045E  00DA               	movwf	?_vfpfcnvrt+1
  9795  045F  083B               	movf	?_dtoa,w
  9796  0460  00D9               	movwf	?_vfpfcnvrt
  9797  0461  2CBA               	goto	l2062
  9798  0462                     l4592:
  9799                           
  9800                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  9801  0462  0859               	movf	vfpfcnvrt@fmt,w
  9802  0463  0086               	movwf	6
  9803  0464  0187               	clrf	7
  9804  0465  3F40               	moviw [0]fsr1
  9805  0466  00DB               	movwf	??_vfpfcnvrt
  9806  0467  3F41               	moviw [1]fsr1
  9807  0468  00DC               	movwf	??_vfpfcnvrt+1
  9808  0469  085B               	movf	??_vfpfcnvrt,w
  9809  046A  0084               	movwf	4
  9810  046B  085C               	movf	??_vfpfcnvrt+1,w
  9811  046C  0085               	movwf	5
  9812  046D  0012               	moviw fsr0++
  9813  046E  3A25               	xorlw	37
  9814  046F  1D03               	btfss	3,2
  9815  0470  2C72               	goto	u3281
  9816  0471  2C73               	goto	u3280
  9817  0472                     u3281:
  9818  0472  2C8C               	goto	l4602
  9819  0473                     u3280:
  9820  0473                     l4594:
  9821                           
  9822                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  9823  0473  0859               	movf	vfpfcnvrt@fmt,w
  9824  0474  0086               	movwf	6
  9825  0475  0187               	clrf	7
  9826  0476  3001               	movlw	1
  9827  0477  0781               	addwf	1,f
  9828  0478  3141               	addfsr 1,1
  9829  0479  1803               	skipnc
  9830  047A  0A81               	incf	1,f
  9831  047B                     l4596:
  9832                           
  9833                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  9834  047B  3025               	movlw	37
  9835  047C  00A0               	movwf	fputc@c
  9836  047D  3000               	movlw	0
  9837  047E  00A1               	movwf	fputc@c+1
  9838  047F  086D               	movf	vfpfcnvrt@fp,w
  9839  0480  00DB               	movwf	??_vfpfcnvrt
  9840  0481  085B               	movf	??_vfpfcnvrt,w
  9841  0482  00A2               	movwf	fputc@fp
  9842  0483  3197  275C  3183   	fcall	_fputc
  9843  0486                     l4598:
  9844                           
  9845                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  9846  0486  3001               	movlw	1
  9847  0487  0020               	movlb	0	; select bank0
  9848  0488  00D9               	movwf	?_vfpfcnvrt
  9849  0489  3000               	movlw	0
  9850  048A  00DA               	movwf	?_vfpfcnvrt+1
  9851  048B  2CBA               	goto	l2062
  9852  048C                     l4602:
  9853                           
  9854                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  9855  048C  0859               	movf	vfpfcnvrt@fmt,w
  9856  048D  0086               	movwf	6
  9857  048E  0187               	clrf	7
  9858  048F  3001               	movlw	1
  9859  0490  0781               	addwf	1,f
  9860  0491  3141               	addfsr 1,1
  9861  0492  1803               	skipnc
  9862  0493  0A81               	incf	1,f
  9863  0494                     l4604:
  9864                           
  9865                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  9866  0494  01D9               	clrf	?_vfpfcnvrt
  9867  0495  01DA               	clrf	?_vfpfcnvrt+1
  9868  0496  2CBA               	goto	l2062
  9869  0497                     l4608:
  9870                           
  9871                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  9872  0497  0859               	movf	vfpfcnvrt@fmt,w
  9873  0498  0086               	movwf	6
  9874  0499  0187               	clrf	7
  9875  049A  3F40               	moviw [0]fsr1
  9876  049B  00DB               	movwf	??_vfpfcnvrt
  9877  049C  3F41               	moviw [1]fsr1
  9878  049D  00DC               	movwf	??_vfpfcnvrt+1
  9879  049E  085B               	movf	??_vfpfcnvrt,w
  9880  049F  0084               	movwf	4
  9881  04A0  085C               	movf	??_vfpfcnvrt+1,w
  9882  04A1  0085               	movwf	5
  9883  04A2  0800               	movf	0,w	;code access
  9884  04A3  00DD               	movwf	??_vfpfcnvrt+2
  9885  04A4  01DE               	clrf	??_vfpfcnvrt+3
  9886  04A5  085D               	movf	??_vfpfcnvrt+2,w
  9887  04A6  00A0               	movwf	fputc@c
  9888  04A7  085E               	movf	??_vfpfcnvrt+3,w
  9889  04A8  00A1               	movwf	fputc@c+1
  9890  04A9  086D               	movf	vfpfcnvrt@fp,w
  9891  04AA  00DF               	movwf	??_vfpfcnvrt+4
  9892  04AB  085F               	movf	??_vfpfcnvrt+4,w
  9893  04AC  00A2               	movwf	fputc@fp
  9894  04AD  3197  275C  3183   	fcall	_fputc
  9895  04B0                     l4610:
  9896                           
  9897                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  9898  04B0  0020               	movlb	0	; select bank0
  9899  04B1  0859               	movf	vfpfcnvrt@fmt,w
  9900  04B2  0086               	movwf	6
  9901  04B3  0187               	clrf	7
  9902  04B4  3001               	movlw	1
  9903  04B5  0781               	addwf	1,f
  9904  04B6  3141               	addfsr 1,1
  9905  04B7  1803               	skipnc
  9906  04B8  0A81               	incf	1,f
  9907  04B9  2C86               	goto	l4598
  9908  04BA                     l2062:
  9909  04BA  0008               	return
  9910  04BB                     __end_of_vfpfcnvrt:
  9911                           
  9912                           	psect	text5
  9913  0646                     __ptext5:	
  9914 ;; *************** function _dtoa *****************
  9915 ;; Defined at:
  9916 ;;		line 287 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;  fp              1    wreg     PTR struct _IO_FILE
  9919 ;;		 -> sprintf@f(5), 
  9920 ;;  d               8   27[BANK0 ] long long 
  9921 ;; Auto vars:     Size  Location     Type
  9922 ;;  fp              1   40[BANK0 ] PTR struct _IO_FILE
  9923 ;;		 -> sprintf@f(5), 
  9924 ;;  n               8   47[BANK0 ] long long 
  9925 ;;  i               2   55[BANK0 ] int 
  9926 ;;  s               2   45[BANK0 ] int 
  9927 ;;  w               2   43[BANK0 ] int 
  9928 ;;  p               2   41[BANK0 ] int 
  9929 ;; Return value:  Size  Location     Type
  9930 ;;                  2   27[BANK0 ] int 
  9931 ;; Registers used:
  9932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9933 ;; Tracked objects:
  9934 ;;		On entry : 0/0
  9935 ;;		On exit  : 0/0
  9936 ;;		Unchanged: 0/0
  9937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9938 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9939 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9940 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9941 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9942 ;;Total ram usage:       30 bytes
  9943 ;; Hardware stack levels used: 1
  9944 ;; Hardware stack levels required when called: 9
  9945 ;; This function calls:
  9946 ;;		___aodiv
  9947 ;;		___aomod
  9948 ;;		_abs
  9949 ;;		_pad
  9950 ;; This function is called by:
  9951 ;;		_vfpfcnvrt
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           
  9956                           ;psect for function _dtoa
  9957  0646                     _dtoa:
  9958                           
  9959                           ;incstack = 0
  9960                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9961                           ;dtoa@fp stored from wreg
  9962  0646  0020               	movlb	0	; select bank0
  9963  0647  00C8               	movwf	dtoa@fp
  9964  0648                     l4294:
  9965                           
  9966                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  9967  0648  083B               	movf	dtoa@d,w
  9968  0649  00CF               	movwf	dtoa@n
  9969  064A  083C               	movf	dtoa@d+1,w
  9970  064B  00D0               	movwf	dtoa@n+1
  9971  064C  083D               	movf	dtoa@d+2,w
  9972  064D  00D1               	movwf	dtoa@n+2
  9973  064E  083E               	movf	dtoa@d+3,w
  9974  064F  00D2               	movwf	dtoa@n+3
  9975  0650  083F               	movf	dtoa@d+4,w
  9976  0651  00D3               	movwf	dtoa@n+4
  9977  0652  0840               	movf	dtoa@d+5,w
  9978  0653  00D4               	movwf	dtoa@n+5
  9979  0654  0841               	movf	dtoa@d+6,w
  9980  0655  00D5               	movwf	dtoa@n+6
  9981  0656  0842               	movf	dtoa@d+7,w
  9982  0657  00D6               	movwf	dtoa@n+7
  9983  0658                     l4296:
  9984                           
  9985                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  9986  0658  304F               	movlw	low dtoa@n
  9987  0659  0086               	movwf	6
  9988  065A  3000               	movlw	high dtoa@n
  9989  065B  0087               	movwf	7
  9990  065C  3F47               	moviw [7]fsr1
  9991  065D  00C3               	movwf	??_dtoa
  9992  065E  1BC3               	btfsc	??_dtoa,7
  9993  065F  2E61               	goto	u2721
  9994  0660  2E63               	goto	u2720
  9995  0661                     u2721:
  9996  0661  3001               	movlw	1
  9997  0662  2E64               	goto	u2730
  9998  0663                     u2720:
  9999  0663  3000               	movlw	0
 10000  0664                     u2730:
 10001  0664  0020               	movlb	0	; select bank0
 10002  0665  00C4               	movwf	??_dtoa+1
 10003  0666  01C5               	clrf	??_dtoa+2
 10004  0667  0844               	movf	??_dtoa+1,w
 10005  0668  00CD               	movwf	dtoa@s
 10006  0669  0845               	movf	??_dtoa+2,w
 10007  066A  00CE               	movwf	dtoa@s+1
 10008  066B                     l4298:
 10009                           
 10010                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 10011  066B  084D               	movf	dtoa@s,w
 10012  066C  044E               	iorwf	dtoa@s+1,w
 10013  066D  1903               	btfsc	3,2
 10014  066E  2E70               	goto	u2741
 10015  066F  2E71               	goto	u2740
 10016  0670                     u2741:
 10017  0670  2E8F               	goto	l2010
 10018  0671                     u2740:
 10019  0671                     l4300:
 10020                           
 10021                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 10022  0671  09CF               	comf	dtoa@n,f
 10023  0672  09D0               	comf	dtoa@n+1,f
 10024  0673  09D1               	comf	dtoa@n+2,f
 10025  0674  09D2               	comf	dtoa@n+3,f
 10026  0675  09D3               	comf	dtoa@n+4,f
 10027  0676  09D4               	comf	dtoa@n+5,f
 10028  0677  09D5               	comf	dtoa@n+6,f
 10029  0678  09D6               	comf	dtoa@n+7,f
 10030  0679  0ACF               	incf	dtoa@n,f
 10031  067A  1D03               	skipz
 10032  067B  2E8F               	goto	u275lld
 10033  067C  0AD0               	incf	dtoa@n+1,f
 10034  067D  1D03               	skipz
 10035  067E  2E8F               	goto	u275lld
 10036  067F  0AD1               	incf	dtoa@n+2,f
 10037  0680  1D03               	skipz
 10038  0681  2E8F               	goto	u275lld
 10039  0682  0AD2               	incf	dtoa@n+3,f
 10040  0683  1D03               	skipz
 10041  0684  2E8F               	goto	u275lld
 10042  0685  0AD3               	incf	dtoa@n+4,f
 10043  0686  1D03               	skipz
 10044  0687  2E8F               	goto	u275lld
 10045  0688  0AD4               	incf	dtoa@n+5,f
 10046  0689  1D03               	skipz
 10047  068A  2E8F               	goto	u275lld
 10048  068B  0AD5               	incf	dtoa@n+6,f
 10049  068C  1D03               	skipz
 10050  068D  2E8F               	goto	u275lld
 10051  068E  0AD6               	incf	dtoa@n+7,f
 10052  068F                     u275lld:
 10053  068F                     l2010:	
 10054                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
 10055                           
 10056                           
 10057                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 10058  068F  1BFB               	btfsc	_prec+1,7
 10059  0690  2E92               	goto	u2761
 10060  0691  2E93               	goto	u2760
 10061  0692                     u2761:
 10062  0692  2E97               	goto	l2011
 10063  0693                     u2760:
 10064  0693                     l4302:
 10065                           
 10066                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 10067  0693  30FD               	movlw	253
 10068  0694  05FC               	andwf	_flags,f
 10069  0695  30FF               	movlw	255
 10070  0696  05FD               	andwf	_flags+1,f
 10071  0697                     l2011:	
 10072                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
 10073                           
 10074                           
 10075                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 10076  0697  087B               	movf	_prec+1,w
 10077  0698  3A80               	xorlw	128
 10078  0699  0020               	movlb	0	; select bank0
 10079  069A  00C3               	movwf	??_dtoa
 10080  069B  3080               	movlw	128
 10081  069C  0243               	subwf	??_dtoa,w
 10082  069D  1D03               	skipz
 10083  069E  2EA1               	goto	u2775
 10084  069F  3001               	movlw	1
 10085  06A0  027A               	subwf	_prec,w
 10086  06A1                     u2775:
 10087  06A1  1803               	skipnc
 10088  06A2  2EA4               	goto	u2771
 10089  06A3  2EA5               	goto	u2770
 10090  06A4                     u2771:
 10091  06A4  2EAB               	goto	l4306
 10092  06A5                     u2770:
 10093  06A5                     l4304:
 10094  06A5  3001               	movlw	1
 10095  06A6  0020               	movlb	0	; select bank0
 10096  06A7  00C9               	movwf	dtoa@p
 10097  06A8  3000               	movlw	0
 10098  06A9  00CA               	movwf	dtoa@p+1
 10099  06AA  2EB0               	goto	l2015
 10100  06AB                     l4306:
 10101  06AB  087B               	movf	_prec+1,w
 10102  06AC  0020               	movlb	0	; select bank0
 10103  06AD  00CA               	movwf	dtoa@p+1
 10104  06AE  087A               	movf	_prec,w
 10105  06AF  00C9               	movwf	dtoa@p
 10106  06B0                     l2015:
 10107                           
 10108                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 10109  06B0  0021               	movlb	1	; select bank1
 10110  06B1  086E               	movf	(_width+1)^(0+128),w
 10111  06B2  0020               	movlb	0	; select bank0
 10112  06B3  00CC               	movwf	dtoa@w+1
 10113  06B4  0021               	movlb	1	; select bank1
 10114  06B5  086D               	movf	_width^(0+128),w
 10115  06B6  0020               	movlb	0	; select bank0
 10116  06B7  00CB               	movwf	dtoa@w
 10117  06B8                     l4308:
 10118                           
 10119                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 10120  06B8  084D               	movf	dtoa@s,w
 10121  06B9  044E               	iorwf	dtoa@s+1,w
 10122  06BA  1D03               	btfss	3,2
 10123  06BB  2EBD               	goto	u2781
 10124  06BC  2EBE               	goto	u2780
 10125  06BD                     u2781:
 10126  06BD  2EC2               	goto	l4312
 10127  06BE                     u2780:
 10128  06BE                     l4310:
 10129  06BE  1D7C               	btfss	_flags,2
 10130  06BF  2EC1               	goto	u2791
 10131  06C0  2EC2               	goto	u2790
 10132  06C1                     u2791:
 10133  06C1  2EC6               	goto	l2016
 10134  06C2                     u2790:
 10135  06C2                     l4312:
 10136                           
 10137                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
 10138  06C2  30FF               	movlw	255
 10139  06C3  07CB               	addwf	dtoa@w,f
 10140  06C4  30FF               	movlw	255
 10141  06C5  3DCC               	addwfc	dtoa@w+1,f
 10142  06C6                     l2016:	
 10143                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
 10144                           
 10145                           
 10146                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 10147  06C6  301F               	movlw	31
 10148  06C7  00D7               	movwf	dtoa@i
 10149  06C8  3000               	movlw	0
 10150  06C9  00D8               	movwf	dtoa@i+1
 10151  06CA                     l4314:
 10152                           
 10153                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 10154  06CA  0022               	movlb	2	; select bank2
 10155  06CB  01DE               	clrf	(_dbuf^(0+256)+31)
 10156                           
 10157                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10158  06CC  2F36               	goto	l2019
 10159  06CD                     l4316:
 10160                           
 10161                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
 10162  06CD  30FF               	movlw	255
 10163  06CE  0020               	movlb	0	; select bank0
 10164  06CF  07D7               	addwf	dtoa@i,f
 10165  06D0  30FF               	movlw	255
 10166  06D1  3DD8               	addwfc	dtoa@i+1,f
 10167  06D2                     l4318:
 10168                           
 10169                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 10170  06D2  300A               	movlw	10
 10171  06D3  00A0               	movwf	___aomod@divisor
 10172  06D4  01A1               	clrf	___aomod@divisor+1
 10173  06D5  01A2               	clrf	___aomod@divisor+2
 10174  06D6  01A3               	clrf	___aomod@divisor+3
 10175  06D7  01A4               	clrf	___aomod@divisor+4
 10176  06D8  01A5               	clrf	___aomod@divisor+5
 10177  06D9  01A6               	clrf	___aomod@divisor+6
 10178  06DA  01A7               	clrf	___aomod@divisor+7
 10179  06DB  084F               	movf	dtoa@n,w
 10180  06DC  00A8               	movwf	___aomod@dividend
 10181  06DD  0850               	movf	dtoa@n+1,w
 10182  06DE  00A9               	movwf	___aomod@dividend+1
 10183  06DF  0851               	movf	dtoa@n+2,w
 10184  06E0  00AA               	movwf	___aomod@dividend+2
 10185  06E1  0852               	movf	dtoa@n+3,w
 10186  06E2  00AB               	movwf	___aomod@dividend+3
 10187  06E3  0853               	movf	dtoa@n+4,w
 10188  06E4  00AC               	movwf	___aomod@dividend+4
 10189  06E5  0854               	movf	dtoa@n+5,w
 10190  06E6  00AD               	movwf	___aomod@dividend+5
 10191  06E7  0855               	movf	dtoa@n+6,w
 10192  06E8  00AE               	movwf	___aomod@dividend+6
 10193  06E9  0856               	movf	dtoa@n+7,w
 10194  06EA  00AF               	movwf	___aomod@dividend+7
 10195  06EB  318C  24BE  3186   	fcall	___aomod
 10196  06EE  0020               	movlb	0	; select bank0
 10197  06EF  0821               	movf	?___aomod+1,w
 10198  06F0  00B4               	movwf	abs@a+1
 10199  06F1  0820               	movf	?___aomod,w
 10200  06F2  00B3               	movwf	abs@a
 10201  06F3  3195  2559  3186   	fcall	_abs
 10202  06F6  0020               	movlb	0	; select bank0
 10203  06F7  0833               	movf	?_abs,w
 10204  06F8  3E30               	addlw	48
 10205  06F9  00C3               	movwf	??_dtoa
 10206  06FA  0857               	movf	dtoa@i,w
 10207  06FB  3E3F               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10208  06FC  0086               	movwf	6
 10209  06FD  3001               	movlw	1	; select bank2/3
 10210  06FE  0087               	movwf	7
 10211  06FF  0843               	movf	??_dtoa,w
 10212  0700  0081               	movwf	1
 10213  0701                     l4320:
 10214                           
 10215                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
 10216  0701  30FF               	movlw	255
 10217  0702  07C9               	addwf	dtoa@p,f
 10218  0703  30FF               	movlw	255
 10219  0704  3DCA               	addwfc	dtoa@p+1,f
 10220  0705                     l4322:
 10221                           
 10222                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
 10223  0705  30FF               	movlw	255
 10224  0706  07CB               	addwf	dtoa@w,f
 10225  0707  30FF               	movlw	255
 10226  0708  3DCC               	addwfc	dtoa@w+1,f
 10227  0709                     l4324:
 10228                           
 10229                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 10230  0709  300A               	movlw	10
 10231  070A  00A0               	movwf	___aodiv@divisor
 10232  070B  01A1               	clrf	___aodiv@divisor+1
 10233  070C  01A2               	clrf	___aodiv@divisor+2
 10234  070D  01A3               	clrf	___aodiv@divisor+3
 10235  070E  01A4               	clrf	___aodiv@divisor+4
 10236  070F  01A5               	clrf	___aodiv@divisor+5
 10237  0710  01A6               	clrf	___aodiv@divisor+6
 10238  0711  01A7               	clrf	___aodiv@divisor+7
 10239  0712  084F               	movf	dtoa@n,w
 10240  0713  00A8               	movwf	___aodiv@dividend
 10241  0714  0850               	movf	dtoa@n+1,w
 10242  0715  00A9               	movwf	___aodiv@dividend+1
 10243  0716  0851               	movf	dtoa@n+2,w
 10244  0717  00AA               	movwf	___aodiv@dividend+2
 10245  0718  0852               	movf	dtoa@n+3,w
 10246  0719  00AB               	movwf	___aodiv@dividend+3
 10247  071A  0853               	movf	dtoa@n+4,w
 10248  071B  00AC               	movwf	___aodiv@dividend+4
 10249  071C  0854               	movf	dtoa@n+5,w
 10250  071D  00AD               	movwf	___aodiv@dividend+5
 10251  071E  0855               	movf	dtoa@n+6,w
 10252  071F  00AE               	movwf	___aodiv@dividend+6
 10253  0720  0856               	movf	dtoa@n+7,w
 10254  0721  00AF               	movwf	___aodiv@dividend+7
 10255  0722  318D  25AB  3186   	fcall	___aodiv
 10256  0725  0020               	movlb	0	; select bank0
 10257  0726  0820               	movf	?___aodiv,w
 10258  0727  00CF               	movwf	dtoa@n
 10259  0728  0821               	movf	?___aodiv+1,w
 10260  0729  00D0               	movwf	dtoa@n+1
 10261  072A  0822               	movf	?___aodiv+2,w
 10262  072B  00D1               	movwf	dtoa@n+2
 10263  072C  0823               	movf	?___aodiv+3,w
 10264  072D  00D2               	movwf	dtoa@n+3
 10265  072E  0824               	movf	?___aodiv+4,w
 10266  072F  00D3               	movwf	dtoa@n+4
 10267  0730  0825               	movf	?___aodiv+5,w
 10268  0731  00D4               	movwf	dtoa@n+5
 10269  0732  0826               	movf	?___aodiv+6,w
 10270  0733  00D5               	movwf	dtoa@n+6
 10271  0734  0827               	movf	?___aodiv+7,w
 10272  0735  00D6               	movwf	dtoa@n+7
 10273  0736                     l2019:	
 10274                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
 10275                           
 10276                           
 10277                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10278  0736  0020               	movlb	0	; select bank0
 10279  0737  0858               	movf	dtoa@i+1,w
 10280  0738  3A80               	xorlw	128
 10281  0739  00C3               	movwf	??_dtoa
 10282  073A  3080               	movlw	128
 10283  073B  0243               	subwf	??_dtoa,w
 10284  073C  1D03               	skipz
 10285  073D  2F40               	goto	u2805
 10286  073E  3001               	movlw	1
 10287  073F  0257               	subwf	dtoa@i,w
 10288  0740                     u2805:
 10289  0740  1C03               	skipc
 10290  0741  2F43               	goto	u2801
 10291  0742  2F44               	goto	u2800
 10292  0743                     u2801:
 10293  0743  2F70               	goto	l4334
 10294  0744                     u2800:
 10295  0744                     l4326:
 10296  0744  0020               	movlb	0	; select bank0
 10297  0745  084F               	movf	dtoa@n,w
 10298  0746  0450               	iorwf	dtoa@n+1,w
 10299  0747  0451               	iorwf	dtoa@n+2,w
 10300  0748  0452               	iorwf	dtoa@n+3,w
 10301  0749  0453               	iorwf	dtoa@n+4,w
 10302  074A  0454               	iorwf	dtoa@n+5,w
 10303  074B  0455               	iorwf	dtoa@n+6,w
 10304  074C  0456               	iorwf	dtoa@n+7,w
 10305  074D  1D03               	skipz
 10306  074E  2F50               	goto	u2811
 10307  074F  2F51               	goto	u2810
 10308  0750                     u2811:
 10309  0750  2ECD               	goto	l4316
 10310  0751                     u2810:
 10311  0751                     l4328:
 10312  0751  084A               	movf	dtoa@p+1,w
 10313  0752  3A80               	xorlw	128
 10314  0753  00C3               	movwf	??_dtoa
 10315  0754  3080               	movlw	128
 10316  0755  0243               	subwf	??_dtoa,w
 10317  0756  1D03               	skipz
 10318  0757  2F5A               	goto	u2825
 10319  0758  3001               	movlw	1
 10320  0759  0249               	subwf	dtoa@p,w
 10321  075A                     u2825:
 10322  075A  1803               	skipnc
 10323  075B  2F5D               	goto	u2821
 10324  075C  2F5E               	goto	u2820
 10325  075D                     u2821:
 10326  075D  2ECD               	goto	l4316
 10327  075E                     u2820:
 10328  075E                     l4330:
 10329  075E  0020               	movlb	0	; select bank0
 10330  075F  084C               	movf	dtoa@w+1,w
 10331  0760  3A80               	xorlw	128
 10332  0761  00C3               	movwf	??_dtoa
 10333  0762  3080               	movlw	128
 10334  0763  0243               	subwf	??_dtoa,w
 10335  0764  1D03               	skipz
 10336  0765  2F68               	goto	u2835
 10337  0766  3001               	movlw	1
 10338  0767  024B               	subwf	dtoa@w,w
 10339  0768                     u2835:
 10340  0768  1C03               	skipc
 10341  0769  2F6B               	goto	u2831
 10342  076A  2F6C               	goto	u2830
 10343  076B                     u2831:
 10344  076B  2F70               	goto	l4334
 10345  076C                     u2830:
 10346  076C                     l4332:
 10347  076C  18FC               	btfsc	_flags,1
 10348  076D  2F6F               	goto	u2841
 10349  076E  2F70               	goto	u2840
 10350  076F                     u2841:
 10351  076F  2ECD               	goto	l4316
 10352  0770                     u2840:
 10353  0770                     l4334:
 10354                           
 10355                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 10356  0770  0020               	movlb	0	; select bank0
 10357  0771  084D               	movf	dtoa@s,w
 10358  0772  044E               	iorwf	dtoa@s+1,w
 10359  0773  1D03               	btfss	3,2
 10360  0774  2F76               	goto	u2851
 10361  0775  2F77               	goto	u2850
 10362  0776                     u2851:
 10363  0776  2F7B               	goto	l4338
 10364  0777                     u2850:
 10365  0777                     l4336:
 10366  0777  1D7C               	btfss	_flags,2
 10367  0778  2F7A               	goto	u2861
 10368  0779  2F7B               	goto	u2860
 10369  077A                     u2861:
 10370  077A  2F97               	goto	l4348
 10371  077B                     u2860:
 10372  077B                     l4338:
 10373                           
 10374                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 10375  077B  30FF               	movlw	255
 10376  077C  07D7               	addwf	dtoa@i,f
 10377  077D  30FF               	movlw	255
 10378  077E  3DD8               	addwfc	dtoa@i+1,f
 10379  077F                     l4340:
 10380                           
 10381                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 10382  077F  084D               	movf	dtoa@s,w
 10383  0780  044E               	iorwf	dtoa@s+1,w
 10384  0781  1D03               	btfss	3,2
 10385  0782  2F84               	goto	u2871
 10386  0783  2F85               	goto	u2870
 10387  0784                     u2871:
 10388  0784  2F8A               	goto	l4344
 10389  0785                     u2870:
 10390  0785                     l4342:
 10391  0785  302B               	movlw	43
 10392  0786  00C6               	movwf	_dtoa$2947
 10393  0787  3000               	movlw	0
 10394  0788  00C7               	movwf	_dtoa$2947+1
 10395  0789  2F8E               	goto	l4346
 10396  078A                     l4344:
 10397  078A  302D               	movlw	45
 10398  078B  00C6               	movwf	_dtoa$2947
 10399  078C  3000               	movlw	0
 10400  078D  00C7               	movwf	_dtoa$2947+1
 10401  078E                     l4346:
 10402  078E  0846               	movf	_dtoa$2947,w
 10403  078F  00C3               	movwf	??_dtoa
 10404  0790  0857               	movf	dtoa@i,w
 10405  0791  3E3F               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10406  0792  0086               	movwf	6
 10407  0793  3001               	movlw	1	; select bank2/3
 10408  0794  0087               	movwf	7
 10409  0795  0843               	movf	??_dtoa,w
 10410  0796  0081               	movwf	1
 10411  0797                     l4348:
 10412                           
 10413                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 10414  0797  0857               	movf	dtoa@i,w
 10415  0798  3E3F               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10416  0799  00C3               	movwf	??_dtoa
 10417  079A  0843               	movf	??_dtoa,w
 10418  079B  00B0               	movwf	pad@buf
 10419  079C  084C               	movf	dtoa@w+1,w
 10420  079D  00B2               	movwf	pad@p+1
 10421  079E  084B               	movf	dtoa@w,w
 10422  079F  00B1               	movwf	pad@p
 10423  07A0  0848               	movf	dtoa@fp,w
 10424  07A1  3187  27AA  3186   	fcall	_pad
 10425  07A4  0020               	movlb	0	; select bank0
 10426  07A5  0831               	movf	?_pad+1,w
 10427  07A6  00BC               	movwf	?_dtoa+1
 10428  07A7  0830               	movf	?_pad,w
 10429  07A8  00BB               	movwf	?_dtoa
 10430  07A9                     l2033:
 10431  07A9  0008               	return
 10432  07AA                     __end_of_dtoa:
 10433                           
 10434                           	psect	text6
 10435  07AA                     __ptext6:	
 10436 ;; *************** function _pad *****************
 10437 ;; Defined at:
 10438 ;;		line 72 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 10439 ;; Parameters:    Size  Location     Type
 10440 ;;  fp              1    wreg     PTR struct _IO_FILE
 10441 ;;		 -> sprintf@f(5), 
 10442 ;;  buf             1   16[BANK0 ] PTR unsigned char 
 10443 ;;		 -> dbuf(32), 
 10444 ;;  p               2   17[BANK0 ] int 
 10445 ;; Auto vars:     Size  Location     Type
 10446 ;;  fp              1   24[BANK0 ] PTR struct _IO_FILE
 10447 ;;		 -> sprintf@f(5), 
 10448 ;;  w               2   22[BANK0 ] int 
 10449 ;;  i               2   20[BANK0 ] int 
 10450 ;; Return value:  Size  Location     Type
 10451 ;;                  2   16[BANK0 ] int 
 10452 ;; Registers used:
 10453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10454 ;; Tracked objects:
 10455 ;;		On entry : 0/0
 10456 ;;		On exit  : 0/0
 10457 ;;		Unchanged: 0/0
 10458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10459 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10460 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10461 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10462 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10463 ;;Total ram usage:        9 bytes
 10464 ;; Hardware stack levels used: 1
 10465 ;; Hardware stack levels required when called: 8
 10466 ;; This function calls:
 10467 ;;		_fputc
 10468 ;;		_fputs
 10469 ;;		_strlen
 10470 ;; This function is called by:
 10471 ;;		_dtoa
 10472 ;; This function uses a non-reentrant model
 10473 ;;
 10474                           
 10475                           
 10476                           ;psect for function _pad
 10477  07AA                     _pad:
 10478                           
 10479                           ;incstack = 0
 10480                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10481                           ;pad@fp stored from wreg
 10482  07AA  0020               	movlb	0	; select bank0
 10483  07AB  00B8               	movwf	pad@fp
 10484  07AC                     l4208:
 10485                           
 10486                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 10487  07AC  1C7C               	btfss	_flags,0
 10488  07AD  2FAF               	goto	u2531
 10489  07AE  2FB0               	goto	u2530
 10490  07AF                     u2531:
 10491  07AF  2FB8               	goto	l4212
 10492  07B0                     u2530:
 10493  07B0                     l4210:
 10494                           
 10495                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 10496  07B0  0838               	movf	pad@fp,w
 10497  07B1  00B3               	movwf	??_pad
 10498  07B2  0833               	movf	??_pad,w
 10499  07B3  00A8               	movwf	fputs@fp
 10500  07B4  0830               	movf	pad@buf,w
 10501  07B5  3188  2004  3187   	fcall	_fputs
 10502  07B8                     l4212:
 10503                           
 10504                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 10505  07B8  0020               	movlb	0	; select bank0
 10506  07B9  1BB2               	btfsc	pad@p+1,7
 10507  07BA  2FBC               	goto	u2541
 10508  07BB  2FBD               	goto	u2540
 10509  07BC                     u2541:
 10510  07BC  2FC2               	goto	l4216
 10511  07BD                     u2540:
 10512  07BD                     l4214:
 10513  07BD  0832               	movf	pad@p+1,w
 10514  07BE  00B7               	movwf	pad@w+1
 10515  07BF  0831               	movf	pad@p,w
 10516  07C0  00B6               	movwf	pad@w
 10517  07C1  2FC4               	goto	l2002
 10518  07C2                     l4216:
 10519  07C2  01B6               	clrf	pad@w
 10520  07C3  01B7               	clrf	pad@w+1
 10521  07C4                     l2002:
 10522                           
 10523                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 10524  07C4  01B4               	clrf	pad@i
 10525  07C5  01B5               	clrf	pad@i+1
 10526                           
 10527                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 10528  07C6  2FD8               	goto	l4222
 10529  07C7                     l4218:
 10530                           
 10531                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 10532  07C7  3020               	movlw	32
 10533  07C8  0020               	movlb	0	; select bank0
 10534  07C9  00A0               	movwf	fputc@c
 10535  07CA  3000               	movlw	0
 10536  07CB  00A1               	movwf	fputc@c+1
 10537  07CC  0838               	movf	pad@fp,w
 10538  07CD  00B3               	movwf	??_pad
 10539  07CE  0833               	movf	??_pad,w
 10540  07CF  00A2               	movwf	fputc@fp
 10541  07D0  3197  275C  3187   	fcall	_fputc
 10542  07D3                     l4220:
 10543                           
 10544                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 10545  07D3  3001               	movlw	1
 10546  07D4  0020               	movlb	0	; select bank0
 10547  07D5  07B4               	addwf	pad@i,f
 10548  07D6  3000               	movlw	0
 10549  07D7  3DB5               	addwfc	pad@i+1,f
 10550  07D8                     l4222:
 10551                           
 10552                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 10553  07D8  0835               	movf	pad@i+1,w
 10554  07D9  3A80               	xorlw	128
 10555  07DA  00B3               	movwf	??_pad
 10556  07DB  0837               	movf	pad@w+1,w
 10557  07DC  3A80               	xorlw	128
 10558  07DD  0233               	subwf	??_pad,w
 10559  07DE  1D03               	skipz
 10560  07DF  2FE2               	goto	u2555
 10561  07E0  0836               	movf	pad@w,w
 10562  07E1  0234               	subwf	pad@i,w
 10563  07E2                     u2555:
 10564  07E2  1C03               	skipc
 10565  07E3  2FE5               	goto	u2551
 10566  07E4  2FE6               	goto	u2550
 10567  07E5                     u2551:
 10568  07E5  2FC7               	goto	l4218
 10569  07E6                     u2550:
 10570  07E6                     l2005:
 10571                           
 10572                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 10573  07E6  187C               	btfsc	_flags,0
 10574  07E7  2FE9               	goto	u2561
 10575  07E8  2FEA               	goto	u2560
 10576  07E9                     u2561:
 10577  07E9  2FF3               	goto	l4226
 10578  07EA                     u2560:
 10579  07EA                     l4224:
 10580                           
 10581                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 10582  07EA  0020               	movlb	0	; select bank0
 10583  07EB  0838               	movf	pad@fp,w
 10584  07EC  00B3               	movwf	??_pad
 10585  07ED  0833               	movf	??_pad,w
 10586  07EE  00A8               	movwf	fputs@fp
 10587  07EF  0830               	movf	pad@buf,w
 10588  07F0  3188  2004  3187   	fcall	_fputs
 10589  07F3                     l4226:
 10590                           
 10591                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 10592  07F3  0020               	movlb	0	; select bank0
 10593  07F4  0830               	movf	pad@buf,w
 10594  07F5  3195  2522  3187   	fcall	_strlen
 10595  07F8  0020               	movlb	0	; select bank0
 10596  07F9  0836               	movf	pad@w,w
 10597  07FA  0720               	addwf	?_strlen,w
 10598  07FB  00B0               	movwf	?_pad
 10599  07FC  0837               	movf	pad@w+1,w
 10600  07FD  3D21               	addwfc	?_strlen+1,w
 10601  07FE  00B1               	movwf	?_pad+1
 10602  07FF                     l2007:
 10603  07FF  0008               	return
 10604  0800                     __end_of_pad:
 10605                           
 10606                           	psect	text7
 10607  1522                     __ptext7:	
 10608 ;; *************** function _strlen *****************
 10609 ;; Defined at:
 10610 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 10611 ;; Parameters:    Size  Location     Type
 10612 ;;  s               1    wreg     PTR const unsigned char 
 10613 ;;		 -> dbuf(32), 
 10614 ;; Auto vars:     Size  Location     Type
 10615 ;;  s               1    4[BANK0 ] PTR const unsigned char 
 10616 ;;		 -> dbuf(32), 
 10617 ;;  a               1    3[BANK0 ] PTR const unsigned char 
 10618 ;;		 -> dbuf(32), 
 10619 ;; Return value:  Size  Location     Type
 10620 ;;                  2    0[BANK0 ] unsigned int 
 10621 ;; Registers used:
 10622 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10623 ;; Tracked objects:
 10624 ;;		On entry : 0/0
 10625 ;;		On exit  : 0/0
 10626 ;;		Unchanged: 0/0
 10627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10628 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10629 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10630 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10631 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10632 ;;Total ram usage:        5 bytes
 10633 ;; Hardware stack levels used: 1
 10634 ;; Hardware stack levels required when called: 5
 10635 ;; This function calls:
 10636 ;;		Nothing
 10637 ;; This function is called by:
 10638 ;;		_pad
 10639 ;; This function uses a non-reentrant model
 10640 ;;
 10641                           
 10642                           
 10643                           ;psect for function _strlen
 10644  1522                     _strlen:
 10645                           
 10646                           ;incstack = 0
 10647                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 10648                           ;strlen@s stored from wreg
 10649  1522  0020               	movlb	0	; select bank0
 10650  1523  00A4               	movwf	strlen@s
 10651  1524                     l4116:
 10652  1524  0824               	movf	strlen@s,w
 10653  1525  00A2               	movwf	??_strlen
 10654  1526  0822               	movf	??_strlen,w
 10655  1527  00A3               	movwf	strlen@a
 10656  1528  2D2D               	goto	l4120
 10657  1529                     l4118:
 10658  1529  3001               	movlw	1
 10659  152A  00A2               	movwf	??_strlen
 10660  152B  0822               	movf	??_strlen,w
 10661  152C  07A4               	addwf	strlen@s,f
 10662  152D                     l4120:
 10663  152D  0824               	movf	strlen@s,w
 10664  152E  0086               	movwf	6
 10665  152F  3001               	movlw	1	; select bank2/3
 10666  1530  0087               	movwf	7
 10667  1531  0801               	movf	1,w
 10668  1532  1D03               	btfss	3,2
 10669  1533  2D35               	goto	u2271
 10670  1534  2D36               	goto	u2270
 10671  1535                     u2271:
 10672  1535  2D29               	goto	l4118
 10673  1536                     u2270:
 10674  1536                     l4122:
 10675  1536  0823               	movf	strlen@a,w
 10676  1537  0224               	subwf	strlen@s,w
 10677  1538  00A0               	movwf	?_strlen
 10678  1539  01A1               	clrf	?_strlen+1
 10679  153A  1BA0               	btfsc	?_strlen,7
 10680  153B  03A1               	decf	?_strlen+1,f
 10681  153C                     l2150:
 10682  153C  0008               	return
 10683  153D                     __end_of_strlen:
 10684                           
 10685                           	psect	text8
 10686  0804                     __ptext8:	
 10687 ;; *************** function _fputs *****************
 10688 ;; Defined at:
 10689 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 10690 ;; Parameters:    Size  Location     Type
 10691 ;;  s               1    wreg     PTR const unsigned char 
 10692 ;;		 -> dbuf(32), 
 10693 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
 10694 ;;		 -> sprintf@f(5), 
 10695 ;; Auto vars:     Size  Location     Type
 10696 ;;  s               1   15[BANK0 ] PTR const unsigned char 
 10697 ;;		 -> dbuf(32), 
 10698 ;;  i               2   13[BANK0 ] int 
 10699 ;;  c               1   12[BANK0 ] unsigned char 
 10700 ;; Return value:  Size  Location     Type
 10701 ;;                  2    8[BANK0 ] int 
 10702 ;; Registers used:
 10703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10704 ;; Tracked objects:
 10705 ;;		On entry : 0/0
 10706 ;;		On exit  : 0/0
 10707 ;;		Unchanged: 0/0
 10708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10709 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10710 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10711 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10712 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10713 ;;Total ram usage:        8 bytes
 10714 ;; Hardware stack levels used: 1
 10715 ;; Hardware stack levels required when called: 7
 10716 ;; This function calls:
 10717 ;;		_fputc
 10718 ;; This function is called by:
 10719 ;;		_pad
 10720 ;; This function uses a non-reentrant model
 10721 ;;
 10722                           
 10723                           
 10724                           ;psect for function _fputs
 10725  0804                     _fputs:
 10726                           
 10727                           ;incstack = 0
 10728                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10729                           ;fputs@s stored from wreg
 10730  0804  0020               	movlb	0	; select bank0
 10731  0805  00AF               	movwf	fputs@s
 10732  0806                     l4108:
 10733  0806  01AD               	clrf	fputs@i
 10734  0807  01AE               	clrf	fputs@i+1
 10735  0808  281C               	goto	l4114
 10736  0809                     l4110:
 10737  0809  082C               	movf	fputs@c,w
 10738  080A  00A9               	movwf	??_fputs
 10739  080B  01AA               	clrf	??_fputs+1
 10740  080C  0829               	movf	??_fputs,w
 10741  080D  00A0               	movwf	fputc@c
 10742  080E  082A               	movf	??_fputs+1,w
 10743  080F  00A1               	movwf	fputc@c+1
 10744  0810  0828               	movf	fputs@fp,w
 10745  0811  00AB               	movwf	??_fputs+2
 10746  0812  082B               	movf	??_fputs+2,w
 10747  0813  00A2               	movwf	fputc@fp
 10748  0814  3197  275C  3188   	fcall	_fputc
 10749  0817                     l4112:
 10750  0817  3001               	movlw	1
 10751  0818  0020               	movlb	0	; select bank0
 10752  0819  07AD               	addwf	fputs@i,f
 10753  081A  3000               	movlw	0
 10754  081B  3DAE               	addwfc	fputs@i+1,f
 10755  081C                     l4114:
 10756  081C  082D               	movf	fputs@i,w
 10757  081D  072F               	addwf	fputs@s,w
 10758  081E  00A9               	movwf	??_fputs
 10759  081F  0829               	movf	??_fputs,w
 10760  0820  0086               	movwf	6
 10761  0821  3001               	movlw	1	; select bank2/3
 10762  0822  0087               	movwf	7
 10763  0823  0801               	movf	1,w
 10764  0824  00AA               	movwf	??_fputs+1
 10765  0825  082A               	movf	??_fputs+1,w
 10766  0826  00AC               	movwf	fputs@c
 10767  0827  082C               	movf	fputs@c,w
 10768  0828  1D03               	btfss	3,2
 10769  0829  282B               	goto	u2261
 10770  082A  282C               	goto	u2260
 10771  082B                     u2261:
 10772  082B  2809               	goto	l4110
 10773  082C                     u2260:
 10774  082C                     l2141:
 10775  082C  0008               	return
 10776  082D                     __end_of_fputs:
 10777                           
 10778                           	psect	text9
 10779  175C                     __ptext9:	
 10780 ;; *************** function _fputc *****************
 10781 ;; Defined at:
 10782 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 10783 ;; Parameters:    Size  Location     Type
 10784 ;;  c               2    0[BANK0 ] int 
 10785 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
 10786 ;;		 -> sprintf@f(5), 
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;		None
 10789 ;; Return value:  Size  Location     Type
 10790 ;;                  2    0[BANK0 ] int 
 10791 ;; Registers used:
 10792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10793 ;; Tracked objects:
 10794 ;;		On entry : 0/0
 10795 ;;		On exit  : 0/0
 10796 ;;		Unchanged: 0/0
 10797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10798 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10800 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10801 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10802 ;;Total ram usage:        8 bytes
 10803 ;; Hardware stack levels used: 1
 10804 ;; Hardware stack levels required when called: 6
 10805 ;; This function calls:
 10806 ;;		_putch
 10807 ;; This function is called by:
 10808 ;;		_pad
 10809 ;;		_vfpfcnvrt
 10810 ;;		_fputs
 10811 ;; This function uses a non-reentrant model
 10812 ;;
 10813                           
 10814                           
 10815                           ;psect for function _fputc
 10816  175C                     _fputc:
 10817  175C                     l4092:	
 10818                           ;incstack = 0
 10819                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10820                           
 10821  175C  0020               	movlb	0	; select bank0
 10822  175D  0822               	movf	fputc@fp,w
 10823  175E  1903               	btfsc	3,2
 10824  175F  2F61               	goto	u2221
 10825  1760  2F62               	goto	u2220
 10826  1761                     u2221:
 10827  1761  2F67               	goto	l4096
 10828  1762                     u2220:
 10829  1762                     l4094:
 10830  1762  0822               	movf	fputc@fp,w
 10831  1763  1D03               	btfss	3,2
 10832  1764  2F66               	goto	u2231
 10833  1765  2F67               	goto	u2230
 10834  1766                     u2231:
 10835  1766  2F6C               	goto	l4098
 10836  1767                     u2230:
 10837  1767                     l4096:
 10838  1767  0820               	movf	fputc@c,w
 10839  1768  3180  2003  3197   	fcall	_putch
 10840  176B  2FAC               	goto	l2133
 10841  176C                     l4098:
 10842  176C  0822               	movf	fputc@fp,w
 10843  176D  3E03               	addlw	3
 10844  176E  0086               	movwf	6
 10845  176F  0187               	clrf	7
 10846  1770  0016               	moviw fsr1++
 10847  1771  0401               	iorwf	1,w
 10848  1772  1903               	btfsc	3,2
 10849  1773  2F75               	goto	u2241
 10850  1774  2F76               	goto	u2240
 10851  1775                     u2241:
 10852  1775  2F93               	goto	l4102
 10853  1776                     u2240:
 10854  1776                     l4100:
 10855  1776  0822               	movf	fputc@fp,w
 10856  1777  3E03               	addlw	3
 10857  1778  0086               	movwf	6
 10858  1779  0187               	clrf	7
 10859  177A  3F40               	moviw [0]fsr1
 10860  177B  00A3               	movwf	??_fputc
 10861  177C  3F41               	moviw [1]fsr1
 10862  177D  00A4               	movwf	??_fputc+1
 10863  177E  0A22               	incf	fputc@fp,w
 10864  177F  0086               	movwf	6
 10865  1780  0187               	clrf	7
 10866  1781  3F40               	moviw [0]fsr1
 10867  1782  00A5               	movwf	??_fputc+2
 10868  1783  3F41               	moviw [1]fsr1
 10869  1784  00A6               	movwf	??_fputc+3
 10870  1785  0826               	movf	??_fputc+3,w
 10871  1786  3A80               	xorlw	128
 10872  1787  00A7               	movwf	??_fputc+4
 10873  1788  0824               	movf	??_fputc+1,w
 10874  1789  3A80               	xorlw	128
 10875  178A  0227               	subwf	??_fputc+4,w
 10876  178B  1D03               	skipz
 10877  178C  2F8F               	goto	u2255
 10878  178D  0823               	movf	??_fputc,w
 10879  178E  0225               	subwf	??_fputc+2,w
 10880  178F                     u2255:
 10881  178F  1803               	skipnc
 10882  1790  2F92               	goto	u2251
 10883  1791  2F93               	goto	u2250
 10884  1792                     u2251:
 10885  1792  2FAC               	goto	l2133
 10886  1793                     u2250:
 10887  1793                     l4102:
 10888  1793  0020               	movlb	0	; select bank0
 10889  1794  0820               	movf	fputc@c,w
 10890  1795  00A3               	movwf	??_fputc
 10891  1796  0822               	movf	fputc@fp,w
 10892  1797  0086               	movwf	6
 10893  1798  0187               	clrf	7
 10894  1799  0A22               	incf	fputc@fp,w
 10895  179A  0084               	movwf	4
 10896  179B  0185               	clrf	5
 10897  179C  0800               	movf	0,w
 10898  179D  0701               	addwf	1,w
 10899  179E  00A4               	movwf	??_fputc+1
 10900  179F  0824               	movf	??_fputc+1,w
 10901  17A0  0086               	movwf	6
 10902  17A1  0187               	clrf	7
 10903  17A2  0823               	movf	??_fputc,w
 10904  17A3  0081               	movwf	1
 10905  17A4                     l4104:
 10906  17A4  0A22               	incf	fputc@fp,w
 10907  17A5  0086               	movwf	6
 10908  17A6  0187               	clrf	7
 10909  17A7  3001               	movlw	1
 10910  17A8  0781               	addwf	1,f
 10911  17A9  3141               	addfsr 1,1
 10912  17AA  1803               	skipnc
 10913  17AB  0A81               	incf	1,f
 10914  17AC                     l2133:
 10915  17AC  0008               	return
 10916  17AD                     __end_of_fputc:
 10917                           
 10918                           	psect	text10
 10919  0003                     __ptext10:	
 10920 ;; *************** function _putch *****************
 10921 ;; Defined at:
 10922 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
 10923 ;; Parameters:    Size  Location     Type
 10924 ;;  c               1    wreg     unsigned char 
 10925 ;; Auto vars:     Size  Location     Type
 10926 ;;  c               1    0[COMMON] unsigned char 
 10927 ;; Return value:  Size  Location     Type
 10928 ;;                  1    wreg      void 
 10929 ;; Registers used:
 10930 ;;		wreg
 10931 ;; Tracked objects:
 10932 ;;		On entry : 0/0
 10933 ;;		On exit  : 0/0
 10934 ;;		Unchanged: 0/0
 10935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10940 ;;Total ram usage:        0 bytes
 10941 ;; Hardware stack levels used: 1
 10942 ;; Hardware stack levels required when called: 5
 10943 ;; This function calls:
 10944 ;;		Nothing
 10945 ;; This function is called by:
 10946 ;;		_fputc
 10947 ;; This function uses a non-reentrant model
 10948 ;;
 10949                           
 10950                           
 10951                           ;psect for function _putch
 10952  0003                     _putch:
 10953  0003                     l2144:	
 10954                           ;incstack = 0
 10955                           ; Regs used in _putch: [wreg]
 10956                           
 10957  0003  0008               	return
 10958  0004                     __end_of_putch:
 10959                           
 10960                           	psect	text11
 10961  1559                     __ptext11:	
 10962 ;; *************** function _abs *****************
 10963 ;; Defined at:
 10964 ;;		line 1 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 10965 ;; Parameters:    Size  Location     Type
 10966 ;;  a               2   19[BANK0 ] int 
 10967 ;; Auto vars:     Size  Location     Type
 10968 ;;		None
 10969 ;; Return value:  Size  Location     Type
 10970 ;;                  2   19[BANK0 ] int 
 10971 ;; Registers used:
 10972 ;;		wreg, status,2, status,0
 10973 ;; Tracked objects:
 10974 ;;		On entry : 0/0
 10975 ;;		On exit  : 0/0
 10976 ;;		Unchanged: 0/0
 10977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10978 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10980 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10981 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10982 ;;Total ram usage:        4 bytes
 10983 ;; Hardware stack levels used: 1
 10984 ;; Hardware stack levels required when called: 5
 10985 ;; This function calls:
 10986 ;;		Nothing
 10987 ;; This function is called by:
 10988 ;;		_dtoa
 10989 ;; This function uses a non-reentrant model
 10990 ;;
 10991                           
 10992                           
 10993                           ;psect for function _abs
 10994  1559                     _abs:
 10995  1559                     l4230:	
 10996                           ;incstack = 0
 10997                           ; Regs used in _abs: [wreg+status,2+status,0]
 10998                           
 10999  1559  0020               	movlb	0	; select bank0
 11000  155A  0834               	movf	abs@a+1,w
 11001  155B  3A80               	xorlw	128
 11002  155C  00B5               	movwf	??_abs
 11003  155D  3080               	movlw	128
 11004  155E  0235               	subwf	??_abs,w
 11005  155F  1D03               	skipz
 11006  1560  2D63               	goto	u2575
 11007  1561  3001               	movlw	1
 11008  1562  0233               	subwf	abs@a,w
 11009  1563                     u2575:
 11010  1563  1803               	skipnc
 11011  1564  2D66               	goto	u2571
 11012  1565  2D67               	goto	u2570
 11013  1566                     u2571:
 11014  1566  2D74               	goto	l2073
 11015  1567                     u2570:
 11016  1567                     l4232:
 11017  1567  0020               	movlb	0	; select bank0
 11018  1568  0933               	comf	abs@a,w
 11019  1569  00B5               	movwf	??_abs
 11020  156A  0934               	comf	abs@a+1,w
 11021  156B  00B6               	movwf	??_abs+1
 11022  156C  0AB5               	incf	??_abs,f
 11023  156D  1903               	skipnz
 11024  156E  0AB6               	incf	??_abs+1,f
 11025  156F  0835               	movf	??_abs,w
 11026  1570  00B3               	movwf	?_abs
 11027  1571  0836               	movf	??_abs+1,w
 11028  1572  00B4               	movwf	?_abs+1
 11029  1573  2D74               	goto	l2076
 11030  1574                     l2073:
 11031  1574                     l2076:
 11032  1574  0008               	return
 11033  1575                     __end_of_abs:
 11034                           
 11035                           	psect	text12
 11036  0CBE                     __ptext12:	
 11037 ;; *************** function ___aomod *****************
 11038 ;; Defined at:
 11039 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 11040 ;; Parameters:    Size  Location     Type
 11041 ;;  divisor         8    0[BANK0 ] long long 
 11042 ;;  dividend        8    8[BANK0 ] long long 
 11043 ;; Auto vars:     Size  Location     Type
 11044 ;;  sign            1   18[BANK0 ] unsigned char 
 11045 ;;  counter         1   17[BANK0 ] unsigned char 
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  8    0[BANK0 ] long long 
 11048 ;; Registers used:
 11049 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/0
 11052 ;;		On exit  : 0/0
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11055 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11056 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11057 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11058 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;Total ram usage:       19 bytes
 11060 ;; Hardware stack levels used: 1
 11061 ;; Hardware stack levels required when called: 5
 11062 ;; This function calls:
 11063 ;;		Nothing
 11064 ;; This function is called by:
 11065 ;;		_dtoa
 11066 ;; This function uses a non-reentrant model
 11067 ;;
 11068                           
 11069                           
 11070                           ;psect for function ___aomod
 11071  0CBE                     ___aomod:
 11072  0CBE                     l4178:	
 11073                           ;incstack = 0
 11074                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 11075                           
 11076  0CBE  0020               	movlb	0	; select bank0
 11077  0CBF  01B2               	clrf	___aomod@sign
 11078  0CC0                     l4180:
 11079  0CC0  3028               	movlw	low ___aomod@dividend
 11080  0CC1  0086               	movwf	6
 11081  0CC2  3000               	movlw	high ___aomod@dividend
 11082  0CC3  0087               	movwf	7
 11083  0CC4  3F47               	moviw [7]fsr1
 11084  0CC5  00B0               	movwf	??___aomod
 11085  0CC6  1FB0               	btfss	??___aomod,7
 11086  0CC7  2CC9               	goto	u2431
 11087  0CC8  2CCA               	goto	u2430
 11088  0CC9                     u2431:
 11089  0CC9  2CEC               	goto	l4184
 11090  0CCA                     u2430:
 11091  0CCA                     l4182:
 11092  0CCA  0020               	movlb	0	; select bank0
 11093  0CCB  09A8               	comf	___aomod@dividend,f
 11094  0CCC  09A9               	comf	___aomod@dividend+1,f
 11095  0CCD  09AA               	comf	___aomod@dividend+2,f
 11096  0CCE  09AB               	comf	___aomod@dividend+3,f
 11097  0CCF  09AC               	comf	___aomod@dividend+4,f
 11098  0CD0  09AD               	comf	___aomod@dividend+5,f
 11099  0CD1  09AE               	comf	___aomod@dividend+6,f
 11100  0CD2  09AF               	comf	___aomod@dividend+7,f
 11101  0CD3  0AA8               	incf	___aomod@dividend,f
 11102  0CD4  1D03               	skipz
 11103  0CD5  2CE9               	goto	u244lld
 11104  0CD6  0AA9               	incf	___aomod@dividend+1,f
 11105  0CD7  1D03               	skipz
 11106  0CD8  2CE9               	goto	u244lld
 11107  0CD9  0AAA               	incf	___aomod@dividend+2,f
 11108  0CDA  1D03               	skipz
 11109  0CDB  2CE9               	goto	u244lld
 11110  0CDC  0AAB               	incf	___aomod@dividend+3,f
 11111  0CDD  1D03               	skipz
 11112  0CDE  2CE9               	goto	u244lld
 11113  0CDF  0AAC               	incf	___aomod@dividend+4,f
 11114  0CE0  1D03               	skipz
 11115  0CE1  2CE9               	goto	u244lld
 11116  0CE2  0AAD               	incf	___aomod@dividend+5,f
 11117  0CE3  1D03               	skipz
 11118  0CE4  2CE9               	goto	u244lld
 11119  0CE5  0AAE               	incf	___aomod@dividend+6,f
 11120  0CE6  1D03               	skipz
 11121  0CE7  2CE9               	goto	u244lld
 11122  0CE8  0AAF               	incf	___aomod@dividend+7,f
 11123  0CE9                     u244lld:
 11124  0CE9  0020               	movlb	0	; select bank0
 11125  0CEA  01B2               	clrf	___aomod@sign
 11126  0CEB  0AB2               	incf	___aomod@sign,f
 11127  0CEC                     l4184:
 11128  0CEC  3020               	movlw	low ___aomod@divisor
 11129  0CED  0086               	movwf	6
 11130  0CEE  3000               	movlw	high ___aomod@divisor
 11131  0CEF  0087               	movwf	7
 11132  0CF0  3F47               	moviw [7]fsr1
 11133  0CF1  0020               	movlb	0	; select bank0
 11134  0CF2  00B0               	movwf	??___aomod
 11135  0CF3  1FB0               	btfss	??___aomod,7
 11136  0CF4  2CF6               	goto	u2451
 11137  0CF5  2CF7               	goto	u2450
 11138  0CF6                     u2451:
 11139  0CF6  2D16               	goto	l4188
 11140  0CF7                     u2450:
 11141  0CF7                     l4186:
 11142  0CF7  0020               	movlb	0	; select bank0
 11143  0CF8  09A0               	comf	___aomod@divisor,f
 11144  0CF9  09A1               	comf	___aomod@divisor+1,f
 11145  0CFA  09A2               	comf	___aomod@divisor+2,f
 11146  0CFB  09A3               	comf	___aomod@divisor+3,f
 11147  0CFC  09A4               	comf	___aomod@divisor+4,f
 11148  0CFD  09A5               	comf	___aomod@divisor+5,f
 11149  0CFE  09A6               	comf	___aomod@divisor+6,f
 11150  0CFF  09A7               	comf	___aomod@divisor+7,f
 11151  0D00  0AA0               	incf	___aomod@divisor,f
 11152  0D01  1D03               	skipz
 11153  0D02  2D16               	goto	u246lld
 11154  0D03  0AA1               	incf	___aomod@divisor+1,f
 11155  0D04  1D03               	skipz
 11156  0D05  2D16               	goto	u246lld
 11157  0D06  0AA2               	incf	___aomod@divisor+2,f
 11158  0D07  1D03               	skipz
 11159  0D08  2D16               	goto	u246lld
 11160  0D09  0AA3               	incf	___aomod@divisor+3,f
 11161  0D0A  1D03               	skipz
 11162  0D0B  2D16               	goto	u246lld
 11163  0D0C  0AA4               	incf	___aomod@divisor+4,f
 11164  0D0D  1D03               	skipz
 11165  0D0E  2D16               	goto	u246lld
 11166  0D0F  0AA5               	incf	___aomod@divisor+5,f
 11167  0D10  1D03               	skipz
 11168  0D11  2D16               	goto	u246lld
 11169  0D12  0AA6               	incf	___aomod@divisor+6,f
 11170  0D13  1D03               	skipz
 11171  0D14  2D16               	goto	u246lld
 11172  0D15  0AA7               	incf	___aomod@divisor+7,f
 11173  0D16                     u246lld:
 11174  0D16                     l4188:
 11175  0D16  0020               	movlb	0	; select bank0
 11176  0D17  0820               	movf	___aomod@divisor,w
 11177  0D18  0421               	iorwf	___aomod@divisor+1,w
 11178  0D19  0422               	iorwf	___aomod@divisor+2,w
 11179  0D1A  0423               	iorwf	___aomod@divisor+3,w
 11180  0D1B  0424               	iorwf	___aomod@divisor+4,w
 11181  0D1C  0425               	iorwf	___aomod@divisor+5,w
 11182  0D1D  0426               	iorwf	___aomod@divisor+6,w
 11183  0D1E  0427               	iorwf	___aomod@divisor+7,w
 11184  0D1F  1903               	skipnz
 11185  0D20  2D22               	goto	u2471
 11186  0D21  2D23               	goto	u2470
 11187  0D22                     u2471:
 11188  0D22  2D76               	goto	l4204
 11189  0D23                     u2470:
 11190  0D23                     l4190:
 11191  0D23  01B1               	clrf	___aomod@counter
 11192  0D24  0AB1               	incf	___aomod@counter,f
 11193  0D25  2D32               	goto	l4196
 11194  0D26                     l4192:
 11195  0D26  35A0               	lslf	___aomod@divisor,f
 11196  0D27  0DA1               	rlf	___aomod@divisor+1,f
 11197  0D28  0DA2               	rlf	___aomod@divisor+2,f
 11198  0D29  0DA3               	rlf	___aomod@divisor+3,f
 11199  0D2A  0DA4               	rlf	___aomod@divisor+4,f
 11200  0D2B  0DA5               	rlf	___aomod@divisor+5,f
 11201  0D2C  0DA6               	rlf	___aomod@divisor+6,f
 11202  0D2D  0DA7               	rlf	___aomod@divisor+7,f
 11203  0D2E                     l4194:
 11204  0D2E  3001               	movlw	1
 11205  0D2F  00B0               	movwf	??___aomod
 11206  0D30  0830               	movf	??___aomod,w
 11207  0D31  07B1               	addwf	___aomod@counter,f
 11208  0D32                     l4196:
 11209  0D32  1FA7               	btfss	___aomod@divisor+7,7
 11210  0D33  2D35               	goto	u2481
 11211  0D34  2D36               	goto	u2480
 11212  0D35                     u2481:
 11213  0D35  2D26               	goto	l4192
 11214  0D36                     u2480:
 11215  0D36                     l4198:
 11216  0D36  0827               	movf	___aomod@divisor+7,w
 11217  0D37  022F               	subwf	___aomod@dividend+7,w
 11218  0D38  1D03               	skipz
 11219  0D39  2D54               	goto	u2495
 11220  0D3A  0826               	movf	___aomod@divisor+6,w
 11221  0D3B  022E               	subwf	___aomod@dividend+6,w
 11222  0D3C  1D03               	skipz
 11223  0D3D  2D54               	goto	u2495
 11224  0D3E  0825               	movf	___aomod@divisor+5,w
 11225  0D3F  022D               	subwf	___aomod@dividend+5,w
 11226  0D40  1D03               	skipz
 11227  0D41  2D54               	goto	u2495
 11228  0D42  0824               	movf	___aomod@divisor+4,w
 11229  0D43  022C               	subwf	___aomod@dividend+4,w
 11230  0D44  1D03               	skipz
 11231  0D45  2D54               	goto	u2495
 11232  0D46  0823               	movf	___aomod@divisor+3,w
 11233  0D47  022B               	subwf	___aomod@dividend+3,w
 11234  0D48  1D03               	skipz
 11235  0D49  2D54               	goto	u2495
 11236  0D4A  0822               	movf	___aomod@divisor+2,w
 11237  0D4B  022A               	subwf	___aomod@dividend+2,w
 11238  0D4C  1D03               	skipz
 11239  0D4D  2D54               	goto	u2495
 11240  0D4E  0821               	movf	___aomod@divisor+1,w
 11241  0D4F  0229               	subwf	___aomod@dividend+1,w
 11242  0D50  1D03               	skipz
 11243  0D51  2D54               	goto	u2495
 11244  0D52  0820               	movf	___aomod@divisor,w
 11245  0D53  0228               	subwf	___aomod@dividend,w
 11246  0D54                     u2495:
 11247  0D54  1C03               	skipc
 11248  0D55  2D57               	goto	u2491
 11249  0D56  2D58               	goto	u2490
 11250  0D57                     u2491:
 11251  0D57  2D68               	goto	l4202
 11252  0D58                     u2490:
 11253  0D58                     l4200:
 11254  0D58  0820               	movf	___aomod@divisor,w
 11255  0D59  02A8               	subwf	___aomod@dividend,f
 11256  0D5A  0821               	movf	___aomod@divisor+1,w
 11257  0D5B  3BA9               	subwfb	___aomod@dividend+1,f
 11258  0D5C  0822               	movf	___aomod@divisor+2,w
 11259  0D5D  3BAA               	subwfb	___aomod@dividend+2,f
 11260  0D5E  0823               	movf	___aomod@divisor+3,w
 11261  0D5F  3BAB               	subwfb	___aomod@dividend+3,f
 11262  0D60  0824               	movf	___aomod@divisor+4,w
 11263  0D61  3BAC               	subwfb	___aomod@dividend+4,f
 11264  0D62  0825               	movf	___aomod@divisor+5,w
 11265  0D63  3BAD               	subwfb	___aomod@dividend+5,f
 11266  0D64  0826               	movf	___aomod@divisor+6,w
 11267  0D65  3BAE               	subwfb	___aomod@dividend+6,f
 11268  0D66  0827               	movf	___aomod@divisor+7,w
 11269  0D67  3BAF               	subwfb	___aomod@dividend+7,f
 11270  0D68                     l4202:
 11271  0D68  36A7               	lsrf	___aomod@divisor+7,f
 11272  0D69  0CA6               	rrf	___aomod@divisor+6,f
 11273  0D6A  0CA5               	rrf	___aomod@divisor+5,f
 11274  0D6B  0CA4               	rrf	___aomod@divisor+4,f
 11275  0D6C  0CA3               	rrf	___aomod@divisor+3,f
 11276  0D6D  0CA2               	rrf	___aomod@divisor+2,f
 11277  0D6E  0CA1               	rrf	___aomod@divisor+1,f
 11278  0D6F  0CA0               	rrf	___aomod@divisor,f
 11279  0D70  3001               	movlw	1
 11280  0D71  02B1               	subwf	___aomod@counter,f
 11281  0D72  1D03               	btfss	3,2
 11282  0D73  2D75               	goto	u2501
 11283  0D74  2D76               	goto	u2500
 11284  0D75                     u2501:
 11285  0D75  2D36               	goto	l4198
 11286  0D76                     u2500:
 11287  0D76                     l4204:
 11288  0D76  0832               	movf	___aomod@sign,w
 11289  0D77  1903               	btfsc	3,2
 11290  0D78  2D7A               	goto	u2511
 11291  0D79  2D7B               	goto	u2510
 11292  0D7A                     u2511:
 11293  0D7A  2D99               	goto	l1621
 11294  0D7B                     u2510:
 11295  0D7B                     l4206:
 11296  0D7B  09A8               	comf	___aomod@dividend,f
 11297  0D7C  09A9               	comf	___aomod@dividend+1,f
 11298  0D7D  09AA               	comf	___aomod@dividend+2,f
 11299  0D7E  09AB               	comf	___aomod@dividend+3,f
 11300  0D7F  09AC               	comf	___aomod@dividend+4,f
 11301  0D80  09AD               	comf	___aomod@dividend+5,f
 11302  0D81  09AE               	comf	___aomod@dividend+6,f
 11303  0D82  09AF               	comf	___aomod@dividend+7,f
 11304  0D83  0AA8               	incf	___aomod@dividend,f
 11305  0D84  1D03               	skipz
 11306  0D85  2D99               	goto	u252lld
 11307  0D86  0AA9               	incf	___aomod@dividend+1,f
 11308  0D87  1D03               	skipz
 11309  0D88  2D99               	goto	u252lld
 11310  0D89  0AAA               	incf	___aomod@dividend+2,f
 11311  0D8A  1D03               	skipz
 11312  0D8B  2D99               	goto	u252lld
 11313  0D8C  0AAB               	incf	___aomod@dividend+3,f
 11314  0D8D  1D03               	skipz
 11315  0D8E  2D99               	goto	u252lld
 11316  0D8F  0AAC               	incf	___aomod@dividend+4,f
 11317  0D90  1D03               	skipz
 11318  0D91  2D99               	goto	u252lld
 11319  0D92  0AAD               	incf	___aomod@dividend+5,f
 11320  0D93  1D03               	skipz
 11321  0D94  2D99               	goto	u252lld
 11322  0D95  0AAE               	incf	___aomod@dividend+6,f
 11323  0D96  1D03               	skipz
 11324  0D97  2D99               	goto	u252lld
 11325  0D98  0AAF               	incf	___aomod@dividend+7,f
 11326  0D99                     u252lld:
 11327  0D99                     l1621:
 11328  0D99  0020               	movlb	0	; select bank0
 11329  0D9A  0828               	movf	___aomod@dividend,w
 11330  0D9B  00A0               	movwf	?___aomod
 11331  0D9C  0829               	movf	___aomod@dividend+1,w
 11332  0D9D  00A1               	movwf	?___aomod+1
 11333  0D9E  082A               	movf	___aomod@dividend+2,w
 11334  0D9F  00A2               	movwf	?___aomod+2
 11335  0DA0  082B               	movf	___aomod@dividend+3,w
 11336  0DA1  00A3               	movwf	?___aomod+3
 11337  0DA2  082C               	movf	___aomod@dividend+4,w
 11338  0DA3  00A4               	movwf	?___aomod+4
 11339  0DA4  082D               	movf	___aomod@dividend+5,w
 11340  0DA5  00A5               	movwf	?___aomod+5
 11341  0DA6  082E               	movf	___aomod@dividend+6,w
 11342  0DA7  00A6               	movwf	?___aomod+6
 11343  0DA8  082F               	movf	___aomod@dividend+7,w
 11344  0DA9  00A7               	movwf	?___aomod+7
 11345  0DAA                     l1622:
 11346  0DAA  0008               	return
 11347  0DAB                     __end_of___aomod:
 11348                           
 11349                           	psect	text13
 11350  0DAB                     __ptext13:	
 11351 ;; *************** function ___aodiv *****************
 11352 ;; Defined at:
 11353 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 11354 ;; Parameters:    Size  Location     Type
 11355 ;;  divisor         8    0[BANK0 ] long long 
 11356 ;;  dividend        8    8[BANK0 ] long long 
 11357 ;; Auto vars:     Size  Location     Type
 11358 ;;  quotient        8   19[BANK0 ] long long 
 11359 ;;  sign            1   18[BANK0 ] unsigned char 
 11360 ;;  counter         1   17[BANK0 ] unsigned char 
 11361 ;; Return value:  Size  Location     Type
 11362 ;;                  8    0[BANK0 ] long long 
 11363 ;; Registers used:
 11364 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11365 ;; Tracked objects:
 11366 ;;		On entry : 0/0
 11367 ;;		On exit  : 0/0
 11368 ;;		Unchanged: 0/0
 11369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11370 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11371 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11372 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11373 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11374 ;;Total ram usage:       27 bytes
 11375 ;; Hardware stack levels used: 1
 11376 ;; Hardware stack levels required when called: 5
 11377 ;; This function calls:
 11378 ;;		Nothing
 11379 ;; This function is called by:
 11380 ;;		_dtoa
 11381 ;; This function uses a non-reentrant model
 11382 ;;
 11383                           
 11384                           
 11385                           ;psect for function ___aodiv
 11386  0DAB                     ___aodiv:
 11387  0DAB                     l4140:	
 11388                           ;incstack = 0
 11389                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 11390                           
 11391  0DAB  0020               	movlb	0	; select bank0
 11392  0DAC  01B2               	clrf	___aodiv@sign
 11393  0DAD                     l4142:
 11394  0DAD  3020               	movlw	low ___aodiv@divisor
 11395  0DAE  0086               	movwf	6
 11396  0DAF  3000               	movlw	high ___aodiv@divisor
 11397  0DB0  0087               	movwf	7
 11398  0DB1  3F47               	moviw [7]fsr1
 11399  0DB2  00B0               	movwf	??___aodiv
 11400  0DB3  1FB0               	btfss	??___aodiv,7
 11401  0DB4  2DB6               	goto	u2321
 11402  0DB5  2DB7               	goto	u2320
 11403  0DB6                     u2321:
 11404  0DB6  2DD9               	goto	l4146
 11405  0DB7                     u2320:
 11406  0DB7                     l4144:
 11407  0DB7  0020               	movlb	0	; select bank0
 11408  0DB8  09A0               	comf	___aodiv@divisor,f
 11409  0DB9  09A1               	comf	___aodiv@divisor+1,f
 11410  0DBA  09A2               	comf	___aodiv@divisor+2,f
 11411  0DBB  09A3               	comf	___aodiv@divisor+3,f
 11412  0DBC  09A4               	comf	___aodiv@divisor+4,f
 11413  0DBD  09A5               	comf	___aodiv@divisor+5,f
 11414  0DBE  09A6               	comf	___aodiv@divisor+6,f
 11415  0DBF  09A7               	comf	___aodiv@divisor+7,f
 11416  0DC0  0AA0               	incf	___aodiv@divisor,f
 11417  0DC1  1D03               	skipz
 11418  0DC2  2DD6               	goto	u233lld
 11419  0DC3  0AA1               	incf	___aodiv@divisor+1,f
 11420  0DC4  1D03               	skipz
 11421  0DC5  2DD6               	goto	u233lld
 11422  0DC6  0AA2               	incf	___aodiv@divisor+2,f
 11423  0DC7  1D03               	skipz
 11424  0DC8  2DD6               	goto	u233lld
 11425  0DC9  0AA3               	incf	___aodiv@divisor+3,f
 11426  0DCA  1D03               	skipz
 11427  0DCB  2DD6               	goto	u233lld
 11428  0DCC  0AA4               	incf	___aodiv@divisor+4,f
 11429  0DCD  1D03               	skipz
 11430  0DCE  2DD6               	goto	u233lld
 11431  0DCF  0AA5               	incf	___aodiv@divisor+5,f
 11432  0DD0  1D03               	skipz
 11433  0DD1  2DD6               	goto	u233lld
 11434  0DD2  0AA6               	incf	___aodiv@divisor+6,f
 11435  0DD3  1D03               	skipz
 11436  0DD4  2DD6               	goto	u233lld
 11437  0DD5  0AA7               	incf	___aodiv@divisor+7,f
 11438  0DD6                     u233lld:
 11439  0DD6  0020               	movlb	0	; select bank0
 11440  0DD7  01B2               	clrf	___aodiv@sign
 11441  0DD8  0AB2               	incf	___aodiv@sign,f
 11442  0DD9                     l4146:
 11443  0DD9  3028               	movlw	low ___aodiv@dividend
 11444  0DDA  0086               	movwf	6
 11445  0DDB  3000               	movlw	high ___aodiv@dividend
 11446  0DDC  0087               	movwf	7
 11447  0DDD  3F47               	moviw [7]fsr1
 11448  0DDE  0020               	movlb	0	; select bank0
 11449  0DDF  00B0               	movwf	??___aodiv
 11450  0DE0  1FB0               	btfss	??___aodiv,7
 11451  0DE1  2DE3               	goto	u2341
 11452  0DE2  2DE4               	goto	u2340
 11453  0DE3                     u2341:
 11454  0DE3  2E08               	goto	l4152
 11455  0DE4                     u2340:
 11456  0DE4                     l4148:
 11457  0DE4  0020               	movlb	0	; select bank0
 11458  0DE5  09A8               	comf	___aodiv@dividend,f
 11459  0DE6  09A9               	comf	___aodiv@dividend+1,f
 11460  0DE7  09AA               	comf	___aodiv@dividend+2,f
 11461  0DE8  09AB               	comf	___aodiv@dividend+3,f
 11462  0DE9  09AC               	comf	___aodiv@dividend+4,f
 11463  0DEA  09AD               	comf	___aodiv@dividend+5,f
 11464  0DEB  09AE               	comf	___aodiv@dividend+6,f
 11465  0DEC  09AF               	comf	___aodiv@dividend+7,f
 11466  0DED  0AA8               	incf	___aodiv@dividend,f
 11467  0DEE  1D03               	skipz
 11468  0DEF  2E03               	goto	u235lld
 11469  0DF0  0AA9               	incf	___aodiv@dividend+1,f
 11470  0DF1  1D03               	skipz
 11471  0DF2  2E03               	goto	u235lld
 11472  0DF3  0AAA               	incf	___aodiv@dividend+2,f
 11473  0DF4  1D03               	skipz
 11474  0DF5  2E03               	goto	u235lld
 11475  0DF6  0AAB               	incf	___aodiv@dividend+3,f
 11476  0DF7  1D03               	skipz
 11477  0DF8  2E03               	goto	u235lld
 11478  0DF9  0AAC               	incf	___aodiv@dividend+4,f
 11479  0DFA  1D03               	skipz
 11480  0DFB  2E03               	goto	u235lld
 11481  0DFC  0AAD               	incf	___aodiv@dividend+5,f
 11482  0DFD  1D03               	skipz
 11483  0DFE  2E03               	goto	u235lld
 11484  0DFF  0AAE               	incf	___aodiv@dividend+6,f
 11485  0E00  1D03               	skipz
 11486  0E01  2E03               	goto	u235lld
 11487  0E02  0AAF               	incf	___aodiv@dividend+7,f
 11488  0E03                     u235lld:
 11489  0E03                     l4150:
 11490  0E03  3001               	movlw	1
 11491  0E04  0020               	movlb	0	; select bank0
 11492  0E05  00B0               	movwf	??___aodiv
 11493  0E06  0830               	movf	??___aodiv,w
 11494  0E07  06B2               	xorwf	___aodiv@sign,f
 11495  0E08                     l4152:
 11496  0E08  3033               	movlw	low ___aodiv@quotient
 11497  0E09  0086               	movwf	6
 11498  0E0A  3000               	movlw	high ___aodiv@quotient
 11499  0E0B  0087               	movwf	7
 11500  0E0C  3008               	movlw	8
 11501  0E0D  0020               	movlb	0	; select bank0
 11502  0E0E  00B0               	movwf	??___aodiv
 11503  0E0F  3000               	movlw	0
 11504  0E10                     u2360:
 11505  0E10  001E               	movwi fsr1++
 11506  0E11  0BB0               	decfsz	??___aodiv,f
 11507  0E12  2E10               	goto	u2360
 11508  0E13                     l4154:
 11509  0E13  0820               	movf	___aodiv@divisor,w
 11510  0E14  0421               	iorwf	___aodiv@divisor+1,w
 11511  0E15  0422               	iorwf	___aodiv@divisor+2,w
 11512  0E16  0423               	iorwf	___aodiv@divisor+3,w
 11513  0E17  0424               	iorwf	___aodiv@divisor+4,w
 11514  0E18  0425               	iorwf	___aodiv@divisor+5,w
 11515  0E19  0426               	iorwf	___aodiv@divisor+6,w
 11516  0E1A  0427               	iorwf	___aodiv@divisor+7,w
 11517  0E1B  1903               	skipnz
 11518  0E1C  2E1E               	goto	u2371
 11519  0E1D  2E1F               	goto	u2370
 11520  0E1E                     u2371:
 11521  0E1E  2E7B               	goto	l4174
 11522  0E1F                     u2370:
 11523  0E1F                     l4156:
 11524  0E1F  01B1               	clrf	___aodiv@counter
 11525  0E20  0AB1               	incf	___aodiv@counter,f
 11526  0E21  2E2E               	goto	l4162
 11527  0E22                     l4158:
 11528  0E22  35A0               	lslf	___aodiv@divisor,f
 11529  0E23  0DA1               	rlf	___aodiv@divisor+1,f
 11530  0E24  0DA2               	rlf	___aodiv@divisor+2,f
 11531  0E25  0DA3               	rlf	___aodiv@divisor+3,f
 11532  0E26  0DA4               	rlf	___aodiv@divisor+4,f
 11533  0E27  0DA5               	rlf	___aodiv@divisor+5,f
 11534  0E28  0DA6               	rlf	___aodiv@divisor+6,f
 11535  0E29  0DA7               	rlf	___aodiv@divisor+7,f
 11536  0E2A                     l4160:
 11537  0E2A  3001               	movlw	1
 11538  0E2B  00B0               	movwf	??___aodiv
 11539  0E2C  0830               	movf	??___aodiv,w
 11540  0E2D  07B1               	addwf	___aodiv@counter,f
 11541  0E2E                     l4162:
 11542  0E2E  1FA7               	btfss	___aodiv@divisor+7,7
 11543  0E2F  2E31               	goto	u2381
 11544  0E30  2E32               	goto	u2380
 11545  0E31                     u2381:
 11546  0E31  2E22               	goto	l4158
 11547  0E32                     u2380:
 11548  0E32                     l4164:
 11549  0E32  35B3               	lslf	___aodiv@quotient,f
 11550  0E33  0DB4               	rlf	___aodiv@quotient+1,f
 11551  0E34  0DB5               	rlf	___aodiv@quotient+2,f
 11552  0E35  0DB6               	rlf	___aodiv@quotient+3,f
 11553  0E36  0DB7               	rlf	___aodiv@quotient+4,f
 11554  0E37  0DB8               	rlf	___aodiv@quotient+5,f
 11555  0E38  0DB9               	rlf	___aodiv@quotient+6,f
 11556  0E39  0DBA               	rlf	___aodiv@quotient+7,f
 11557  0E3A                     l4166:
 11558  0E3A  0827               	movf	___aodiv@divisor+7,w
 11559  0E3B  022F               	subwf	___aodiv@dividend+7,w
 11560  0E3C  1D03               	skipz
 11561  0E3D  2E58               	goto	u2395
 11562  0E3E  0826               	movf	___aodiv@divisor+6,w
 11563  0E3F  022E               	subwf	___aodiv@dividend+6,w
 11564  0E40  1D03               	skipz
 11565  0E41  2E58               	goto	u2395
 11566  0E42  0825               	movf	___aodiv@divisor+5,w
 11567  0E43  022D               	subwf	___aodiv@dividend+5,w
 11568  0E44  1D03               	skipz
 11569  0E45  2E58               	goto	u2395
 11570  0E46  0824               	movf	___aodiv@divisor+4,w
 11571  0E47  022C               	subwf	___aodiv@dividend+4,w
 11572  0E48  1D03               	skipz
 11573  0E49  2E58               	goto	u2395
 11574  0E4A  0823               	movf	___aodiv@divisor+3,w
 11575  0E4B  022B               	subwf	___aodiv@dividend+3,w
 11576  0E4C  1D03               	skipz
 11577  0E4D  2E58               	goto	u2395
 11578  0E4E  0822               	movf	___aodiv@divisor+2,w
 11579  0E4F  022A               	subwf	___aodiv@dividend+2,w
 11580  0E50  1D03               	skipz
 11581  0E51  2E58               	goto	u2395
 11582  0E52  0821               	movf	___aodiv@divisor+1,w
 11583  0E53  0229               	subwf	___aodiv@dividend+1,w
 11584  0E54  1D03               	skipz
 11585  0E55  2E58               	goto	u2395
 11586  0E56  0820               	movf	___aodiv@divisor,w
 11587  0E57  0228               	subwf	___aodiv@dividend,w
 11588  0E58                     u2395:
 11589  0E58  1C03               	skipc
 11590  0E59  2E5B               	goto	u2391
 11591  0E5A  2E5C               	goto	u2390
 11592  0E5B                     u2391:
 11593  0E5B  2E6D               	goto	l4172
 11594  0E5C                     u2390:
 11595  0E5C                     l4168:
 11596  0E5C  0820               	movf	___aodiv@divisor,w
 11597  0E5D  02A8               	subwf	___aodiv@dividend,f
 11598  0E5E  0821               	movf	___aodiv@divisor+1,w
 11599  0E5F  3BA9               	subwfb	___aodiv@dividend+1,f
 11600  0E60  0822               	movf	___aodiv@divisor+2,w
 11601  0E61  3BAA               	subwfb	___aodiv@dividend+2,f
 11602  0E62  0823               	movf	___aodiv@divisor+3,w
 11603  0E63  3BAB               	subwfb	___aodiv@dividend+3,f
 11604  0E64  0824               	movf	___aodiv@divisor+4,w
 11605  0E65  3BAC               	subwfb	___aodiv@dividend+4,f
 11606  0E66  0825               	movf	___aodiv@divisor+5,w
 11607  0E67  3BAD               	subwfb	___aodiv@dividend+5,f
 11608  0E68  0826               	movf	___aodiv@divisor+6,w
 11609  0E69  3BAE               	subwfb	___aodiv@dividend+6,f
 11610  0E6A  0827               	movf	___aodiv@divisor+7,w
 11611  0E6B  3BAF               	subwfb	___aodiv@dividend+7,f
 11612  0E6C                     l4170:
 11613  0E6C  1433               	bsf	___aodiv@quotient,0
 11614  0E6D                     l4172:
 11615  0E6D  36A7               	lsrf	___aodiv@divisor+7,f
 11616  0E6E  0CA6               	rrf	___aodiv@divisor+6,f
 11617  0E6F  0CA5               	rrf	___aodiv@divisor+5,f
 11618  0E70  0CA4               	rrf	___aodiv@divisor+4,f
 11619  0E71  0CA3               	rrf	___aodiv@divisor+3,f
 11620  0E72  0CA2               	rrf	___aodiv@divisor+2,f
 11621  0E73  0CA1               	rrf	___aodiv@divisor+1,f
 11622  0E74  0CA0               	rrf	___aodiv@divisor,f
 11623  0E75  3001               	movlw	1
 11624  0E76  02B1               	subwf	___aodiv@counter,f
 11625  0E77  1D03               	btfss	3,2
 11626  0E78  2E7A               	goto	u2401
 11627  0E79  2E7B               	goto	u2400
 11628  0E7A                     u2401:
 11629  0E7A  2E32               	goto	l4164
 11630  0E7B                     u2400:
 11631  0E7B                     l4174:
 11632  0E7B  0832               	movf	___aodiv@sign,w
 11633  0E7C  1903               	btfsc	3,2
 11634  0E7D  2E7F               	goto	u2411
 11635  0E7E  2E80               	goto	u2410
 11636  0E7F                     u2411:
 11637  0E7F  2E9E               	goto	l1608
 11638  0E80                     u2410:
 11639  0E80                     l4176:
 11640  0E80  09B3               	comf	___aodiv@quotient,f
 11641  0E81  09B4               	comf	___aodiv@quotient+1,f
 11642  0E82  09B5               	comf	___aodiv@quotient+2,f
 11643  0E83  09B6               	comf	___aodiv@quotient+3,f
 11644  0E84  09B7               	comf	___aodiv@quotient+4,f
 11645  0E85  09B8               	comf	___aodiv@quotient+5,f
 11646  0E86  09B9               	comf	___aodiv@quotient+6,f
 11647  0E87  09BA               	comf	___aodiv@quotient+7,f
 11648  0E88  0AB3               	incf	___aodiv@quotient,f
 11649  0E89  1D03               	skipz
 11650  0E8A  2E9E               	goto	u242lld
 11651  0E8B  0AB4               	incf	___aodiv@quotient+1,f
 11652  0E8C  1D03               	skipz
 11653  0E8D  2E9E               	goto	u242lld
 11654  0E8E  0AB5               	incf	___aodiv@quotient+2,f
 11655  0E8F  1D03               	skipz
 11656  0E90  2E9E               	goto	u242lld
 11657  0E91  0AB6               	incf	___aodiv@quotient+3,f
 11658  0E92  1D03               	skipz
 11659  0E93  2E9E               	goto	u242lld
 11660  0E94  0AB7               	incf	___aodiv@quotient+4,f
 11661  0E95  1D03               	skipz
 11662  0E96  2E9E               	goto	u242lld
 11663  0E97  0AB8               	incf	___aodiv@quotient+5,f
 11664  0E98  1D03               	skipz
 11665  0E99  2E9E               	goto	u242lld
 11666  0E9A  0AB9               	incf	___aodiv@quotient+6,f
 11667  0E9B  1D03               	skipz
 11668  0E9C  2E9E               	goto	u242lld
 11669  0E9D  0ABA               	incf	___aodiv@quotient+7,f
 11670  0E9E                     u242lld:
 11671  0E9E                     l1608:
 11672  0E9E  0020               	movlb	0	; select bank0
 11673  0E9F  0833               	movf	___aodiv@quotient,w
 11674  0EA0  00A0               	movwf	?___aodiv
 11675  0EA1  0834               	movf	___aodiv@quotient+1,w
 11676  0EA2  00A1               	movwf	?___aodiv+1
 11677  0EA3  0835               	movf	___aodiv@quotient+2,w
 11678  0EA4  00A2               	movwf	?___aodiv+2
 11679  0EA5  0836               	movf	___aodiv@quotient+3,w
 11680  0EA6  00A3               	movwf	?___aodiv+3
 11681  0EA7  0837               	movf	___aodiv@quotient+4,w
 11682  0EA8  00A4               	movwf	?___aodiv+4
 11683  0EA9  0838               	movf	___aodiv@quotient+5,w
 11684  0EAA  00A5               	movwf	?___aodiv+5
 11685  0EAB  0839               	movf	___aodiv@quotient+6,w
 11686  0EAC  00A6               	movwf	?___aodiv+6
 11687  0EAD  083A               	movf	___aodiv@quotient+7,w
 11688  0EAE  00A7               	movwf	?___aodiv+7
 11689  0EAF                     l1609:
 11690  0EAF  0008               	return
 11691  0EB0                     __end_of___aodiv:
 11692                           
 11693                           	psect	text14
 11694  0A7F                     __ptext14:	
 11695 ;; *************** function _atoi *****************
 11696 ;; Defined at:
 11697 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 11698 ;; Parameters:    Size  Location     Type
 11699 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 11700 ;;		 -> STR_9(7), STR_7(15), STR_6(21), STR_4(21), 
 11701 ;;		 -> STR_2(20), 
 11702 ;; Auto vars:     Size  Location     Type
 11703 ;;  n               2   19[BANK0 ] int 
 11704 ;;  neg             2   12[BANK0 ] int 
 11705 ;; Return value:  Size  Location     Type
 11706 ;;                  2    6[BANK0 ] int 
 11707 ;; Registers used:
 11708 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11709 ;; Tracked objects:
 11710 ;;		On entry : 0/0
 11711 ;;		On exit  : 0/0
 11712 ;;		Unchanged: 0/0
 11713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11714 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11715 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11716 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11717 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11718 ;;Total ram usage:       15 bytes
 11719 ;; Hardware stack levels used: 1
 11720 ;; Hardware stack levels required when called: 6
 11721 ;; This function calls:
 11722 ;;		___wmul
 11723 ;;		_isdigit
 11724 ;;		_isspace
 11725 ;; This function is called by:
 11726 ;;		_vfpfcnvrt
 11727 ;; This function uses a non-reentrant model
 11728 ;;
 11729                           
 11730                           
 11731                           ;psect for function _atoi
 11732  0A7F                     _atoi:
 11733  0A7F                     l4352:	
 11734                           ;incstack = 0
 11735                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11736                           
 11737  0A7F  0020               	movlb	0	; select bank0
 11738  0A80  01B3               	clrf	atoi@n
 11739  0A81  01B4               	clrf	atoi@n+1
 11740  0A82  01AC               	clrf	atoi@neg
 11741  0A83  01AD               	clrf	atoi@neg+1
 11742  0A84  2A89               	goto	l4356
 11743  0A85                     l4354:
 11744  0A85  3001               	movlw	1
 11745  0A86  07A6               	addwf	atoi@s,f
 11746  0A87  3000               	movlw	0
 11747  0A88  3DA7               	addwfc	atoi@s+1,f
 11748  0A89                     l4356:
 11749  0A89  01B2               	clrf	_atoi$2983
 11750  0A8A  0AB2               	incf	_atoi$2983,f
 11751  0A8B                     l4358:
 11752  0A8B  0826               	movf	atoi@s,w
 11753  0A8C  0084               	movwf	4
 11754  0A8D  0827               	movf	atoi@s+1,w
 11755  0A8E  0085               	movwf	5
 11756  0A8F  0012               	moviw fsr0++
 11757  0A90  3A20               	xorlw	32
 11758  0A91  1903               	btfsc	3,2
 11759  0A92  2A94               	goto	u2881
 11760  0A93  2A95               	goto	u2880
 11761  0A94                     u2881:
 11762  0A94  2AAA               	goto	l4364
 11763  0A95                     u2880:
 11764  0A95                     l4360:
 11765  0A95  0826               	movf	atoi@s,w
 11766  0A96  0084               	movwf	4
 11767  0A97  0827               	movf	atoi@s+1,w
 11768  0A98  0085               	movwf	5
 11769  0A99  0800               	movf	0,w	;code access
 11770  0A9A  3EF7               	addlw	247
 11771  0A9B  00A8               	movwf	??_atoi
 11772  0A9C  30FF               	movlw	255
 11773  0A9D  1803               	skipnc
 11774  0A9E  3000               	movlw	0
 11775  0A9F  00A9               	movwf	??_atoi+1
 11776  0AA0  3000               	movlw	0
 11777  0AA1  0229               	subwf	??_atoi+1,w
 11778  0AA2  3005               	movlw	5
 11779  0AA3  1903               	skipnz
 11780  0AA4  0228               	subwf	??_atoi,w
 11781  0AA5  1C03               	skipc
 11782  0AA6  2AA8               	goto	u2891
 11783  0AA7  2AA9               	goto	u2890
 11784  0AA8                     u2891:
 11785  0AA8  2AAA               	goto	l4364
 11786  0AA9                     u2890:
 11787  0AA9                     l4362:
 11788  0AA9  01B2               	clrf	_atoi$2983
 11789  0AAA                     l4364:
 11790  0AAA  0832               	movf	_atoi$2983,w
 11791  0AAB  00A8               	movwf	??_atoi
 11792  0AAC  01A9               	clrf	??_atoi+1
 11793  0AAD  0828               	movf	??_atoi,w
 11794  0AAE  00AE               	movwf	_atoi$2982
 11795  0AAF  0829               	movf	??_atoi+1,w
 11796  0AB0  00AF               	movwf	_atoi$2982+1
 11797  0AB1                     l4368:
 11798  0AB1  082E               	movf	_atoi$2982,w
 11799  0AB2  042F               	iorwf	_atoi$2982+1,w
 11800  0AB3  1D03               	btfss	3,2
 11801  0AB4  2AB6               	goto	u2901
 11802  0AB5  2AB7               	goto	u2900
 11803  0AB6                     u2901:
 11804  0AB6  2A85               	goto	l4354
 11805  0AB7                     u2900:
 11806  0AB7  2AC1               	goto	l4372
 11807  0AB8                     l4370:
 11808  0AB8  3001               	movlw	1
 11809  0AB9  00AC               	movwf	atoi@neg
 11810  0ABA  3000               	movlw	0
 11811  0ABB  00AD               	movwf	atoi@neg+1
 11812  0ABC                     l2094:
 11813  0ABC  3001               	movlw	1
 11814  0ABD  07A6               	addwf	atoi@s,f
 11815  0ABE  3000               	movlw	0
 11816  0ABF  3DA7               	addwfc	atoi@s+1,f
 11817  0AC0  2AF5               	goto	l4378
 11818  0AC1                     l4372:
 11819  0AC1  0826               	movf	atoi@s,w
 11820  0AC2  0084               	movwf	4
 11821  0AC3  0827               	movf	atoi@s+1,w
 11822  0AC4  0085               	movwf	5
 11823  0AC5  0800               	movf	0,w	;code access
 11824  0AC6  00A8               	movwf	??_atoi
 11825  0AC7  01A9               	clrf	??_atoi+1
 11826                           
 11827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11828                           ; Switch size 1, requested type "simple"
 11829                           ; Number of cases is 1, Range of values is 0 to 0
 11830                           ; switch strategies available:
 11831                           ; Name         Instructions Cycles
 11832                           ; simple_byte            4     3 (average)
 11833                           ; direct_byte            8     6 (fixed)
 11834                           ; jumptable            260     6 (fixed)
 11835                           ;	Chosen strategy is simple_byte
 11836  0AC8  0829               	movf	??_atoi+1,w
 11837  0AC9  3A00               	xorlw	0	; case 0
 11838  0ACA  1903               	skipnz
 11839  0ACB  2ACD               	goto	l5820
 11840  0ACC  2AF5               	goto	l4378
 11841  0ACD                     l5820:
 11842                           
 11843                           ; Switch size 1, requested type "simple"
 11844                           ; Number of cases is 2, Range of values is 43 to 45
 11845                           ; switch strategies available:
 11846                           ; Name         Instructions Cycles
 11847                           ; simple_byte            7     4 (average)
 11848                           ; direct_byte           15     9 (fixed)
 11849                           ; jumptable            263     9 (fixed)
 11850                           ;	Chosen strategy is simple_byte
 11851  0ACD  0828               	movf	??_atoi,w
 11852  0ACE  3A2B               	xorlw	43	; case 43
 11853  0ACF  1903               	skipnz
 11854  0AD0  2ABC               	goto	l2094
 11855  0AD1  3A06               	xorlw	6	; case 45
 11856  0AD2  1903               	skipnz
 11857  0AD3  2AB8               	goto	l4370
 11858  0AD4  2AF5               	goto	l4378
 11859  0AD5                     l4374:
 11860  0AD5  0826               	movf	atoi@s,w
 11861  0AD6  0084               	movwf	4
 11862  0AD7  0827               	movf	atoi@s+1,w
 11863  0AD8  0085               	movwf	5
 11864  0AD9  0800               	movf	0,w	;code access
 11865  0ADA  00A8               	movwf	??_atoi
 11866  0ADB  0834               	movf	atoi@n+1,w
 11867  0ADC  00A1               	movwf	___wmul@multiplier+1
 11868  0ADD  0833               	movf	atoi@n,w
 11869  0ADE  00A0               	movwf	___wmul@multiplier
 11870  0ADF  300A               	movlw	10
 11871  0AE0  00A2               	movwf	___wmul@multiplicand
 11872  0AE1  3000               	movlw	0
 11873  0AE2  00A3               	movwf	___wmul@multiplicand+1
 11874  0AE3  3195  25B2  318A   	fcall	___wmul
 11875  0AE6  0020               	movlb	0	; select bank0
 11876  0AE7  0821               	movf	?___wmul+1,w
 11877  0AE8  00AA               	movwf	??_atoi+2
 11878  0AE9  0828               	movf	??_atoi,w
 11879  0AEA  0220               	subwf	?___wmul,w
 11880  0AEB  00A9               	movwf	??_atoi+1
 11881  0AEC  1C03               	skipc
 11882  0AED  03AA               	decf	??_atoi+2,f
 11883  0AEE  0829               	movf	??_atoi+1,w
 11884  0AEF  3E30               	addlw	48
 11885  0AF0  00B3               	movwf	atoi@n
 11886  0AF1  3000               	movlw	0
 11887  0AF2  3D2A               	addwfc	??_atoi+2,w
 11888  0AF3  00B4               	movwf	atoi@n+1
 11889  0AF4  2ABC               	goto	l2094
 11890  0AF5                     l4378:
 11891  0AF5  0826               	movf	atoi@s,w
 11892  0AF6  0084               	movwf	4
 11893  0AF7  0827               	movf	atoi@s+1,w
 11894  0AF8  0085               	movwf	5
 11895  0AF9  0800               	movf	0,w	;code access
 11896  0AFA  3ED0               	addlw	208
 11897  0AFB  00A8               	movwf	??_atoi
 11898  0AFC  30FF               	movlw	255
 11899  0AFD  1803               	skipnc
 11900  0AFE  3000               	movlw	0
 11901  0AFF  00A9               	movwf	??_atoi+1
 11902  0B00  3000               	movlw	0
 11903  0B01  0229               	subwf	??_atoi+1,w
 11904  0B02  300A               	movlw	10
 11905  0B03  1903               	skipnz
 11906  0B04  0228               	subwf	??_atoi,w
 11907  0B05  1C03               	skipc
 11908  0B06  2B08               	goto	u2911
 11909  0B07  2B0A               	goto	u2910
 11910  0B08                     u2911:
 11911  0B08  3001               	movlw	1
 11912  0B09  2B0B               	goto	u2920
 11913  0B0A                     u2910:
 11914  0B0A  3000               	movlw	0
 11915  0B0B                     u2920:
 11916  0B0B  00AA               	movwf	??_atoi+2
 11917  0B0C  01AB               	clrf	??_atoi+3
 11918  0B0D  082A               	movf	??_atoi+2,w
 11919  0B0E  00B0               	movwf	_atoi$2984
 11920  0B0F  082B               	movf	??_atoi+3,w
 11921  0B10  00B1               	movwf	_atoi$2984+1
 11922  0B11                     l4382:
 11923  0B11  0830               	movf	_atoi$2984,w
 11924  0B12  0431               	iorwf	_atoi$2984+1,w
 11925  0B13  1D03               	btfss	3,2
 11926  0B14  2B16               	goto	u2931
 11927  0B15  2B17               	goto	u2930
 11928  0B16                     u2931:
 11929  0B16  2AD5               	goto	l4374
 11930  0B17                     u2930:
 11931  0B17                     l4384:
 11932  0B17  082C               	movf	atoi@neg,w
 11933  0B18  042D               	iorwf	atoi@neg+1,w
 11934  0B19  1D03               	btfss	3,2
 11935  0B1A  2B1C               	goto	u2941
 11936  0B1B  2B1D               	goto	u2940
 11937  0B1C                     u2941:
 11938  0B1C  2B29               	goto	l4388
 11939  0B1D                     u2940:
 11940  0B1D                     l4386:
 11941  0B1D  0933               	comf	atoi@n,w
 11942  0B1E  00A8               	movwf	??_atoi
 11943  0B1F  0934               	comf	atoi@n+1,w
 11944  0B20  00A9               	movwf	??_atoi+1
 11945  0B21  0AA8               	incf	??_atoi,f
 11946  0B22  1903               	skipnz
 11947  0B23  0AA9               	incf	??_atoi+1,f
 11948  0B24  0828               	movf	??_atoi,w
 11949  0B25  00A6               	movwf	?_atoi
 11950  0B26  0829               	movf	??_atoi+1,w
 11951  0B27  00A7               	movwf	?_atoi+1
 11952  0B28  2B2D               	goto	l2107
 11953  0B29                     l4388:
 11954  0B29  0834               	movf	atoi@n+1,w
 11955  0B2A  00A7               	movwf	?_atoi+1
 11956  0B2B  0833               	movf	atoi@n,w
 11957  0B2C  00A6               	movwf	?_atoi
 11958  0B2D                     l2107:
 11959  0B2D  0008               	return
 11960  0B2E                     __end_of_atoi:
 11961                           
 11962                           	psect	text15
 11963  15F3                     __ptext15:	
 11964 ;; *************** function _isspace *****************
 11965 ;; Defined at:
 11966 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 11967 ;; Parameters:    Size  Location     Type
 11968 ;;  c               2    0[BANK0 ] int 
 11969 ;; Auto vars:     Size  Location     Type
 11970 ;;		None
 11971 ;; Return value:  Size  Location     Type
 11972 ;;                  2    0[BANK0 ] int 
 11973 ;; Registers used:
 11974 ;;		wreg, status,2, status,0
 11975 ;; Tracked objects:
 11976 ;;		On entry : 0/0
 11977 ;;		On exit  : 0/0
 11978 ;;		Unchanged: 0/0
 11979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11980 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11981 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11982 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11983 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11984 ;;Total ram usage:        5 bytes
 11985 ;; Hardware stack levels used: 1
 11986 ;; Hardware stack levels required when called: 5
 11987 ;; This function calls:
 11988 ;;		Nothing
 11989 ;; This function is called by:
 11990 ;;		_atoi
 11991 ;; This function uses a non-reentrant model
 11992 ;;
 11993                           
 11994                           
 11995                           ;psect for function _isspace
 11996  15F3                     _isspace:
 11997  15F3                     l4238:	
 11998                           ;incstack = 0
 11999                           ; Regs used in _isspace: [wreg+status,2+status,0]
 12000                           
 12001  15F3  0020               	movlb	0	; select bank0
 12002  15F4  01A4               	clrf	_isspace$3000
 12003  15F5  0AA4               	incf	_isspace$3000,f
 12004  15F6                     l4240:
 12005  15F6  3020               	movlw	32
 12006  15F7  0620               	xorwf	isspace@c,w
 12007  15F8  0421               	iorwf	isspace@c+1,w
 12008  15F9  1903               	btfsc	3,2
 12009  15FA  2DFC               	goto	u2601
 12010  15FB  2DFD               	goto	u2600
 12011  15FC                     u2601:
 12012  15FC  2E0D               	goto	l4246
 12013  15FD                     u2600:
 12014  15FD                     l4242:
 12015  15FD  0820               	movf	isspace@c,w
 12016  15FE  3EF7               	addlw	247
 12017  15FF  00A2               	movwf	??_isspace
 12018  1600  30FF               	movlw	255
 12019  1601  3D21               	addwfc	isspace@c+1,w
 12020  1602  00A3               	movwf	??_isspace+1
 12021  1603  3000               	movlw	0
 12022  1604  0223               	subwf	??_isspace+1,w
 12023  1605  3005               	movlw	5
 12024  1606  1903               	skipnz
 12025  1607  0222               	subwf	??_isspace,w
 12026  1608  1C03               	skipc
 12027  1609  2E0B               	goto	u2611
 12028  160A  2E0C               	goto	u2610
 12029  160B                     u2611:
 12030  160B  2E0D               	goto	l4246
 12031  160C                     u2610:
 12032  160C                     l4244:
 12033  160C  01A4               	clrf	_isspace$3000
 12034  160D                     l4246:
 12035  160D  0824               	movf	_isspace$3000,w
 12036  160E  00A2               	movwf	??_isspace
 12037  160F  01A3               	clrf	??_isspace+1
 12038  1610  0822               	movf	??_isspace,w
 12039  1611  00A0               	movwf	?_isspace
 12040  1612  0823               	movf	??_isspace+1,w
 12041  1613  00A1               	movwf	?_isspace+1
 12042  1614                     l2118:
 12043  1614  0008               	return
 12044  1615                     __end_of_isspace:
 12045                           
 12046                           	psect	text16
 12047  14EE                     __ptext16:	
 12048 ;; *************** function _isdigit *****************
 12049 ;; Defined at:
 12050 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 12051 ;; Parameters:    Size  Location     Type
 12052 ;;  c               2    0[BANK0 ] int 
 12053 ;; Auto vars:     Size  Location     Type
 12054 ;;		None
 12055 ;; Return value:  Size  Location     Type
 12056 ;;                  2    0[BANK0 ] int 
 12057 ;; Registers used:
 12058 ;;		wreg, status,2, status,0
 12059 ;; Tracked objects:
 12060 ;;		On entry : 0/0
 12061 ;;		On exit  : 0/0
 12062 ;;		Unchanged: 0/0
 12063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12064 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12066 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12067 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12068 ;;Total ram usage:        6 bytes
 12069 ;; Hardware stack levels used: 1
 12070 ;; Hardware stack levels required when called: 5
 12071 ;; This function calls:
 12072 ;;		Nothing
 12073 ;; This function is called by:
 12074 ;;		_vfpfcnvrt
 12075 ;;		_atoi
 12076 ;; This function uses a non-reentrant model
 12077 ;;
 12078                           
 12079                           
 12080                           ;psect for function _isdigit
 12081  14EE                     _isdigit:
 12082  14EE                     l4234:	
 12083                           ;incstack = 0
 12084                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 12085                           
 12086  14EE  0020               	movlb	0	; select bank0
 12087  14EF  0820               	movf	isdigit@c,w
 12088  14F0  3ED0               	addlw	208
 12089  14F1  00A2               	movwf	??_isdigit
 12090  14F2  30FF               	movlw	255
 12091  14F3  3D21               	addwfc	isdigit@c+1,w
 12092  14F4  00A3               	movwf	??_isdigit+1
 12093  14F5  3000               	movlw	0
 12094  14F6  0223               	subwf	??_isdigit+1,w
 12095  14F7  300A               	movlw	10
 12096  14F8  1903               	skipnz
 12097  14F9  0222               	subwf	??_isdigit,w
 12098  14FA  1C03               	skipc
 12099  14FB  2CFD               	goto	u2581
 12100  14FC  2CFF               	goto	u2580
 12101  14FD                     u2581:
 12102  14FD  3001               	movlw	1
 12103  14FE  2D00               	goto	u2590
 12104  14FF                     u2580:
 12105  14FF  3000               	movlw	0
 12106  1500                     u2590:
 12107  1500  00A4               	movwf	??_isdigit+2
 12108  1501  01A5               	clrf	??_isdigit+3
 12109  1502  0824               	movf	??_isdigit+2,w
 12110  1503  00A0               	movwf	?_isdigit
 12111  1504  0825               	movf	??_isdigit+3,w
 12112  1505  00A1               	movwf	?_isdigit+1
 12113  1506                     l2110:
 12114  1506  0008               	return
 12115  1507                     __end_of_isdigit:
 12116                           
 12117                           	psect	text17
 12118  15B2                     __ptext17:	
 12119 ;; *************** function ___wmul *****************
 12120 ;; Defined at:
 12121 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 12122 ;; Parameters:    Size  Location     Type
 12123 ;;  multiplier      2    0[BANK0 ] unsigned int 
 12124 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 12125 ;; Auto vars:     Size  Location     Type
 12126 ;;  product         2    4[BANK0 ] unsigned int 
 12127 ;; Return value:  Size  Location     Type
 12128 ;;                  2    0[BANK0 ] unsigned int 
 12129 ;; Registers used:
 12130 ;;		wreg, status,2, status,0
 12131 ;; Tracked objects:
 12132 ;;		On entry : 0/0
 12133 ;;		On exit  : 0/0
 12134 ;;		Unchanged: 0/0
 12135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12136 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12137 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12139 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12140 ;;Total ram usage:        6 bytes
 12141 ;; Hardware stack levels used: 1
 12142 ;; Hardware stack levels required when called: 5
 12143 ;; This function calls:
 12144 ;;		Nothing
 12145 ;; This function is called by:
 12146 ;;		_atoi
 12147 ;; This function uses a non-reentrant model
 12148 ;;
 12149                           
 12150                           
 12151                           ;psect for function ___wmul
 12152  15B2                     ___wmul:
 12153  15B2                     l4126:	
 12154                           ;incstack = 0
 12155                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12156                           
 12157  15B2  0020               	movlb	0	; select bank0
 12158  15B3  01A4               	clrf	___wmul@product
 12159  15B4  01A5               	clrf	___wmul@product+1
 12160  15B5                     l4128:
 12161  15B5  1C20               	btfss	___wmul@multiplier,0
 12162  15B6  2DB8               	goto	u2281
 12163  15B7  2DB9               	goto	u2280
 12164  15B8                     u2281:
 12165  15B8  2DBD               	goto	l1508
 12166  15B9                     u2280:
 12167  15B9                     l4130:
 12168  15B9  0822               	movf	___wmul@multiplicand,w
 12169  15BA  07A4               	addwf	___wmul@product,f
 12170  15BB  0823               	movf	___wmul@multiplicand+1,w
 12171  15BC  3DA5               	addwfc	___wmul@product+1,f
 12172  15BD                     l1508:
 12173  15BD  3001               	movlw	1
 12174  15BE                     u2295:
 12175  15BE  35A2               	lslf	___wmul@multiplicand,f
 12176  15BF  0DA3               	rlf	___wmul@multiplicand+1,f
 12177  15C0  0B89               	decfsz	9,f
 12178  15C1  2DBE               	goto	u2295
 12179  15C2                     l4132:
 12180  15C2  3001               	movlw	1
 12181  15C3                     u2305:
 12182  15C3  36A1               	lsrf	___wmul@multiplier+1,f
 12183  15C4  0CA0               	rrf	___wmul@multiplier,f
 12184  15C5  0B89               	decfsz	9,f
 12185  15C6  2DC3               	goto	u2305
 12186  15C7                     l4134:
 12187  15C7  0820               	movf	___wmul@multiplier,w
 12188  15C8  0421               	iorwf	___wmul@multiplier+1,w
 12189  15C9  1D03               	btfss	3,2
 12190  15CA  2DCC               	goto	u2311
 12191  15CB  2DCD               	goto	u2310
 12192  15CC                     u2311:
 12193  15CC  2DB5               	goto	l4128
 12194  15CD                     u2310:
 12195  15CD                     l4136:
 12196  15CD  0825               	movf	___wmul@product+1,w
 12197  15CE  00A1               	movwf	?___wmul+1
 12198  15CF  0824               	movf	___wmul@product,w
 12199  15D0  00A0               	movwf	?___wmul
 12200  15D1                     l1510:
 12201  15D1  0008               	return
 12202  15D2                     __end_of___wmul:
 12203                           
 12204                           	psect	text18
 12205  0EB0                     __ptext18:	
 12206 ;; *************** function _readTC74 *****************
 12207 ;; Defined at:
 12208 ;;		line 102 in file "main.c"
 12209 ;; Parameters:    Size  Location     Type
 12210 ;;		None
 12211 ;; Auto vars:     Size  Location     Type
 12212 ;;  value           1    3[BANK0 ] unsigned char 
 12213 ;; Return value:  Size  Location     Type
 12214 ;;                  1    wreg      unsigned char 
 12215 ;; Registers used:
 12216 ;;		wreg, status,2, status,0, pclath, cstack
 12217 ;; Tracked objects:
 12218 ;;		On entry : 0/0
 12219 ;;		On exit  : 0/0
 12220 ;;		Unchanged: 0/0
 12221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12223 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12224 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12225 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12226 ;;Total ram usage:        2 bytes
 12227 ;; Hardware stack levels used: 1
 12228 ;; Hardware stack levels required when called: 6
 12229 ;; This function calls:
 12230 ;;		_ReadI2C
 12231 ;;		_WriteI2C
 12232 ;; This function is called by:
 12233 ;;		_main
 12234 ;; This function uses a non-reentrant model
 12235 ;;
 12236                           
 12237                           
 12238                           ;psect for function _readTC74
 12239  0EB0                     _readTC74:
 12240  0EB0                     l1194:	
 12241                           ;incstack = 0
 12242                           ; Regs used in _readTC74: [wreg+status,2+status,0+pclath+cstack]
 12243                           ;main.c: 104:  unsigned char value;;main.c: 105: do{
 12244                           
 12245  0EB0                     l5048:	
 12246                           ;main.c: 106:  while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12247                           
 12248  0EB0  0023               	movlb	3	; select bank3
 12249  0EB1  0C0F               	rrf	15,w	;volatile
 12250  0EB2  0C89               	rrf	9,f
 12251  0EB3  3901               	andlw	1
 12252  0EB4  0020               	movlb	0	; select bank0
 12253  0EB5  00A2               	movwf	??_readTC74
 12254  0EB6  0023               	movlb	3	; select bank3
 12255  0EB7  0811               	movf	17,w	;volatile
 12256  0EB8  391F               	andlw	31
 12257  0EB9  0020               	movlb	0	; select bank0
 12258  0EBA  0422               	iorwf	??_readTC74,w
 12259  0EBB  1D03               	btfss	3,2
 12260  0EBC  2EBE               	goto	u3741
 12261  0EBD  2EBF               	goto	u3740
 12262  0EBE                     u3741:
 12263  0EBE  2EB0               	goto	l5048
 12264  0EBF                     u3740:
 12265  0EBF                     l1198:	
 12266                           ;main.c: 107:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP
      +                          1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12267                           
 12268  0EBF  0023               	movlb	3	; select bank3
 12269  0EC0  1411               	bsf	17,0	;volatile
 12270  0EC1                     l1199:
 12271  0EC1  1811               	btfsc	17,0	;volatile
 12272  0EC2  2EC4               	goto	u3751
 12273  0EC3  2EC5               	goto	u3750
 12274  0EC4                     u3751:
 12275  0EC4  2EC1               	goto	l1199
 12276  0EC5                     u3750:
 12277  0EC5                     l5050:
 12278  0EC5  0023               	movlb	3	; select bank3
 12279  0EC6  0C0F               	rrf	15,w	;volatile
 12280  0EC7  0C89               	rrf	9,f
 12281  0EC8  3901               	andlw	1
 12282  0EC9  0020               	movlb	0	; select bank0
 12283  0ECA  00A2               	movwf	??_readTC74
 12284  0ECB  0023               	movlb	3	; select bank3
 12285  0ECC  0811               	movf	17,w	;volatile
 12286  0ECD  391F               	andlw	31
 12287  0ECE  0020               	movlb	0	; select bank0
 12288  0ECF  0422               	iorwf	??_readTC74,w
 12289  0ED0  1D03               	btfss	3,2
 12290  0ED1  2ED3               	goto	u3761
 12291  0ED2  2ED4               	goto	u3760
 12292  0ED3                     u3761:
 12293  0ED3  2EC5               	goto	l5050
 12294  0ED4                     u3760:
 12295  0ED4                     l5052:
 12296                           
 12297                           ;main.c: 109:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12298  0ED4  309A               	movlw	154
 12299  0ED5  3188  202D  318E   	fcall	_WriteI2C
 12300  0ED8                     l5054:
 12301  0ED8  0023               	movlb	3	; select bank3
 12302  0ED9  0C0F               	rrf	15,w	;volatile
 12303  0EDA  0C89               	rrf	9,f
 12304  0EDB  3901               	andlw	1
 12305  0EDC  0020               	movlb	0	; select bank0
 12306  0EDD  00A2               	movwf	??_readTC74
 12307  0EDE  0023               	movlb	3	; select bank3
 12308  0EDF  0811               	movf	17,w	;volatile
 12309  0EE0  391F               	andlw	31
 12310  0EE1  0020               	movlb	0	; select bank0
 12311  0EE2  0422               	iorwf	??_readTC74,w
 12312  0EE3  1D03               	btfss	3,2
 12313  0EE4  2EE6               	goto	u3771
 12314  0EE5  2EE7               	goto	u3770
 12315  0EE6                     u3771:
 12316  0EE6  2ED8               	goto	l5054
 12317  0EE7                     u3770:
 12318  0EE7                     l5056:
 12319                           
 12320                           ;main.c: 110:  WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12321  0EE7  3001               	movlw	1
 12322  0EE8  3188  202D  318E   	fcall	_WriteI2C
 12323  0EEB                     l5058:
 12324  0EEB  0023               	movlb	3	; select bank3
 12325  0EEC  0C0F               	rrf	15,w	;volatile
 12326  0EED  0C89               	rrf	9,f
 12327  0EEE  3901               	andlw	1
 12328  0EEF  0020               	movlb	0	; select bank0
 12329  0EF0  00A2               	movwf	??_readTC74
 12330  0EF1  0023               	movlb	3	; select bank3
 12331  0EF2  0811               	movf	17,w	;volatile
 12332  0EF3  391F               	andlw	31
 12333  0EF4  0020               	movlb	0	; select bank0
 12334  0EF5  0422               	iorwf	??_readTC74,w
 12335  0EF6  1D03               	btfss	3,2
 12336  0EF7  2EF9               	goto	u3781
 12337  0EF8  2EFA               	goto	u3780
 12338  0EF9                     u3781:
 12339  0EF9  2EEB               	goto	l5058
 12340  0EFA                     u3780:
 12341  0EFA                     l1212:	
 12342                           ;main.c: 111:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((S
      +                          SP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12343                           
 12344  0EFA  0023               	movlb	3	; select bank3
 12345  0EFB  1491               	bsf	17,1	;volatile
 12346  0EFC                     l1213:
 12347  0EFC  1891               	btfsc	17,1	;volatile
 12348  0EFD  2EFF               	goto	u3791
 12349  0EFE  2F00               	goto	u3790
 12350  0EFF                     u3791:
 12351  0EFF  2EFC               	goto	l1213
 12352  0F00                     u3790:
 12353  0F00                     l5060:
 12354  0F00  0023               	movlb	3	; select bank3
 12355  0F01  0C0F               	rrf	15,w	;volatile
 12356  0F02  0C89               	rrf	9,f
 12357  0F03  3901               	andlw	1
 12358  0F04  0020               	movlb	0	; select bank0
 12359  0F05  00A2               	movwf	??_readTC74
 12360  0F06  0023               	movlb	3	; select bank3
 12361  0F07  0811               	movf	17,w	;volatile
 12362  0F08  391F               	andlw	31
 12363  0F09  0020               	movlb	0	; select bank0
 12364  0F0A  0422               	iorwf	??_readTC74,w
 12365  0F0B  1D03               	btfss	3,2
 12366  0F0C  2F0E               	goto	u3801
 12367  0F0D  2F0F               	goto	u3800
 12368  0F0E                     u3801:
 12369  0F0E  2F00               	goto	l5060
 12370  0F0F                     u3800:
 12371  0F0F                     l5062:
 12372                           
 12373                           ;main.c: 112:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12374  0F0F  309B               	movlw	155
 12375  0F10  3188  202D  318E   	fcall	_WriteI2C
 12376  0F13                     l5064:
 12377  0F13  0023               	movlb	3	; select bank3
 12378  0F14  0C0F               	rrf	15,w	;volatile
 12379  0F15  0C89               	rrf	9,f
 12380  0F16  3901               	andlw	1
 12381  0F17  0020               	movlb	0	; select bank0
 12382  0F18  00A2               	movwf	??_readTC74
 12383  0F19  0023               	movlb	3	; select bank3
 12384  0F1A  0811               	movf	17,w	;volatile
 12385  0F1B  391F               	andlw	31
 12386  0F1C  0020               	movlb	0	; select bank0
 12387  0F1D  0422               	iorwf	??_readTC74,w
 12388  0F1E  1D03               	btfss	3,2
 12389  0F1F  2F21               	goto	u3811
 12390  0F20  2F22               	goto	u3810
 12391  0F21                     u3811:
 12392  0F21  2F13               	goto	l5064
 12393  0F22                     u3810:
 12394  0F22                     l5066:
 12395                           
 12396                           ;main.c: 113:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12397  0F22  3195  2593  318E   	fcall	_ReadI2C
 12398  0F25  0020               	movlb	0	; select bank0
 12399  0F26  00A2               	movwf	??_readTC74
 12400  0F27  0822               	movf	??_readTC74,w
 12401  0F28  00A3               	movwf	readTC74@value
 12402  0F29                     l5068:
 12403  0F29  0023               	movlb	3	; select bank3
 12404  0F2A  0C0F               	rrf	15,w	;volatile
 12405  0F2B  0C89               	rrf	9,f
 12406  0F2C  3901               	andlw	1
 12407  0F2D  0020               	movlb	0	; select bank0
 12408  0F2E  00A2               	movwf	??_readTC74
 12409  0F2F  0023               	movlb	3	; select bank3
 12410  0F30  0811               	movf	17,w	;volatile
 12411  0F31  391F               	andlw	31
 12412  0F32  0020               	movlb	0	; select bank0
 12413  0F33  0422               	iorwf	??_readTC74,w
 12414  0F34  1D03               	btfss	3,2
 12415  0F35  2F37               	goto	u3821
 12416  0F36  2F38               	goto	u3820
 12417  0F37                     u3821:
 12418  0F37  2F29               	goto	l5068
 12419  0F38                     u3820:
 12420  0F38                     l1226:	
 12421                           ;main.c: 114:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
      +                           } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12422                           
 12423  0F38  0023               	movlb	3	; select bank3
 12424  0F39  1691               	bsf	17,5	;volatile
 12425  0F3A  1611               	bsf	17,4	;volatile
 12426  0F3B                     l1227:
 12427  0F3B  1A11               	btfsc	17,4	;volatile
 12428  0F3C  2F3E               	goto	u3831
 12429  0F3D  2F3F               	goto	u3830
 12430  0F3E                     u3831:
 12431  0F3E  2F3B               	goto	l1227
 12432  0F3F                     u3830:
 12433  0F3F                     l5070:
 12434  0F3F  0023               	movlb	3	; select bank3
 12435  0F40  0C0F               	rrf	15,w	;volatile
 12436  0F41  0C89               	rrf	9,f
 12437  0F42  3901               	andlw	1
 12438  0F43  0020               	movlb	0	; select bank0
 12439  0F44  00A2               	movwf	??_readTC74
 12440  0F45  0023               	movlb	3	; select bank3
 12441  0F46  0811               	movf	17,w	;volatile
 12442  0F47  391F               	andlw	31
 12443  0F48  0020               	movlb	0	; select bank0
 12444  0F49  0422               	iorwf	??_readTC74,w
 12445  0F4A  1D03               	btfss	3,2
 12446  0F4B  2F4D               	goto	u3841
 12447  0F4C  2F4E               	goto	u3840
 12448  0F4D                     u3841:
 12449  0F4D  2F3F               	goto	l5070
 12450  0F4E                     u3840:
 12451  0F4E                     l1234:	
 12452                           ;main.c: 115:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 12453                           
 12454  0F4E  0023               	movlb	3	; select bank3
 12455  0F4F  1511               	bsf	17,2	;volatile
 12456  0F50                     l1235:
 12457  0F50  1911               	btfsc	17,2	;volatile
 12458  0F51  2F53               	goto	u3851
 12459  0F52  2F54               	goto	u3850
 12460  0F53                     u3851:
 12461  0F53  2F50               	goto	l1235
 12462  0F54                     u3850:
 12463  0F54                     l1238:
 12464                           
 12465                           ;main.c: 116: } while (!(value & 0x40));
 12466  0F54  0020               	movlb	0	; select bank0
 12467  0F55  1F23               	btfss	readTC74@value,6
 12468  0F56  2F58               	goto	u3861
 12469  0F57  2F59               	goto	u3860
 12470  0F58                     u3861:
 12471  0F58  2EB0               	goto	l1194
 12472  0F59                     u3860:
 12473  0F59                     l5072:
 12474  0F59  0023               	movlb	3	; select bank3
 12475  0F5A  0C0F               	rrf	15,w	;volatile
 12476  0F5B  0C89               	rrf	9,f
 12477  0F5C  3901               	andlw	1
 12478  0F5D  0020               	movlb	0	; select bank0
 12479  0F5E  00A2               	movwf	??_readTC74
 12480  0F5F  0023               	movlb	3	; select bank3
 12481  0F60  0811               	movf	17,w	;volatile
 12482  0F61  391F               	andlw	31
 12483  0F62  0020               	movlb	0	; select bank0
 12484  0F63  0422               	iorwf	??_readTC74,w
 12485  0F64  1D03               	btfss	3,2
 12486  0F65  2F67               	goto	u3871
 12487  0F66  2F68               	goto	u3870
 12488  0F67                     u3871:
 12489  0F67  2F59               	goto	l5072
 12490  0F68                     u3870:
 12491  0F68                     l1243:	
 12492                           ;main.c: 119:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP
      +                          1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12493                           
 12494  0F68  0023               	movlb	3	; select bank3
 12495  0F69  1411               	bsf	17,0	;volatile
 12496  0F6A                     l1244:
 12497  0F6A  1811               	btfsc	17,0	;volatile
 12498  0F6B  2F6D               	goto	u3881
 12499  0F6C  2F6E               	goto	u3880
 12500  0F6D                     u3881:
 12501  0F6D  2F6A               	goto	l1244
 12502  0F6E                     u3880:
 12503  0F6E                     l5074:
 12504  0F6E  0023               	movlb	3	; select bank3
 12505  0F6F  0C0F               	rrf	15,w	;volatile
 12506  0F70  0C89               	rrf	9,f
 12507  0F71  3901               	andlw	1
 12508  0F72  0020               	movlb	0	; select bank0
 12509  0F73  00A2               	movwf	??_readTC74
 12510  0F74  0023               	movlb	3	; select bank3
 12511  0F75  0811               	movf	17,w	;volatile
 12512  0F76  391F               	andlw	31
 12513  0F77  0020               	movlb	0	; select bank0
 12514  0F78  0422               	iorwf	??_readTC74,w
 12515  0F79  1D03               	btfss	3,2
 12516  0F7A  2F7C               	goto	u3891
 12517  0F7B  2F7D               	goto	u3890
 12518  0F7C                     u3891:
 12519  0F7C  2F6E               	goto	l5074
 12520  0F7D                     u3890:
 12521  0F7D                     l5076:
 12522                           
 12523                           ;main.c: 120:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12524  0F7D  309A               	movlw	154
 12525  0F7E  3188  202D  318E   	fcall	_WriteI2C
 12526  0F81                     l5078:
 12527  0F81  0023               	movlb	3	; select bank3
 12528  0F82  0C0F               	rrf	15,w	;volatile
 12529  0F83  0C89               	rrf	9,f
 12530  0F84  3901               	andlw	1
 12531  0F85  0020               	movlb	0	; select bank0
 12532  0F86  00A2               	movwf	??_readTC74
 12533  0F87  0023               	movlb	3	; select bank3
 12534  0F88  0811               	movf	17,w	;volatile
 12535  0F89  391F               	andlw	31
 12536  0F8A  0020               	movlb	0	; select bank0
 12537  0F8B  0422               	iorwf	??_readTC74,w
 12538  0F8C  1D03               	btfss	3,2
 12539  0F8D  2F8F               	goto	u3901
 12540  0F8E  2F90               	goto	u3900
 12541  0F8F                     u3901:
 12542  0F8F  2F81               	goto	l5078
 12543  0F90                     u3900:
 12544  0F90                     l5080:
 12545                           
 12546                           ;main.c: 121:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12547  0F90  3000               	movlw	0
 12548  0F91  3188  202D  318E   	fcall	_WriteI2C
 12549  0F94                     l5082:
 12550  0F94  0023               	movlb	3	; select bank3
 12551  0F95  0C0F               	rrf	15,w	;volatile
 12552  0F96  0C89               	rrf	9,f
 12553  0F97  3901               	andlw	1
 12554  0F98  0020               	movlb	0	; select bank0
 12555  0F99  00A2               	movwf	??_readTC74
 12556  0F9A  0023               	movlb	3	; select bank3
 12557  0F9B  0811               	movf	17,w	;volatile
 12558  0F9C  391F               	andlw	31
 12559  0F9D  0020               	movlb	0	; select bank0
 12560  0F9E  0422               	iorwf	??_readTC74,w
 12561  0F9F  1D03               	btfss	3,2
 12562  0FA0  2FA2               	goto	u3911
 12563  0FA1  2FA3               	goto	u3910
 12564  0FA2                     u3911:
 12565  0FA2  2F94               	goto	l5082
 12566  0FA3                     u3910:
 12567  0FA3                     l1257:	
 12568                           ;main.c: 122:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((S
      +                          SP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12569                           
 12570  0FA3  0023               	movlb	3	; select bank3
 12571  0FA4  1491               	bsf	17,1	;volatile
 12572  0FA5                     l1258:
 12573  0FA5  1891               	btfsc	17,1	;volatile
 12574  0FA6  2FA8               	goto	u3921
 12575  0FA7  2FA9               	goto	u3920
 12576  0FA8                     u3921:
 12577  0FA8  2FA5               	goto	l1258
 12578  0FA9                     u3920:
 12579  0FA9                     l5084:
 12580  0FA9  0023               	movlb	3	; select bank3
 12581  0FAA  0C0F               	rrf	15,w	;volatile
 12582  0FAB  0C89               	rrf	9,f
 12583  0FAC  3901               	andlw	1
 12584  0FAD  0020               	movlb	0	; select bank0
 12585  0FAE  00A2               	movwf	??_readTC74
 12586  0FAF  0023               	movlb	3	; select bank3
 12587  0FB0  0811               	movf	17,w	;volatile
 12588  0FB1  391F               	andlw	31
 12589  0FB2  0020               	movlb	0	; select bank0
 12590  0FB3  0422               	iorwf	??_readTC74,w
 12591  0FB4  1D03               	btfss	3,2
 12592  0FB5  2FB7               	goto	u3931
 12593  0FB6  2FB8               	goto	u3930
 12594  0FB7                     u3931:
 12595  0FB7  2FA9               	goto	l5084
 12596  0FB8                     u3930:
 12597  0FB8                     l5086:
 12598                           
 12599                           ;main.c: 123:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12600  0FB8  309B               	movlw	155
 12601  0FB9  3188  202D  318E   	fcall	_WriteI2C
 12602  0FBC                     l5088:
 12603  0FBC  0023               	movlb	3	; select bank3
 12604  0FBD  0C0F               	rrf	15,w	;volatile
 12605  0FBE  0C89               	rrf	9,f
 12606  0FBF  3901               	andlw	1
 12607  0FC0  0020               	movlb	0	; select bank0
 12608  0FC1  00A2               	movwf	??_readTC74
 12609  0FC2  0023               	movlb	3	; select bank3
 12610  0FC3  0811               	movf	17,w	;volatile
 12611  0FC4  391F               	andlw	31
 12612  0FC5  0020               	movlb	0	; select bank0
 12613  0FC6  0422               	iorwf	??_readTC74,w
 12614  0FC7  1D03               	btfss	3,2
 12615  0FC8  2FCA               	goto	u3941
 12616  0FC9  2FCB               	goto	u3940
 12617  0FCA                     u3941:
 12618  0FCA  2FBC               	goto	l5088
 12619  0FCB                     u3940:
 12620  0FCB                     l5090:
 12621                           
 12622                           ;main.c: 124:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12623  0FCB  3195  2593  318E   	fcall	_ReadI2C
 12624  0FCE  0020               	movlb	0	; select bank0
 12625  0FCF  00A2               	movwf	??_readTC74
 12626  0FD0  0822               	movf	??_readTC74,w
 12627  0FD1  00A3               	movwf	readTC74@value
 12628  0FD2                     l5092:
 12629  0FD2  0023               	movlb	3	; select bank3
 12630  0FD3  0C0F               	rrf	15,w	;volatile
 12631  0FD4  0C89               	rrf	9,f
 12632  0FD5  3901               	andlw	1
 12633  0FD6  0020               	movlb	0	; select bank0
 12634  0FD7  00A2               	movwf	??_readTC74
 12635  0FD8  0023               	movlb	3	; select bank3
 12636  0FD9  0811               	movf	17,w	;volatile
 12637  0FDA  391F               	andlw	31
 12638  0FDB  0020               	movlb	0	; select bank0
 12639  0FDC  0422               	iorwf	??_readTC74,w
 12640  0FDD  1D03               	btfss	3,2
 12641  0FDE  2FE0               	goto	u3951
 12642  0FDF  2FE1               	goto	u3950
 12643  0FE0                     u3951:
 12644  0FE0  2FD2               	goto	l5092
 12645  0FE1                     u3950:
 12646  0FE1                     l1271:	
 12647                           ;main.c: 125:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
      +                           } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12648                           
 12649  0FE1  0023               	movlb	3	; select bank3
 12650  0FE2  1691               	bsf	17,5	;volatile
 12651  0FE3  1611               	bsf	17,4	;volatile
 12652  0FE4                     l1272:
 12653  0FE4  1A11               	btfsc	17,4	;volatile
 12654  0FE5  2FE7               	goto	u3961
 12655  0FE6  2FE8               	goto	u3960
 12656  0FE7                     u3961:
 12657  0FE7  2FE4               	goto	l1272
 12658  0FE8                     u3960:
 12659  0FE8                     l5094:
 12660  0FE8  0023               	movlb	3	; select bank3
 12661  0FE9  0C0F               	rrf	15,w	;volatile
 12662  0FEA  0C89               	rrf	9,f
 12663  0FEB  3901               	andlw	1
 12664  0FEC  0020               	movlb	0	; select bank0
 12665  0FED  00A2               	movwf	??_readTC74
 12666  0FEE  0023               	movlb	3	; select bank3
 12667  0FEF  0811               	movf	17,w	;volatile
 12668  0FF0  391F               	andlw	31
 12669  0FF1  0020               	movlb	0	; select bank0
 12670  0FF2  0422               	iorwf	??_readTC74,w
 12671  0FF3  1D03               	btfss	3,2
 12672  0FF4  2FF6               	goto	u3971
 12673  0FF5  2FF7               	goto	u3970
 12674  0FF6                     u3971:
 12675  0FF6  2FE8               	goto	l5094
 12676  0FF7                     u3970:
 12677  0FF7                     l1279:	
 12678                           ;main.c: 126:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 12679                           
 12680  0FF7  0023               	movlb	3	; select bank3
 12681  0FF8  1511               	bsf	17,2	;volatile
 12682  0FF9                     l1280:
 12683  0FF9  1911               	btfsc	17,2	;volatile
 12684  0FFA  2FFC               	goto	u3981
 12685  0FFB  2FFD               	goto	u3980
 12686  0FFC                     u3981:
 12687  0FFC  2FF9               	goto	l1280
 12688  0FFD                     u3980:
 12689  0FFD                     l5096:
 12690                           
 12691                           ;main.c: 128:  return value;
 12692  0FFD  0020               	movlb	0	; select bank0
 12693  0FFE  0823               	movf	readTC74@value,w
 12694  0FFF                     l1284:
 12695  0FFF  0008               	return
 12696  1000                     __end_of_readTC74:
 12697                           
 12698                           	psect	text19
 12699  0887                     __ptext19:	
 12700 ;; *************** function _parseEPROMReading *****************
 12701 ;; Defined at:
 12702 ;;		line 61 in file "EPROMlib.c"
 12703 ;; Parameters:    Size  Location     Type
 12704 ;;  hours           1    wreg     PTR unsigned char 
 12705 ;;		 -> main@hours(1), 
 12706 ;;  minutes         1    7[BANK0 ] PTR unsigned char 
 12707 ;;		 -> main@minutes(1), 
 12708 ;;  seconds         1    8[BANK0 ] PTR unsigned char 
 12709 ;;		 -> main@seconds(1), 
 12710 ;;  temperature     1    9[BANK0 ] PTR unsigned char 
 12711 ;;		 -> main@temperature(1), 
 12712 ;;  luminosity      1   10[BANK0 ] PTR unsigned char 
 12713 ;;		 -> main@luminosity(1), 
 12714 ;;  operation       1   11[BANK0 ] unsigned char 
 12715 ;; Auto vars:     Size  Location     Type
 12716 ;;  hours           1   13[BANK0 ] PTR unsigned char 
 12717 ;;		 -> main@hours(1), 
 12718 ;;  dataAddr        2   14[BANK0 ] unsigned short 
 12719 ;; Return value:  Size  Location     Type
 12720 ;;                  1    wreg      void 
 12721 ;; Registers used:
 12722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12723 ;; Tracked objects:
 12724 ;;		On entry : 0/0
 12725 ;;		On exit  : 0/0
 12726 ;;		Unchanged: 0/0
 12727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12728 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12729 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12730 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12731 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12732 ;;Total ram usage:        9 bytes
 12733 ;; Hardware stack levels used: 1
 12734 ;; Hardware stack levels required when called: 6
 12735 ;; This function calls:
 12736 ;;		_DATAEE_ReadByte
 12737 ;;		_operADDR
 12738 ;; This function is called by:
 12739 ;;		_main
 12740 ;; This function uses a non-reentrant model
 12741 ;;
 12742                           
 12743                           
 12744                           ;psect for function _parseEPROMReading
 12745  0887                     _parseEPROMReading:
 12746                           
 12747                           ;incstack = 0
 12748                           ; Regs used in _parseEPROMReading: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12749                           ;parseEPROMReading@hours stored from wreg
 12750  0887  0020               	movlb	0	; select bank0
 12751  0888  00AD               	movwf	parseEPROMReading@hours
 12752  0889                     l5126:
 12753                           
 12754                           ;EPROMlib.c: 62:     uint16_t dataAddr;;EPROMlib.c: 64:     dataAddr = operADDR(operatio
      +                          n);
 12755  0889  082B               	movf	parseEPROMReading@operation,w
 12756  088A  3196  2691  3188   	fcall	_operADDR
 12757  088D  0020               	movlb	0	; select bank0
 12758  088E  0821               	movf	?_operADDR+1,w
 12759  088F  00AF               	movwf	parseEPROMReading@dataAddr+1
 12760  0890  0820               	movf	?_operADDR,w
 12761  0891  00AE               	movwf	parseEPROMReading@dataAddr
 12762  0892                     l5128:
 12763                           
 12764                           ;EPROMlib.c: 65:     *hours = DATAEE_ReadByte(dataAddr);
 12765  0892  082F               	movf	parseEPROMReading@dataAddr+1,w
 12766  0893  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12767  0894  082E               	movf	parseEPROMReading@dataAddr,w
 12768  0895  00A0               	movwf	DATAEE_ReadByte@bAdd
 12769  0896  3194  247F  3188   	fcall	_DATAEE_ReadByte
 12770  0899  0020               	movlb	0	; select bank0
 12771  089A  00AC               	movwf	??_parseEPROMReading
 12772  089B  082D               	movf	parseEPROMReading@hours,w
 12773  089C  0086               	movwf	6
 12774  089D  0187               	clrf	7
 12775  089E  082C               	movf	??_parseEPROMReading,w
 12776  089F  0081               	movwf	1
 12777  08A0                     l5130:
 12778                           
 12779                           ;EPROMlib.c: 66:     *minutes = DATAEE_ReadByte(dataAddr + 1);
 12780  08A0  082E               	movf	parseEPROMReading@dataAddr,w
 12781  08A1  3E01               	addlw	1
 12782  08A2  00A0               	movwf	DATAEE_ReadByte@bAdd
 12783  08A3  3000               	movlw	0
 12784  08A4  3D2F               	addwfc	parseEPROMReading@dataAddr+1,w
 12785  08A5  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12786  08A6  3194  247F  3188   	fcall	_DATAEE_ReadByte
 12787  08A9  0020               	movlb	0	; select bank0
 12788  08AA  00AC               	movwf	??_parseEPROMReading
 12789  08AB  0827               	movf	parseEPROMReading@minutes,w
 12790  08AC  0086               	movwf	6
 12791  08AD  0187               	clrf	7
 12792  08AE  082C               	movf	??_parseEPROMReading,w
 12793  08AF  0081               	movwf	1
 12794  08B0                     l5132:
 12795                           
 12796                           ;EPROMlib.c: 67:     *seconds = DATAEE_ReadByte(dataAddr + 2);
 12797  08B0  082E               	movf	parseEPROMReading@dataAddr,w
 12798  08B1  3E02               	addlw	2
 12799  08B2  00A0               	movwf	DATAEE_ReadByte@bAdd
 12800  08B3  3000               	movlw	0
 12801  08B4  3D2F               	addwfc	parseEPROMReading@dataAddr+1,w
 12802  08B5  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12803  08B6  3194  247F  3188   	fcall	_DATAEE_ReadByte
 12804  08B9  0020               	movlb	0	; select bank0
 12805  08BA  00AC               	movwf	??_parseEPROMReading
 12806  08BB  0828               	movf	parseEPROMReading@seconds,w
 12807  08BC  0086               	movwf	6
 12808  08BD  0187               	clrf	7
 12809  08BE  082C               	movf	??_parseEPROMReading,w
 12810  08BF  0081               	movwf	1
 12811  08C0                     l5134:
 12812                           
 12813                           ;EPROMlib.c: 68:     *temperature = DATAEE_ReadByte(dataAddr + 3);
 12814  08C0  082E               	movf	parseEPROMReading@dataAddr,w
 12815  08C1  3E03               	addlw	3
 12816  08C2  00A0               	movwf	DATAEE_ReadByte@bAdd
 12817  08C3  3000               	movlw	0
 12818  08C4  3D2F               	addwfc	parseEPROMReading@dataAddr+1,w
 12819  08C5  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12820  08C6  3194  247F  3188   	fcall	_DATAEE_ReadByte
 12821  08C9  0020               	movlb	0	; select bank0
 12822  08CA  00AC               	movwf	??_parseEPROMReading
 12823  08CB  0829               	movf	parseEPROMReading@temperature,w
 12824  08CC  0086               	movwf	6
 12825  08CD  0187               	clrf	7
 12826  08CE  082C               	movf	??_parseEPROMReading,w
 12827  08CF  0081               	movwf	1
 12828  08D0                     l5136:
 12829                           
 12830                           ;EPROMlib.c: 69:     *luminosity = DATAEE_ReadByte(dataAddr + 4);
 12831  08D0  082E               	movf	parseEPROMReading@dataAddr,w
 12832  08D1  3E04               	addlw	4
 12833  08D2  00A0               	movwf	DATAEE_ReadByte@bAdd
 12834  08D3  3000               	movlw	0
 12835  08D4  3D2F               	addwfc	parseEPROMReading@dataAddr+1,w
 12836  08D5  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12837  08D6  3194  247F  3188   	fcall	_DATAEE_ReadByte
 12838  08D9  0020               	movlb	0	; select bank0
 12839  08DA  00AC               	movwf	??_parseEPROMReading
 12840  08DB  082A               	movf	parseEPROMReading@luminosity,w
 12841  08DC  0086               	movwf	6
 12842  08DD  0187               	clrf	7
 12843  08DE  082C               	movf	??_parseEPROMReading,w
 12844  08DF  0081               	movwf	1
 12845  08E0                     l1353:
 12846  08E0  0008               	return
 12847  08E1                     __end_of_parseEPROMReading:
 12848                           
 12849                           	psect	text20
 12850  1691                     __ptext20:	
 12851 ;; *************** function _operADDR *****************
 12852 ;; Defined at:
 12853 ;;		line 7 in file "EPROMlib.c"
 12854 ;; Parameters:    Size  Location     Type
 12855 ;;  operation       1    wreg     unsigned char 
 12856 ;; Auto vars:     Size  Location     Type
 12857 ;;  operation       1    4[BANK0 ] unsigned char 
 12858 ;;  dataAddr        2    5[BANK0 ] unsigned short 
 12859 ;; Return value:  Size  Location     Type
 12860 ;;                  2    0[BANK0 ] unsigned short 
 12861 ;; Registers used:
 12862 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12863 ;; Tracked objects:
 12864 ;;		On entry : 0/0
 12865 ;;		On exit  : 0/0
 12866 ;;		Unchanged: 0/0
 12867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12868 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12869 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12870 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12871 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12872 ;;Total ram usage:        7 bytes
 12873 ;; Hardware stack levels used: 1
 12874 ;; Hardware stack levels required when called: 5
 12875 ;; This function calls:
 12876 ;;		Nothing
 12877 ;; This function is called by:
 12878 ;;		_storeEPROMBuild
 12879 ;;		_parseEPROMReading
 12880 ;; This function uses a non-reentrant model
 12881 ;;
 12882                           
 12883                           
 12884                           ;psect for function _operADDR
 12885  1691                     _operADDR:
 12886                           
 12887                           ;incstack = 0
 12888                           ; Regs used in _operADDR: [wreg-fsr0h+status,2+status,0]
 12889                           ;operADDR@operation stored from wreg
 12890  1691  0020               	movlb	0	; select bank0
 12891  1692  00A4               	movwf	operADDR@operation
 12892  1693                     l4858:
 12893                           
 12894                           ;EPROMlib.c: 8:     uint16_t dataAddr;;EPROMlib.c: 9:     switch (operation){
 12895  1693  2EAD               	goto	l4862
 12896  1694                     l1338:	
 12897                           ;EPROMlib.c: 10:         case 100:
 12898                           
 12899                           
 12900                           ;EPROMlib.c: 11:             dataAddr = 0xAB01;
 12901  1694  3001               	movlw	1
 12902  1695  00A5               	movwf	operADDR@dataAddr
 12903  1696  30AB               	movlw	171
 12904  1697  00A6               	movwf	operADDR@dataAddr+1
 12905                           
 12906                           ;EPROMlib.c: 12:             break;
 12907  1698  2EC3               	goto	l4864
 12908  1699                     l1340:	
 12909                           ;EPROMlib.c: 14:         case 101:
 12910                           
 12911                           
 12912                           ;EPROMlib.c: 15:             dataAddr = 0xAB07;
 12913  1699  3007               	movlw	7
 12914  169A  00A5               	movwf	operADDR@dataAddr
 12915  169B  30AB               	movlw	171
 12916  169C  00A6               	movwf	operADDR@dataAddr+1
 12917                           
 12918                           ;EPROMlib.c: 16:             break;
 12919  169D  2EC3               	goto	l4864
 12920  169E                     l1341:	
 12921                           ;EPROMlib.c: 18:         case 102:
 12922                           
 12923                           
 12924                           ;EPROMlib.c: 19:             dataAddr = 0xAB0D;
 12925  169E  300D               	movlw	13
 12926  169F  00A5               	movwf	operADDR@dataAddr
 12927  16A0  30AB               	movlw	171
 12928  16A1  00A6               	movwf	operADDR@dataAddr+1
 12929                           
 12930                           ;EPROMlib.c: 20:             break;
 12931  16A2  2EC3               	goto	l4864
 12932  16A3                     l1342:	
 12933                           ;EPROMlib.c: 22:         case 103:
 12934                           
 12935                           
 12936                           ;EPROMlib.c: 23:             dataAddr = 0xAB13;
 12937  16A3  3013               	movlw	19
 12938  16A4  00A5               	movwf	operADDR@dataAddr
 12939  16A5  30AB               	movlw	171
 12940  16A6  00A6               	movwf	operADDR@dataAddr+1
 12941                           
 12942                           ;EPROMlib.c: 24:             break;
 12943  16A7  2EC3               	goto	l4864
 12944  16A8                     l1343:	
 12945                           ;EPROMlib.c: 26:         default:
 12946                           
 12947                           
 12948                           ;EPROMlib.c: 27:             dataAddr = 0xBB13;
 12949  16A8  3013               	movlw	19
 12950  16A9  00A5               	movwf	operADDR@dataAddr
 12951  16AA  30BB               	movlw	187
 12952  16AB  00A6               	movwf	operADDR@dataAddr+1
 12953                           
 12954                           ;EPROMlib.c: 28:             break;
 12955  16AC  2EC3               	goto	l4864
 12956  16AD                     l4862:
 12957  16AD  0824               	movf	operADDR@operation,w
 12958  16AE  00A2               	movwf	??_operADDR
 12959  16AF  01A3               	clrf	??_operADDR+1
 12960                           
 12961                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12962                           ; Switch size 1, requested type "simple"
 12963                           ; Number of cases is 1, Range of values is 0 to 0
 12964                           ; switch strategies available:
 12965                           ; Name         Instructions Cycles
 12966                           ; simple_byte            4     3 (average)
 12967                           ; direct_byte            8     6 (fixed)
 12968                           ; jumptable            260     6 (fixed)
 12969                           ;	Chosen strategy is simple_byte
 12970  16B0  0823               	movf	??_operADDR+1,w
 12971  16B1  3A00               	xorlw	0	; case 0
 12972  16B2  1903               	skipnz
 12973  16B3  2EB5               	goto	l5822
 12974  16B4  2EA8               	goto	l1343
 12975  16B5                     l5822:
 12976                           
 12977                           ; Switch size 1, requested type "simple"
 12978                           ; Number of cases is 4, Range of values is 100 to 103
 12979                           ; switch strategies available:
 12980                           ; Name         Instructions Cycles
 12981                           ; simple_byte           13     7 (average)
 12982                           ; direct_byte           17     9 (fixed)
 12983                           ; jumptable            263     9 (fixed)
 12984                           ;	Chosen strategy is simple_byte
 12985  16B5  0822               	movf	??_operADDR,w
 12986  16B6  3A64               	xorlw	100	; case 100
 12987  16B7  1903               	skipnz
 12988  16B8  2E94               	goto	l1338
 12989  16B9  3A01               	xorlw	1	; case 101
 12990  16BA  1903               	skipnz
 12991  16BB  2E99               	goto	l1340
 12992  16BC  3A03               	xorlw	3	; case 102
 12993  16BD  1903               	skipnz
 12994  16BE  2E9E               	goto	l1341
 12995  16BF  3A01               	xorlw	1	; case 103
 12996  16C0  1903               	skipnz
 12997  16C1  2EA3               	goto	l1342
 12998  16C2  2EA8               	goto	l1343
 12999  16C3                     l4864:
 13000                           
 13001                           ;EPROMlib.c: 31:     return dataAddr;
 13002  16C3  0826               	movf	operADDR@dataAddr+1,w
 13003  16C4  00A1               	movwf	?_operADDR+1
 13004  16C5  0825               	movf	operADDR@dataAddr,w
 13005  16C6  00A0               	movwf	?_operADDR
 13006  16C7                     l1344:
 13007  16C7  0008               	return
 13008  16C8                     __end_of_operADDR:
 13009                           
 13010                           	psect	text21
 13011  0B2E                     __ptext21:	
 13012 ;; *************** function _parseEPROMInitialization *****************
 13013 ;; Defined at:
 13014 ;;		line 72 in file "EPROMlib.c"
 13015 ;; Parameters:    Size  Location     Type
 13016 ;;  magic_word      1    wreg     PTR unsigned char 
 13017 ;;		 -> main@magic_word(1), 
 13018 ;;  NREG            1    2[BANK0 ] PTR unsigned char 
 13019 ;;		 -> main@NREG(1), 
 13020 ;;  NR              1    3[BANK0 ] PTR unsigned char 
 13021 ;;		 -> main@NR(1), 
 13022 ;;  WI              1    4[BANK0 ] PTR unsigned char 
 13023 ;;		 -> main@WI(1), 
 13024 ;;  RI              1    5[BANK0 ] PTR unsigned char 
 13025 ;;		 -> main@RI(1), 
 13026 ;;  PMON            1    6[BANK0 ] PTR unsigned char 
 13027 ;;		 -> main@PMON(1), 
 13028 ;;  TALA            1    7[BANK0 ] PTR unsigned char 
 13029 ;;		 -> main@TALA(1), 
 13030 ;;  ALAT            1    8[BANK0 ] PTR unsigned char 
 13031 ;;		 -> main@ALAT(1), 
 13032 ;;  ALAL            1    9[BANK0 ] PTR unsigned char 
 13033 ;;		 -> main@ALAL(1), 
 13034 ;;  ALAF            1   10[BANK0 ] PTR unsigned char 
 13035 ;;		 -> main@ALAF(1), 
 13036 ;;  CLKH            1   11[BANK0 ] PTR unsigned char 
 13037 ;;		 -> main@CLKH(1), 
 13038 ;;  CLKM            1   12[BANK0 ] PTR unsigned char 
 13039 ;;		 -> main@CLKM(1), 
 13040 ;;  checksum        1   13[BANK0 ] PTR unsigned char 
 13041 ;;		 -> main@checksum(1), 
 13042 ;; Auto vars:     Size  Location     Type
 13043 ;;  magic_word      1   15[BANK0 ] PTR unsigned char 
 13044 ;;		 -> main@magic_word(1), 
 13045 ;; Return value:  Size  Location     Type
 13046 ;;                  1    wreg      void 
 13047 ;; Registers used:
 13048 ;;		wreg, fsr1l, fsr1h, status,2, pclath, cstack
 13049 ;; Tracked objects:
 13050 ;;		On entry : 0/0
 13051 ;;		On exit  : 0/0
 13052 ;;		Unchanged: 0/0
 13053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13054 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13055 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13056 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13057 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13058 ;;Total ram usage:       14 bytes
 13059 ;; Hardware stack levels used: 1
 13060 ;; Hardware stack levels required when called: 6
 13061 ;; This function calls:
 13062 ;;		_DATAEE_ReadByte
 13063 ;; This function is called by:
 13064 ;;		_main
 13065 ;; This function uses a non-reentrant model
 13066 ;;
 13067                           
 13068                           
 13069                           ;psect for function _parseEPROMInitialization
 13070  0B2E                     _parseEPROMInitialization:
 13071                           
 13072                           ;incstack = 0
 13073                           ; Regs used in _parseEPROMInitialization: [wreg+fsr1l+fsr1h+status,2+pclath+cstack]
 13074                           ;parseEPROMInitialization@magic_word stored from wreg
 13075  0B2E  0020               	movlb	0	; select bank0
 13076  0B2F  00AF               	movwf	parseEPROMInitialization@magic_word
 13077  0B30                     l5138:
 13078                           
 13079                           ;EPROMlib.c: 73:     *magic_word = DATAEE_ReadByte(0xAA01);
 13080  0B30  3001               	movlw	1
 13081  0B31  00A0               	movwf	DATAEE_ReadByte@bAdd
 13082  0B32  30AA               	movlw	170
 13083  0B33  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13084  0B34  3194  247F  318B   	fcall	_DATAEE_ReadByte
 13085  0B37  0020               	movlb	0	; select bank0
 13086  0B38  00AE               	movwf	??_parseEPROMInitialization
 13087  0B39  082F               	movf	parseEPROMInitialization@magic_word,w
 13088  0B3A  0086               	movwf	6
 13089  0B3B  0187               	clrf	7
 13090  0B3C  082E               	movf	??_parseEPROMInitialization,w
 13091  0B3D  0081               	movwf	1
 13092                           
 13093                           ;EPROMlib.c: 74:     *NREG = DATAEE_ReadByte(0xAA01 + 1);
 13094  0B3E  3002               	movlw	2
 13095  0B3F  00A0               	movwf	DATAEE_ReadByte@bAdd
 13096  0B40  30AA               	movlw	170
 13097  0B41  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13098  0B42  3194  247F  318B   	fcall	_DATAEE_ReadByte
 13099  0B45  0020               	movlb	0	; select bank0
 13100  0B46  00AE               	movwf	??_parseEPROMInitialization
 13101  0B47  0822               	movf	parseEPROMInitialization@NREG,w
 13102  0B48  0086               	movwf	6
 13103  0B49  0187               	clrf	7
 13104  0B4A  082E               	movf	??_parseEPROMInitialization,w
 13105  0B4B  0081               	movwf	1
 13106                           
 13107                           ;EPROMlib.c: 75:     *NR = DATAEE_ReadByte(0xAA01 + 2);
 13108  0B4C  3003               	movlw	3
 13109  0B4D  00A0               	movwf	DATAEE_ReadByte@bAdd
 13110  0B4E  30AA               	movlw	170
 13111  0B4F  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13112  0B50  3194  247F  318B   	fcall	_DATAEE_ReadByte
 13113  0B53  0020               	movlb	0	; select bank0
 13114  0B54  00AE               	movwf	??_parseEPROMInitialization
 13115  0B55  0823               	movf	parseEPROMInitialization@NR,w
 13116  0B56  0086               	movwf	6
 13117  0B57  0187               	clrf	7
 13118  0B58  082E               	movf	??_parseEPROMInitialization,w
 13119  0B59  0081               	movwf	1
 13120                           
 13121                           ;EPROMlib.c: 76:     *WI = DATAEE_ReadByte(0xAA01 + 3);
 13122  0B5A  3004               	movlw	4
 13123  0B5B  00A0               	movwf	DATAEE_ReadByte@bAdd
 13124  0B5C  30AA               	movlw	170
 13125  0B5D  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13126  0B5E  3194  247F  318B   	fcall	_DATAEE_ReadByte
 13127  0B61  0020               	movlb	0	; select bank0
 13128  0B62  00AE               	movwf	??_parseEPROMInitialization
 13129  0B63  0824               	movf	parseEPROMInitialization@WI,w
 13130  0B64  0086               	movwf	6
 13131  0B65  0187               	clrf	7
 13132  0B66  082E               	movf	??_parseEPROMInitialization,w
 13133  0B67  0081               	movwf	1
 13134                           
 13135                           ;EPROMlib.c: 77:     *RI = DATAEE_ReadByte(0xAA01 + 4);
 13136  0B68  3005               	movlw	5
 13137  0B69  00A0               	movwf	DATAEE_ReadByte@bAdd
 13138  0B6A  30AA               	movlw	170
 13139  0B6B  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13140  0B6C  3194  247F  318B   	fcall	_DATAEE_ReadByte
 13141  0B6F  0020               	movlb	0	; select bank0
 13142  0B70  00AE               	movwf	??_parseEPROMInitialization
 13143  0B71  0825               	movf	parseEPROMInitialization@RI,w
 13144  0B72  0086               	movwf	6
 13145  0B73  0187               	clrf	7
 13146  0B74  082E               	movf	??_parseEPROMInitialization,w
 13147  0B75  0081               	movwf	1
 13148                           
 13149                           ;EPROMlib.c: 78:     *PMON = DATAEE_ReadByte(0xAA01 + 5);
 13150  0B76  3006               	movlw	6
 13151  0B77  00A0               	movwf	DATAEE_ReadByte@bAdd
 13152  0B78  30AA               	movlw	170
 13153  0B79  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13154  0B7A  3194  247F  318B   	fcall	_DATAEE_ReadByte
 13155  0B7D  0020               	movlb	0	; select bank0
 13156  0B7E  00AE               	movwf	??_parseEPROMInitialization
 13157  0B7F  0826               	movf	parseEPROMInitialization@PMON,w
 13158  0B80  0086               	movwf	6
 13159  0B81  0187               	clrf	7
 13160  0B82  082E               	movf	??_parseEPROMInitialization,w
 13161  0B83  0081               	movwf	1
 13162                           
 13163                           ;EPROMlib.c: 79:     *TALA = DATAEE_ReadByte(0xAA01 + 6);
 13164  0B84  3007               	movlw	7
 13165  0B85  00A0               	movwf	DATAEE_ReadByte@bAdd
 13166  0B86  30AA               	movlw	170
 13167  0B87  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13168  0B88  3194  247F  318B   	fcall	_DATAEE_ReadByte
 13169  0B8B  0020               	movlb	0	; select bank0
 13170  0B8C  00AE               	movwf	??_parseEPROMInitialization
 13171  0B8D  0827               	movf	parseEPROMInitialization@TALA,w
 13172  0B8E  0086               	movwf	6
 13173  0B8F  0187               	clrf	7
 13174  0B90  082E               	movf	??_parseEPROMInitialization,w
 13175  0B91  0081               	movwf	1
 13176                           
 13177                           ;EPROMlib.c: 80:     *ALAT = DATAEE_ReadByte(0xAA01 + 7);
 13178  0B92  3008               	movlw	8
 13179  0B93  00A0               	movwf	DATAEE_ReadByte@bAdd
 13180  0B94  30AA               	movlw	170
 13181  0B95  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13182  0B96  3194  247F  318B   	fcall	_DATAEE_ReadByte
 13183  0B99  0020               	movlb	0	; select bank0
 13184  0B9A  00AE               	movwf	??_parseEPROMInitialization
 13185  0B9B  0828               	movf	parseEPROMInitialization@ALAT,w
 13186  0B9C  0086               	movwf	6
 13187  0B9D  0187               	clrf	7
 13188  0B9E  082E               	movf	??_parseEPROMInitialization,w
 13189  0B9F  0081               	movwf	1
 13190                           
 13191                           ;EPROMlib.c: 81:     *ALAL = DATAEE_ReadByte(0xAA01 + 8);
 13192  0BA0  3009               	movlw	9
 13193  0BA1  00A0               	movwf	DATAEE_ReadByte@bAdd
 13194  0BA2  30AA               	movlw	170
 13195  0BA3  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13196  0BA4  3194  247F  318B   	fcall	_DATAEE_ReadByte
 13197  0BA7  0020               	movlb	0	; select bank0
 13198  0BA8  00AE               	movwf	??_parseEPROMInitialization
 13199  0BA9  0829               	movf	parseEPROMInitialization@ALAL,w
 13200  0BAA  0086               	movwf	6
 13201  0BAB  0187               	clrf	7
 13202  0BAC  082E               	movf	??_parseEPROMInitialization,w
 13203  0BAD  0081               	movwf	1
 13204                           
 13205                           ;EPROMlib.c: 82:     *ALAF = DATAEE_ReadByte(0xAA01 + 9);
 13206  0BAE  300A               	movlw	10
 13207  0BAF  00A0               	movwf	DATAEE_ReadByte@bAdd
 13208  0BB0  30AA               	movlw	170
 13209  0BB1  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13210  0BB2  3194  247F  318B   	fcall	_DATAEE_ReadByte
 13211  0BB5  0020               	movlb	0	; select bank0
 13212  0BB6  00AE               	movwf	??_parseEPROMInitialization
 13213  0BB7  082A               	movf	parseEPROMInitialization@ALAF,w
 13214  0BB8  0086               	movwf	6
 13215  0BB9  0187               	clrf	7
 13216  0BBA  082E               	movf	??_parseEPROMInitialization,w
 13217  0BBB  0081               	movwf	1
 13218                           
 13219                           ;EPROMlib.c: 83:     *CLKH = DATAEE_ReadByte(0xAA01 + 10);
 13220  0BBC  300B               	movlw	11
 13221  0BBD  00A0               	movwf	DATAEE_ReadByte@bAdd
 13222  0BBE  30AA               	movlw	170
 13223  0BBF  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13224  0BC0  3194  247F  318B   	fcall	_DATAEE_ReadByte
 13225  0BC3  0020               	movlb	0	; select bank0
 13226  0BC4  00AE               	movwf	??_parseEPROMInitialization
 13227  0BC5  082B               	movf	parseEPROMInitialization@CLKH,w
 13228  0BC6  0086               	movwf	6
 13229  0BC7  0187               	clrf	7
 13230  0BC8  082E               	movf	??_parseEPROMInitialization,w
 13231  0BC9  0081               	movwf	1
 13232                           
 13233                           ;EPROMlib.c: 84:     *CLKM = DATAEE_ReadByte(0xAA01 + 11);
 13234  0BCA  300C               	movlw	12
 13235  0BCB  00A0               	movwf	DATAEE_ReadByte@bAdd
 13236  0BCC  30AA               	movlw	170
 13237  0BCD  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13238  0BCE  3194  247F  318B   	fcall	_DATAEE_ReadByte
 13239  0BD1  0020               	movlb	0	; select bank0
 13240  0BD2  00AE               	movwf	??_parseEPROMInitialization
 13241  0BD3  082C               	movf	parseEPROMInitialization@CLKM,w
 13242  0BD4  0086               	movwf	6
 13243  0BD5  0187               	clrf	7
 13244  0BD6  082E               	movf	??_parseEPROMInitialization,w
 13245  0BD7  0081               	movwf	1
 13246                           
 13247                           ;EPROMlib.c: 85:     *checksum = DATAEE_ReadByte(0xAA01 + 12);
 13248  0BD8  300D               	movlw	13
 13249  0BD9  00A0               	movwf	DATAEE_ReadByte@bAdd
 13250  0BDA  30AA               	movlw	170
 13251  0BDB  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13252  0BDC  3194  247F  318B   	fcall	_DATAEE_ReadByte
 13253  0BDF  0020               	movlb	0	; select bank0
 13254  0BE0  00AE               	movwf	??_parseEPROMInitialization
 13255  0BE1  082D               	movf	parseEPROMInitialization@checksum,w
 13256  0BE2  0086               	movwf	6
 13257  0BE3  0187               	clrf	7
 13258  0BE4  082E               	movf	??_parseEPROMInitialization,w
 13259  0BE5  0081               	movwf	1
 13260  0BE6                     l1356:
 13261  0BE6  0008               	return
 13262  0BE7                     __end_of_parseEPROMInitialization:
 13263                           
 13264                           	psect	text22
 13265  147F                     __ptext22:	
 13266 ;; *************** function _DATAEE_ReadByte *****************
 13267 ;; Defined at:
 13268 ;;		line 202 in file "mcc_generated_files/memory.c"
 13269 ;; Parameters:    Size  Location     Type
 13270 ;;  bAdd            2    0[BANK0 ] unsigned short 
 13271 ;; Auto vars:     Size  Location     Type
 13272 ;;		None
 13273 ;; Return value:  Size  Location     Type
 13274 ;;                  1    wreg      unsigned char 
 13275 ;; Registers used:
 13276 ;;		wreg, status,2
 13277 ;; Tracked objects:
 13278 ;;		On entry : 0/0
 13279 ;;		On exit  : 0/0
 13280 ;;		Unchanged: 0/0
 13281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13282 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13285 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13286 ;;Total ram usage:        2 bytes
 13287 ;; Hardware stack levels used: 1
 13288 ;; Hardware stack levels required when called: 5
 13289 ;; This function calls:
 13290 ;;		Nothing
 13291 ;; This function is called by:
 13292 ;;		_main
 13293 ;;		_parseEPROMReading
 13294 ;;		_parseEPROMInitialization
 13295 ;; This function uses a non-reentrant model
 13296 ;;
 13297                           
 13298                           
 13299                           ;psect for function _DATAEE_ReadByte
 13300  147F                     _DATAEE_ReadByte:
 13301  147F                     l4842:	
 13302                           ;incstack = 0
 13303                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 13304                           
 13305                           
 13306                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 13307  147F  0020               	movlb	0	; select bank0
 13308  1480  0821               	movf	DATAEE_ReadByte@bAdd+1,w
 13309  1481  0030               	movlb	16	; select bank16
 13310  1482  009B               	movwf	27	;volatile
 13311  1483                     l4844:
 13312                           
 13313                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 13314  1483  0020               	movlb	0	; select bank0
 13315  1484  0820               	movf	DATAEE_ReadByte@bAdd,w
 13316  1485  0030               	movlb	16	; select bank16
 13317  1486  009A               	movwf	26	;volatile
 13318  1487                     l4846:
 13319                           
 13320                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 13321  1487  171E               	bsf	30,6	;volsfr
 13322  1488                     l4848:
 13323                           
 13324                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 13325  1488  141E               	bsf	30,0	;volsfr
 13326  1489                     l4850:
 13327                           
 13328                           ;mcc_generated_files/memory.c: 208:     __nop();
 13329  1489  0000               	nop
 13330  148A                     l4852:
 13331                           
 13332                           ;mcc_generated_files/memory.c: 209:     __nop();
 13333  148A  0000               	nop
 13334  148B                     l4854:
 13335                           
 13336                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 13337  148B  0030               	movlb	16	; select bank16
 13338  148C  081C               	movf	28,w	;volatile
 13339  148D                     l771:
 13340  148D  0008               	return
 13341  148E                     __end_of_DATAEE_ReadByte:
 13342                           
 13343                           	psect	text23
 13344  09F1                     __ptext23:	
 13345 ;; *************** function _initializeEPROM *****************
 13346 ;; Defined at:
 13347 ;;		line 34 in file "EPROMlib.c"
 13348 ;; Parameters:    Size  Location     Type
 13349 ;;		None
 13350 ;; Auto vars:     Size  Location     Type
 13351 ;;		None
 13352 ;; Return value:  Size  Location     Type
 13353 ;;                  1    wreg      void 
 13354 ;; Registers used:
 13355 ;;		wreg, status,2, status,0, pclath, cstack
 13356 ;; Tracked objects:
 13357 ;;		On entry : 0/0
 13358 ;;		On exit  : 0/0
 13359 ;;		Unchanged: 0/0
 13360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13363 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13364 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13365 ;;Total ram usage:        1 bytes
 13366 ;; Hardware stack levels used: 1
 13367 ;; Hardware stack levels required when called: 6
 13368 ;; This function calls:
 13369 ;;		_DATAEE_WriteByte
 13370 ;; This function is called by:
 13371 ;;		_main
 13372 ;; This function uses a non-reentrant model
 13373 ;;
 13374                           
 13375                           
 13376                           ;psect for function _initializeEPROM
 13377  09F1                     _initializeEPROM:
 13378  09F1                     l5100:	
 13379                           ;incstack = 0
 13380                           ; Regs used in _initializeEPROM: [wreg+status,2+status,0+pclath+cstack]
 13381                           
 13382                           
 13383                           ;EPROMlib.c: 35:     DATAEE_WriteByte(0xAA01, 0xAA);
 13384  09F1  3001               	movlw	1
 13385  09F2  0020               	movlb	0	; select bank0
 13386  09F3  00A0               	movwf	DATAEE_WriteByte@bAdd
 13387  09F4  30AA               	movlw	170
 13388  09F5  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 13389  09F6  30AA               	movlw	170
 13390  09F7  00A4               	movwf	??_initializeEPROM
 13391  09F8  0824               	movf	??_initializeEPROM,w
 13392  09F9  00A2               	movwf	DATAEE_WriteByte@bData
 13393  09FA  3196  2638  3189   	fcall	_DATAEE_WriteByte
 13394                           
 13395                           ;EPROMlib.c: 36:     DATAEE_WriteByte(0xAA01 + 1, 10);
 13396  09FD  3002               	movlw	2
 13397  09FE  0020               	movlb	0	; select bank0
 13398  09FF  00A0               	movwf	DATAEE_WriteByte@bAdd
 13399  0A00  30AA               	movlw	170
 13400  0A01  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 13401  0A02  300A               	movlw	10
 13402  0A03  00A4               	movwf	??_initializeEPROM
 13403  0A04  0824               	movf	??_initializeEPROM,w
 13404  0A05  00A2               	movwf	DATAEE_WriteByte@bData
 13405  0A06  3196  2638  3189   	fcall	_DATAEE_WriteByte
 13406                           
 13407                           ;EPROMlib.c: 37:     DATAEE_WriteByte(0xAA01 + 2, 0);
 13408  0A09  3003               	movlw	3
 13409  0A0A  0020               	movlb	0	; select bank0
 13410  0A0B  00A0               	movwf	DATAEE_WriteByte@bAdd
 13411  0A0C  30AA               	movlw	170
 13412  0A0D  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 13413  0A0E  01A2               	clrf	DATAEE_WriteByte@bData
 13414  0A0F  3196  2638  3189   	fcall	_DATAEE_WriteByte
 13415                           
 13416                           ;EPROMlib.c: 38:     DATAEE_WriteByte(0xAA01 + 3, 0);
 13417  0A12  3004               	movlw	4
 13418  0A13  0020               	movlb	0	; select bank0
 13419  0A14  00A0               	movwf	DATAEE_WriteByte@bAdd
 13420  0A15  30AA               	movlw	170
 13421  0A16  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 13422  0A17  01A2               	clrf	DATAEE_WriteByte@bData
 13423  0A18  3196  2638  3189   	fcall	_DATAEE_WriteByte
 13424                           
 13425                           ;EPROMlib.c: 39:     DATAEE_WriteByte(0xAA01 + 4, 0);
 13426  0A1B  3005               	movlw	5
 13427  0A1C  0020               	movlb	0	; select bank0
 13428  0A1D  00A0               	movwf	DATAEE_WriteByte@bAdd
 13429  0A1E  30AA               	movlw	170
 13430  0A1F  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 13431  0A20  01A2               	clrf	DATAEE_WriteByte@bData
 13432  0A21  3196  2638  3189   	fcall	_DATAEE_WriteByte
 13433                           
 13434                           ;EPROMlib.c: 40:     DATAEE_WriteByte(0xAA01 + 5, 5);
 13435  0A24  3006               	movlw	6
 13436  0A25  0020               	movlb	0	; select bank0
 13437  0A26  00A0               	movwf	DATAEE_WriteByte@bAdd
 13438  0A27  30AA               	movlw	170
 13439  0A28  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 13440  0A29  3005               	movlw	5
 13441  0A2A  00A4               	movwf	??_initializeEPROM
 13442  0A2B  0824               	movf	??_initializeEPROM,w
 13443  0A2C  00A2               	movwf	DATAEE_WriteByte@bData
 13444  0A2D  3196  2638  3189   	fcall	_DATAEE_WriteByte
 13445                           
 13446                           ;EPROMlib.c: 41:     DATAEE_WriteByte(0xAA01 + 6, 3);
 13447  0A30  3007               	movlw	7
 13448  0A31  0020               	movlb	0	; select bank0
 13449  0A32  00A0               	movwf	DATAEE_WriteByte@bAdd
 13450  0A33  30AA               	movlw	170
 13451  0A34  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 13452  0A35  3003               	movlw	3
 13453  0A36  00A4               	movwf	??_initializeEPROM
 13454  0A37  0824               	movf	??_initializeEPROM,w
 13455  0A38  00A2               	movwf	DATAEE_WriteByte@bData
 13456  0A39  3196  2638  3189   	fcall	_DATAEE_WriteByte
 13457                           
 13458                           ;EPROMlib.c: 42:     DATAEE_WriteByte(0xAA01 + 7, 25);
 13459  0A3C  3008               	movlw	8
 13460  0A3D  0020               	movlb	0	; select bank0
 13461  0A3E  00A0               	movwf	DATAEE_WriteByte@bAdd
 13462  0A3F  30AA               	movlw	170
 13463  0A40  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 13464  0A41  3019               	movlw	25
 13465  0A42  00A4               	movwf	??_initializeEPROM
 13466  0A43  0824               	movf	??_initializeEPROM,w
 13467  0A44  00A2               	movwf	DATAEE_WriteByte@bData
 13468  0A45  3196  2638  3189   	fcall	_DATAEE_WriteByte
 13469                           
 13470                           ;EPROMlib.c: 43:     DATAEE_WriteByte(0xAA01 + 8, 2);
 13471  0A48  3009               	movlw	9
 13472  0A49  0020               	movlb	0	; select bank0
 13473  0A4A  00A0               	movwf	DATAEE_WriteByte@bAdd
 13474  0A4B  30AA               	movlw	170
 13475  0A4C  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 13476  0A4D  3002               	movlw	2
 13477  0A4E  00A4               	movwf	??_initializeEPROM
 13478  0A4F  0824               	movf	??_initializeEPROM,w
 13479  0A50  00A2               	movwf	DATAEE_WriteByte@bData
 13480  0A51  3196  2638  3189   	fcall	_DATAEE_WriteByte
 13481                           
 13482                           ;EPROMlib.c: 44:     DATAEE_WriteByte(0xAA01 + 9, 0);
 13483  0A54  300A               	movlw	10
 13484  0A55  0020               	movlb	0	; select bank0
 13485  0A56  00A0               	movwf	DATAEE_WriteByte@bAdd
 13486  0A57  30AA               	movlw	170
 13487  0A58  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 13488  0A59  01A2               	clrf	DATAEE_WriteByte@bData
 13489  0A5A  3196  2638  3189   	fcall	_DATAEE_WriteByte
 13490                           
 13491                           ;EPROMlib.c: 45:     DATAEE_WriteByte(0xAA01 + 10, 12);
 13492  0A5D  300B               	movlw	11
 13493  0A5E  0020               	movlb	0	; select bank0
 13494  0A5F  00A0               	movwf	DATAEE_WriteByte@bAdd
 13495  0A60  30AA               	movlw	170
 13496  0A61  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 13497  0A62  300C               	movlw	12
 13498  0A63  00A4               	movwf	??_initializeEPROM
 13499  0A64  0824               	movf	??_initializeEPROM,w
 13500  0A65  00A2               	movwf	DATAEE_WriteByte@bData
 13501  0A66  3196  2638  3189   	fcall	_DATAEE_WriteByte
 13502                           
 13503                           ;EPROMlib.c: 46:     DATAEE_WriteByte(0xAA01 + 11, 0);
 13504  0A69  300C               	movlw	12
 13505  0A6A  0020               	movlb	0	; select bank0
 13506  0A6B  00A0               	movwf	DATAEE_WriteByte@bAdd
 13507  0A6C  30AA               	movlw	170
 13508  0A6D  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 13509  0A6E  01A2               	clrf	DATAEE_WriteByte@bData
 13510  0A6F  3196  2638  3189   	fcall	_DATAEE_WriteByte
 13511                           
 13512                           ;EPROMlib.c: 47:     DATAEE_WriteByte(0xAA01 + 12, 0XE3);
 13513  0A72  300D               	movlw	13
 13514  0A73  0020               	movlb	0	; select bank0
 13515  0A74  00A0               	movwf	DATAEE_WriteByte@bAdd
 13516  0A75  30AA               	movlw	170
 13517  0A76  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 13518  0A77  30E3               	movlw	227
 13519  0A78  00A4               	movwf	??_initializeEPROM
 13520  0A79  0824               	movf	??_initializeEPROM,w
 13521  0A7A  00A2               	movwf	DATAEE_WriteByte@bData
 13522  0A7B  3196  2638  3189   	fcall	_DATAEE_WriteByte
 13523  0A7E                     l1347:
 13524  0A7E  0008               	return
 13525  0A7F                     __end_of_initializeEPROM:
 13526                           
 13527                           	psect	text24
 13528  1638                     __ptext24:	
 13529 ;; *************** function _DATAEE_WriteByte *****************
 13530 ;; Defined at:
 13531 ;;		line 180 in file "mcc_generated_files/memory.c"
 13532 ;; Parameters:    Size  Location     Type
 13533 ;;  bAdd            2    0[BANK0 ] unsigned short 
 13534 ;;  bData           1    2[BANK0 ] unsigned char 
 13535 ;; Auto vars:     Size  Location     Type
 13536 ;;  GIEBitValue     1    3[BANK0 ] unsigned char 
 13537 ;; Return value:  Size  Location     Type
 13538 ;;                  1    wreg      void 
 13539 ;; Registers used:
 13540 ;;		wreg, status,2, status,0
 13541 ;; Tracked objects:
 13542 ;;		On entry : 0/0
 13543 ;;		On exit  : 0/0
 13544 ;;		Unchanged: 0/0
 13545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13546 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13547 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13549 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13550 ;;Total ram usage:        4 bytes
 13551 ;; Hardware stack levels used: 1
 13552 ;; Hardware stack levels required when called: 5
 13553 ;; This function calls:
 13554 ;;		Nothing
 13555 ;; This function is called by:
 13556 ;;		_main
 13557 ;;		_initializeEPROM
 13558 ;;		_storeEPROMBuild
 13559 ;; This function uses a non-reentrant model
 13560 ;;
 13561                           
 13562                           
 13563                           ;psect for function _DATAEE_WriteByte
 13564  1638                     _DATAEE_WriteByte:
 13565  1638                     l4822:	
 13566                           ;incstack = 0
 13567                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 13568                           
 13569                           
 13570                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 13571  1638  3000               	movlw	0
 13572  1639  1B8B               	btfsc	11,7	;volatile
 13573  163A  3001               	movlw	1
 13574  163B  0020               	movlb	0	; select bank0
 13575  163C  00A3               	movwf	DATAEE_WriteByte@GIEBitValue
 13576                           
 13577                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 13578  163D  0821               	movf	DATAEE_WriteByte@bAdd+1,w
 13579  163E  0030               	movlb	16	; select bank16
 13580  163F  009B               	movwf	27	;volatile
 13581  1640                     l4824:
 13582                           
 13583                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 13584  1640  0020               	movlb	0	; select bank0
 13585  1641  0820               	movf	DATAEE_WriteByte@bAdd,w
 13586  1642  0030               	movlb	16	; select bank16
 13587  1643  009A               	movwf	26	;volatile
 13588  1644                     l4826:
 13589                           
 13590                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 13591  1644  0020               	movlb	0	; select bank0
 13592  1645  0822               	movf	DATAEE_WriteByte@bData,w
 13593  1646  0030               	movlb	16	; select bank16
 13594  1647  009C               	movwf	28	;volatile
 13595  1648                     l4828:
 13596                           
 13597                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 13598  1648  171E               	bsf	30,6	;volsfr
 13599  1649                     l4830:
 13600                           
 13601                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 13602  1649  151E               	bsf	30,2	;volsfr
 13603  164A                     l4832:
 13604                           
 13605                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 13606  164A  138B               	bcf	11,7	;volatile
 13607  164B                     l4834:
 13608                           
 13609                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 13610  164B  3055               	movlw	85
 13611  164C  009F               	movwf	31	;volsfr
 13612  164D                     l4836:
 13613                           
 13614                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 13615  164D  30AA               	movlw	170
 13616  164E  009F               	movwf	31	;volsfr
 13617  164F                     l4838:
 13618                           
 13619                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 13620  164F  149E               	bsf	30,1	;volsfr
 13621  1650                     l765:	
 13622                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 13623                           
 13624                           
 13625                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 13626  1650  189E               	btfsc	30,1	;volsfr
 13627  1651  2E53               	goto	u3651
 13628  1652  2E54               	goto	u3650
 13629  1653                     u3651:
 13630  1653  2E50               	goto	l765
 13631  1654                     u3650:
 13632  1654                     l767:
 13633                           
 13634                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 13635  1654  111E               	bcf	30,2	;volsfr
 13636  1655                     l4840:
 13637                           
 13638                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 13639  1655  0020               	movlb	0	; select bank0
 13640  1656  0C23               	rrf	DATAEE_WriteByte@GIEBitValue,w
 13641  1657  1C03               	skipc
 13642  1658  138B               	bcf	11,7	;volatile
 13643  1659  1803               	skipnc
 13644  165A  178B               	bsf	11,7	;volatile
 13645  165B                     l768:
 13646  165B  0008               	return
 13647  165C                     __end_of_DATAEE_WriteByte:
 13648                           
 13649                           	psect	text25
 13650  14C4                     __ptext25:	
 13651 ;; *************** function _SYSTEM_Initialize *****************
 13652 ;; Defined at:
 13653 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13654 ;; Parameters:    Size  Location     Type
 13655 ;;		None
 13656 ;; Auto vars:     Size  Location     Type
 13657 ;;		None
 13658 ;; Return value:  Size  Location     Type
 13659 ;;                  1    wreg      void 
 13660 ;; Registers used:
 13661 ;;		wreg, status,2, status,0, pclath, cstack
 13662 ;; Tracked objects:
 13663 ;;		On entry : 0/0
 13664 ;;		On exit  : 0/0
 13665 ;;		Unchanged: 0/0
 13666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13671 ;;Total ram usage:        0 bytes
 13672 ;; Hardware stack levels used: 1
 13673 ;; Hardware stack levels required when called: 7
 13674 ;; This function calls:
 13675 ;;		_ADCC_Initialize
 13676 ;;		_I2C1_Initialize
 13677 ;;		_OSCILLATOR_Initialize
 13678 ;;		_PIN_MANAGER_Initialize
 13679 ;;		_PMD_Initialize
 13680 ;;		_TMR1_Initialize
 13681 ;; This function is called by:
 13682 ;;		_main
 13683 ;; This function uses a non-reentrant model
 13684 ;;
 13685                           
 13686                           
 13687                           ;psect for function _SYSTEM_Initialize
 13688  14C4                     _SYSTEM_Initialize:
 13689  14C4                     l4996:	
 13690                           ;incstack = 0
 13691                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13692                           
 13693                           
 13694                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 13695  14C4  3194  2413  3194   	fcall	_PMD_Initialize
 13696  14C7                     l4998:
 13697                           
 13698                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 13699  14C7  3194  2436  3194   	fcall	_I2C1_Initialize
 13700  14CA                     l5000:
 13701                           
 13702                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 13703  14CA  3196  26C8  3194   	fcall	_PIN_MANAGER_Initialize
 13704  14CD                     l5002:
 13705                           
 13706                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 13707  14CD  3194  2424  3194   	fcall	_OSCILLATOR_Initialize
 13708  14D0                     l5004:
 13709                           
 13710                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 13711  14D0  3194  24D7  3194   	fcall	_ADCC_Initialize
 13712  14D3                     l5006:
 13713                           
 13714                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
 13715  14D3  3195  25D2  3194   	fcall	_TMR1_Initialize
 13716  14D6                     l476:
 13717  14D6  0008               	return
 13718  14D7                     __end_of_SYSTEM_Initialize:
 13719                           
 13720                           	psect	text26
 13721  15D2                     __ptext26:	
 13722 ;; *************** function _TMR1_Initialize *****************
 13723 ;; Defined at:
 13724 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 13725 ;; Parameters:    Size  Location     Type
 13726 ;;		None
 13727 ;; Auto vars:     Size  Location     Type
 13728 ;;		None
 13729 ;; Return value:  Size  Location     Type
 13730 ;;                  1    wreg      void 
 13731 ;; Registers used:
 13732 ;;		wreg, status,2, status,0, pclath, cstack
 13733 ;; Tracked objects:
 13734 ;;		On entry : 0/0
 13735 ;;		On exit  : 0/0
 13736 ;;		Unchanged: 0/0
 13737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13742 ;;Total ram usage:        0 bytes
 13743 ;; Hardware stack levels used: 1
 13744 ;; Hardware stack levels required when called: 6
 13745 ;; This function calls:
 13746 ;;		_TMR1_SetInterruptHandler
 13747 ;; This function is called by:
 13748 ;;		_SYSTEM_Initialize
 13749 ;; This function uses a non-reentrant model
 13750 ;;
 13751                           
 13752                           
 13753                           ;psect for function _TMR1_Initialize
 13754  15D2                     _TMR1_Initialize:
 13755  15D2                     l4786:	
 13756                           ;incstack = 0
 13757                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13758                           
 13759                           
 13760                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 13761  15D2  0024               	movlb	4	; select bank4
 13762  15D3  018F               	clrf	15	;volatile
 13763                           
 13764                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 13765  15D4  0190               	clrf	16	;volatile
 13766  15D5                     l4788:
 13767                           
 13768                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 13769  15D5  3004               	movlw	4
 13770  15D6  0091               	movwf	17	;volatile
 13771  15D7                     l4790:
 13772                           
 13773                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x86;
 13774  15D7  3086               	movlw	134
 13775  15D8  008D               	movwf	13	;volatile
 13776  15D9                     l4792:
 13777                           
 13778                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xE8;
 13779  15D9  30E8               	movlw	232
 13780  15DA  008C               	movwf	12	;volatile
 13781  15DB                     l4794:
 13782                           
 13783                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
 13784  15DB  002E               	movlb	14	; select bank14
 13785  15DC  1010               	bcf	16,0	;volatile
 13786  15DD                     l4796:
 13787                           
 13788                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13789  15DD  0024               	movlb	4	; select bank4
 13790  15DE  080D               	movf	13,w	;volatile
 13791  15DF  0022               	movlb	2	; select bank2
 13792  15E0  00E2               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
 13793  15E1  0024               	movlb	4	; select bank4
 13794  15E2  080C               	movf	12,w	;volatile
 13795  15E3  0022               	movlb	2	; select bank2
 13796  15E4  00E1               	movwf	_timer1ReloadVal^(0+256)	;volatile
 13797  15E5                     l4798:
 13798                           
 13799                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 13800  15E5  002E               	movlb	14	; select bank14
 13801  15E6  141A               	bsf	26,0	;volatile
 13802  15E7                     l4800:
 13803                           
 13804                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 13805  15E7  3002               	movlw	low _TMR1_DefaultInterruptHandler
 13806  15E8  0020               	movlb	0	; select bank0
 13807  15E9  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 13808  15EA  3000               	movlw	high _TMR1_DefaultInterruptHandler
 13809  15EB  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 13810  15EC  3194  242D  3195   	fcall	_TMR1_SetInterruptHandler
 13811  15EF                     l4802:
 13812                           
 13813                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x01;
 13814  15EF  3001               	movlw	1
 13815  15F0  0024               	movlb	4	; select bank4
 13816  15F1  008E               	movwf	14	;volatile
 13817  15F2                     l532:
 13818  15F2  0008               	return
 13819  15F3                     __end_of_TMR1_Initialize:
 13820                           
 13821                           	psect	text27
 13822  142D                     __ptext27:	
 13823 ;; *************** function _TMR1_SetInterruptHandler *****************
 13824 ;; Defined at:
 13825 ;;		line 185 in file "mcc_generated_files/tmr1.c"
 13826 ;; Parameters:    Size  Location     Type
 13827 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 13828 ;;		 -> timerInterrupt(1), TMR1_DefaultInterruptHandler(1), 
 13829 ;; Auto vars:     Size  Location     Type
 13830 ;;		None
 13831 ;; Return value:  Size  Location     Type
 13832 ;;                  1    wreg      void 
 13833 ;; Registers used:
 13834 ;;		wreg
 13835 ;; Tracked objects:
 13836 ;;		On entry : 0/0
 13837 ;;		On exit  : 0/0
 13838 ;;		Unchanged: 0/0
 13839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13840 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13843 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13844 ;;Total ram usage:        2 bytes
 13845 ;; Hardware stack levels used: 1
 13846 ;; Hardware stack levels required when called: 5
 13847 ;; This function calls:
 13848 ;;		Nothing
 13849 ;; This function is called by:
 13850 ;;		_TMR1_Initialize
 13851 ;;		_main
 13852 ;; This function uses a non-reentrant model
 13853 ;;
 13854                           
 13855                           
 13856                           ;psect for function _TMR1_SetInterruptHandler
 13857  142D                     _TMR1_SetInterruptHandler:
 13858  142D                     l4478:	
 13859                           ;incstack = 0
 13860                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 13861                           
 13862                           
 13863                           ;mcc_generated_files/tmr1.c: 186:     TMR1_InterruptHandler = InterruptHandler;
 13864  142D  0020               	movlb	0	; select bank0
 13865  142E  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 13866  142F  0022               	movlb	2	; select bank2
 13867  1430  00E0               	movwf	(_TMR1_InterruptHandler+1)^(0+256)
 13868  1431  0020               	movlb	0	; select bank0
 13869  1432  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 13870  1433  0022               	movlb	2	; select bank2
 13871  1434  00DF               	movwf	_TMR1_InterruptHandler^(0+256)
 13872  1435                     l565:
 13873  1435  0008               	return
 13874  1436                     __end_of_TMR1_SetInterruptHandler:
 13875                           
 13876                           	psect	text28
 13877  1413                     __ptext28:	
 13878 ;; *************** function _PMD_Initialize *****************
 13879 ;; Defined at:
 13880 ;;		line 74 in file "mcc_generated_files/mcc.c"
 13881 ;; Parameters:    Size  Location     Type
 13882 ;;		None
 13883 ;; Auto vars:     Size  Location     Type
 13884 ;;		None
 13885 ;; Return value:  Size  Location     Type
 13886 ;;                  1    wreg      void 
 13887 ;; Registers used:
 13888 ;;		status,2
 13889 ;; Tracked objects:
 13890 ;;		On entry : 0/0
 13891 ;;		On exit  : 0/0
 13892 ;;		Unchanged: 0/0
 13893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13898 ;;Total ram usage:        0 bytes
 13899 ;; Hardware stack levels used: 1
 13900 ;; Hardware stack levels required when called: 5
 13901 ;; This function calls:
 13902 ;;		Nothing
 13903 ;; This function is called by:
 13904 ;;		_SYSTEM_Initialize
 13905 ;; This function uses a non-reentrant model
 13906 ;;
 13907                           
 13908                           
 13909                           ;psect for function _PMD_Initialize
 13910  1413                     _PMD_Initialize:
 13911  1413                     l4762:	
 13912                           ;incstack = 0
 13913                           ; Regs used in _PMD_Initialize: [status,2]
 13914                           
 13915                           
 13916                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
 13917  1413  002F               	movlb	15	; select bank15
 13918  1414  0196               	clrf	22	;volatile
 13919                           
 13920                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
 13921  1415  0197               	clrf	23	;volatile
 13922                           
 13923                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
 13924  1416  0198               	clrf	24	;volatile
 13925                           
 13926                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
 13927  1417  0199               	clrf	25	;volatile
 13928                           
 13929                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
 13930  1418  019A               	clrf	26	;volatile
 13931                           
 13932                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
 13933  1419  019B               	clrf	27	;volatile
 13934  141A                     l482:
 13935  141A  0008               	return
 13936  141B                     __end_of_PMD_Initialize:
 13937                           
 13938                           	psect	text29
 13939  16C8                     __ptext29:	
 13940 ;; *************** function _PIN_MANAGER_Initialize *****************
 13941 ;; Defined at:
 13942 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13943 ;; Parameters:    Size  Location     Type
 13944 ;;		None
 13945 ;; Auto vars:     Size  Location     Type
 13946 ;;		None
 13947 ;; Return value:  Size  Location     Type
 13948 ;;                  1    wreg      void 
 13949 ;; Registers used:
 13950 ;;		wreg, status,2
 13951 ;; Tracked objects:
 13952 ;;		On entry : 0/0
 13953 ;;		On exit  : 0/0
 13954 ;;		Unchanged: 0/0
 13955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13960 ;;Total ram usage:        0 bytes
 13961 ;; Hardware stack levels used: 1
 13962 ;; Hardware stack levels required when called: 5
 13963 ;; This function calls:
 13964 ;;		Nothing
 13965 ;; This function is called by:
 13966 ;;		_SYSTEM_Initialize
 13967 ;; This function uses a non-reentrant model
 13968 ;;
 13969                           
 13970                           
 13971                           ;psect for function _PIN_MANAGER_Initialize
 13972  16C8                     _PIN_MANAGER_Initialize:
 13973  16C8                     l4712:	
 13974                           ;incstack = 0
 13975                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 13976                           
 13977                           
 13978                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 13979  16C8  0020               	movlb	0	; select bank0
 13980  16C9  019A               	clrf	26	;volatile
 13981                           
 13982                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 13983  16CA  0199               	clrf	25	;volatile
 13984                           
 13985                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 13986  16CB  0196               	clrf	22	;volatile
 13987                           
 13988                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 13989  16CC  0197               	clrf	23	;volatile
 13990                           
 13991                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 13992  16CD  0198               	clrf	24	;volatile
 13993  16CE                     l4714:
 13994                           
 13995                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 13996  16CE  3007               	movlw	7
 13997  16CF  0095               	movwf	21	;volatile
 13998  16D0                     l4716:
 13999                           
 14000                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 14001  16D0  300F               	movlw	15
 14002  16D1  0091               	movwf	17	;volatile
 14003  16D2                     l4718:
 14004                           
 14005                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 14006  16D2  30FF               	movlw	255
 14007  16D3  0092               	movwf	18	;volatile
 14008  16D4                     l4720:
 14009                           
 14010                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 14011  16D4  30FF               	movlw	255
 14012  16D5  0093               	movwf	19	;volatile
 14013  16D6                     l4722:
 14014                           
 14015                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 14016  16D6  30FF               	movlw	255
 14017  16D7  0094               	movwf	20	;volatile
 14018  16D8                     l4724:
 14019                           
 14020                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 14021  16D8  30FF               	movlw	255
 14022  16D9  003E               	movlb	30	; select bank30
 14023  16DA  00D9               	movwf	89	;volatile
 14024  16DB                     l4726:
 14025                           
 14026                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 14027  16DB  30C7               	movlw	199
 14028  16DC  00CE               	movwf	78	;volatile
 14029  16DD                     l4728:
 14030                           
 14031                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 14032  16DD  30EF               	movlw	239
 14033  16DE  00C3               	movwf	67	;volatile
 14034  16DF                     l4730:
 14035                           
 14036                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 14037  16DF  3007               	movlw	7
 14038  16E0  00E4               	movwf	100	;volatile
 14039  16E1                     l4732:
 14040                           
 14041                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x0F;
 14042  16E1  300F               	movlw	15
 14043  16E2  00B8               	movwf	56	;volatile
 14044                           
 14045                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 14046  16E3  01DA               	clrf	90	;volatile
 14047                           
 14048                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 14049  16E4  01E5               	clrf	101	;volatile
 14050                           
 14051                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 14052  16E5  01C4               	clrf	68	;volatile
 14053                           
 14054                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 14055  16E6  01B9               	clrf	57	;volatile
 14056                           
 14057                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 14058  16E7  01CF               	clrf	79	;volatile
 14059                           
 14060                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 14061  16E8  01E6               	clrf	102	;volatile
 14062                           
 14063                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 14064  16E9  01BA               	clrf	58	;volatile
 14065                           
 14066                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 14067  16EA  01C5               	clrf	69	;volatile
 14068                           
 14069                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 14070  16EB  01D0               	clrf	80	;volatile
 14071                           
 14072                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 14073  16EC  01DB               	clrf	91	;volatile
 14074  16ED                     l4734:
 14075                           
 14076                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 14077  16ED  30FF               	movlw	255
 14078  16EE  00BB               	movwf	59	;volatile
 14079  16EF                     l4736:
 14080                           
 14081                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 14082  16EF  30FF               	movlw	255
 14083  16F0  00C6               	movwf	70	;volatile
 14084  16F1                     l4738:
 14085                           
 14086                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 14087  16F1  30FF               	movlw	255
 14088  16F2  00D1               	movwf	81	;volatile
 14089  16F3                     l4740:
 14090                           
 14091                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 14092  16F3  30FF               	movlw	255
 14093  16F4  00DC               	movwf	92	;volatile
 14094  16F5                     l4742:
 14095                           
 14096                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 14097  16F5  3007               	movlw	7
 14098  16F6  00E7               	movwf	103	;volatile
 14099  16F7                     l4744:
 14100                           
 14101                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 14102  16F7  30FF               	movlw	255
 14103  16F8  00BC               	movwf	60	;volatile
 14104  16F9                     l4746:
 14105                           
 14106                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 14107  16F9  30FF               	movlw	255
 14108  16FA  00C7               	movwf	71	;volatile
 14109  16FB                     l4748:
 14110                           
 14111                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 14112  16FB  30FF               	movlw	255
 14113  16FC  00D2               	movwf	82	;volatile
 14114  16FD                     l4750:
 14115                           
 14116                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 14117  16FD  30FF               	movlw	255
 14118  16FE  00DD               	movwf	93	;volatile
 14119  16FF                     l4752:
 14120                           
 14121                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 14122  16FF  3007               	movlw	7
 14123  1700  00E8               	movwf	104	;volatile
 14124  1701                     l4754:
 14125                           
 14126                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 14127  1701  3013               	movlw	19
 14128  1702  003D               	movlb	29	; select bank29
 14129  1703  00C5               	movwf	69	;volatile
 14130  1704                     l4756:
 14131                           
 14132                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x14;
 14133  1704  3014               	movlw	20
 14134  1705  003E               	movlb	30	; select bank30
 14135  1706  00A3               	movwf	35	;volatile
 14136  1707                     l4758:
 14137                           
 14138                           ;mcc_generated_files/pin_manager.c: 129:     RC4PPS = 0x15;
 14139  1707  3015               	movlw	21
 14140  1708  00A4               	movwf	36	;volatile
 14141  1709                     l4760:
 14142                           
 14143                           ;mcc_generated_files/pin_manager.c: 130:     SSP1DATPPS = 0x14;
 14144  1709  3014               	movlw	20
 14145  170A  003D               	movlb	29	; select bank29
 14146  170B  00C6               	movwf	70	;volatile
 14147  170C                     l436:
 14148  170C  0008               	return
 14149  170D                     __end_of_PIN_MANAGER_Initialize:
 14150                           
 14151                           	psect	text30
 14152  1424                     __ptext30:	
 14153 ;; *************** function _OSCILLATOR_Initialize *****************
 14154 ;; Defined at:
 14155 ;;		line 60 in file "mcc_generated_files/mcc.c"
 14156 ;; Parameters:    Size  Location     Type
 14157 ;;		None
 14158 ;; Auto vars:     Size  Location     Type
 14159 ;;		None
 14160 ;; Return value:  Size  Location     Type
 14161 ;;                  1    wreg      void 
 14162 ;; Registers used:
 14163 ;;		wreg, status,2
 14164 ;; Tracked objects:
 14165 ;;		On entry : 0/0
 14166 ;;		On exit  : 0/0
 14167 ;;		Unchanged: 0/0
 14168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14173 ;;Total ram usage:        0 bytes
 14174 ;; Hardware stack levels used: 1
 14175 ;; Hardware stack levels required when called: 5
 14176 ;; This function calls:
 14177 ;;		Nothing
 14178 ;; This function is called by:
 14179 ;;		_SYSTEM_Initialize
 14180 ;; This function uses a non-reentrant model
 14181 ;;
 14182                           
 14183                           
 14184                           ;psect for function _OSCILLATOR_Initialize
 14185  1424                     _OSCILLATOR_Initialize:
 14186  1424                     l4772:	
 14187                           ;incstack = 0
 14188                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 14189                           
 14190                           
 14191                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
 14192  1424  3062               	movlw	98
 14193  1425  0031               	movlb	17	; select bank17
 14194  1426  008D               	movwf	13	;volatile
 14195  1427                     l4774:
 14196                           
 14197                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
 14198  1427  018F               	clrf	15	;volatile
 14199  1428                     l4776:
 14200                           
 14201                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
 14202  1428  0191               	clrf	17	;volatile
 14203                           
 14204                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x02;
 14205  1429  3002               	movlw	2
 14206  142A  0093               	movwf	19	;volatile
 14207  142B                     l4778:
 14208                           
 14209                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
 14210  142B  0192               	clrf	18	;volatile
 14211  142C                     l479:
 14212  142C  0008               	return
 14213  142D                     __end_of_OSCILLATOR_Initialize:
 14214                           
 14215                           	psect	text31
 14216  1436                     __ptext31:	
 14217 ;; *************** function _I2C1_Initialize *****************
 14218 ;; Defined at:
 14219 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 14220 ;; Parameters:    Size  Location     Type
 14221 ;;		None
 14222 ;; Auto vars:     Size  Location     Type
 14223 ;;		None
 14224 ;; Return value:  Size  Location     Type
 14225 ;;                  1    wreg      void 
 14226 ;; Registers used:
 14227 ;;		wreg, status,2
 14228 ;; Tracked objects:
 14229 ;;		On entry : 0/0
 14230 ;;		On exit  : 0/0
 14231 ;;		Unchanged: 0/0
 14232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14237 ;;Total ram usage:        0 bytes
 14238 ;; Hardware stack levels used: 1
 14239 ;; Hardware stack levels required when called: 5
 14240 ;; This function calls:
 14241 ;;		Nothing
 14242 ;; This function is called by:
 14243 ;;		_SYSTEM_Initialize
 14244 ;; This function uses a non-reentrant model
 14245 ;;
 14246                           
 14247                           
 14248                           ;psect for function _I2C1_Initialize
 14249  1436                     _I2C1_Initialize:
 14250  1436                     l4764:	
 14251                           ;incstack = 0
 14252                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 14253                           
 14254                           
 14255                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 14256  1436  3080               	movlw	128
 14257  1437  0023               	movlb	3	; select bank3
 14258  1438  008F               	movwf	15	;volatile
 14259                           
 14260                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 14261  1439  3008               	movlw	8
 14262  143A  0090               	movwf	16	;volatile
 14263  143B                     l4766:
 14264                           
 14265                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 14266  143B  0191               	clrf	17	;volatile
 14267  143C                     l4768:
 14268                           
 14269                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x03;
 14270  143C  3003               	movlw	3
 14271  143D  008D               	movwf	13	;volatile
 14272  143E                     l4770:
 14273                           
 14274                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 14275  143E  1290               	bcf	16,5	;volatile
 14276  143F                     l876:
 14277  143F  0008               	return
 14278  1440                     __end_of_I2C1_Initialize:
 14279                           
 14280                           	psect	text32
 14281  14D7                     __ptext32:	
 14282 ;; *************** function _ADCC_Initialize *****************
 14283 ;; Defined at:
 14284 ;;		line 63 in file "mcc_generated_files/adcc.c"
 14285 ;; Parameters:    Size  Location     Type
 14286 ;;		None
 14287 ;; Auto vars:     Size  Location     Type
 14288 ;;		None
 14289 ;; Return value:  Size  Location     Type
 14290 ;;                  1    wreg      void 
 14291 ;; Registers used:
 14292 ;;		wreg, status,2
 14293 ;; Tracked objects:
 14294 ;;		On entry : 0/0
 14295 ;;		On exit  : 0/0
 14296 ;;		Unchanged: 0/0
 14297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14302 ;;Total ram usage:        0 bytes
 14303 ;; Hardware stack levels used: 1
 14304 ;; Hardware stack levels required when called: 5
 14305 ;; This function calls:
 14306 ;;		Nothing
 14307 ;; This function is called by:
 14308 ;;		_SYSTEM_Initialize
 14309 ;; This function uses a non-reentrant model
 14310 ;;
 14311                           
 14312                           
 14313                           ;psect for function _ADCC_Initialize
 14314  14D7                     _ADCC_Initialize:
 14315  14D7                     l4780:	
 14316                           ;incstack = 0
 14317                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 14318                           
 14319                           
 14320                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 14321  14D7  0022               	movlb	2	; select bank2
 14322  14D8  018E               	clrf	14	;volatile
 14323                           
 14324                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 14325  14D9  018F               	clrf	15	;volatile
 14326                           
 14327                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 14328  14DA  0190               	clrf	16	;volatile
 14329                           
 14330                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 14331  14DB  0191               	clrf	17	;volatile
 14332                           
 14333                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 14334  14DC  0192               	clrf	18	;volatile
 14335                           
 14336                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 14337  14DD  0193               	clrf	19	;volatile
 14338                           
 14339                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 14340  14DE  018D               	clrf	13	;volatile
 14341                           
 14342                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 14343  14DF  0021               	movlb	1	; select bank1
 14344  14E0  019E               	clrf	30	;volatile
 14345                           
 14346                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 14347  14E1  019B               	clrf	27	;volatile
 14348                           
 14349                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
 14350  14E2  019C               	clrf	28	;volatile
 14351                           
 14352                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
 14353  14E3  0194               	clrf	20	;volatile
 14354                           
 14355                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
 14356  14E4  0195               	clrf	21	;volatile
 14357                           
 14358                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
 14359  14E5  0196               	clrf	22	;volatile
 14360                           
 14361                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
 14362  14E6  0197               	clrf	23	;volatile
 14363                           
 14364                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
 14365  14E7  019A               	clrf	26	;volatile
 14366                           
 14367                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
 14368  14E8  0199               	clrf	25	;volatile
 14369                           
 14370                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x00;
 14371  14E9  0198               	clrf	24	;volatile
 14372  14EA                     l4782:
 14373                           
 14374                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
 14375  14EA  3084               	movlw	132
 14376  14EB  0093               	movwf	19	;volatile
 14377  14EC                     l4784:
 14378                           
 14379                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
 14380  14EC  019D               	clrf	29	;volatile
 14381  14ED                     l643:
 14382  14ED  0008               	return
 14383  14EE                     __end_of_ADCC_Initialize:
 14384                           
 14385                           	psect	text33
 14386  1440                     __ptext33:	
 14387 ;; *************** function _S1 *****************
 14388 ;; Defined at:
 14389 ;;		line 61 in file "main.c"
 14390 ;; Parameters:    Size  Location     Type
 14391 ;;		None
 14392 ;; Auto vars:     Size  Location     Type
 14393 ;;		None
 14394 ;; Return value:  Size  Location     Type
 14395 ;;                  1    wreg      void 
 14396 ;; Registers used:
 14397 ;;		None
 14398 ;; Tracked objects:
 14399 ;;		On entry : 0/0
 14400 ;;		On exit  : 0/0
 14401 ;;		Unchanged: 0/0
 14402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14407 ;;Total ram usage:        0 bytes
 14408 ;; Hardware stack levels used: 1
 14409 ;; Hardware stack levels required when called: 5
 14410 ;; This function calls:
 14411 ;;		Nothing
 14412 ;; This function is called by:
 14413 ;;		_main
 14414 ;; This function uses a non-reentrant model
 14415 ;;
 14416                           
 14417                           
 14418                           ;psect for function _S1
 14419  1440                     _S1:
 14420  1440                     l5044:	
 14421                           ;incstack = 0
 14422                           ; Regs used in _S1: []
 14423                           
 14424                           
 14425                           ;main.c: 62:     if(PORTBbits.RB4==0 && PORTAbits.RA6==1){
 14426  1440  0020               	movlb	0	; select bank0
 14427  1441  1A0D               	btfsc	13,4	;volatile
 14428  1442  2C44               	goto	u3721
 14429  1443  2C45               	goto	u3720
 14430  1444                     u3721:
 14431  1444  2C4A               	goto	l1168
 14432  1445                     u3720:
 14433  1445                     l5046:
 14434  1445  1F0C               	btfss	12,6	;volatile
 14435  1446  2C48               	goto	u3731
 14436  1447  2C49               	goto	u3730
 14437  1448                     u3731:
 14438  1448  2C4A               	goto	l1168
 14439  1449                     u3730:
 14440  1449                     l1166:	
 14441                           ;main.c: 63:         do { LATAbits.LATA6 = 0; } while(0);
 14442                           
 14443  1449  1316               	bcf	22,6	;volatile
 14444  144A                     l1168:
 14445  144A  0008               	return
 14446  144B                     __end_of_S1:
 14447                           
 14448                           	psect	text34
 14449  1464                     __ptext34:	
 14450 ;; *************** function _OpenI2C *****************
 14451 ;; Defined at:
 14452 ;;		line 26 in file "I2C/i2c.c"
 14453 ;; Parameters:    Size  Location     Type
 14454 ;;		None
 14455 ;; Auto vars:     Size  Location     Type
 14456 ;;		None
 14457 ;; Return value:  Size  Location     Type
 14458 ;;                  1    wreg      void 
 14459 ;; Registers used:
 14460 ;;		wreg, status,2
 14461 ;; Tracked objects:
 14462 ;;		On entry : 0/0
 14463 ;;		On exit  : 0/0
 14464 ;;		Unchanged: 0/0
 14465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14470 ;;Total ram usage:        0 bytes
 14471 ;; Hardware stack levels used: 1
 14472 ;; Hardware stack levels required when called: 5
 14473 ;; This function calls:
 14474 ;;		Nothing
 14475 ;; This function is called by:
 14476 ;;		_main
 14477 ;; This function uses a non-reentrant model
 14478 ;;
 14479                           
 14480                           
 14481                           ;psect for function _OpenI2C
 14482  1464                     _OpenI2C:
 14483  1464                     l4886:	
 14484                           ;incstack = 0
 14485                           ; Regs used in _OpenI2C: [wreg+status,2]
 14486                           
 14487                           
 14488                           ;I2C/i2c.c: 28:   SSP1STAT = 0x80;
 14489  1464  3080               	movlw	128
 14490  1465  0023               	movlb	3	; select bank3
 14491  1466  008F               	movwf	15	;volatile
 14492                           
 14493                           ;I2C/i2c.c: 29:   SSP1CON1 = 0x08;
 14494  1467  3008               	movlw	8
 14495  1468  0090               	movwf	16	;volatile
 14496  1469                     l4888:
 14497                           
 14498                           ;I2C/i2c.c: 30:   SSP1CON2 = 0x00;
 14499  1469  0191               	clrf	17	;volatile
 14500  146A                     l4890:
 14501                           
 14502                           ;I2C/i2c.c: 31:   SSP1ADD = 0x03;
 14503  146A  3003               	movlw	3
 14504  146B  008D               	movwf	13	;volatile
 14505  146C                     l4892:
 14506                           
 14507                           ;I2C/i2c.c: 32:   SSP1CON1bits.SSPEN = 1;
 14508  146C  1690               	bsf	16,5	;volatile
 14509  146D                     l4894:
 14510                           
 14511                           ;I2C/i2c.c: 34:   TRISCbits.TRISC3 = 1;
 14512  146D  0020               	movlb	0	; select bank0
 14513  146E  1593               	bsf	19,3	;volatile
 14514  146F                     l4896:
 14515                           
 14516                           ;I2C/i2c.c: 35:   TRISCbits.TRISC4 = 1;
 14517  146F  1613               	bsf	19,4	;volatile
 14518  1470                     l23:
 14519  1470  0008               	return
 14520  1471                     __end_of_OpenI2C:
 14521                           
 14522                           	psect	text35
 14523  1507                     __ptext35:	
 14524 ;; *************** function _LCDstr *****************
 14525 ;; Defined at:
 14526 ;;		line 112 in file "LCD/lcd.c"
 14527 ;; Parameters:    Size  Location     Type
 14528 ;;  p               2    9[BANK0 ] PTR unsigned char 
 14529 ;;		 -> STR_8(4), STR_5(15), STR_3(15), main@buf(17), 
 14530 ;;		 -> STR_1(13), 
 14531 ;; Auto vars:     Size  Location     Type
 14532 ;;  c               1   14[BANK0 ] unsigned char 
 14533 ;; Return value:  Size  Location     Type
 14534 ;;                  1    wreg      void 
 14535 ;; Registers used:
 14536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14537 ;; Tracked objects:
 14538 ;;		On entry : 0/0
 14539 ;;		On exit  : 0/0
 14540 ;;		Unchanged: 0/0
 14541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14542 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14543 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14544 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14545 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14546 ;;Total ram usage:        6 bytes
 14547 ;; Hardware stack levels used: 1
 14548 ;; Hardware stack levels required when called: 8
 14549 ;; This function calls:
 14550 ;;		_LCDchar
 14551 ;; This function is called by:
 14552 ;;		_main
 14553 ;; This function uses a non-reentrant model
 14554 ;;
 14555                           
 14556                           
 14557                           ;psect for function _LCDstr
 14558  1507                     _LCDstr:
 14559  1507                     l4932:	
 14560                           ;incstack = 0
 14561                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14562                           
 14563                           
 14564                           ;LCD/lcd.c: 112: void LCDstr(char *p);LCD/lcd.c: 113: {;LCD/lcd.c: 114:   unsigned char 
      +                          c;;LCD/lcd.c: 116:   while((c = *p++)) LCDchar(c);
 14565  1507  2D0C               	goto	l4936
 14566  1508                     l4934:
 14567  1508  082E               	movf	LCDstr@c,w
 14568  1509  3194  241B  3195   	fcall	_LCDchar
 14569  150C                     l4936:
 14570  150C  0020               	movlb	0	; select bank0
 14571  150D  082A               	movf	LCDstr@p+1,w
 14572  150E  00AC               	movwf	??_LCDstr+1
 14573  150F  0829               	movf	LCDstr@p,w
 14574  1510  00AB               	movwf	??_LCDstr
 14575  1511  0AA9               	incf	LCDstr@p,f
 14576  1512  1903               	skipnz
 14577  1513  0AAA               	incf	LCDstr@p+1,f
 14578  1514  082B               	movf	??_LCDstr,w
 14579  1515  0084               	movwf	4
 14580  1516  082C               	movf	??_LCDstr+1,w
 14581  1517  0085               	movwf	5
 14582  1518  0800               	movf	0,w	;code access
 14583  1519  00AD               	movwf	??_LCDstr+2
 14584  151A  082D               	movf	??_LCDstr+2,w
 14585  151B  00AE               	movwf	LCDstr@c
 14586  151C  082E               	movf	LCDstr@c,w
 14587  151D  1D03               	btfss	3,2
 14588  151E  2D20               	goto	u3671
 14589  151F  2D21               	goto	u3670
 14590  1520                     u3671:
 14591  1520  2D08               	goto	l4934
 14592  1521                     u3670:
 14593  1521                     l244:
 14594  1521  0008               	return
 14595  1522                     __end_of_LCDstr:
 14596                           
 14597                           	psect	text36
 14598  141B                     __ptext36:	
 14599 ;; *************** function _LCDchar *****************
 14600 ;; Defined at:
 14601 ;;		line 107 in file "LCD/lcd.c"
 14602 ;; Parameters:    Size  Location     Type
 14603 ;;  c               1    wreg     unsigned char 
 14604 ;; Auto vars:     Size  Location     Type
 14605 ;;  c               1    8[BANK0 ] unsigned char 
 14606 ;; Return value:  Size  Location     Type
 14607 ;;                  1    wreg      void 
 14608 ;; Registers used:
 14609 ;;		wreg, status,2, status,0, pclath, cstack
 14610 ;; Tracked objects:
 14611 ;;		On entry : 0/0
 14612 ;;		On exit  : 0/0
 14613 ;;		Unchanged: 0/0
 14614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14616 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14618 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14619 ;;Total ram usage:        1 bytes
 14620 ;; Hardware stack levels used: 1
 14621 ;; Hardware stack levels required when called: 7
 14622 ;; This function calls:
 14623 ;;		_LCDsend2x4
 14624 ;; This function is called by:
 14625 ;;		_LCDstr
 14626 ;; This function uses a non-reentrant model
 14627 ;;
 14628                           
 14629                           
 14630                           ;psect for function _LCDchar
 14631  141B                     _LCDchar:
 14632                           
 14633                           ;incstack = 0
 14634                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 14635                           ;LCDchar@c stored from wreg
 14636  141B  0020               	movlb	0	; select bank0
 14637  141C  00A8               	movwf	LCDchar@c
 14638  141D                     l4702:
 14639                           
 14640                           ;LCD/lcd.c: 107: void LCDchar(unsigned char c);LCD/lcd.c: 108: {;LCD/lcd.c: 109:   LCDse
      +                          nd2x4(c, 0x01);
 14641  141D  01A2               	clrf	LCDsend2x4@mode
 14642  141E  0AA2               	incf	LCDsend2x4@mode,f
 14643  141F  0828               	movf	LCDchar@c,w
 14644  1420  318B  23E7  3194   	fcall	_LCDsend2x4
 14645  1423                     l238:
 14646  1423  0008               	return
 14647  1424                     __end_of_LCDchar:
 14648                           
 14649                           	psect	text37
 14650  153D                     __ptext37:	
 14651 ;; *************** function _LCDpos *****************
 14652 ;; Defined at:
 14653 ;;		line 125 in file "LCD/lcd.c"
 14654 ;; Parameters:    Size  Location     Type
 14655 ;;  l               1    wreg     unsigned char 
 14656 ;;  c               1    9[BANK0 ] unsigned char 
 14657 ;; Auto vars:     Size  Location     Type
 14658 ;;  l               1   11[BANK0 ] unsigned char 
 14659 ;;  p               1   12[BANK0 ] unsigned char 
 14660 ;; Return value:  Size  Location     Type
 14661 ;;                  1    wreg      void 
 14662 ;; Registers used:
 14663 ;;		wreg, status,2, status,0, pclath, cstack
 14664 ;; Tracked objects:
 14665 ;;		On entry : 0/0
 14666 ;;		On exit  : 0/0
 14667 ;;		Unchanged: 0/0
 14668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14669 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14670 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14671 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14672 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14673 ;;Total ram usage:        4 bytes
 14674 ;; Hardware stack levels used: 1
 14675 ;; Hardware stack levels required when called: 8
 14676 ;; This function calls:
 14677 ;;		_LCDcmd
 14678 ;; This function is called by:
 14679 ;;		_main
 14680 ;; This function uses a non-reentrant model
 14681 ;;
 14682                           
 14683                           
 14684                           ;psect for function _LCDpos
 14685  153D                     _LCDpos:
 14686                           
 14687                           ;incstack = 0
 14688                           ; Regs used in _LCDpos: [wreg+status,2+status,0+pclath+cstack]
 14689                           ;LCDpos@l stored from wreg
 14690  153D  0020               	movlb	0	; select bank0
 14691  153E  00AB               	movwf	LCDpos@l
 14692  153F                     l4948:
 14693                           
 14694                           ;LCD/lcd.c: 125: void LCDpos(unsigned char l, unsigned char c);LCD/lcd.c: 126: {;LCD/lcd
      +                          .c: 127:   unsigned char p;;LCD/lcd.c: 131:   if (l>1) p = 0xc0; else p=0x80;
 14695  153F  3002               	movlw	2
 14696  1540  022B               	subwf	LCDpos@l,w
 14697  1541  1C03               	skipc
 14698  1542  2D44               	goto	u3691
 14699  1543  2D45               	goto	u3690
 14700  1544                     u3691:
 14701  1544  2D4A               	goto	l4952
 14702  1545                     u3690:
 14703  1545                     l4950:
 14704  1545  30C0               	movlw	192
 14705  1546  00AA               	movwf	??_LCDpos
 14706  1547  082A               	movf	??_LCDpos,w
 14707  1548  00AC               	movwf	LCDpos@p
 14708  1549  2D4E               	goto	l4954
 14709  154A                     l4952:
 14710  154A  3080               	movlw	128
 14711  154B  00AA               	movwf	??_LCDpos
 14712  154C  082A               	movf	??_LCDpos,w
 14713  154D  00AC               	movwf	LCDpos@p
 14714  154E                     l4954:
 14715                           
 14716                           ;LCD/lcd.c: 132:   p = p | (c&0x0f);
 14717  154E  0829               	movf	LCDpos@c,w
 14718  154F  390F               	andlw	15
 14719  1550  042C               	iorwf	LCDpos@p,w
 14720  1551  00AA               	movwf	??_LCDpos
 14721  1552  082A               	movf	??_LCDpos,w
 14722  1553  00AC               	movwf	LCDpos@p
 14723  1554                     l4956:
 14724                           
 14725                           ;LCD/lcd.c: 133:   LCDcmd(p);
 14726  1554  082C               	movf	LCDpos@p,w
 14727  1555  3194  240B  3195   	fcall	_LCDcmd
 14728  1558                     l253:
 14729  1558  0008               	return
 14730  1559                     __end_of_LCDpos:
 14731                           
 14732                           	psect	text38
 14733  140B                     __ptext38:	
 14734 ;; *************** function _LCDcmd *****************
 14735 ;; Defined at:
 14736 ;;		line 102 in file "LCD/lcd.c"
 14737 ;; Parameters:    Size  Location     Type
 14738 ;;  c               1    wreg     unsigned char 
 14739 ;; Auto vars:     Size  Location     Type
 14740 ;;  c               1    8[BANK0 ] unsigned char 
 14741 ;; Return value:  Size  Location     Type
 14742 ;;                  1    wreg      void 
 14743 ;; Registers used:
 14744 ;;		wreg, status,2, status,0, pclath, cstack
 14745 ;; Tracked objects:
 14746 ;;		On entry : 0/0
 14747 ;;		On exit  : 0/0
 14748 ;;		Unchanged: 0/0
 14749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14751 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14753 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14754 ;;Total ram usage:        1 bytes
 14755 ;; Hardware stack levels used: 1
 14756 ;; Hardware stack levels required when called: 7
 14757 ;; This function calls:
 14758 ;;		_LCDsend2x4
 14759 ;; This function is called by:
 14760 ;;		_LCDpos
 14761 ;;		_main
 14762 ;; This function uses a non-reentrant model
 14763 ;;
 14764                           
 14765                           
 14766                           ;psect for function _LCDcmd
 14767  140B                     _LCDcmd:
 14768                           
 14769                           ;incstack = 0
 14770                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 14771                           ;LCDcmd@c stored from wreg
 14772  140B  0020               	movlb	0	; select bank0
 14773  140C  00A8               	movwf	LCDcmd@c
 14774  140D                     l4700:
 14775                           
 14776                           ;LCD/lcd.c: 102: void LCDcmd(unsigned char c);LCD/lcd.c: 103: {;LCD/lcd.c: 104:   LCDsen
      +                          d2x4(c, 0);
 14777  140D  01A2               	clrf	LCDsend2x4@mode
 14778  140E  0828               	movf	LCDcmd@c,w
 14779  140F  318B  23E7  3194   	fcall	_LCDsend2x4
 14780  1412                     l235:
 14781  1412  0008               	return
 14782  1413                     __end_of_LCDcmd:
 14783                           
 14784                           	psect	text39
 14785  08E1                     __ptext39:	
 14786 ;; *************** function _LCDinit *****************
 14787 ;; Defined at:
 14788 ;;		line 79 in file "LCD/lcd.c"
 14789 ;; Parameters:    Size  Location     Type
 14790 ;;		None
 14791 ;; Auto vars:     Size  Location     Type
 14792 ;;		None
 14793 ;; Return value:  Size  Location     Type
 14794 ;;                  1    wreg      void 
 14795 ;; Registers used:
 14796 ;;		wreg, status,2, status,0, pclath, cstack
 14797 ;; Tracked objects:
 14798 ;;		On entry : 0/0
 14799 ;;		On exit  : 0/0
 14800 ;;		Unchanged: 0/0
 14801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14804 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14805 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14806 ;;Total ram usage:        1 bytes
 14807 ;; Hardware stack levels used: 1
 14808 ;; Hardware stack levels required when called: 7
 14809 ;; This function calls:
 14810 ;;		_LCDsend
 14811 ;;		_LCDsend2x4
 14812 ;; This function is called by:
 14813 ;;		_main
 14814 ;; This function uses a non-reentrant model
 14815 ;;
 14816                           
 14817                           
 14818                           ;psect for function _LCDinit
 14819  08E1                     _LCDinit:
 14820  08E1                     l4898:	
 14821                           ;incstack = 0
 14822                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 14823                           
 14824                           
 14825                           ;LCD/lcd.c: 81:   _delay((unsigned long)((50)*(4000000/4000.0)));
 14826  08E1  3041               	movlw	65
 14827  08E2  0020               	movlb	0	; select bank0
 14828  08E3  00A8               	movwf	??_LCDinit
 14829  08E4  30EE               	movlw	238
 14830  08E5                     u4467:
 14831  08E5  0B89               	decfsz	9,f
 14832  08E6  28E5               	goto	u4467
 14833  08E7  0BA8               	decfsz	??_LCDinit,f
 14834  08E8  28E5               	goto	u4467
 14835  08E9  0000               	nop
 14836  08EA                     l4900:
 14837                           
 14838                           ;LCD/lcd.c: 82:   LCDsend(0x30);
 14839  08EA  3030               	movlw	48
 14840  08EB  3197  27AD  3188   	fcall	_LCDsend
 14841  08EE                     l4902:
 14842                           
 14843                           ;LCD/lcd.c: 83:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 14844  08EE  3034               	movlw	52
 14845  08EF  3197  27AD  3188   	fcall	_LCDsend
 14846  08F2  30A6               	movlw	166
 14847  08F3                     u4477:
 14848  08F3  0B89               	decfsz	9,f
 14849  08F4  28F3               	goto	u4477
 14850  08F5  3200               	nop2
 14851  08F6                     l4904:
 14852  08F6  3030               	movlw	48
 14853  08F7  3197  27AD  3188   	fcall	_LCDsend
 14854  08FA                     l4906:
 14855                           
 14856                           ;LCD/lcd.c: 84:   _delay((unsigned long)((5)*(4000000/4000.0)));
 14857  08FA  3007               	movlw	7
 14858  08FB  0020               	movlb	0	; select bank0
 14859  08FC  00A8               	movwf	??_LCDinit
 14860  08FD  307D               	movlw	125
 14861  08FE                     u4487:
 14862  08FE  0B89               	decfsz	9,f
 14863  08FF  28FE               	goto	u4487
 14864  0900  0BA8               	decfsz	??_LCDinit,f
 14865  0901  28FE               	goto	u4487
 14866                           
 14867                           ;LCD/lcd.c: 85:   LCDsend(0x30);
 14868  0902  3030               	movlw	48
 14869  0903  3197  27AD  3188   	fcall	_LCDsend
 14870                           
 14871                           ;LCD/lcd.c: 86:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 14872  0906  3034               	movlw	52
 14873  0907  3197  27AD  3188   	fcall	_LCDsend
 14874  090A                     l4908:
 14875  090A  30A6               	movlw	166
 14876  090B                     u4497:
 14877  090B  0B89               	decfsz	9,f
 14878  090C  290B               	goto	u4497
 14879  090D  3200               	nop2
 14880  090E                     l4910:
 14881  090E  3030               	movlw	48
 14882  090F  3197  27AD  3188   	fcall	_LCDsend
 14883                           
 14884                           ;LCD/lcd.c: 87:   _delay((unsigned long)((100)*(4000000/4000000.0)));
 14885  0912  3021               	movlw	33
 14886  0913                     u4507:
 14887  0913  0B89               	decfsz	9,f
 14888  0914  2913               	goto	u4507
 14889  0915  0000               	nop
 14890  0916                     l4912:
 14891                           
 14892                           ;LCD/lcd.c: 88:   LCDsend(0x30);
 14893  0916  3030               	movlw	48
 14894  0917  3197  27AD  3188   	fcall	_LCDsend
 14895  091A                     l4914:
 14896                           
 14897                           ;LCD/lcd.c: 89:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 14898  091A  3034               	movlw	52
 14899  091B  3197  27AD  3188   	fcall	_LCDsend
 14900  091E  30A6               	movlw	166
 14901  091F                     u4517:
 14902  091F  0B89               	decfsz	9,f
 14903  0920  291F               	goto	u4517
 14904  0921  3200               	nop2
 14905  0922                     l4916:
 14906  0922  3030               	movlw	48
 14907  0923  3197  27AD  3188   	fcall	_LCDsend
 14908  0926                     l4918:
 14909                           
 14910                           ;LCD/lcd.c: 90:   _delay((unsigned long)((100)*(4000000/4000000.0)));
 14911  0926  3021               	movlw	33
 14912  0927                     u4527:
 14913  0927  0B89               	decfsz	9,f
 14914  0928  2927               	goto	u4527
 14915  0929  0000               	nop
 14916                           
 14917                           ;LCD/lcd.c: 91:   LCDsend(0x20);
 14918  092A  3020               	movlw	32
 14919  092B  3197  27AD  3188   	fcall	_LCDsend
 14920                           
 14921                           ;LCD/lcd.c: 92:   LCDsend(0x24); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x20);
 14922  092E  3024               	movlw	36
 14923  092F  3197  27AD  3188   	fcall	_LCDsend
 14924  0932                     l4920:
 14925  0932  30A6               	movlw	166
 14926  0933                     u4537:
 14927  0933  0B89               	decfsz	9,f
 14928  0934  2933               	goto	u4537
 14929  0935  3200               	nop2
 14930  0936                     l4922:
 14931  0936  3020               	movlw	32
 14932  0937  3197  27AD  3188   	fcall	_LCDsend
 14933                           
 14934                           ;LCD/lcd.c: 93:   _delay((unsigned long)((5)*(4000000/4000.0)));
 14935  093A  3007               	movlw	7
 14936  093B  0020               	movlb	0	; select bank0
 14937  093C  00A8               	movwf	??_LCDinit
 14938  093D  307D               	movlw	125
 14939  093E                     u4547:
 14940  093E  0B89               	decfsz	9,f
 14941  093F  293E               	goto	u4547
 14942  0940  0BA8               	decfsz	??_LCDinit,f
 14943  0941  293E               	goto	u4547
 14944  0942                     l4924:
 14945                           
 14946                           ;LCD/lcd.c: 95:   LCDsend2x4(0x28, 0);
 14947  0942  0020               	movlb	0	; select bank0
 14948  0943  01A2               	clrf	LCDsend2x4@mode
 14949  0944  3028               	movlw	40
 14950  0945  318B  23E7  3188   	fcall	_LCDsend2x4
 14951  0948                     l4926:
 14952                           
 14953                           ;LCD/lcd.c: 96:   LCDsend2x4(0x06, 0);
 14954  0948  0020               	movlb	0	; select bank0
 14955  0949  01A2               	clrf	LCDsend2x4@mode
 14956  094A  3006               	movlw	6
 14957  094B  318B  23E7  3188   	fcall	_LCDsend2x4
 14958  094E                     l4928:
 14959                           
 14960                           ;LCD/lcd.c: 97:   LCDsend2x4(0x0f, 0);
 14961  094E  0020               	movlb	0	; select bank0
 14962  094F  01A2               	clrf	LCDsend2x4@mode
 14963  0950  300F               	movlw	15
 14964  0951  318B  23E7  3188   	fcall	_LCDsend2x4
 14965  0954                     l4930:
 14966                           
 14967                           ;LCD/lcd.c: 98:   LCDsend2x4(0x01, 0);
 14968  0954  0020               	movlb	0	; select bank0
 14969  0955  01A2               	clrf	LCDsend2x4@mode
 14970  0956  3001               	movlw	1
 14971  0957  318B  23E7  3188   	fcall	_LCDsend2x4
 14972                           
 14973                           ;LCD/lcd.c: 99:   _delay((unsigned long)((2)*(4000000/4000.0)));
 14974  095A  3003               	movlw	3
 14975  095B  0020               	movlb	0	; select bank0
 14976  095C  00A8               	movwf	??_LCDinit
 14977  095D  3097               	movlw	151
 14978  095E                     u4557:
 14979  095E  0B89               	decfsz	9,f
 14980  095F  295E               	goto	u4557
 14981  0960  0BA8               	decfsz	??_LCDinit,f
 14982  0961  295E               	goto	u4557
 14983  0962  3200               	nop2
 14984  0963                     l232:
 14985  0963  0008               	return
 14986  0964                     __end_of_LCDinit:
 14987                           
 14988                           	psect	text40
 14989  0BE7                     __ptext40:	
 14990 ;; *************** function _LCDsend2x4 *****************
 14991 ;; Defined at:
 14992 ;;		line 56 in file "LCD/lcd.c"
 14993 ;; Parameters:    Size  Location     Type
 14994 ;;  c               1    wreg     unsigned char 
 14995 ;;  mode            1    2[BANK0 ] unsigned char 
 14996 ;; Auto vars:     Size  Location     Type
 14997 ;;  c               1    5[BANK0 ] unsigned char 
 14998 ;;  lc              1    7[BANK0 ] unsigned char 
 14999 ;;  hc              1    6[BANK0 ] unsigned char 
 15000 ;; Return value:  Size  Location     Type
 15001 ;;                  1    wreg      void 
 15002 ;; Registers used:
 15003 ;;		wreg, status,2, status,0, pclath, cstack
 15004 ;; Tracked objects:
 15005 ;;		On entry : 0/0
 15006 ;;		On exit  : 0/0
 15007 ;;		Unchanged: 0/0
 15008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15009 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15010 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15011 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15012 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15013 ;;Total ram usage:        6 bytes
 15014 ;; Hardware stack levels used: 1
 15015 ;; Hardware stack levels required when called: 6
 15016 ;; This function calls:
 15017 ;;		_WriteI2C
 15018 ;; This function is called by:
 15019 ;;		_LCDinit
 15020 ;;		_LCDcmd
 15021 ;;		_LCDchar
 15022 ;; This function uses a non-reentrant model
 15023 ;;
 15024                           
 15025                           
 15026                           ;psect for function _LCDsend2x4
 15027  0BE7                     _LCDsend2x4:
 15028                           
 15029                           ;incstack = 0
 15030                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 15031                           ;LCDsend2x4@c stored from wreg
 15032  0BE7  0020               	movlb	0	; select bank0
 15033  0BE8  00A5               	movwf	LCDsend2x4@c
 15034  0BE9                     l4440:
 15035                           
 15036                           ;LCD/lcd.c: 56: void LCDsend2x4(unsigned char c, unsigned char mode);LCD/lcd.c: 57: {;LC
      +                          D/lcd.c: 58:   unsigned char hc;;LCD/lcd.c: 59:   unsigned char lc;;LCD/lcd.c: 61:   hc 
      +                          = c & 0xf0;
 15037  0BE9  0825               	movf	LCDsend2x4@c,w
 15038  0BEA  39F0               	andlw	240
 15039  0BEB  00A3               	movwf	??_LCDsend2x4
 15040  0BEC  0823               	movf	??_LCDsend2x4,w
 15041  0BED  00A6               	movwf	LCDsend2x4@hc
 15042  0BEE                     l4442:
 15043                           
 15044                           ;LCD/lcd.c: 62:   lc = (c << 4) & 0xf0;
 15045  0BEE  0825               	movf	LCDsend2x4@c,w
 15046  0BEF  00A3               	movwf	??_LCDsend2x4
 15047  0BF0  3003               	movlw	3
 15048  0BF1                     u2995:
 15049  0BF1  35A3               	lslf	??_LCDsend2x4,f
 15050  0BF2  3EFF               	addlw	-1
 15051  0BF3  1D03               	skipz
 15052  0BF4  2BF1               	goto	u2995
 15053  0BF5  3523               	lslf	??_LCDsend2x4,w
 15054  0BF6  39F0               	andlw	240
 15055  0BF7  00A4               	movwf	??_LCDsend2x4+1
 15056  0BF8  0824               	movf	??_LCDsend2x4+1,w
 15057  0BF9  00A7               	movwf	LCDsend2x4@lc
 15058  0BFA                     l4444:	
 15059                           ;LCD/lcd.c: 64:   while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15060                           
 15061  0BFA  0023               	movlb	3	; select bank3
 15062  0BFB  0C0F               	rrf	15,w	;volatile
 15063  0BFC  0C89               	rrf	9,f
 15064  0BFD  3901               	andlw	1
 15065  0BFE  0020               	movlb	0	; select bank0
 15066  0BFF  00A3               	movwf	??_LCDsend2x4
 15067  0C00  0023               	movlb	3	; select bank3
 15068  0C01  0811               	movf	17,w	;volatile
 15069  0C02  391F               	andlw	31
 15070  0C03  0020               	movlb	0	; select bank0
 15071  0C04  0423               	iorwf	??_LCDsend2x4,w
 15072  0C05  1D03               	btfss	3,2
 15073  0C06  2C08               	goto	u3001
 15074  0C07  2C09               	goto	u3000
 15075  0C08                     u3001:
 15076  0C08  2BFA               	goto	l4444
 15077  0C09                     u3000:
 15078  0C09                     l195:	
 15079                           ;LCD/lcd.c: 65:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15080                           
 15081  0C09  0023               	movlb	3	; select bank3
 15082  0C0A  1411               	bsf	17,0	;volatile
 15083  0C0B                     l196:
 15084  0C0B  1811               	btfsc	17,0	;volatile
 15085  0C0C  2C0E               	goto	u3011
 15086  0C0D  2C0F               	goto	u3010
 15087  0C0E                     u3011:
 15088  0C0E  2C0B               	goto	l196
 15089  0C0F                     u3010:
 15090  0C0F                     l4446:
 15091  0C0F  0023               	movlb	3	; select bank3
 15092  0C10  0C0F               	rrf	15,w	;volatile
 15093  0C11  0C89               	rrf	9,f
 15094  0C12  3901               	andlw	1
 15095  0C13  0020               	movlb	0	; select bank0
 15096  0C14  00A3               	movwf	??_LCDsend2x4
 15097  0C15  0023               	movlb	3	; select bank3
 15098  0C16  0811               	movf	17,w	;volatile
 15099  0C17  391F               	andlw	31
 15100  0C18  0020               	movlb	0	; select bank0
 15101  0C19  0423               	iorwf	??_LCDsend2x4,w
 15102  0C1A  1D03               	btfss	3,2
 15103  0C1B  2C1D               	goto	u3021
 15104  0C1C  2C1E               	goto	u3020
 15105  0C1D                     u3021:
 15106  0C1D  2C0F               	goto	l4446
 15107  0C1E                     u3020:
 15108  0C1E                     l4448:
 15109                           
 15110                           ;LCD/lcd.c: 66:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15111  0C1E  304E               	movlw	78
 15112  0C1F  3188  202D  318B   	fcall	_WriteI2C
 15113  0C22                     l4450:
 15114  0C22  0023               	movlb	3	; select bank3
 15115  0C23  0C0F               	rrf	15,w	;volatile
 15116  0C24  0C89               	rrf	9,f
 15117  0C25  3901               	andlw	1
 15118  0C26  0020               	movlb	0	; select bank0
 15119  0C27  00A3               	movwf	??_LCDsend2x4
 15120  0C28  0023               	movlb	3	; select bank3
 15121  0C29  0811               	movf	17,w	;volatile
 15122  0C2A  391F               	andlw	31
 15123  0C2B  0020               	movlb	0	; select bank0
 15124  0C2C  0423               	iorwf	??_LCDsend2x4,w
 15125  0C2D  1D03               	btfss	3,2
 15126  0C2E  2C30               	goto	u3031
 15127  0C2F  2C31               	goto	u3030
 15128  0C30                     u3031:
 15129  0C30  2C22               	goto	l4450
 15130  0C31                     u3030:
 15131  0C31                     l4452:
 15132                           
 15133                           ;LCD/lcd.c: 67:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 15134  0C31  0826               	movf	LCDsend2x4@hc,w
 15135  0C32  0422               	iorwf	LCDsend2x4@mode,w
 15136  0C33  3808               	iorlw	8
 15137  0C34  3188  202D  318B   	fcall	_WriteI2C
 15138  0C37                     l4454:
 15139  0C37  0023               	movlb	3	; select bank3
 15140  0C38  0C0F               	rrf	15,w	;volatile
 15141  0C39  0C89               	rrf	9,f
 15142  0C3A  3901               	andlw	1
 15143  0C3B  0020               	movlb	0	; select bank0
 15144  0C3C  00A3               	movwf	??_LCDsend2x4
 15145  0C3D  0023               	movlb	3	; select bank3
 15146  0C3E  0811               	movf	17,w	;volatile
 15147  0C3F  391F               	andlw	31
 15148  0C40  0020               	movlb	0	; select bank0
 15149  0C41  0423               	iorwf	??_LCDsend2x4,w
 15150  0C42  1D03               	btfss	3,2
 15151  0C43  2C45               	goto	u3041
 15152  0C44  2C46               	goto	u3040
 15153  0C45                     u3041:
 15154  0C45  2C37               	goto	l4454
 15155  0C46                     u3040:
 15156  0C46                     l4456:
 15157                           
 15158                           ;LCD/lcd.c: 68:   WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 15159  0C46  0826               	movf	LCDsend2x4@hc,w
 15160  0C47  0422               	iorwf	LCDsend2x4@mode,w
 15161  0C48  380C               	iorlw	12
 15162  0C49  3188  202D  318B   	fcall	_WriteI2C
 15163  0C4C                     l4458:
 15164  0C4C  0023               	movlb	3	; select bank3
 15165  0C4D  0C0F               	rrf	15,w	;volatile
 15166  0C4E  0C89               	rrf	9,f
 15167  0C4F  3901               	andlw	1
 15168  0C50  0020               	movlb	0	; select bank0
 15169  0C51  00A3               	movwf	??_LCDsend2x4
 15170  0C52  0023               	movlb	3	; select bank3
 15171  0C53  0811               	movf	17,w	;volatile
 15172  0C54  391F               	andlw	31
 15173  0C55  0020               	movlb	0	; select bank0
 15174  0C56  0423               	iorwf	??_LCDsend2x4,w
 15175  0C57  1D03               	btfss	3,2
 15176  0C58  2C5A               	goto	u3051
 15177  0C59  2C5B               	goto	u3050
 15178  0C5A                     u3051:
 15179  0C5A  2C4C               	goto	l4458
 15180  0C5B                     u3050:
 15181  0C5B                     l211:
 15182                           
 15183                           ;LCD/lcd.c: 69:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 15184  0C5B  0000               	nop
 15185  0C5C                     l4460:
 15186                           
 15187                           ;LCD/lcd.c: 70:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 15188  0C5C  0020               	movlb	0	; select bank0
 15189  0C5D  0826               	movf	LCDsend2x4@hc,w
 15190  0C5E  0422               	iorwf	LCDsend2x4@mode,w
 15191  0C5F  3808               	iorlw	8
 15192  0C60  3188  202D  318B   	fcall	_WriteI2C
 15193  0C63                     l4462:
 15194  0C63  0023               	movlb	3	; select bank3
 15195  0C64  0C0F               	rrf	15,w	;volatile
 15196  0C65  0C89               	rrf	9,f
 15197  0C66  3901               	andlw	1
 15198  0C67  0020               	movlb	0	; select bank0
 15199  0C68  00A3               	movwf	??_LCDsend2x4
 15200  0C69  0023               	movlb	3	; select bank3
 15201  0C6A  0811               	movf	17,w	;volatile
 15202  0C6B  391F               	andlw	31
 15203  0C6C  0020               	movlb	0	; select bank0
 15204  0C6D  0423               	iorwf	??_LCDsend2x4,w
 15205  0C6E  1D03               	btfss	3,2
 15206  0C6F  2C71               	goto	u3061
 15207  0C70  2C72               	goto	u3060
 15208  0C71                     u3061:
 15209  0C71  2C63               	goto	l4462
 15210  0C72                     u3060:
 15211  0C72                     l4464:
 15212                           
 15213                           ;LCD/lcd.c: 71:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 15214  0C72  0827               	movf	LCDsend2x4@lc,w
 15215  0C73  0422               	iorwf	LCDsend2x4@mode,w
 15216  0C74  3808               	iorlw	8
 15217  0C75  3188  202D  318B   	fcall	_WriteI2C
 15218  0C78                     l4466:
 15219  0C78  0023               	movlb	3	; select bank3
 15220  0C79  0C0F               	rrf	15,w	;volatile
 15221  0C7A  0C89               	rrf	9,f
 15222  0C7B  3901               	andlw	1
 15223  0C7C  0020               	movlb	0	; select bank0
 15224  0C7D  00A3               	movwf	??_LCDsend2x4
 15225  0C7E  0023               	movlb	3	; select bank3
 15226  0C7F  0811               	movf	17,w	;volatile
 15227  0C80  391F               	andlw	31
 15228  0C81  0020               	movlb	0	; select bank0
 15229  0C82  0423               	iorwf	??_LCDsend2x4,w
 15230  0C83  1D03               	btfss	3,2
 15231  0C84  2C86               	goto	u3071
 15232  0C85  2C87               	goto	u3070
 15233  0C86                     u3071:
 15234  0C86  2C78               	goto	l4466
 15235  0C87                     u3070:
 15236  0C87                     l4468:
 15237                           
 15238                           ;LCD/lcd.c: 72:   WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 15239  0C87  0827               	movf	LCDsend2x4@lc,w
 15240  0C88  0422               	iorwf	LCDsend2x4@mode,w
 15241  0C89  380C               	iorlw	12
 15242  0C8A  3188  202D  318B   	fcall	_WriteI2C
 15243  0C8D                     l4470:
 15244  0C8D  0023               	movlb	3	; select bank3
 15245  0C8E  0C0F               	rrf	15,w	;volatile
 15246  0C8F  0C89               	rrf	9,f
 15247  0C90  3901               	andlw	1
 15248  0C91  0020               	movlb	0	; select bank0
 15249  0C92  00A3               	movwf	??_LCDsend2x4
 15250  0C93  0023               	movlb	3	; select bank3
 15251  0C94  0811               	movf	17,w	;volatile
 15252  0C95  391F               	andlw	31
 15253  0C96  0020               	movlb	0	; select bank0
 15254  0C97  0423               	iorwf	??_LCDsend2x4,w
 15255  0C98  1D03               	btfss	3,2
 15256  0C99  2C9B               	goto	u3081
 15257  0C9A  2C9C               	goto	u3080
 15258  0C9B                     u3081:
 15259  0C9B  2C8D               	goto	l4470
 15260  0C9C                     u3080:
 15261  0C9C                     l220:
 15262                           
 15263                           ;LCD/lcd.c: 73:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 15264  0C9C  0000               	nop
 15265  0C9D                     l4472:
 15266                           
 15267                           ;LCD/lcd.c: 74:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 15268  0C9D  0020               	movlb	0	; select bank0
 15269  0C9E  0827               	movf	LCDsend2x4@lc,w
 15270  0C9F  0422               	iorwf	LCDsend2x4@mode,w
 15271  0CA0  3808               	iorlw	8
 15272  0CA1  3188  202D  318B   	fcall	_WriteI2C
 15273  0CA4                     l4474:
 15274  0CA4  0023               	movlb	3	; select bank3
 15275  0CA5  0C0F               	rrf	15,w	;volatile
 15276  0CA6  0C89               	rrf	9,f
 15277  0CA7  3901               	andlw	1
 15278  0CA8  0020               	movlb	0	; select bank0
 15279  0CA9  00A3               	movwf	??_LCDsend2x4
 15280  0CAA  0023               	movlb	3	; select bank3
 15281  0CAB  0811               	movf	17,w	;volatile
 15282  0CAC  391F               	andlw	31
 15283  0CAD  0020               	movlb	0	; select bank0
 15284  0CAE  0423               	iorwf	??_LCDsend2x4,w
 15285  0CAF  1D03               	btfss	3,2
 15286  0CB0  2CB2               	goto	u3091
 15287  0CB1  2CB3               	goto	u3090
 15288  0CB2                     u3091:
 15289  0CB2  2CA4               	goto	l4474
 15290  0CB3                     u3090:
 15291  0CB3                     l224:	
 15292                           ;LCD/lcd.c: 75:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 15293                           
 15294  0CB3  0023               	movlb	3	; select bank3
 15295  0CB4  1511               	bsf	17,2	;volatile
 15296  0CB5                     l225:
 15297  0CB5  1911               	btfsc	17,2	;volatile
 15298  0CB6  2CB8               	goto	u3101
 15299  0CB7  2CB9               	goto	u3100
 15300  0CB8                     u3101:
 15301  0CB8  2CB5               	goto	l225
 15302  0CB9                     u3100:
 15303  0CB9                     l4476:
 15304                           
 15305                           ;LCD/lcd.c: 76:   _delay((unsigned long)((50)*(4000000/4000000.0)));
 15306  0CB9  3010               	movlw	16
 15307  0CBA                     u4567:
 15308  0CBA  0B89               	decfsz	9,f
 15309  0CBB  2CBA               	goto	u4567
 15310  0CBC  3200               	nop2
 15311  0CBD                     l229:
 15312  0CBD  0008               	return
 15313  0CBE                     __end_of_LCDsend2x4:
 15314                           
 15315                           	psect	text41
 15316  17AD                     __ptext41:	
 15317 ;; *************** function _LCDsend *****************
 15318 ;; Defined at:
 15319 ;;		line 17 in file "LCD/lcd.c"
 15320 ;; Parameters:    Size  Location     Type
 15321 ;;  c               1    wreg     unsigned char 
 15322 ;; Auto vars:     Size  Location     Type
 15323 ;;  c               1    3[BANK0 ] unsigned char 
 15324 ;; Return value:  Size  Location     Type
 15325 ;;                  1    wreg      void 
 15326 ;; Registers used:
 15327 ;;		wreg, status,2, status,0, pclath, cstack
 15328 ;; Tracked objects:
 15329 ;;		On entry : 0/0
 15330 ;;		On exit  : 0/0
 15331 ;;		Unchanged: 0/0
 15332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15334 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15335 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15336 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15337 ;;Total ram usage:        2 bytes
 15338 ;; Hardware stack levels used: 1
 15339 ;; Hardware stack levels required when called: 6
 15340 ;; This function calls:
 15341 ;;		_WriteI2C
 15342 ;; This function is called by:
 15343 ;;		_LCDinit
 15344 ;; This function uses a non-reentrant model
 15345 ;;
 15346                           
 15347                           
 15348                           ;psect for function _LCDsend
 15349  17AD                     _LCDsend:
 15350                           
 15351                           ;incstack = 0
 15352                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 15353                           ;LCDsend@c stored from wreg
 15354  17AD  0020               	movlb	0	; select bank0
 15355  17AE  00A3               	movwf	LCDsend@c
 15356  17AF                     l4620:
 15357  17AF                     l4622:	
 15358                           ;LCD/lcd.c: 17: void LCDsend(unsigned char c);LCD/lcd.c: 18: {;LCD/lcd.c: 19:   while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15359                           
 15360  17AF  0023               	movlb	3	; select bank3
 15361  17B0  0C0F               	rrf	15,w	;volatile
 15362  17B1  0C89               	rrf	9,f
 15363  17B2  3901               	andlw	1
 15364  17B3  0020               	movlb	0	; select bank0
 15365  17B4  00A2               	movwf	??_LCDsend
 15366  17B5  0023               	movlb	3	; select bank3
 15367  17B6  0811               	movf	17,w	;volatile
 15368  17B7  391F               	andlw	31
 15369  17B8  0020               	movlb	0	; select bank0
 15370  17B9  0422               	iorwf	??_LCDsend,w
 15371  17BA  1D03               	btfss	3,2
 15372  17BB  2FBD               	goto	u3291
 15373  17BC  2FBE               	goto	u3290
 15374  17BD                     u3291:
 15375  17BD  2FAF               	goto	l4622
 15376  17BE                     u3290:
 15377  17BE                     l73:	
 15378                           ;LCD/lcd.c: 20:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15379                           
 15380  17BE  0023               	movlb	3	; select bank3
 15381  17BF  1411               	bsf	17,0	;volatile
 15382  17C0                     l74:
 15383  17C0  1811               	btfsc	17,0	;volatile
 15384  17C1  2FC3               	goto	u3301
 15385  17C2  2FC4               	goto	u3300
 15386  17C3                     u3301:
 15387  17C3  2FC0               	goto	l74
 15388  17C4                     u3300:
 15389  17C4                     l4624:
 15390  17C4  0023               	movlb	3	; select bank3
 15391  17C5  0C0F               	rrf	15,w	;volatile
 15392  17C6  0C89               	rrf	9,f
 15393  17C7  3901               	andlw	1
 15394  17C8  0020               	movlb	0	; select bank0
 15395  17C9  00A2               	movwf	??_LCDsend
 15396  17CA  0023               	movlb	3	; select bank3
 15397  17CB  0811               	movf	17,w	;volatile
 15398  17CC  391F               	andlw	31
 15399  17CD  0020               	movlb	0	; select bank0
 15400  17CE  0422               	iorwf	??_LCDsend,w
 15401  17CF  1D03               	btfss	3,2
 15402  17D0  2FD2               	goto	u3311
 15403  17D1  2FD3               	goto	u3310
 15404  17D2                     u3311:
 15405  17D2  2FC4               	goto	l4624
 15406  17D3                     u3310:
 15407  17D3                     l4626:
 15408                           
 15409                           ;LCD/lcd.c: 21:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15410  17D3  304E               	movlw	78
 15411  17D4  3188  202D  3197   	fcall	_WriteI2C
 15412  17D7                     l4628:
 15413  17D7  0023               	movlb	3	; select bank3
 15414  17D8  0C0F               	rrf	15,w	;volatile
 15415  17D9  0C89               	rrf	9,f
 15416  17DA  3901               	andlw	1
 15417  17DB  0020               	movlb	0	; select bank0
 15418  17DC  00A2               	movwf	??_LCDsend
 15419  17DD  0023               	movlb	3	; select bank3
 15420  17DE  0811               	movf	17,w	;volatile
 15421  17DF  391F               	andlw	31
 15422  17E0  0020               	movlb	0	; select bank0
 15423  17E1  0422               	iorwf	??_LCDsend,w
 15424  17E2  1D03               	btfss	3,2
 15425  17E3  2FE5               	goto	u3321
 15426  17E4  2FE6               	goto	u3320
 15427  17E5                     u3321:
 15428  17E5  2FD7               	goto	l4628
 15429  17E6                     u3320:
 15430  17E6                     l4630:
 15431                           
 15432                           ;LCD/lcd.c: 22:   WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15433  17E6  0823               	movf	LCDsend@c,w
 15434  17E7  3188  202D  3197   	fcall	_WriteI2C
 15435  17EA                     l4632:
 15436  17EA  0023               	movlb	3	; select bank3
 15437  17EB  0C0F               	rrf	15,w	;volatile
 15438  17EC  0C89               	rrf	9,f
 15439  17ED  3901               	andlw	1
 15440  17EE  0020               	movlb	0	; select bank0
 15441  17EF  00A2               	movwf	??_LCDsend
 15442  17F0  0023               	movlb	3	; select bank3
 15443  17F1  0811               	movf	17,w	;volatile
 15444  17F2  391F               	andlw	31
 15445  17F3  0020               	movlb	0	; select bank0
 15446  17F4  0422               	iorwf	??_LCDsend,w
 15447  17F5  1D03               	btfss	3,2
 15448  17F6  2FF8               	goto	u3331
 15449  17F7  2FF9               	goto	u3330
 15450  17F8                     u3331:
 15451  17F8  2FEA               	goto	l4632
 15452  17F9                     u3330:
 15453  17F9                     l87:	
 15454                           ;LCD/lcd.c: 23:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 15455                           
 15456  17F9  0023               	movlb	3	; select bank3
 15457  17FA  1511               	bsf	17,2	;volatile
 15458  17FB                     l88:
 15459  17FB  1911               	btfsc	17,2	;volatile
 15460  17FC  2FFE               	goto	u3341
 15461  17FD  2FFF               	goto	u3340
 15462  17FE                     u3341:
 15463  17FE  2FFB               	goto	l88
 15464  17FF                     u3340:
 15465  17FF                     l92:
 15466  17FF  0008               	return
 15467  1800                     __end_of_LCDsend:
 15468                           
 15469                           	psect	text42
 15470  14B1                     __ptext42:	
 15471 ;; *************** function _LCDbusy *****************
 15472 ;; Defined at:
 15473 ;;		line 119 in file "LCD/lcd.c"
 15474 ;; Parameters:    Size  Location     Type
 15475 ;;		None
 15476 ;; Auto vars:     Size  Location     Type
 15477 ;;		None
 15478 ;; Return value:  Size  Location     Type
 15479 ;;                  2    7[BANK0 ] int 
 15480 ;; Registers used:
 15481 ;;		wreg, status,2, status,0, pclath, cstack
 15482 ;; Tracked objects:
 15483 ;;		On entry : 0/0
 15484 ;;		On exit  : 0/0
 15485 ;;		Unchanged: 0/0
 15486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15487 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15490 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15491 ;;Total ram usage:        2 bytes
 15492 ;; Hardware stack levels used: 1
 15493 ;; Hardware stack levels required when called: 7
 15494 ;; This function calls:
 15495 ;;		_LCDrecv
 15496 ;; This function is called by:
 15497 ;;		_main
 15498 ;; This function uses a non-reentrant model
 15499 ;;
 15500                           
 15501                           
 15502                           ;psect for function _LCDbusy
 15503  14B1                     _LCDbusy:
 15504  14B1                     l4938:	
 15505                           ;incstack = 0
 15506                           ; Regs used in _LCDbusy: [wreg+status,2+status,0+pclath+cstack]
 15507                           
 15508                           
 15509                           ;LCD/lcd.c: 121:   if(LCDrecv(0) & 0x80) return 1;
 15510  14B1  3000               	movlw	0
 15511  14B2  3184  24BB  3194   	fcall	_LCDrecv
 15512  14B5  3980               	andlw	128
 15513  14B6  1903               	btfsc	3,2
 15514  14B7  2CB9               	goto	u3681
 15515  14B8  2CBA               	goto	u3680
 15516  14B9                     u3681:
 15517  14B9  2CC0               	goto	l4944
 15518  14BA                     u3680:
 15519  14BA                     l4940:
 15520  14BA  3001               	movlw	1
 15521  14BB  0020               	movlb	0	; select bank0
 15522  14BC  00A7               	movwf	?_LCDbusy
 15523  14BD  3000               	movlw	0
 15524  14BE  00A8               	movwf	?_LCDbusy+1
 15525  14BF  2CC3               	goto	l248
 15526  14C0                     l4944:
 15527                           
 15528                           ;LCD/lcd.c: 122:   return 0;
 15529  14C0  0020               	movlb	0	; select bank0
 15530  14C1  01A7               	clrf	?_LCDbusy
 15531  14C2  01A8               	clrf	?_LCDbusy+1
 15532  14C3                     l248:
 15533  14C3  0008               	return
 15534  14C4                     __end_of_LCDbusy:
 15535                           
 15536                           	psect	text43
 15537  04BB                     __ptext43:	
 15538 ;; *************** function _LCDrecv *****************
 15539 ;; Defined at:
 15540 ;;		line 25 in file "LCD/lcd.c"
 15541 ;; Parameters:    Size  Location     Type
 15542 ;;  mode            1    wreg     unsigned char 
 15543 ;; Auto vars:     Size  Location     Type
 15544 ;;  mode            1    6[BANK0 ] unsigned char 
 15545 ;;  lc              1    5[BANK0 ] unsigned char 
 15546 ;;  hc              1    4[BANK0 ] unsigned char 
 15547 ;; Return value:  Size  Location     Type
 15548 ;;                  1    wreg      unsigned char 
 15549 ;; Registers used:
 15550 ;;		wreg, status,2, status,0, pclath, cstack
 15551 ;; Tracked objects:
 15552 ;;		On entry : 0/0
 15553 ;;		On exit  : 0/0
 15554 ;;		Unchanged: 0/0
 15555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15557 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15558 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15559 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15560 ;;Total ram usage:        5 bytes
 15561 ;; Hardware stack levels used: 1
 15562 ;; Hardware stack levels required when called: 6
 15563 ;; This function calls:
 15564 ;;		_ReadI2C
 15565 ;;		_WriteI2C
 15566 ;; This function is called by:
 15567 ;;		_LCDbusy
 15568 ;; This function uses a non-reentrant model
 15569 ;;
 15570                           
 15571                           
 15572                           ;psect for function _LCDrecv
 15573  04BB                     _LCDrecv:
 15574                           
 15575                           ;incstack = 0
 15576                           ; Regs used in _LCDrecv: [wreg+status,2+status,0+pclath+cstack]
 15577                           ;LCDrecv@mode stored from wreg
 15578  04BB  0020               	movlb	0	; select bank0
 15579  04BC  00A6               	movwf	LCDrecv@mode
 15580  04BD                     l4634:
 15581  04BD                     l4636:	
 15582                           ;LCD/lcd.c: 25: unsigned char LCDrecv(unsigned char mode);LCD/lcd.c: 26: {;LCD/lcd.c: 27
      +                          :   unsigned char hc;;LCD/lcd.c: 28:   unsigned char lc;;LCD/lcd.c: 30:   while ((SSP1CO
      +                          N2 & 0x1F) | (SSP1STATbits.R_W));
 15583                           
 15584  04BD  0023               	movlb	3	; select bank3
 15585  04BE  0C0F               	rrf	15,w	;volatile
 15586  04BF  0C89               	rrf	9,f
 15587  04C0  3901               	andlw	1
 15588  04C1  0020               	movlb	0	; select bank0
 15589  04C2  00A2               	movwf	??_LCDrecv
 15590  04C3  0023               	movlb	3	; select bank3
 15591  04C4  0811               	movf	17,w	;volatile
 15592  04C5  391F               	andlw	31
 15593  04C6  0020               	movlb	0	; select bank0
 15594  04C7  0422               	iorwf	??_LCDrecv,w
 15595  04C8  1D03               	btfss	3,2
 15596  04C9  2CCB               	goto	u3351
 15597  04CA  2CCC               	goto	u3350
 15598  04CB                     u3351:
 15599  04CB  2CBD               	goto	l4636
 15600  04CC                     u3350:
 15601  04CC                     l98:	
 15602                           ;LCD/lcd.c: 31:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15603                           
 15604  04CC  0023               	movlb	3	; select bank3
 15605  04CD  1411               	bsf	17,0	;volatile
 15606  04CE                     l99:
 15607  04CE  1811               	btfsc	17,0	;volatile
 15608  04CF  2CD1               	goto	u3361
 15609  04D0  2CD2               	goto	u3360
 15610  04D1                     u3361:
 15611  04D1  2CCE               	goto	l99
 15612  04D2                     u3360:
 15613  04D2                     l4638:
 15614  04D2  0023               	movlb	3	; select bank3
 15615  04D3  0C0F               	rrf	15,w	;volatile
 15616  04D4  0C89               	rrf	9,f
 15617  04D5  3901               	andlw	1
 15618  04D6  0020               	movlb	0	; select bank0
 15619  04D7  00A2               	movwf	??_LCDrecv
 15620  04D8  0023               	movlb	3	; select bank3
 15621  04D9  0811               	movf	17,w	;volatile
 15622  04DA  391F               	andlw	31
 15623  04DB  0020               	movlb	0	; select bank0
 15624  04DC  0422               	iorwf	??_LCDrecv,w
 15625  04DD  1D03               	btfss	3,2
 15626  04DE  2CE0               	goto	u3371
 15627  04DF  2CE1               	goto	u3370
 15628  04E0                     u3371:
 15629  04E0  2CD2               	goto	l4638
 15630  04E1                     u3370:
 15631  04E1                     l4640:
 15632                           
 15633                           ;LCD/lcd.c: 32:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15634  04E1  304E               	movlw	78
 15635  04E2  3188  202D  3184   	fcall	_WriteI2C
 15636  04E5                     l4642:
 15637  04E5  0023               	movlb	3	; select bank3
 15638  04E6  0C0F               	rrf	15,w	;volatile
 15639  04E7  0C89               	rrf	9,f
 15640  04E8  3901               	andlw	1
 15641  04E9  0020               	movlb	0	; select bank0
 15642  04EA  00A2               	movwf	??_LCDrecv
 15643  04EB  0023               	movlb	3	; select bank3
 15644  04EC  0811               	movf	17,w	;volatile
 15645  04ED  391F               	andlw	31
 15646  04EE  0020               	movlb	0	; select bank0
 15647  04EF  0422               	iorwf	??_LCDrecv,w
 15648  04F0  1D03               	btfss	3,2
 15649  04F1  2CF3               	goto	u3381
 15650  04F2  2CF4               	goto	u3380
 15651  04F3                     u3381:
 15652  04F3  2CE5               	goto	l4642
 15653  04F4                     u3380:
 15654  04F4                     l4644:
 15655                           
 15656                           ;LCD/lcd.c: 33:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 15657  04F4  0826               	movf	LCDrecv@mode,w
 15658  04F5  38FA               	iorlw	250
 15659  04F6  3188  202D  3184   	fcall	_WriteI2C
 15660  04F9                     l4646:
 15661  04F9  0023               	movlb	3	; select bank3
 15662  04FA  0C0F               	rrf	15,w	;volatile
 15663  04FB  0C89               	rrf	9,f
 15664  04FC  3901               	andlw	1
 15665  04FD  0020               	movlb	0	; select bank0
 15666  04FE  00A2               	movwf	??_LCDrecv
 15667  04FF  0023               	movlb	3	; select bank3
 15668  0500  0811               	movf	17,w	;volatile
 15669  0501  391F               	andlw	31
 15670  0502  0020               	movlb	0	; select bank0
 15671  0503  0422               	iorwf	??_LCDrecv,w
 15672  0504  1D03               	btfss	3,2
 15673  0505  2D07               	goto	u3391
 15674  0506  2D08               	goto	u3390
 15675  0507                     u3391:
 15676  0507  2CF9               	goto	l4646
 15677  0508                     u3390:
 15678  0508                     l4648:
 15679                           
 15680                           ;LCD/lcd.c: 34:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 15681  0508  0826               	movf	LCDrecv@mode,w
 15682  0509  38FE               	iorlw	254
 15683  050A  3188  202D  3184   	fcall	_WriteI2C
 15684  050D                     l4650:
 15685  050D  0023               	movlb	3	; select bank3
 15686  050E  0C0F               	rrf	15,w	;volatile
 15687  050F  0C89               	rrf	9,f
 15688  0510  3901               	andlw	1
 15689  0511  0020               	movlb	0	; select bank0
 15690  0512  00A2               	movwf	??_LCDrecv
 15691  0513  0023               	movlb	3	; select bank3
 15692  0514  0811               	movf	17,w	;volatile
 15693  0515  391F               	andlw	31
 15694  0516  0020               	movlb	0	; select bank0
 15695  0517  0422               	iorwf	??_LCDrecv,w
 15696  0518  1D03               	btfss	3,2
 15697  0519  2D1B               	goto	u3401
 15698  051A  2D1C               	goto	u3400
 15699  051B                     u3401:
 15700  051B  2D0D               	goto	l4650
 15701  051C                     u3400:
 15702  051C                     l114:
 15703                           
 15704                           ;LCD/lcd.c: 35:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 15705  051C  0000               	nop
 15706  051D                     l115:	
 15707                           ;LCD/lcd.c: 36:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15708                           
 15709  051D  0023               	movlb	3	; select bank3
 15710  051E  1491               	bsf	17,1	;volatile
 15711  051F                     l116:
 15712  051F  1891               	btfsc	17,1	;volatile
 15713  0520  2D22               	goto	u3411
 15714  0521  2D23               	goto	u3410
 15715  0522                     u3411:
 15716  0522  2D1F               	goto	l116
 15717  0523                     u3410:
 15718  0523                     l4652:
 15719  0523  0023               	movlb	3	; select bank3
 15720  0524  0C0F               	rrf	15,w	;volatile
 15721  0525  0C89               	rrf	9,f
 15722  0526  3901               	andlw	1
 15723  0527  0020               	movlb	0	; select bank0
 15724  0528  00A2               	movwf	??_LCDrecv
 15725  0529  0023               	movlb	3	; select bank3
 15726  052A  0811               	movf	17,w	;volatile
 15727  052B  391F               	andlw	31
 15728  052C  0020               	movlb	0	; select bank0
 15729  052D  0422               	iorwf	??_LCDrecv,w
 15730  052E  1D03               	btfss	3,2
 15731  052F  2D31               	goto	u3421
 15732  0530  2D32               	goto	u3420
 15733  0531                     u3421:
 15734  0531  2D23               	goto	l4652
 15735  0532                     u3420:
 15736  0532                     l4654:
 15737                           
 15738                           ;LCD/lcd.c: 37:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15739  0532  304F               	movlw	79
 15740  0533  3188  202D  3184   	fcall	_WriteI2C
 15741  0536                     l4656:
 15742  0536  0023               	movlb	3	; select bank3
 15743  0537  0C0F               	rrf	15,w	;volatile
 15744  0538  0C89               	rrf	9,f
 15745  0539  3901               	andlw	1
 15746  053A  0020               	movlb	0	; select bank0
 15747  053B  00A2               	movwf	??_LCDrecv
 15748  053C  0023               	movlb	3	; select bank3
 15749  053D  0811               	movf	17,w	;volatile
 15750  053E  391F               	andlw	31
 15751  053F  0020               	movlb	0	; select bank0
 15752  0540  0422               	iorwf	??_LCDrecv,w
 15753  0541  1D03               	btfss	3,2
 15754  0542  2D44               	goto	u3431
 15755  0543  2D45               	goto	u3430
 15756  0544                     u3431:
 15757  0544  2D36               	goto	l4656
 15758  0545                     u3430:
 15759  0545                     l4658:
 15760                           
 15761                           ;LCD/lcd.c: 38:   hc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15762  0545  3195  2593  3184   	fcall	_ReadI2C
 15763  0548  0020               	movlb	0	; select bank0
 15764  0549  00A2               	movwf	??_LCDrecv
 15765  054A  0822               	movf	??_LCDrecv,w
 15766  054B  00A4               	movwf	LCDrecv@hc
 15767  054C                     l4660:
 15768  054C  0023               	movlb	3	; select bank3
 15769  054D  0C0F               	rrf	15,w	;volatile
 15770  054E  0C89               	rrf	9,f
 15771  054F  3901               	andlw	1
 15772  0550  0020               	movlb	0	; select bank0
 15773  0551  00A2               	movwf	??_LCDrecv
 15774  0552  0023               	movlb	3	; select bank3
 15775  0553  0811               	movf	17,w	;volatile
 15776  0554  391F               	andlw	31
 15777  0555  0020               	movlb	0	; select bank0
 15778  0556  0422               	iorwf	??_LCDrecv,w
 15779  0557  1D03               	btfss	3,2
 15780  0558  2D5A               	goto	u3441
 15781  0559  2D5B               	goto	u3440
 15782  055A                     u3441:
 15783  055A  2D4C               	goto	l4660
 15784  055B                     u3440:
 15785  055B                     l129:	
 15786                           ;LCD/lcd.c: 39:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 15787                           
 15788  055B  0023               	movlb	3	; select bank3
 15789  055C  1691               	bsf	17,5	;volatile
 15790  055D  1611               	bsf	17,4	;volatile
 15791  055E                     l130:
 15792  055E  1A11               	btfsc	17,4	;volatile
 15793  055F  2D61               	goto	u3451
 15794  0560  2D62               	goto	u3450
 15795  0561                     u3451:
 15796  0561  2D5E               	goto	l130
 15797  0562                     u3450:
 15798  0562                     l134:	
 15799                           ;LCD/lcd.c: 40:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15800                           
 15801  0562  1491               	bsf	17,1	;volatile
 15802  0563                     l135:
 15803  0563  1891               	btfsc	17,1	;volatile
 15804  0564  2D66               	goto	u3461
 15805  0565  2D67               	goto	u3460
 15806  0566                     u3461:
 15807  0566  2D63               	goto	l135
 15808  0567                     u3460:
 15809  0567                     l4662:
 15810  0567  0023               	movlb	3	; select bank3
 15811  0568  0C0F               	rrf	15,w	;volatile
 15812  0569  0C89               	rrf	9,f
 15813  056A  3901               	andlw	1
 15814  056B  0020               	movlb	0	; select bank0
 15815  056C  00A2               	movwf	??_LCDrecv
 15816  056D  0023               	movlb	3	; select bank3
 15817  056E  0811               	movf	17,w	;volatile
 15818  056F  391F               	andlw	31
 15819  0570  0020               	movlb	0	; select bank0
 15820  0571  0422               	iorwf	??_LCDrecv,w
 15821  0572  1D03               	btfss	3,2
 15822  0573  2D75               	goto	u3471
 15823  0574  2D76               	goto	u3470
 15824  0575                     u3471:
 15825  0575  2D67               	goto	l4662
 15826  0576                     u3470:
 15827  0576                     l4664:
 15828                           
 15829                           ;LCD/lcd.c: 41:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15830  0576  304E               	movlw	78
 15831  0577  3188  202D  3184   	fcall	_WriteI2C
 15832  057A                     l4666:
 15833  057A  0023               	movlb	3	; select bank3
 15834  057B  0C0F               	rrf	15,w	;volatile
 15835  057C  0C89               	rrf	9,f
 15836  057D  3901               	andlw	1
 15837  057E  0020               	movlb	0	; select bank0
 15838  057F  00A2               	movwf	??_LCDrecv
 15839  0580  0023               	movlb	3	; select bank3
 15840  0581  0811               	movf	17,w	;volatile
 15841  0582  391F               	andlw	31
 15842  0583  0020               	movlb	0	; select bank0
 15843  0584  0422               	iorwf	??_LCDrecv,w
 15844  0585  1D03               	btfss	3,2
 15845  0586  2D88               	goto	u3481
 15846  0587  2D89               	goto	u3480
 15847  0588                     u3481:
 15848  0588  2D7A               	goto	l4666
 15849  0589                     u3480:
 15850  0589                     l4668:
 15851                           
 15852                           ;LCD/lcd.c: 42:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 15853  0589  0826               	movf	LCDrecv@mode,w
 15854  058A  38FA               	iorlw	250
 15855  058B  3188  202D  3184   	fcall	_WriteI2C
 15856  058E                     l4670:
 15857  058E  0023               	movlb	3	; select bank3
 15858  058F  0C0F               	rrf	15,w	;volatile
 15859  0590  0C89               	rrf	9,f
 15860  0591  3901               	andlw	1
 15861  0592  0020               	movlb	0	; select bank0
 15862  0593  00A2               	movwf	??_LCDrecv
 15863  0594  0023               	movlb	3	; select bank3
 15864  0595  0811               	movf	17,w	;volatile
 15865  0596  391F               	andlw	31
 15866  0597  0020               	movlb	0	; select bank0
 15867  0598  0422               	iorwf	??_LCDrecv,w
 15868  0599  1D03               	btfss	3,2
 15869  059A  2D9C               	goto	u3491
 15870  059B  2D9D               	goto	u3490
 15871  059C                     u3491:
 15872  059C  2D8E               	goto	l4670
 15873  059D                     u3490:
 15874  059D                     l4672:
 15875                           
 15876                           ;LCD/lcd.c: 43:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 15877  059D  0826               	movf	LCDrecv@mode,w
 15878  059E  38FE               	iorlw	254
 15879  059F  3188  202D  3184   	fcall	_WriteI2C
 15880  05A2                     l4674:
 15881  05A2  0023               	movlb	3	; select bank3
 15882  05A3  0C0F               	rrf	15,w	;volatile
 15883  05A4  0C89               	rrf	9,f
 15884  05A5  3901               	andlw	1
 15885  05A6  0020               	movlb	0	; select bank0
 15886  05A7  00A2               	movwf	??_LCDrecv
 15887  05A8  0023               	movlb	3	; select bank3
 15888  05A9  0811               	movf	17,w	;volatile
 15889  05AA  391F               	andlw	31
 15890  05AB  0020               	movlb	0	; select bank0
 15891  05AC  0422               	iorwf	??_LCDrecv,w
 15892  05AD  1D03               	btfss	3,2
 15893  05AE  2DB0               	goto	u3501
 15894  05AF  2DB1               	goto	u3500
 15895  05B0                     u3501:
 15896  05B0  2DA2               	goto	l4674
 15897  05B1                     u3500:
 15898  05B1                     l150:
 15899                           
 15900                           ;LCD/lcd.c: 44:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 15901  05B1  0000               	nop
 15902  05B2                     l151:	
 15903                           ;LCD/lcd.c: 45:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15904                           
 15905  05B2  0023               	movlb	3	; select bank3
 15906  05B3  1491               	bsf	17,1	;volatile
 15907  05B4                     l152:
 15908  05B4  1891               	btfsc	17,1	;volatile
 15909  05B5  2DB7               	goto	u3511
 15910  05B6  2DB8               	goto	u3510
 15911  05B7                     u3511:
 15912  05B7  2DB4               	goto	l152
 15913  05B8                     u3510:
 15914  05B8                     l4676:
 15915  05B8  0023               	movlb	3	; select bank3
 15916  05B9  0C0F               	rrf	15,w	;volatile
 15917  05BA  0C89               	rrf	9,f
 15918  05BB  3901               	andlw	1
 15919  05BC  0020               	movlb	0	; select bank0
 15920  05BD  00A2               	movwf	??_LCDrecv
 15921  05BE  0023               	movlb	3	; select bank3
 15922  05BF  0811               	movf	17,w	;volatile
 15923  05C0  391F               	andlw	31
 15924  05C1  0020               	movlb	0	; select bank0
 15925  05C2  0422               	iorwf	??_LCDrecv,w
 15926  05C3  1D03               	btfss	3,2
 15927  05C4  2DC6               	goto	u3521
 15928  05C5  2DC7               	goto	u3520
 15929  05C6                     u3521:
 15930  05C6  2DB8               	goto	l4676
 15931  05C7                     u3520:
 15932  05C7                     l4678:
 15933                           
 15934                           ;LCD/lcd.c: 46:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15935  05C7  304F               	movlw	79
 15936  05C8  3188  202D  3184   	fcall	_WriteI2C
 15937  05CB                     l4680:
 15938  05CB  0023               	movlb	3	; select bank3
 15939  05CC  0C0F               	rrf	15,w	;volatile
 15940  05CD  0C89               	rrf	9,f
 15941  05CE  3901               	andlw	1
 15942  05CF  0020               	movlb	0	; select bank0
 15943  05D0  00A2               	movwf	??_LCDrecv
 15944  05D1  0023               	movlb	3	; select bank3
 15945  05D2  0811               	movf	17,w	;volatile
 15946  05D3  391F               	andlw	31
 15947  05D4  0020               	movlb	0	; select bank0
 15948  05D5  0422               	iorwf	??_LCDrecv,w
 15949  05D6  1D03               	btfss	3,2
 15950  05D7  2DD9               	goto	u3531
 15951  05D8  2DDA               	goto	u3530
 15952  05D9                     u3531:
 15953  05D9  2DCB               	goto	l4680
 15954  05DA                     u3530:
 15955  05DA                     l4682:
 15956                           
 15957                           ;LCD/lcd.c: 47:   lc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15958  05DA  3195  2593  3184   	fcall	_ReadI2C
 15959  05DD  0020               	movlb	0	; select bank0
 15960  05DE  00A2               	movwf	??_LCDrecv
 15961  05DF  0822               	movf	??_LCDrecv,w
 15962  05E0  00A5               	movwf	LCDrecv@lc
 15963  05E1                     l4684:
 15964  05E1  0023               	movlb	3	; select bank3
 15965  05E2  0C0F               	rrf	15,w	;volatile
 15966  05E3  0C89               	rrf	9,f
 15967  05E4  3901               	andlw	1
 15968  05E5  0020               	movlb	0	; select bank0
 15969  05E6  00A2               	movwf	??_LCDrecv
 15970  05E7  0023               	movlb	3	; select bank3
 15971  05E8  0811               	movf	17,w	;volatile
 15972  05E9  391F               	andlw	31
 15973  05EA  0020               	movlb	0	; select bank0
 15974  05EB  0422               	iorwf	??_LCDrecv,w
 15975  05EC  1D03               	btfss	3,2
 15976  05ED  2DEF               	goto	u3541
 15977  05EE  2DF0               	goto	u3540
 15978  05EF                     u3541:
 15979  05EF  2DE1               	goto	l4684
 15980  05F0                     u3540:
 15981  05F0                     l165:	
 15982                           ;LCD/lcd.c: 48:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 15983                           
 15984  05F0  0023               	movlb	3	; select bank3
 15985  05F1  1691               	bsf	17,5	;volatile
 15986  05F2  1611               	bsf	17,4	;volatile
 15987  05F3                     l166:
 15988  05F3  1A11               	btfsc	17,4	;volatile
 15989  05F4  2DF6               	goto	u3551
 15990  05F5  2DF7               	goto	u3550
 15991  05F6                     u3551:
 15992  05F6  2DF3               	goto	l166
 15993  05F7                     u3550:
 15994  05F7                     l170:	
 15995                           ;LCD/lcd.c: 49:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15996                           
 15997  05F7  1491               	bsf	17,1	;volatile
 15998  05F8                     l171:
 15999  05F8  1891               	btfsc	17,1	;volatile
 16000  05F9  2DFB               	goto	u3561
 16001  05FA  2DFC               	goto	u3560
 16002  05FB                     u3561:
 16003  05FB  2DF8               	goto	l171
 16004  05FC                     u3560:
 16005  05FC                     l4686:
 16006  05FC  0023               	movlb	3	; select bank3
 16007  05FD  0C0F               	rrf	15,w	;volatile
 16008  05FE  0C89               	rrf	9,f
 16009  05FF  3901               	andlw	1
 16010  0600  0020               	movlb	0	; select bank0
 16011  0601  00A2               	movwf	??_LCDrecv
 16012  0602  0023               	movlb	3	; select bank3
 16013  0603  0811               	movf	17,w	;volatile
 16014  0604  391F               	andlw	31
 16015  0605  0020               	movlb	0	; select bank0
 16016  0606  0422               	iorwf	??_LCDrecv,w
 16017  0607  1D03               	btfss	3,2
 16018  0608  2E0A               	goto	u3571
 16019  0609  2E0B               	goto	u3570
 16020  060A                     u3571:
 16021  060A  2DFC               	goto	l4686
 16022  060B                     u3570:
 16023  060B                     l4688:
 16024                           
 16025                           ;LCD/lcd.c: 50:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16026  060B  304E               	movlw	78
 16027  060C  3188  202D  3184   	fcall	_WriteI2C
 16028  060F                     l4690:
 16029  060F  0023               	movlb	3	; select bank3
 16030  0610  0C0F               	rrf	15,w	;volatile
 16031  0611  0C89               	rrf	9,f
 16032  0612  3901               	andlw	1
 16033  0613  0020               	movlb	0	; select bank0
 16034  0614  00A2               	movwf	??_LCDrecv
 16035  0615  0023               	movlb	3	; select bank3
 16036  0616  0811               	movf	17,w	;volatile
 16037  0617  391F               	andlw	31
 16038  0618  0020               	movlb	0	; select bank0
 16039  0619  0422               	iorwf	??_LCDrecv,w
 16040  061A  1D03               	btfss	3,2
 16041  061B  2E1D               	goto	u3581
 16042  061C  2E1E               	goto	u3580
 16043  061D                     u3581:
 16044  061D  2E0F               	goto	l4690
 16045  061E                     u3580:
 16046  061E                     l4692:
 16047                           
 16048                           ;LCD/lcd.c: 51:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 16049  061E  0826               	movf	LCDrecv@mode,w
 16050  061F  38FA               	iorlw	250
 16051  0620  3188  202D  3184   	fcall	_WriteI2C
 16052  0623                     l4694:
 16053  0623  0023               	movlb	3	; select bank3
 16054  0624  0C0F               	rrf	15,w	;volatile
 16055  0625  0C89               	rrf	9,f
 16056  0626  3901               	andlw	1
 16057  0627  0020               	movlb	0	; select bank0
 16058  0628  00A2               	movwf	??_LCDrecv
 16059  0629  0023               	movlb	3	; select bank3
 16060  062A  0811               	movf	17,w	;volatile
 16061  062B  391F               	andlw	31
 16062  062C  0020               	movlb	0	; select bank0
 16063  062D  0422               	iorwf	??_LCDrecv,w
 16064  062E  1D03               	btfss	3,2
 16065  062F  2E31               	goto	u3591
 16066  0630  2E32               	goto	u3590
 16067  0631                     u3591:
 16068  0631  2E23               	goto	l4694
 16069  0632                     u3590:
 16070  0632                     l184:	
 16071                           ;LCD/lcd.c: 52:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 16072                           
 16073  0632  0023               	movlb	3	; select bank3
 16074  0633  1511               	bsf	17,2	;volatile
 16075  0634                     l185:
 16076  0634  1911               	btfsc	17,2	;volatile
 16077  0635  2E37               	goto	u3601
 16078  0636  2E38               	goto	u3600
 16079  0637                     u3601:
 16080  0637  2E34               	goto	l185
 16081  0638                     u3600:
 16082  0638                     l4696:
 16083                           
 16084                           ;LCD/lcd.c: 53:   return ((hc&0xf0) | ((lc>>4)&0x0f));
 16085  0638  0020               	movlb	0	; select bank0
 16086  0639  0825               	movf	LCDrecv@lc,w
 16087  063A  00A2               	movwf	??_LCDrecv
 16088  063B  3004               	movlw	4
 16089  063C                     u3615:
 16090  063C  36A2               	lsrf	??_LCDrecv,f
 16091  063D  0B89               	decfsz	9,f
 16092  063E  2E3C               	goto	u3615
 16093  063F  300F               	movlw	15
 16094  0640  0522               	andwf	??_LCDrecv,w
 16095  0641  00A3               	movwf	??_LCDrecv+1
 16096  0642  0824               	movf	LCDrecv@hc,w
 16097  0643  39F0               	andlw	240
 16098  0644  0423               	iorwf	??_LCDrecv+1,w
 16099  0645                     l189:
 16100  0645  0008               	return
 16101  0646                     __end_of_LCDrecv:
 16102                           
 16103                           	psect	text44
 16104  082D                     __ptext44:	
 16105 ;; *************** function _WriteI2C *****************
 16106 ;; Defined at:
 16107 ;;		line 59 in file "I2C/i2c.c"
 16108 ;; Parameters:    Size  Location     Type
 16109 ;;  data_out        1    wreg     unsigned char 
 16110 ;; Auto vars:     Size  Location     Type
 16111 ;;  data_out        1    1[BANK0 ] unsigned char 
 16112 ;; Return value:  Size  Location     Type
 16113 ;;                  1    wreg      char 
 16114 ;; Registers used:
 16115 ;;		wreg, status,2, status,0
 16116 ;; Tracked objects:
 16117 ;;		On entry : 0/0
 16118 ;;		On exit  : 0/0
 16119 ;;		Unchanged: 0/0
 16120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16122 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16123 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16124 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16125 ;;Total ram usage:        2 bytes
 16126 ;; Hardware stack levels used: 1
 16127 ;; Hardware stack levels required when called: 5
 16128 ;; This function calls:
 16129 ;;		Nothing
 16130 ;; This function is called by:
 16131 ;;		_LCDsend
 16132 ;;		_LCDrecv
 16133 ;;		_LCDsend2x4
 16134 ;;		_readTC74
 16135 ;; This function uses a non-reentrant model
 16136 ;;
 16137                           
 16138                           
 16139                           ;psect for function _WriteI2C
 16140  082D                     _WriteI2C:
 16141                           
 16142                           ;incstack = 0
 16143                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 16144                           ;WriteI2C@data_out stored from wreg
 16145  082D  0020               	movlb	0	; select bank0
 16146  082E  00A1               	movwf	WriteI2C@data_out
 16147  082F                     l4250:
 16148                           
 16149                           ;I2C/i2c.c: 59: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 60: {;I2C/i2c.
      +                          c: 61:   SSP1BUF = data_out;
 16150  082F  0821               	movf	WriteI2C@data_out,w
 16151  0830  0023               	movlb	3	; select bank3
 16152  0831  008C               	movwf	12	;volatile
 16153  0832                     l4252:
 16154                           
 16155                           ;I2C/i2c.c: 62:   if ( SSP1CON1bits.WCOL )
 16156  0832  1F90               	btfss	16,7	;volatile
 16157  0833  2835               	goto	u2621
 16158  0834  2836               	goto	u2620
 16159  0835                     u2621:
 16160  0835  2837               	goto	l4258
 16161  0836                     u2620:
 16162  0836  2886               	goto	l36
 16163  0837                     l4258:
 16164                           
 16165                           ;I2C/i2c.c: 65:   {;I2C/i2c.c: 66:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 16166  0837  300F               	movlw	15
 16167  0838  0510               	andwf	16,w	;volatile
 16168  0839  0020               	movlb	0	; select bank0
 16169  083A  00A0               	movwf	??_WriteI2C
 16170  083B  3008               	movlw	8
 16171  083C  0620               	xorwf	??_WriteI2C,w
 16172  083D  1903               	btfsc	3,2
 16173  083E  2840               	goto	u2631
 16174  083F  2841               	goto	u2630
 16175  0840                     u2631:
 16176  0840  285A               	goto	l4270
 16177  0841                     u2630:
 16178  0841                     l4260:
 16179  0841  300F               	movlw	15
 16180  0842  0023               	movlb	3	; select bank3
 16181  0843  0510               	andwf	16,w	;volatile
 16182  0844  0020               	movlb	0	; select bank0
 16183  0845  00A0               	movwf	??_WriteI2C
 16184  0846  300B               	movlw	11
 16185  0847  0620               	xorwf	??_WriteI2C,w
 16186  0848  1903               	btfsc	3,2
 16187  0849  284B               	goto	u2641
 16188  084A  284C               	goto	u2640
 16189  084B                     u2641:
 16190  084B  285A               	goto	l4270
 16191  084C                     u2640:
 16192  084C                     l4262:
 16193                           
 16194                           ;I2C/i2c.c: 67:  {;I2C/i2c.c: 68:        SSP1CON1bits.CKP = 1;
 16195  084C  0023               	movlb	3	; select bank3
 16196  084D  1610               	bsf	16,4	;volatile
 16197  084E                     l39:	
 16198                           ;I2C/i2c.c: 69:        while ( !PIR3bits.SSP1IF );
 16199                           
 16200  084E  002E               	movlb	14	; select bank14
 16201  084F  1C0F               	btfss	15,0	;volatile
 16202  0850  2852               	goto	u2651
 16203  0851  2853               	goto	u2650
 16204  0852                     u2651:
 16205  0852  284E               	goto	l39
 16206  0853                     u2650:
 16207  0853                     l41:
 16208                           
 16209                           ;I2C/i2c.c: 71:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 16210  0853  0023               	movlb	3	; select bank3
 16211  0854  190F               	btfsc	15,2	;volatile
 16212  0855  2857               	goto	u2661
 16213  0856  2858               	goto	u2660
 16214  0857                     u2661:
 16215  0857  2886               	goto	l36
 16216  0858                     u2660:
 16217  0858                     l4264:
 16218  0858  080F               	movf	15,w	;volatile
 16219  0859  2886               	goto	l36
 16220  085A                     l4270:
 16221  085A  300F               	movlw	15
 16222  085B  0023               	movlb	3	; select bank3
 16223  085C  0510               	andwf	16,w	;volatile
 16224  085D  0020               	movlb	0	; select bank0
 16225  085E  00A0               	movwf	??_WriteI2C
 16226  085F  3008               	movlw	8
 16227  0860  0620               	xorwf	??_WriteI2C,w
 16228  0861  1903               	btfsc	3,2
 16229  0862  2864               	goto	u2671
 16230  0863  2865               	goto	u2670
 16231  0864                     u2671:
 16232  0864  2870               	goto	l48
 16233  0865                     u2670:
 16234  0865                     l4272:
 16235  0865  300F               	movlw	15
 16236  0866  0023               	movlb	3	; select bank3
 16237  0867  0510               	andwf	16,w	;volatile
 16238  0868  0020               	movlb	0	; select bank0
 16239  0869  00A0               	movwf	??_WriteI2C
 16240  086A  300B               	movlw	11
 16241  086B  0620               	xorwf	??_WriteI2C,w
 16242  086C  1D03               	btfss	3,2
 16243  086D  286F               	goto	u2681
 16244  086E  2870               	goto	u2680
 16245  086F                     u2681:
 16246  086F  2886               	goto	l36
 16247  0870                     u2680:
 16248  0870                     l48:
 16249  0870  0023               	movlb	3	; select bank3
 16250  0871  180F               	btfsc	15,0	;volatile
 16251  0872  2874               	goto	u2691
 16252  0873  2875               	goto	u2690
 16253  0874                     u2691:
 16254  0874  2870               	goto	l48
 16255  0875                     u2690:
 16256  0875                     l4274:
 16257  0875  0023               	movlb	3	; select bank3
 16258  0876  0C0F               	rrf	15,w	;volatile
 16259  0877  0C89               	rrf	9,f
 16260  0878  3901               	andlw	1
 16261  0879  0020               	movlb	0	; select bank0
 16262  087A  00A0               	movwf	??_WriteI2C
 16263  087B  0023               	movlb	3	; select bank3
 16264  087C  0811               	movf	17,w	;volatile
 16265  087D  391F               	andlw	31
 16266  087E  0020               	movlb	0	; select bank0
 16267  087F  0420               	iorwf	??_WriteI2C,w
 16268  0880  1D03               	btfss	3,2
 16269  0881  2883               	goto	u2701
 16270  0882  2884               	goto	u2700
 16271  0883                     u2701:
 16272  0883  2875               	goto	l4274
 16273  0884                     u2700:
 16274  0884                     l53:
 16275                           
 16276                           ;I2C/i2c.c: 84:      if ( SSP1CON2bits.ACKSTAT )
 16277  0884  0023               	movlb	3	; select bank3
 16278  0885  0811               	movf	17,w	;volatile
 16279  0886                     l36:
 16280  0886  0008               	return
 16281  0887                     __end_of_WriteI2C:
 16282                           
 16283                           	psect	text45
 16284  1593                     __ptext45:	
 16285 ;; *************** function _ReadI2C *****************
 16286 ;; Defined at:
 16287 ;;		line 44 in file "I2C/i2c.c"
 16288 ;; Parameters:    Size  Location     Type
 16289 ;;		None
 16290 ;; Auto vars:     Size  Location     Type
 16291 ;;		None
 16292 ;; Return value:  Size  Location     Type
 16293 ;;                  1    wreg      unsigned char 
 16294 ;; Registers used:
 16295 ;;		wreg, status,2, status,0
 16296 ;; Tracked objects:
 16297 ;;		On entry : 0/0
 16298 ;;		On exit  : 0/0
 16299 ;;		Unchanged: 0/0
 16300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16303 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16304 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16305 ;;Total ram usage:        1 bytes
 16306 ;; Hardware stack levels used: 1
 16307 ;; Hardware stack levels required when called: 5
 16308 ;; This function calls:
 16309 ;;		Nothing
 16310 ;; This function is called by:
 16311 ;;		_LCDrecv
 16312 ;;		_readTC74
 16313 ;; This function uses a non-reentrant model
 16314 ;;
 16315                           
 16316                           
 16317                           ;psect for function _ReadI2C
 16318  1593                     _ReadI2C:
 16319  1593                     l4432:	
 16320                           ;incstack = 0
 16321                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 16322                           
 16323                           
 16324                           ;I2C/i2c.c: 46: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 16325  1593  300F               	movlw	15
 16326  1594  0023               	movlb	3	; select bank3
 16327  1595  0510               	andwf	16,w	;volatile
 16328  1596  0020               	movlb	0	; select bank0
 16329  1597  00A0               	movwf	??_ReadI2C
 16330  1598  3008               	movlw	8
 16331  1599  0620               	xorwf	??_ReadI2C,w
 16332  159A  1903               	btfsc	3,2
 16333  159B  2D9D               	goto	u2961
 16334  159C  2D9E               	goto	u2960
 16335  159D                     u2961:
 16336  159D  2DA9               	goto	l28
 16337  159E                     u2960:
 16338  159E                     l4434:
 16339  159E  300F               	movlw	15
 16340  159F  0023               	movlb	3	; select bank3
 16341  15A0  0510               	andwf	16,w	;volatile
 16342  15A1  0020               	movlb	0	; select bank0
 16343  15A2  00A0               	movwf	??_ReadI2C
 16344  15A3  300B               	movlw	11
 16345  15A4  0620               	xorwf	??_ReadI2C,w
 16346  15A5  1D03               	btfss	3,2
 16347  15A6  2DA8               	goto	u2971
 16348  15A7  2DA9               	goto	u2970
 16349  15A8                     u2971:
 16350  15A8  2DAB               	goto	l29
 16351  15A9                     u2970:
 16352  15A9                     l28:
 16353                           
 16354                           ;I2C/i2c.c: 47:   SSP1CON2bits.RCEN = 1;
 16355  15A9  0023               	movlb	3	; select bank3
 16356  15AA  1591               	bsf	17,3	;volatile
 16357  15AB                     l29:
 16358  15AB  0023               	movlb	3	; select bank3
 16359  15AC  1C0F               	btfss	15,0	;volatile
 16360  15AD  2DAF               	goto	u2981
 16361  15AE  2DB0               	goto	u2980
 16362  15AF                     u2981:
 16363  15AF  2DAB               	goto	l29
 16364  15B0                     u2980:
 16365  15B0                     l4436:
 16366                           
 16367                           ;I2C/i2c.c: 49:   return ( SSP1BUF );
 16368  15B0  080C               	movf	12,w	;volatile
 16369  15B1                     l32:
 16370  15B1  0008               	return
 16371  15B2                     __end_of_ReadI2C:
 16372                           
 16373                           	psect	intentry
 16374  0004                     __pintentry:	
 16375 ;; *************** function _INTERRUPT_InterruptManager *****************
 16376 ;; Defined at:
 16377 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16378 ;; Parameters:    Size  Location     Type
 16379 ;;		None
 16380 ;; Auto vars:     Size  Location     Type
 16381 ;;		None
 16382 ;; Return value:  Size  Location     Type
 16383 ;;                  1    wreg      void 
 16384 ;; Registers used:
 16385 ;;		wreg, status,2, status,0, pclath, cstack
 16386 ;; Tracked objects:
 16387 ;;		On entry : 0/0
 16388 ;;		On exit  : 0/0
 16389 ;;		Unchanged: 0/0
 16390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16395 ;;Total ram usage:        0 bytes
 16396 ;; Hardware stack levels used: 1
 16397 ;; Hardware stack levels required when called: 4
 16398 ;; This function calls:
 16399 ;;		_TMR1_ISR
 16400 ;; This function is called by:
 16401 ;;		Interrupt level 1
 16402 ;; This function uses a non-reentrant model
 16403 ;;
 16404                           
 16405  0004                     _INTERRUPT_InterruptManager:
 16406                           
 16407                           ;incstack = 0
 16408  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 16409                           
 16410                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 16411  0005  3180               	pagesel	$
 16412  0006                     i1l5292:
 16413                           
 16414                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 16415  0006  1F0B               	btfss	11,6	;volatile
 16416  0007  2809               	goto	u415_21
 16417  0008  280A               	goto	u415_20
 16418  0009                     u415_21:
 16419  0009  2816               	goto	i1l499
 16420  000A                     u415_20:
 16421  000A                     i1l5294:
 16422                           
 16423                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 16424  000A  002E               	movlb	14	; select bank14
 16425  000B  1C1A               	btfss	26,0	;volatile
 16426  000C  280E               	goto	u416_21
 16427  000D  280F               	goto	u416_20
 16428  000E                     u416_21:
 16429  000E  2816               	goto	i1l499
 16430  000F                     u416_20:
 16431  000F                     i1l5296:
 16432  000F  1C10               	btfss	16,0	;volatile
 16433  0010  2812               	goto	u417_21
 16434  0011  2813               	goto	u417_20
 16435  0012                     u417_21:
 16436  0012  2816               	goto	i1l499
 16437  0013                     u417_20:
 16438  0013                     i1l5298:
 16439                           
 16440                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
 16441  0013  3194  2471  3180   	fcall	_TMR1_ISR
 16442  0016                     i1l499:	
 16443                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 16444                           
 16445  0016  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 16446  0017  0009               	retfie
 16447  0018                     __end_of_INTERRUPT_InterruptManager:
 16448                           
 16449                           	psect	text47
 16450  1471                     __ptext47:	
 16451 ;; *************** function _TMR1_ISR *****************
 16452 ;; Defined at:
 16453 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 16454 ;; Parameters:    Size  Location     Type
 16455 ;;		None
 16456 ;; Auto vars:     Size  Location     Type
 16457 ;;		None
 16458 ;; Return value:  Size  Location     Type
 16459 ;;                  1    wreg      void 
 16460 ;; Registers used:
 16461 ;;		wreg, status,2, status,0, pclath, cstack
 16462 ;; Tracked objects:
 16463 ;;		On entry : 0/0
 16464 ;;		On exit  : 0/0
 16465 ;;		Unchanged: 0/0
 16466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16471 ;;Total ram usage:        0 bytes
 16472 ;; Hardware stack levels used: 1
 16473 ;; Hardware stack levels required when called: 3
 16474 ;; This function calls:
 16475 ;;		_TMR1_CallBack
 16476 ;;		_TMR1_WriteTimer
 16477 ;; This function is called by:
 16478 ;;		_INTERRUPT_InterruptManager
 16479 ;; This function uses a non-reentrant model
 16480 ;;
 16481                           
 16482                           
 16483                           ;psect for function _TMR1_ISR
 16484  1471                     _TMR1_ISR:
 16485  1471                     i1l5008:	
 16486                           ;incstack = 0
 16487                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 16488                           
 16489                           
 16490                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 16491  1471  002E               	movlb	14	; select bank14
 16492  1472  1010               	bcf	16,0	;volatile
 16493  1473                     i1l5010:
 16494                           
 16495                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 16496  1473  0022               	movlb	2	; select bank2
 16497  1474  0862               	movf	(_timer1ReloadVal+1)^(0+256),w	;volatile
 16498  1475  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 16499  1476  0861               	movf	_timer1ReloadVal^(0+256),w	;volatile
 16500  1477  00F0               	movwf	TMR1_WriteTimer@timerVal
 16501  1478  3194  248E  3194   	fcall	_TMR1_WriteTimer
 16502                           
 16503                           ;mcc_generated_files/tmr1.c: 173:     TMR1_CallBack();
 16504  147B  3194  2457  3194   	fcall	_TMR1_CallBack
 16505  147E                     i1l558:
 16506  147E  0008               	return
 16507  147F                     __end_of_TMR1_ISR:
 16508                           
 16509                           	psect	text48
 16510  148E                     __ptext48:	
 16511 ;; *************** function _TMR1_WriteTimer *****************
 16512 ;; Defined at:
 16513 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 16514 ;; Parameters:    Size  Location     Type
 16515 ;;  timerVal        2    0[COMMON] unsigned short 
 16516 ;; Auto vars:     Size  Location     Type
 16517 ;;		None
 16518 ;; Return value:  Size  Location     Type
 16519 ;;                  1    wreg      void 
 16520 ;; Registers used:
 16521 ;;		wreg, status,2
 16522 ;; Tracked objects:
 16523 ;;		On entry : 0/0
 16524 ;;		On exit  : 0/0
 16525 ;;		Unchanged: 0/0
 16526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16530 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16531 ;;Total ram usage:        2 bytes
 16532 ;; Hardware stack levels used: 1
 16533 ;; This function calls:
 16534 ;;		Nothing
 16535 ;; This function is called by:
 16536 ;;		_TMR1_ISR
 16537 ;;		_TMR1_Reload
 16538 ;; This function uses a non-reentrant model
 16539 ;;
 16540                           
 16541                           
 16542                           ;psect for function _TMR1_WriteTimer
 16543  148E                     _TMR1_WriteTimer:
 16544  148E                     i1l4804:	
 16545                           ;incstack = 0
 16546                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 16547                           
 16548                           
 16549                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 16550  148E  0024               	movlb	4	; select bank4
 16551  148F  1D0E               	btfss	14,2	;volatile
 16552  1490  2C92               	goto	u363_21
 16553  1491  2C93               	goto	u363_20
 16554  1492                     u363_21:
 16555  1492  2C9A               	goto	i1l4814
 16556  1493                     u363_20:
 16557  1493                     i1l4806:
 16558                           
 16559                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 16560  1493  100E               	bcf	14,0	;volatile
 16561  1494                     i1l4808:
 16562                           
 16563                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (uint8_t)(timerVal >> 8);
 16564  1494  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 16565  1495  008D               	movwf	13	;volatile
 16566  1496                     i1l4810:
 16567                           
 16568                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
 16569  1496  0870               	movf	TMR1_WriteTimer@timerVal,w
 16570  1497  008C               	movwf	12	;volatile
 16571  1498                     i1l4812:
 16572                           
 16573                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 16574  1498  140E               	bsf	14,0	;volatile
 16575                           
 16576                           ;mcc_generated_files/tmr1.c: 140:     }
 16577  1499  2C9E               	goto	i1l546
 16578  149A                     i1l4814:
 16579                           
 16580                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 16581  149A  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 16582  149B  008D               	movwf	13	;volatile
 16583  149C                     i1l4816:
 16584                           
 16585                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = (uint8_t)timerVal;
 16586  149C  0870               	movf	TMR1_WriteTimer@timerVal,w
 16587  149D  008C               	movwf	12	;volatile
 16588  149E                     i1l546:
 16589  149E  0008               	return
 16590  149F                     __end_of_TMR1_WriteTimer:
 16591                           
 16592                           	psect	text49
 16593  1457                     __ptext49:	
 16594 ;; *************** function _TMR1_CallBack *****************
 16595 ;; Defined at:
 16596 ;;		line 176 in file "mcc_generated_files/tmr1.c"
 16597 ;; Parameters:    Size  Location     Type
 16598 ;;		None
 16599 ;; Auto vars:     Size  Location     Type
 16600 ;;		None
 16601 ;; Return value:  Size  Location     Type
 16602 ;;                  1    wreg      void 
 16603 ;; Registers used:
 16604 ;;		wreg, status,2, status,0, pclath, cstack
 16605 ;; Tracked objects:
 16606 ;;		On entry : 0/0
 16607 ;;		On exit  : 0/0
 16608 ;;		Unchanged: 0/0
 16609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16614 ;;Total ram usage:        0 bytes
 16615 ;; Hardware stack levels used: 1
 16616 ;; Hardware stack levels required when called: 2
 16617 ;; This function calls:
 16618 ;;		Absolute function
 16619 ;;		_TMR1_DefaultInterruptHandler
 16620 ;;		_timerInterrupt
 16621 ;; This function is called by:
 16622 ;;		_TMR1_ISR
 16623 ;; This function uses a non-reentrant model
 16624 ;;
 16625                           
 16626                           
 16627                           ;psect for function _TMR1_CallBack
 16628  1457                     _TMR1_CallBack:
 16629  1457                     i1l4818:	
 16630                           ;incstack = 0
 16631                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
 16632                           
 16633                           
 16634                           ;mcc_generated_files/tmr1.c: 179:     if(TMR1_InterruptHandler)
 16635  1457  0022               	movlb	2	; select bank2
 16636  1458  085F               	movf	_TMR1_InterruptHandler^(0+256),w
 16637  1459  0460               	iorwf	(_TMR1_InterruptHandler+1)^(0+256),w
 16638  145A  1903               	btfsc	3,2
 16639  145B  2C5D               	goto	u364_21
 16640  145C  2C5E               	goto	u364_20
 16641  145D                     u364_21:
 16642  145D  2C63               	goto	i1l562
 16643  145E                     u364_20:
 16644  145E                     i1l4820:
 16645                           
 16646                           ;mcc_generated_files/tmr1.c: 180:     {;mcc_generated_files/tmr1.c: 181:         TMR1_In
      +                          terruptHandler();
 16647  145E  0860               	movf	(_TMR1_InterruptHandler+1)^(0+256),w
 16648  145F  008A               	movwf	10
 16649  1460  085F               	movf	_TMR1_InterruptHandler^(0+256),w
 16650  1461  000A               	callw
 16651  1462  3194               	pagesel	$
 16652  1463                     i1l562:
 16653  1463  0008               	return
 16654  1464                     __end_of_TMR1_CallBack:
 16655                           
 16656                           	psect	text50
 16657  0002                     __ptext50:	
 16658 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 16659 ;; Defined at:
 16660 ;;		line 189 in file "mcc_generated_files/tmr1.c"
 16661 ;; Parameters:    Size  Location     Type
 16662 ;;		None
 16663 ;; Auto vars:     Size  Location     Type
 16664 ;;		None
 16665 ;; Return value:  Size  Location     Type
 16666 ;;                  1    wreg      void 
 16667 ;; Registers used:
 16668 ;;		None
 16669 ;; Tracked objects:
 16670 ;;		On entry : 0/0
 16671 ;;		On exit  : 0/0
 16672 ;;		Unchanged: 0/0
 16673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16678 ;;Total ram usage:        0 bytes
 16679 ;; Hardware stack levels used: 1
 16680 ;; This function calls:
 16681 ;;		Nothing
 16682 ;; This function is called by:
 16683 ;;		_TMR1_Initialize
 16684 ;;		_TMR1_CallBack
 16685 ;; This function uses a non-reentrant model
 16686 ;;
 16687                           
 16688                           
 16689                           ;psect for function _TMR1_DefaultInterruptHandler
 16690  0002                     _TMR1_DefaultInterruptHandler:
 16691  0002                     i1l568:	
 16692                           ;incstack = 0
 16693                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 16694                           
 16695  0002  0008               	return
 16696  0003                     __end_of_TMR1_DefaultInterruptHandler:
 16697                           
 16698                           	psect	text51
 16699  0964                     __ptext51:	
 16700 ;; *************** function _timerInterrupt *****************
 16701 ;; Defined at:
 16702 ;;		line 67 in file "main.c"
 16703 ;; Parameters:    Size  Location     Type
 16704 ;;		None
 16705 ;; Auto vars:     Size  Location     Type
 16706 ;;  dataAddr        2    0        unsigned short 
 16707 ;;  value           2    5[COMMON] unsigned short 
 16708 ;;  s               1    9[COMMON] unsigned char 
 16709 ;;  m               1    8[COMMON] unsigned char 
 16710 ;;  h               1    7[COMMON] unsigned char 
 16711 ;; Return value:  Size  Location     Type
 16712 ;;                  1    wreg      void 
 16713 ;; Registers used:
 16714 ;;		wreg, status,2, status,0, pclath, cstack
 16715 ;; Tracked objects:
 16716 ;;		On entry : 0/0
 16717 ;;		On exit  : 0/0
 16718 ;;		Unchanged: 0/0
 16719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16721 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16722 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16723 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16724 ;;Total ram usage:        6 bytes
 16725 ;; Hardware stack levels used: 1
 16726 ;; Hardware stack levels required when called: 1
 16727 ;; This function calls:
 16728 ;;		_ADCC_GetSingleConversion
 16729 ;;		i1_DATAEE_ReadByte
 16730 ;;		i1_DATAEE_WriteByte
 16731 ;; This function is called by:
 16732 ;;		_main
 16733 ;;		_TMR1_CallBack
 16734 ;; This function uses a non-reentrant model
 16735 ;;
 16736                           
 16737                           
 16738                           ;psect for function _timerInterrupt
 16739  0964                     _timerInterrupt:
 16740  0964                     i1l4486:	
 16741                           ;incstack = 0
 16742                           ; Regs used in _timerInterrupt: [wreg+status,2+status,0+pclath+cstack]
 16743                           
 16744  0964                     i1l4488:
 16745                           
 16746                           ;main.c: 69:     uint8_t h=DATAEE_ReadByte(dataAddr);
 16747  0964  3020               	movlw	32
 16748  0965  00F0               	movwf	i1DATAEE_ReadByte@bAdd
 16749  0966  3000               	movlw	0
 16750  0967  00F1               	movwf	i1DATAEE_ReadByte@bAdd+1
 16751  0968  3194  244B  3189   	fcall	i1_DATAEE_ReadByte
 16752  096B  00F4               	movwf	??_timerInterrupt
 16753  096C  0874               	movf	??_timerInterrupt,w
 16754  096D  00F7               	movwf	timerInterrupt@h
 16755  096E                     i1l4490:
 16756                           
 16757                           ;main.c: 70:     uint8_t m=DATAEE_ReadByte(dataAddr + 1);
 16758  096E  3021               	movlw	33
 16759  096F  00F0               	movwf	i1DATAEE_ReadByte@bAdd
 16760  0970  3000               	movlw	0
 16761  0971  00F1               	movwf	i1DATAEE_ReadByte@bAdd+1
 16762  0972  3194  244B  3189   	fcall	i1_DATAEE_ReadByte
 16763  0975  00F4               	movwf	??_timerInterrupt
 16764  0976  0874               	movf	??_timerInterrupt,w
 16765  0977  00F8               	movwf	timerInterrupt@m
 16766  0978                     i1l4492:
 16767                           
 16768                           ;main.c: 71:     uint8_t s=DATAEE_ReadByte(dataAddr + 2);
 16769  0978  3022               	movlw	34
 16770  0979  00F0               	movwf	i1DATAEE_ReadByte@bAdd
 16771  097A  3000               	movlw	0
 16772  097B  00F1               	movwf	i1DATAEE_ReadByte@bAdd+1
 16773  097C  3194  244B  3189   	fcall	i1_DATAEE_ReadByte
 16774  097F  00F4               	movwf	??_timerInterrupt
 16775  0980  0874               	movf	??_timerInterrupt,w
 16776  0981  00F9               	movwf	timerInterrupt@s
 16777  0982                     i1l4494:
 16778                           
 16779                           ;main.c: 72:     if(s<59){
 16780  0982  303B               	movlw	59
 16781  0983  0279               	subwf	timerInterrupt@s,w
 16782  0984  1803               	skipnc
 16783  0985  2987               	goto	u312_21
 16784  0986  2988               	goto	u312_20
 16785  0987                     u312_21:
 16786  0987  298D               	goto	i1l4498
 16787  0988                     u312_20:
 16788  0988                     i1l4496:
 16789                           
 16790                           ;main.c: 73:         s++;
 16791  0988  3001               	movlw	1
 16792  0989  00F4               	movwf	??_timerInterrupt
 16793  098A  0874               	movf	??_timerInterrupt,w
 16794  098B  07F9               	addwf	timerInterrupt@s,f
 16795                           
 16796                           ;main.c: 74:     }else if(m<59){
 16797  098C  29A8               	goto	i1l4514
 16798  098D                     i1l4498:
 16799  098D  303B               	movlw	59
 16800  098E  0278               	subwf	timerInterrupt@m,w
 16801  098F  1803               	skipnc
 16802  0990  2992               	goto	u313_21
 16803  0991  2993               	goto	u313_20
 16804  0992                     u313_21:
 16805  0992  2999               	goto	i1l4504
 16806  0993                     u313_20:
 16807  0993                     i1l4500:
 16808                           
 16809                           ;main.c: 75:         m++;
 16810  0993  3001               	movlw	1
 16811  0994  00F4               	movwf	??_timerInterrupt
 16812  0995  0874               	movf	??_timerInterrupt,w
 16813  0996  07F8               	addwf	timerInterrupt@m,f
 16814  0997                     i1l4502:
 16815                           
 16816                           ;main.c: 76:         s=0;
 16817  0997  01F9               	clrf	timerInterrupt@s
 16818                           
 16819                           ;main.c: 77:     }else if(h<23){
 16820  0998  29A8               	goto	i1l4514
 16821  0999                     i1l4504:
 16822  0999  3017               	movlw	23
 16823  099A  0277               	subwf	timerInterrupt@h,w
 16824  099B  1803               	skipnc
 16825  099C  299E               	goto	u314_21
 16826  099D  299F               	goto	u314_20
 16827  099E                     u314_21:
 16828  099E  29A5               	goto	i1l4512
 16829  099F                     u314_20:
 16830  099F                     i1l4506:
 16831                           
 16832                           ;main.c: 78:         h++;
 16833  099F  3001               	movlw	1
 16834  09A0  00F4               	movwf	??_timerInterrupt
 16835  09A1  0874               	movf	??_timerInterrupt,w
 16836  09A2  07F7               	addwf	timerInterrupt@h,f
 16837  09A3                     i1l4508:
 16838                           
 16839                           ;main.c: 79:         m=0;
 16840  09A3  01F8               	clrf	timerInterrupt@m
 16841  09A4  2997               	goto	i1l4502
 16842  09A5                     i1l4512:
 16843                           
 16844                           ;main.c: 82:         h=0;
 16845  09A5  01F7               	clrf	timerInterrupt@h
 16846                           
 16847                           ;main.c: 83:         m=0;
 16848  09A6  01F8               	clrf	timerInterrupt@m
 16849                           
 16850                           ;main.c: 84:         s=0;
 16851  09A7  01F9               	clrf	timerInterrupt@s
 16852  09A8                     i1l4514:
 16853                           
 16854                           ;main.c: 86:     DATAEE_WriteByte(dataAddr, h);
 16855  09A8  3020               	movlw	32
 16856  09A9  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 16857  09AA  3000               	movlw	0
 16858  09AB  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 16859  09AC  0877               	movf	timerInterrupt@h,w
 16860  09AD  00F4               	movwf	??_timerInterrupt
 16861  09AE  0874               	movf	??_timerInterrupt,w
 16862  09AF  00F2               	movwf	i1DATAEE_WriteByte@bData
 16863  09B0  3195  2575  3189   	fcall	i1_DATAEE_WriteByte
 16864  09B3                     i1l4516:
 16865                           
 16866                           ;main.c: 87:     DATAEE_WriteByte(dataAddr+1, m);
 16867  09B3  3021               	movlw	33
 16868  09B4  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 16869  09B5  3000               	movlw	0
 16870  09B6  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 16871  09B7  0878               	movf	timerInterrupt@m,w
 16872  09B8  00F4               	movwf	??_timerInterrupt
 16873  09B9  0874               	movf	??_timerInterrupt,w
 16874  09BA  00F2               	movwf	i1DATAEE_WriteByte@bData
 16875  09BB  3195  2575  3189   	fcall	i1_DATAEE_WriteByte
 16876  09BE                     i1l4518:
 16877                           
 16878                           ;main.c: 88:     DATAEE_WriteByte(dataAddr+2, s);
 16879  09BE  3022               	movlw	34
 16880  09BF  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 16881  09C0  3000               	movlw	0
 16882  09C1  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 16883  09C2  0879               	movf	timerInterrupt@s,w
 16884  09C3  00F4               	movwf	??_timerInterrupt
 16885  09C4  0874               	movf	??_timerInterrupt,w
 16886  09C5  00F2               	movwf	i1DATAEE_WriteByte@bData
 16887  09C6  3195  2575  3189   	fcall	i1_DATAEE_WriteByte
 16888  09C9                     i1l4520:
 16889                           
 16890                           ;main.c: 89:     if(PORTAbits.RA7==0){
 16891  09C9  0020               	movlb	0	; select bank0
 16892  09CA  1B8C               	btfsc	12,7	;volatile
 16893  09CB  29CD               	goto	u315_21
 16894  09CC  29CE               	goto	u315_20
 16895  09CD                     u315_21:
 16896  09CD  29D0               	goto	i1l1181
 16897  09CE                     u315_20:
 16898  09CE                     i1l1178:	
 16899                           ;main.c: 90:         do { LATAbits.LATA7 = 1; } while(0);
 16900                           
 16901  09CE  1796               	bsf	22,7	;volatile
 16902  09CF  29D1               	goto	i1l4522
 16903  09D0                     i1l1181:	
 16904                           ;main.c: 92:         do { LATAbits.LATA7 = 0; } while(0);
 16905                           
 16906  09D0  1396               	bcf	22,7	;volatile
 16907  09D1                     i1l4522:
 16908                           
 16909                           ;main.c: 94:     adc_result_t value = ADCC_GetSingleConversion(channel_ANA0);
 16910  09D1  3000               	movlw	0
 16911  09D2  3194  249F  3189   	fcall	_ADCC_GetSingleConversion
 16912  09D5  0871               	movf	?_ADCC_GetSingleConversion+1,w
 16913  09D6  00F6               	movwf	timerInterrupt@value+1
 16914  09D7  0870               	movf	?_ADCC_GetSingleConversion,w
 16915  09D8  00F5               	movwf	timerInterrupt@value
 16916  09D9                     i1l4524:
 16917                           
 16918                           ;main.c: 95:     if(value > 0x2FD || value < 0xFF){
 16919  09D9  3002               	movlw	2
 16920  09DA  0276               	subwf	timerInterrupt@value+1,w
 16921  09DB  30FE               	movlw	254
 16922  09DC  1903               	skipnz
 16923  09DD  0275               	subwf	timerInterrupt@value,w
 16924  09DE  1803               	skipnc
 16925  09DF  29E1               	goto	u316_21
 16926  09E0  29E2               	goto	u316_20
 16927  09E1                     u316_21:
 16928  09E1  29EB               	goto	i1l1186
 16929  09E2                     u316_20:
 16930  09E2                     i1l4526:
 16931  09E2  3000               	movlw	0
 16932  09E3  0276               	subwf	timerInterrupt@value+1,w
 16933  09E4  30FF               	movlw	255
 16934  09E5  1903               	skipnz
 16935  09E6  0275               	subwf	timerInterrupt@value,w
 16936  09E7  1803               	skipnc
 16937  09E8  29EA               	goto	u317_21
 16938  09E9  29EB               	goto	u317_20
 16939  09EA                     u317_21:
 16940  09EA  29EE               	goto	i1l1189
 16941  09EB                     u317_20:
 16942  09EB                     i1l1186:	
 16943                           ;main.c: 96:         do { LATAbits.LATA4 = 1; } while(0);
 16944                           
 16945  09EB  0020               	movlb	0	; select bank0
 16946  09EC  1616               	bsf	22,4	;volatile
 16947  09ED  29F0               	goto	i1l1191
 16948  09EE                     i1l1189:	
 16949                           ;main.c: 98:         do { LATAbits.LATA4 = 0; } while(0);
 16950                           
 16951  09EE  0020               	movlb	0	; select bank0
 16952  09EF  1216               	bcf	22,4	;volatile
 16953  09F0                     i1l1191:
 16954  09F0  0008               	return
 16955  09F1                     __end_of_timerInterrupt:
 16956                           
 16957                           	psect	text52
 16958  1575                     __ptext52:	
 16959 ;; *************** function i1_DATAEE_WriteByte *****************
 16960 ;; Defined at:
 16961 ;;		line 180 in file "mcc_generated_files/memory.c"
 16962 ;; Parameters:    Size  Location     Type
 16963 ;;  bAdd            2    0[COMMON] unsigned short 
 16964 ;;  bData           1    2[COMMON] unsigned char 
 16965 ;; Auto vars:     Size  Location     Type
 16966 ;;  GIEBitValue     1    3[COMMON] unsigned char 
 16967 ;; Return value:  Size  Location     Type
 16968 ;;                  1    wreg      void 
 16969 ;; Registers used:
 16970 ;;		wreg, status,2, status,0
 16971 ;; Tracked objects:
 16972 ;;		On entry : 0/0
 16973 ;;		On exit  : 0/0
 16974 ;;		Unchanged: 0/0
 16975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16976 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16977 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16979 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16980 ;;Total ram usage:        4 bytes
 16981 ;; Hardware stack levels used: 1
 16982 ;; This function calls:
 16983 ;;		Nothing
 16984 ;; This function is called by:
 16985 ;;		_timerInterrupt
 16986 ;; This function uses a non-reentrant model
 16987 ;;
 16988                           
 16989                           
 16990                           ;psect for function i1_DATAEE_WriteByte
 16991  1575                     i1_DATAEE_WriteByte:
 16992  1575                     i1l4396:	
 16993                           ;incstack = 0
 16994                           ; Regs used in i1_DATAEE_WriteByte: [wreg+status,2+status,0]
 16995                           
 16996                           
 16997                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 16998  1575  3000               	movlw	0
 16999  1576  1B8B               	btfsc	11,7	;volatile
 17000  1577  3001               	movlw	1
 17001  1578  00F3               	movwf	i1DATAEE_WriteByte@GIEBitValue
 17002                           
 17003                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 17004  1579  0871               	movf	i1DATAEE_WriteByte@bAdd+1,w
 17005  157A  0030               	movlb	16	; select bank16
 17006  157B  009B               	movwf	27	;volatile
 17007  157C                     i1l4398:
 17008                           
 17009                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 17010  157C  0870               	movf	i1DATAEE_WriteByte@bAdd,w
 17011  157D  009A               	movwf	26	;volatile
 17012  157E                     i1l4400:
 17013                           
 17014                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 17015  157E  0872               	movf	i1DATAEE_WriteByte@bData,w
 17016  157F  009C               	movwf	28	;volatile
 17017  1580                     i1l4402:
 17018                           
 17019                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 17020  1580  171E               	bsf	30,6	;volsfr
 17021  1581                     i1l4404:
 17022                           
 17023                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 17024  1581  151E               	bsf	30,2	;volsfr
 17025  1582                     i1l4406:
 17026                           
 17027                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 17028  1582  138B               	bcf	11,7	;volatile
 17029  1583                     i1l4408:
 17030                           
 17031                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 17032  1583  3055               	movlw	85
 17033  1584  009F               	movwf	31	;volsfr
 17034  1585                     i1l4410:
 17035                           
 17036                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 17037  1585  30AA               	movlw	170
 17038  1586  009F               	movwf	31	;volsfr
 17039  1587                     i1l4412:
 17040                           
 17041                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 17042  1587  149E               	bsf	30,1	;volsfr
 17043  1588                     i1l765:	
 17044                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 17045                           
 17046                           
 17047                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 17048  1588  189E               	btfsc	30,1	;volsfr
 17049  1589  2D8B               	goto	u295_21
 17050  158A  2D8C               	goto	u295_20
 17051  158B                     u295_21:
 17052  158B  2D88               	goto	i1l765
 17053  158C                     u295_20:
 17054  158C                     i1l767:
 17055                           
 17056                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 17057  158C  111E               	bcf	30,2	;volsfr
 17058  158D                     i1l4414:
 17059                           
 17060                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 17061  158D  0C73               	rrf	i1DATAEE_WriteByte@GIEBitValue,w
 17062  158E  1C03               	skipc
 17063  158F  138B               	bcf	11,7	;volatile
 17064  1590  1803               	skipnc
 17065  1591  178B               	bsf	11,7	;volatile
 17066  1592                     i1l768:
 17067  1592  0008               	return
 17068  1593                     __end_ofi1_DATAEE_WriteByte:
 17069                           
 17070                           	psect	text53
 17071  144B                     __ptext53:	
 17072 ;; *************** function i1_DATAEE_ReadByte *****************
 17073 ;; Defined at:
 17074 ;;		line 202 in file "mcc_generated_files/memory.c"
 17075 ;; Parameters:    Size  Location     Type
 17076 ;;  bAdd            2    0[COMMON] unsigned short 
 17077 ;; Auto vars:     Size  Location     Type
 17078 ;;		None
 17079 ;; Return value:  Size  Location     Type
 17080 ;;                  1    wreg      unsigned char 
 17081 ;; Registers used:
 17082 ;;		wreg, status,2
 17083 ;; Tracked objects:
 17084 ;;		On entry : 0/0
 17085 ;;		On exit  : 0/0
 17086 ;;		Unchanged: 0/0
 17087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17091 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17092 ;;Total ram usage:        2 bytes
 17093 ;; Hardware stack levels used: 1
 17094 ;; This function calls:
 17095 ;;		Nothing
 17096 ;; This function is called by:
 17097 ;;		_timerInterrupt
 17098 ;; This function uses a non-reentrant model
 17099 ;;
 17100                           
 17101                           
 17102                           ;psect for function i1_DATAEE_ReadByte
 17103  144B                     i1_DATAEE_ReadByte:
 17104  144B                     i1l4416:	
 17105                           ;incstack = 0
 17106                           ; Regs used in i1_DATAEE_ReadByte: [wreg+status,2]
 17107                           
 17108                           
 17109                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 17110  144B  0871               	movf	i1DATAEE_ReadByte@bAdd+1,w
 17111  144C  0030               	movlb	16	; select bank16
 17112  144D  009B               	movwf	27	;volatile
 17113  144E                     i1l4418:
 17114                           
 17115                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 17116  144E  0870               	movf	i1DATAEE_ReadByte@bAdd,w
 17117  144F  009A               	movwf	26	;volatile
 17118  1450                     i1l4420:
 17119                           
 17120                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 17121  1450  171E               	bsf	30,6	;volsfr
 17122  1451                     i1l4422:
 17123                           
 17124                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 17125  1451  141E               	bsf	30,0	;volsfr
 17126  1452                     i1l4424:
 17127                           
 17128                           ;mcc_generated_files/memory.c: 208:     __nop();
 17129  1452  0000               	nop
 17130  1453                     i1l4426:
 17131                           
 17132                           ;mcc_generated_files/memory.c: 209:     __nop();
 17133  1453  0000               	nop
 17134  1454                     i1l4428:
 17135                           
 17136                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 17137  1454  0030               	movlb	16	; select bank16
 17138  1455  081C               	movf	28,w	;volatile
 17139  1456                     i1l771:
 17140  1456  0008               	return
 17141  1457                     __end_ofi1_DATAEE_ReadByte:
 17142                           
 17143                           	psect	text54
 17144  149F                     __ptext54:	
 17145 ;; *************** function _ADCC_GetSingleConversion *****************
 17146 ;; Defined at:
 17147 ;;		line 132 in file "mcc_generated_files/adcc.c"
 17148 ;; Parameters:    Size  Location     Type
 17149 ;;  channel         1    wreg     enum E12206
 17150 ;; Auto vars:     Size  Location     Type
 17151 ;;  channel         1    2[COMMON] enum E12206
 17152 ;; Return value:  Size  Location     Type
 17153 ;;                  2    0[COMMON] unsigned short 
 17154 ;; Registers used:
 17155 ;;		wreg
 17156 ;; Tracked objects:
 17157 ;;		On entry : 0/0
 17158 ;;		On exit  : 0/0
 17159 ;;		Unchanged: 0/0
 17160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17164 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17165 ;;Total ram usage:        3 bytes
 17166 ;; Hardware stack levels used: 1
 17167 ;; This function calls:
 17168 ;;		Nothing
 17169 ;; This function is called by:
 17170 ;;		_timerInterrupt
 17171 ;; This function uses a non-reentrant model
 17172 ;;
 17173                           
 17174                           
 17175                           ;psect for function _ADCC_GetSingleConversion
 17176  149F                     _ADCC_GetSingleConversion:
 17177                           
 17178                           ;incstack = 0
 17179                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 17180                           ;ADCC_GetSingleConversion@channel stored from wreg
 17181  149F  00F2               	movwf	ADCC_GetSingleConversion@channel
 17182  14A0                     i1l4280:
 17183                           
 17184                           ;mcc_generated_files/adcc.c: 132: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 133: {;mcc_generated_files/adcc.c: 135:     ADPCH = 
      +                          channel;
 17185  14A0  0872               	movf	ADCC_GetSingleConversion@channel,w
 17186  14A1  0021               	movlb	1	; select bank1
 17187  14A2  009E               	movwf	30	;volatile
 17188  14A3                     i1l4282:
 17189                           
 17190                           ;mcc_generated_files/adcc.c: 138:     ADCON0bits.ADON = 1;
 17191  14A3  1793               	bsf	19,7	;volatile
 17192  14A4                     i1l4284:
 17193                           
 17194                           ;mcc_generated_files/adcc.c: 141:     ADCON0bits.ADCONT = 0;
 17195  14A4  1313               	bcf	19,6	;volatile
 17196  14A5                     i1l4286:
 17197                           
 17198                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADGO = 1;
 17199  14A5  1413               	bsf	19,0	;volatile
 17200  14A6                     i1l4288:
 17201                           
 17202                           ;mcc_generated_files/adcc.c: 147:     __nop();
 17203  14A6  0000               	nop
 17204  14A7                     i1l655:	
 17205                           ;mcc_generated_files/adcc.c: 151:     {;mcc_generated_files/adcc.c: 152:     }
 17206                           
 17207                           
 17208                           ;mcc_generated_files/adcc.c: 150:     while (ADCON0bits.ADGO)
 17209  14A7  0021               	movlb	1	; select bank1
 17210  14A8  1813               	btfsc	19,0	;volatile
 17211  14A9  2CAB               	goto	u271_21
 17212  14AA  2CAC               	goto	u271_20
 17213  14AB                     u271_21:
 17214  14AB  2CA7               	goto	i1l655
 17215  14AC                     u271_20:
 17216  14AC                     i1l4290:
 17217                           
 17218                           ;mcc_generated_files/adcc.c: 156:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 17219  14AC  080D               	movf	13,w	;volatile
 17220  14AD  00F1               	movwf	?_ADCC_GetSingleConversion+1
 17221  14AE  080C               	movf	12,w	;volatile
 17222  14AF  00F0               	movwf	?_ADCC_GetSingleConversion
 17223  14B0                     i1l658:
 17224  14B0  0008               	return
 17225  14B1                     __end_of_ADCC_GetSingleConversion:
 17226  007E                     btemp	set	126	;btemp
 17227  007E                     int$flags	set	126
 17228  007E                     wtemp0	set	126
 17229                           
 17230                           	psect	config
 17231                           
 17232                           ;Config register CONFIG1 @ 0x8007
 17233                           ;	External Oscillator mode selection bits
 17234                           ;	FEXTOSC = OFF, Oscillator not enabled
 17235                           ;	Power-up default value for COSC bits
 17236                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 17237                           ;	Clock Out Enable bit
 17238                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 17239                           ;	Clock Switch Enable bit
 17240                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 17241                           ;	Fail-Safe Clock Monitor Enable bit
 17242                           ;	FCMEN = ON, FSCM timer enabled
 17243  8007                     	org	32775
 17244  8007  3FEC               	dw	16364
 17245                           
 17246                           ;Config register CONFIG2 @ 0x8008
 17247                           ;	Master Clear Enable bit
 17248                           ;	MCLRE = ON, MCLR pin is Master Clear function
 17249                           ;	Power-up Timer Enable bit
 17250                           ;	PWRTE = OFF, PWRT disabled
 17251                           ;	Low-Power BOR enable bit
 17252                           ;	LPBOREN = OFF, ULPBOR disabled
 17253                           ;	Brown-out reset enable bits
 17254                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 17255                           ;	Brown-out Reset Voltage Selection
 17256                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 17257                           ;	Zero-cross detect disable
 17258                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 17259                           ;	Peripheral Pin Select one-way control
 17260                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 17261                           ;	Stack Overflow/Underflow Reset Enable bit
 17262                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 17263                           ;	Background Debugger
 17264                           ;	DEBUG = OFF, Background Debugger disabled
 17265  8008                     	org	32776
 17266  8008  3FFF               	dw	16383
 17267                           
 17268                           ;Config register CONFIG3 @ 0x8009
 17269                           ;	WDT Period Select bits
 17270                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17271                           ;	WDT operating mode
 17272                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 17273                           ;	WDT Window Select bits
 17274                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 17275                           ;	WDT input clock selector
 17276                           ;	WDTCCS = SC, Software Control
 17277  8009                     	org	32777
 17278  8009  3F9F               	dw	16287
 17279                           
 17280                           ;Config register CONFIG4 @ 0x800A
 17281                           ;	UserNVM self-write protection bits
 17282                           ;	WRT = OFF, Write protection off
 17283                           ;	Scanner Enable bit
 17284                           ;	SCANE = available, Scanner module is available for use
 17285                           ;	Low Voltage Programming Enable bit
 17286                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 17287  800A                     	org	32778
 17288  800A  3FFF               	dw	16383
 17289                           
 17290                           ;Config register CONFIG5 @ 0x800B
 17291                           ;	UserNVM Program memory code protection bit
 17292                           ;	CP = OFF, Program Memory code protection disabled
 17293                           ;	DataNVM code protection bit
 17294                           ;	CPD = OFF, Data EEPROM code protection disabled
 17295  800B                     	org	32779
 17296  800B  3FFF               	dw	16383

Data Sizes:
    Strings     110
    Constant    32
    Data        0
    BSS         69
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     80      80
    BANK1            80     77      79
    BANK2            80      0      67
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$3414$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1484$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_9(CODE[7]), STR_7(CODE[15]), STR_6(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[20]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_9(CODE[7]), STR_7(CODE[15]), STR_6(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_9(CODE[7]), STR_7(CODE[15]), STR_6(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_9(CODE[7]), STR_7(CODE[15]), STR_6(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[20]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2864_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    parseEPROMInitialization@checksum	PTR unsigned char  size(1) Largest target is 1
		 -> main@checksum(BANK1[1]), 

    parseEPROMInitialization@CLKM	PTR unsigned char  size(1) Largest target is 1
		 -> main@CLKM(BANK1[1]), 

    parseEPROMInitialization@CLKH	PTR unsigned char  size(1) Largest target is 1
		 -> main@CLKH(BANK1[1]), 

    parseEPROMInitialization@ALAF	PTR unsigned char  size(1) Largest target is 1
		 -> main@ALAF(BANK1[1]), 

    parseEPROMInitialization@ALAL	PTR unsigned char  size(1) Largest target is 1
		 -> main@ALAL(BANK1[1]), 

    parseEPROMInitialization@ALAT	PTR unsigned char  size(1) Largest target is 1
		 -> main@ALAT(BANK1[1]), 

    parseEPROMInitialization@TALA	PTR unsigned char  size(1) Largest target is 1
		 -> main@TALA(BANK1[1]), 

    parseEPROMInitialization@PMON	PTR unsigned char  size(1) Largest target is 1
		 -> main@PMON(BANK1[1]), 

    parseEPROMInitialization@RI	PTR unsigned char  size(1) Largest target is 1
		 -> main@RI(BANK1[1]), 

    parseEPROMInitialization@WI	PTR unsigned char  size(1) Largest target is 1
		 -> main@WI(BANK1[1]), 

    parseEPROMInitialization@NR	PTR unsigned char  size(1) Largest target is 1
		 -> main@NR(BANK1[1]), 

    parseEPROMInitialization@NREG	PTR unsigned char  size(1) Largest target is 1
		 -> main@NREG(BANK1[1]), 

    parseEPROMInitialization@magic_word	PTR unsigned char  size(1) Largest target is 1
		 -> main@magic_word(BANK1[1]), 

    parseEPROMReading@luminosity	PTR unsigned char  size(1) Largest target is 1
		 -> main@luminosity(BANK1[1]), 

    parseEPROMReading@temperature	PTR unsigned char  size(1) Largest target is 1
		 -> main@temperature(BANK1[1]), 

    parseEPROMReading@seconds	PTR unsigned char  size(1) Largest target is 1
		 -> main@seconds(BANK1[1]), 

    parseEPROMReading@minutes	PTR unsigned char  size(1) Largest target is 1
		 -> main@minutes(BANK1[1]), 

    parseEPROMReading@hours	PTR unsigned char  size(1) Largest target is 1
		 -> main@hours(BANK1[1]), 

    S1484$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1484$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1484$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12595[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerInterrupt(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerInterrupt(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    S679$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    LCDstr@p	PTR unsigned char  size(2) Largest target is 17
		 -> STR_8(CODE[4]), STR_5(CODE[15]), STR_3(CODE[15]), main@buf(BANK1[17]), 
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_CallBack->_timerInterrupt
    _timerInterrupt->i1_DATAEE_WriteByte

Critical Paths under _main in BANK0

    _storeEPROMBuild->_operADDR
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _readTC74->_WriteI2C
    _parseEPROMReading->_operADDR
    _parseEPROMInitialization->_DATAEE_ReadByte
    _initializeEPROM->_DATAEE_WriteByte
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDpos->_LCDcmd
    _LCDcmd->_LCDsend2x4
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C
    _LCDbusy->_LCDrecv
    _LCDrecv->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                61    61      0   34505
                                             22 BANK1     55    55      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _LCDbusy
                             _LCDcmd
                            _LCDinit
                             _LCDpos
                             _LCDstr
                            _OpenI2C
                                 _S1
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _initializeEPROM
           _parseEPROMInitialization
                  _parseEPROMReading
                           _readTC74
                            _sprintf
                    _storeEPROMBuild
 ---------------------------------------------------------------------------------
 (1) _storeEPROMBuild                                      9     4      5    4405
                                              7 BANK0      9     4      5
                   _DATAEE_WriteByte
                           _operADDR
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8    9125
                                              6 BANK1     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    8379
                                             78 BANK0      2     2      0
                                              0 BANK1      6     3      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           43    41      2    8049
                                             57 BANK0     21    19      2
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4143
                                             27 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2537
                                             16 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1985
                                              6 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1144
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _readTC74                                             2     2      0      68
                                              2 BANK0      2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _parseEPROMReading                                    9     4      5    2571
                                              7 BANK0      9     4      5
                    _DATAEE_ReadByte
                           _operADDR
 ---------------------------------------------------------------------------------
 (2) _operADDR                                             7     5      2      49
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _parseEPROMInitialization                            14     2     12    3097
                                              2 BANK0     14     2     12
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2    1866
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initializeEPROM                                      1     1      0    3733
                                              4 BANK0      1     1      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3    3733
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _S1                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDstr                                               6     4      2    1539
                                              9 BANK0      6     4      2
                            _LCDchar
 ---------------------------------------------------------------------------------
 (2) _LCDchar                                              1     1      0     810
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDpos                                               4     3      1     977
                                              9 BANK0      4     3      1
                             _LCDcmd
 ---------------------------------------------------------------------------------
 (2) _LCDcmd                                               1     1      0     810
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     832
                                              8 BANK0      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (3) _LCDsend2x4                                           6     5      1     788
                                              2 BANK0      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK0      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _LCDbusy                                              2     0      2     178
                                              7 BANK0      2     0      2
                            _LCDrecv
 ---------------------------------------------------------------------------------
 (2) _LCDrecv                                              5     5      0     178
                                              2 BANK0      5     5      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0     951
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR1_ISR                                            0     0      0     951
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR1_CallBack                                       0     0      0     711
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                     _timerInterrupt *
 ---------------------------------------------------------------------------------
 (12) _timerInterrupt                                      8     8      0     711
                                              4 COMMON     6     6      0
           _ADCC_GetSingleConversion
                  i1_DATAEE_ReadByte
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (13) i1_DATAEE_WriteByte                                  4     1      3     245
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (13) i1_DATAEE_ReadByte                                   2     0      2     122
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (13) _ADCC_GetSingleConversion                            3     1      2      22
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _LCDbusy
     _LCDrecv
       _ReadI2C
       _WriteI2C
   _LCDcmd
     _LCDsend2x4
       _WriteI2C
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
   _LCDpos
     _LCDcmd
   _LCDstr
     _LCDchar
       _LCDsend2x4
   _OpenI2C
   _S1
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _initializeEPROM
     _DATAEE_WriteByte
   _parseEPROMInitialization
     _DATAEE_ReadByte
   _parseEPROMReading
     _DATAEE_ReadByte
     _operADDR
   _readTC74
     _ReadI2C
     _WriteI2C
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _isdigit
   _storeEPROMBuild
     _DATAEE_WriteByte
     _operADDR

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _timerInterrupt *
         _ADCC_GetSingleConversion
         i1_DATAEE_ReadByte
         i1_DATAEE_WriteByte
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4D      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      43       9       83.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      F0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 29 18:44:21 2021

       __size_of_parseEPROMInitialization 00B9                 ?_parseEPROMInitialization 0022  
                                      l23 1470                                        l32 15B1  
                                      l41 0853                                        l28 15A9  
                                      l36 0886                                        l29 15AB  
                                      l53 0884                                        l39 084E  
                                      l48 0870                                        l73 17BE  
                                      l74 17C0                                        _S1 1440  
                                      l92 17FF                                        l87 17F9  
                                      l88 17FB                                        l98 04CC  
                                      l99 04CE                       ___wmul@multiplicand 0022  
                                     ?_S1 0070                                       l130 055E  
                                     l114 051C                                       l115 051D  
                                     l211 0C5B                                       l116 051F  
                                     l220 0C9C                                       l150 05B1  
                                     l134 0562                                       l151 05B2  
                                     l135 0563                                       l152 05B4  
                                     l224 0CB3                                       l232 0963  
                                     l129 055B                                       l225 0CB5  
                                     l170 05F7                                       l171 05F8  
                                     l235 1412                                       l244 1521  
                                     l165 05F0                                       l229 0CBD  
                                     l253 1558                                       l166 05F3  
                                     l238 1423                                       l184 0632  
                                     l248 14C3                                       l185 0634  
                                     l195 0C09                                       l196 0C0B  
                                     l436 170C                                       l532 15F2  
                                     l189 0645                                       l482 141A  
                                     l643 14ED                                       l476 14D6  
                                     l565 1435                                       l479 142C  
                                     l771 148D                                       l765 1650  
                                     l767 1654                                       l768 165B  
                                     l876 143F                           _timer1ReloadVal 0161  
                                     _abs 1559                                       _pad 07AA  
                 __size_of_PMD_Initialize 0008                                       wreg 0009  
                    _I2C1_DO_RX_NACK_STOP 0000                                      ??_S1 0020  
                             ?_LCDsend2x4 0022                           __end_of_LCDchar 1424  
                                    l2002 07C4                                      l2010 068F  
                                    l2011 0697                                      ?_abs 0033  
                                    l1212 0EFA                                      l1213 0EFC  
                                    l2005 07E6                                      l2110 1506  
                                    l2007 07FF                                      l2015 06B0  
                                    l2016 06C6                                      l2040 0345  
                                    l1312 0164                                      l2033 07A9  
                                    l1305 00FF                                      l1234 0F4E  
                                    l1226 0F38                                      l2042 034F  
                                    l1243 0F68                                      l1235 0F50  
                                    l1227 0F3B                                      l2107 0B2D  
                                    l2019 0736                                      l2043 0351  
                                    l1340 1699                                      l1244 0F6A  
                                    l2044 0353                                      l1341 169E  
                                    l2133 17AC                                      l2141 082C  
                                    l2045 0355                                      l1166 1449  
                                    l1342 16A3                                      l1238 0F54  
                                    l1510 15D1                                      l2118 1614  
                                    l2150 153C                                      l2062 04BA  
                                    l1350 175B                                      l1343 16A8  
                                    l1271 0FE1                                      l2047 0386  
                                    l1168 144A                                      l1344 16C7  
                                    l1280 0FF9                                      l1272 0FE4  
                                    l2144 0003                                      l1353 08E0  
                                    l1257 0FA3                                      l2073 1574  
                                    l1338 1694                                      l1258 0FA5  
                                    l1194 0EB0                                      l1347 0A7E  
                                    l1356 0BE6                                      l1284 0FFF  
                                    l1508 15BD                                      l2076 1574  
                                    l4100 1776                                      l1621 0D99  
                                    l2069 1690                                      l1198 0EBF  
                                    l2094 0ABC                                      l1622 0DAA  
                                    l4102 1793                                      l4110 0809  
                                    l1279 0FF7                                      l1199 0EC1  
                                    l5000 14CA                                      l1608 0E9E  
                                    l4200 0D58                                      l4104 17A4  
                                    l4112 0817                                      l4120 152D  
                                    l1609 0EAF                                      l5002 14CD  
                                    l4130 15B9                                      l4202 0D68  
                                    l4114 081C                                      l4122 1536  
                                    l4210 07B0                                      l1298 009A  
                                    l5004 14D0                                      l5100 09F1  
                                    l4132 15C2                                      l4140 0DAB  
                                    l4204 0D76                                      l4108 0806  
                                    l4116 1524                                      l4220 07D3  
                                    l4212 07B8                                      l4300 0671  
                                    l5006 14D3                                      l4134 15C7  
                                    l4126 15B2                                      l4150 0E03  
                                    l4142 0DAD                                      l4206 0D7B  
                                    l4230 1559                                      l4118 1529  
                                    l4222 07D8                                      l4214 07BD  
                                    l4310 06BE                                      l4302 0693  
                                    l5110 173F                                      l5102 170F  
                                    l4136 15CD                                      l4128 15B5  
                                    l4240 15F6                                      l4160 0E2A  
                                    l4152 0E08                                      l4144 0DB7  
                                    l4232 1567                                      l4224 07EA  
                                    l4216 07C2                                      l4208 07AC  
                                    l4320 0701                                      l4312 06C2  
                                    l4304 06A5                                      l5120 1623  
                                    l5112 174D                                      l5104 1718  
                                    l4250 082F                                      l5130 08A0  
                                    l5050 0EC5                                      l4234 14EE  
                                    l4242 15FD                                      l4170 0E6C  
                                    l4162 0E2E                                      l4154 0E13  
                                    l4146 0DD9                                      l4226 07F3  
                                    l4218 07C7                                      l4330 075E  
                                    l4322 0705                                      l4314 06CA  
                                    l4306 06AB                                      l5122 162F  
                                    l5114 1617                                      l5106 1723  
                                    l4260 0841                                      l4252 0832  
                                    l5044 1440                                      l5132 08B0  
                                    l5060 0F00                                      l5052 0ED4  
                                    l4244 160C                                      l4172 0E6D  
                                    l4164 0E32                                      l4156 0E1F  
                                    l4148 0DE4                                      l4180 0CC0  
                                    l4092 175C                                      l4340 077F  
                                    l4332 076C                                      l4324 0709  
                                    l4316 06CD                                      l4308 06B8  
                                    l5116 161F                                      l5108 1731  
                                    l4262 084C                                      l4270 085A  
                                    l5046 1445                                      l5134 08C0  
                                    l5126 0889                                      l5070 0F3F  
                                    l5062 0F0F                                      l5054 0ED8  
                                    l4246 160D                                      l4238 15F3  
                                    l4166 0E3A                                      l4158 0E22  
                                    l4174 0E7B                                      l4190 0D23  
                                    l4182 0CCA                                      l4094 1762  
                                    l4342 0785                                      l4326 0744  
                                    l4334 0770                                      l4318 06D2  
                                    l5118 1621                                      l4432 1593  
                                    l4272 0865                                      l4264 0858  
                                    l4440 0BE9                                      l5136 08D0  
                                    l5128 0892                                      l5080 0F90  
                                    l5072 0F59                                      l5064 0F13  
                                    l5056 0EE7                                      l5048 0EB0  
                                    l4360 0A95                                      l4352 0A7F  
                                    l4176 0E80                                      l4168 0E5C  
                                    l4192 0D26                                      l4184 0CEC  
                                    l4096 1767                                      l4344 078A  
                                    l4336 0777                                      l4328 0751  
                                    l4434 159E                                      l4274 0875  
                                    l4258 0837                                      l4450 0C22  
                                    l4442 0BEE                                      l5138 0B30  
                                    l5090 0FCB                                      l5082 0F94  
                                    l5074 0F6E                                      l5066 0F22  
                                    l5058 0EEB                                      l4370 0AB8  
                                    l4362 0AA9                                      l4354 0A85  
                                    l4194 0D2E                                      l4186 0CF7  
                                    l4178 0CBE                                      l4098 176C  
                                    l4346 078E                                      l4338 077B  
                                    l4610 04B0                                      l4602 048C  
                                    l4530 0330                                      l1971 1637  
                                    l4436 15B0                                      l4620 17AF  
                                    l4460 0C5C                                      l4452 0C31  
                                    l4444 0BFA                                      l4700 140D  
                                    l5092 0FD2                                      l5084 0FA9  
                                    l5076 0F7D                                      l5068 0F29  
                                    l4372 0AC1                                      l4364 0AAA  
                                    l4356 0A89                                      l4196 0D32  
                                    l4188 0D16                                      l4348 0797  
                                    l4604 0494                                      l4532 0338  
                         __end_of_LCDbusy 14C4                                      l4630 17E6  
                                    l4622 17AF                                      l4470 0C8D  
                                    l4462 0C63                                      l4454 0C37  
                                    l4446 0C0F                                      l4702 141D  
                                    l5094 0FE8                                      l5086 0FB8  
                                    l5078 0F81                                      l4382 0B11  
                                    l4374 0AD5                                      l4358 0A8B  
                                    l4198 0D36                                      l4294 0648  
                                    l4534 033D                                      ?_pad 0030  
                                    l4640 04E1                                      l4632 17EA  
                                    l4624 17C4                                      l4472 0C9D  
                                    l4464 0C72                                      l4456 0C46  
                                    l4448 0C1E                                      l4720 16D4  
                                    l4712 16C8                                      l4800 15E7  
                                    l5096 0FFD                                      l5088 0FBC  
                                    l4384 0B17                                      l4368 0AB1  
                                    l4296 0658                                      l4560 039F  
                                    l4552 035C                                      l4536 0341  
                                    l4608 0497                                      l4528 031F  
                         __end_of_LCDinit 0964                                      l4650 050D  
                                    l4642 04E5                                      l4634 04BD  
                                    l4626 17D3                                      l4474 0CA4  
                                    l4466 0C78                                      l4458 0C4C  
                                    l4730 16DF                                      l4722 16D6  
                                    l4714 16CE                                      l4802 15EF  
                                    l4386 0B1D                                      l4378 0AF5  
                                    l4298 066B                                      l4562 03A7  
                                    l4570 03BF                                      l4538 0346  
                                    l4554 0380                                      l5610 0036  
                                    l4660 054C                                      l4652 0523  
                                    l4644 04F4                                      l4636 04BD  
                                    l4628 17D7                                      l4476 0CB9  
                                    l4468 0C87                                      l4900 08EA  
                                    l4740 16F3                                      l4732 16E1  
                                    l4724 16D8                                      l4716 16D0  
                                    l4388 0B29                                      l4572 03D2  
                                    l4580 0404                                      l4564 03B4  
                                    l4556 038A                                      l4548 0357  
                                    l5700 01AF                                      l5620 003F  
                                    l5612 0037                                      l5604 002D  
                                    l4670 058E                                      l4662 0567  
                                    l4654 0532                                      l4646 04F9  
                                    l4638 04D2                                      l4910 090E  
                                    l4902 08EE                                      l4750 16FD  
                                    l4742 16F5                                      l4734 16ED  
                                    l4726 16DB                                      l4718 16D2  
                                    l4478 142D                                      l4830 1649  
                                    l4822 1638                                      l4582 0416  
                                    l4574 03DA                                      l4566 03B8  
                                    l4558 038E                                      l5710 01F2  
                                    l5702 01B4                                      l5630 0057  
                                    l5622 003F                                      l5614 0039  
                                    l5606 0032                                      l4680 05CB  
                                    l4672 059D                                      l4664 0576  
                                    l4656 0536                                      l4648 0508  
                                    l4920 0932                                      l4912 0916  
                                    l4904 08F6                                      l4760 1709  
                                    l4752 16FF                                      l4744 16F7  
                                    l4736 16EF                                      l4728 16DD  
                                    l4840 1655                                      l4832 164A  
                                    l4824 1640                                      l4592 0462  
                                    l4584 0427                                      l4568 03B9  
                                    l5720 0282                                      l5712 01F5  
                                    l5704 01C4                                      l5640 0080  
                                    l5632 005A                                      l5624 004D  
                                    l5616 003C                                      l5608 0035  
                                    l4690 060F                                      l4682 05DA  
                                    l4674 05A2                                      l4666 057A  
                                    l4658 0545                                      l4930 0954  
                                    l4922 0936                                      l4914 091A  
                                    l4906 08FA                                      l4770 143E  
                                    l4754 1701                                      l4746 16F9  
                                    l4738 16F1                                      l4762 1413  
                                    l4834 164B                                      l4826 1644  
                                    l4850 1489                                      l4842 147F  
                                    l4594 0473                                      l4586 042F  
                                    l4578 03FE                                      l5730 02C5  
                                    l5722 0292                                      l5714 0217  
                                    l5706 01D7                                      l5650 00AC  
                                    l5642 0084                                      l5634 007C  
                                    l5626 004E                                      l5618 003F  
                                    l4692 061E                                      l4684 05E1  
                                    l4676 05B8                                      l4668 0589  
                                    l4940 14BA                                      l4924 0942  
                                    l4916 0922                                      l4908 090A  
                                    l4932 1507                                      l4780 14D7  
                                    l4764 1436                                      l4772 1424  
                                    l4756 1704                                      l4748 16FB  
                                    l4836 164D                                      l4828 1648  
                                    l4852 148A                                      l4844 1483  
                                    l5820 0ACD                                      l4596 047B  
                                    l4588 0448                                      l5740 02EC  
                                    l5732 02CD                                      l5724 0299  
                                    l5716 0263                                      l5708 01EA  
                                    l5660 00E5                                      l5652 00B6  
                                    l5644 008C                                      l5636 007E  
                                    l5628 0056                                      l4694 0623  
                                    l4686 05FC                                      l4678 05C7  
                                    l4926 0948                                      l4918 0926  
                                    l4950 1545                                      l4934 1508  
                                    l4782 14EA                                      l4766 143B  
                                    l4774 1427                                      l4758 1707  
                                    l4790 15D7                                      l4838 164F  
                                    l4854 148B                                      l4846 1487  
                                    l5822 16B5                                      l4862 16AD  
                                    l4598 0486                                      l5742 02FC  
                                    l5734 02D7                                      l5726 029D  
                                    l5718 0272                                      l5670 0112  
                                    l5662 00E9                                      l5654 00BA  
                                    l5646 009E                                      l5638 007F  
                                    l4696 0638                                      l4688 060B  
                                    l4944 14C0                                      l4928 094E  
                                    l4952 154A                                      l4936 150C  
                                    l4784 14EC                                      l4768 143C  
                                    l4776 1428                                      l4792 15D9  
                                    l4848 1488                                      l4864 16C3  
                                    l4880 167E                                      l5744 0306  
                                    l5736 02E1                                      l5728 02A7  
                                    l5680 014A                                      l5672 0116  
                                    l5664 00F1                                      l5656 00D8  
                                    l5648 00A3                                      l4938 14B1  
                                    l4954 154E                                      l4890 146A  
                                    l4778 142B                                      l4794 15DB  
                                    l4786 15D2                                      l4858 1693  
                                    l5818 036F                                      l4882 1688  
                                    l4874 165E                                      l5746 030D  
                                    l5738 02E8                                      l5690 0177  
                                    l5682 014E                                      l5674 0134  
                                    l5666 0103                                      l5658 00E0  
                                    l4956 1554                                      l4948 153F  
                                    l4892 146C                                      l4796 15DD  
                                    l4788 15D5                                      l4876 1662  
                                    l5692 017B                                      l5684 0156  
                                    l5676 013C                                      l5668 0108  
                                    l4894 146D                                      l4886 1464  
                                    l4798 15E5                                      l4878 1666  
                                    l5694 0199                                      l5686 0168  
                                    l5678 0145                                      l4896 146F  
                                    l4888 1469                                      l5696 01A1  
                                    l5688 016D                                      l4898 08E1  
                                    l5698 01AA                           __end_of_LCDrecv 0646  
                                    l4996 14C4                                      l4998 14C7  
                         __end_of_LCDsend 1800                                      STR_1 1876  
                                    STR_2 1835                                      STR_3 1867  
                                    STR_4 1820                                      STR_5 1858  
                                    STR_6 1820                                      STR_7 1849  
                                    STR_8 188A                                      STR_9 1883  
                                    u3000 0C09                                      u3001 0C08  
                                    u3010 0C0F                                      u3011 0C0E  
                                    u3100 0CB9                                      u3020 0C1E  
                                    u2220 1762                                      u3101 0CB8  
                                    u3021 0C1D                                      u2221 1761  
                                    _LATA 0016                                      u3030 0C31  
                                    u2310 15CD                                      u2230 1767  
                                    _LATB 0017                                      u3031 0C30  
                                    u2311 15CC                                      u2231 1766  
                                    _LATC 0018                                      u3040 0C46  
                                    u2400 0E7B                                      u2320 0DB7  
                                    u2240 1776                                      u3200 038A  
                                    _LATD 0019                                      u3041 0C45  
                                    u2305 15C3                                      u2401 0E7A  
                                    u2321 0DB6                                      u2241 1775  
                                    u3201 0389                                      _LATE 001A  
                                    u3050 0C5B                                      u2410 0E80  
                                    u2250 1793                                      u3210 039F  
                                    u3051 0C5A                                      u2411 0E7F  
                                    u2251 1792                                      u3211 039E  
                                    u3300 17C4                                      u3060 0C72  
                                    u2340 0DE4                                      u2500 0D76  
                                    u2260 082C                                      u3220 03B8  
                                    u3301 17C3                                      u3061 0C71  
                                    u2341 0DE3                                      u2501 0D75  
                                    u2261 082B                                      u3221 03B7  
                                    u3310 17D3                                      u3070 0C87  
                                    u2510 0D7B                                      u2430 0CCA  
                                    u2270 1536                                      u3230 03F7  
                                    u3311 17D2                                      u3071 0C86  
                                    u2511 0D7A                                      u2431 0CC9  
                                    u2255 178F                                      u2271 1535  
                                    u3231 03F5                                      u3400 051C  
                                    u3320 17E6                                      u3080 0C9C  
                                    u2280 15B9                                      u2600 15FD  
                                    u2360 0E10                                      u3240 03F8  
                                    u3401 051B                                      u3321 17E5  
                                    u3081 0C9B                                      u2281 15B8  
                                    u2601 15FC                                      u3410 0523  
                                    u3330 17F9                                      u3090 0CB3  
                                    u2610 160C                                      u2370 0E1F  
                                    u2450 0CF7                                      u2530 07B0  
                                    u3250 0404                                      u3411 0522  
                                    u3331 17F8                                      u3091 0CB2  
                                    u2611 160B                                      u2371 0E1E  
                                    u2451 0CF6                                      u2531 07AF  
                                    u3251 0403                                      u2700 0884  
                                    u2620 0836                                      u3500 05B1  
                                    u3420 0532                                      u3340 17FF  
                                    u2380 0E32                                      u2540 07BD  
                                    u3260 0416                                      u3180 0330  
                                    u4300 0103                                      u2701 0883  
                                    u2621 0835                                      u3501 05B0  
                                    u3421 0531                                      u3341 17FE  
                                    u2381 0E31                                      u2541 07BC  
                                    u3261 0415                                      u3181 032F  
                                    u4301 0102                                      u2630 0841  
                                    u3510 05B8                                      u3430 0545  
                                    u3350 04CC                                      u2390 0E5C  
                                    u2470 0D23                                      u2550 07E6  
                                    u3270 0427                                      u3190 0386  
                                    u4310 0112                                      u2631 0840  
                                    u3511 05B7                                      u3431 0544  
                                    u3351 04CB                                      u2295 15BE  
                                    u2391 0E5B                                      u2471 0D22  
                                    u2551 07E5                                      u3271 0426  
                                    u3191 0385                                      u4311 0111  
                parseEPROMReading@minutes 0027                                      u2640 084C  
                                    u3600 0638                                      u3520 05C7  
                                    u3440 055B                                      u3360 04D2  
                                    u2480 0D36                                      u2560 07EA  
                                    u2800 0744                                      u2720 0663  
                                    u3280 0473                                      u4320 014A  
                                    u2641 084B                                      u3601 0637  
                                    u3521 05C6                                      u3441 055A  
                                    u3361 04D1                                      u2481 0D35  
                                    u2561 07E9                                      u2801 0743  
                                    u2721 0661                                      u3281 0472  
                                    u4321 0149                                      u2650 0853  
                                    u3530 05DA                                      u3450 0562  
                                    u3370 04E1                                      u3290 17BE  
                                    u2490 0D58                                      u2570 1567  
                                    u2810 0751                                      u2730 0664  
                                    u4330 0168                                      u2651 0852  
                                    u3531 05D9                                      u3451 0561  
                                    u3371 04E0                                      u3291 17BD  
                                    u2395 0E58                                      u2491 0D57  
                                    u2571 1566                                      u2555 07E2  
                                    u2811 0750                                      u4331 0167  
                                    u2660 0858                                      u3540 05F0  
                                    u3460 0567                                      u3380 04F4  
                                    u2580 14FF                                      u2900 0AB7  
                                    u2820 075E                                      u2740 0671  
                                    u4340 0177                                      u2661 0857  
                                    u3541 05EF                                      u3461 0566  
                                    u3381 04F3                                      u2581 14FD  
                                    u2901 0AB6                                      u2821 075D  
                                    u2805 0740                                      u2741 0670  
                                    u4341 0176                  parseEPROMReading@seconds 0028  
                                    u2670 0865                                      u3550 05F7  
                                    u3470 0576                                      u3390 0508  
                                    u2590 1500                                      u2910 0B0A  
                                    u2830 076C                                      u4350 01AF  
                                    u4270 009E                                      u2671 0864  
                                    u3615 063C                                      u3551 05F6  
                                    u3471 0575                                      u3391 0507  
                                    u2911 0B08                                      u2495 0D54  
                                    u2575 1563                                      u2831 076B  
                                    u4351 01AE                                      u4407 00A7  
                                    u4271 009D                                      u2680 0870  
                                    u3560 05FC                                      u3480 0589  
                                    u3720 1445                                      u3800 0F0F  
                                    u2920 0B0B                                      u2840 0770  
                                    u2760 0693                                      u4360 02A7  
                                    u4280 00B6                                      u2681 086F  
                                    u3561 05FB                                      u3481 0588  
                                    u3721 1444                                      u3801 0F0E  
                                    u2841 076F                                      u2825 075A  
                                    u2761 0692                                      u4361 02A6  
                                    u4417 00F7                                      u4281 00B5  
                                    u2690 0875                                      u3570 060B  
                                    u3490 059D                                      u3730 1449  
                                    u3650 1654                                      u3810 0F22  
                                    u2930 0B17                                      u2850 0777  
                                    u2770 06A5                                      u4370 02E1  
                                    u4290 00E5                                      u2691 0874  
                                    u3571 060A                                      u3491 059C  
                                    u4507 0913                                      u3731 1448  
                                    u3651 1653                                      u3811 0F21  
                                    u2931 0B16                                      u2851 0776  
                                    u2835 0768                                      u2771 06A4  
                                    u4371 02E0                                      u4427 0140  
                                    u4291 00E4                                      u3580 061E  
                                    u3900 0F90                                      u3820 0F38  
                                    u3740 0EBF                                      u2940 0B1D  
                                    u2860 077B                                      u2780 06BE  
                                    u3660 1688                                      u4380 0306  
                                    _PMD0 0796                                      u3581 061D  
                                    u4517 091F                                      u3901 0F8F  
                                    u3821 0F37                                      u3741 0EBE  
                                    u2941 0B1C                                      u2861 077A  
                                    u2781 06BD                                      u3661 1687  
                                    u4381 0305                                      u4437 015C  
                                    _PMD1 0797                                      u3590 0632  
                                    u3670 1521                                      u3910 0FA3  
                                    u3830 0F3F                                      u3750 0EC5  
                                    u2870 0785                                      u2790 06C2  
                                    _PMD2 0798                                      u3591 0631  
                                    u4527 0927                                      u3671 1520  
                                    u3911 0FA2                                      u3831 0F3E  
                                    u3751 0EC4                                      u2871 0784  
                                    u2791 06C1                                      u2775 06A1  
                                    u4447 01A5                                      _PMD3 0799  
                                    u2960 159E                                      u3680 14BA  
                                    u3920 0FA9                                      u3840 0F4E  
                                    u3760 0ED4                                      u2880 0A95  
                                    _PMD4 079A                                      u2961 159D  
                                    u3681 14B9                                      u4537 0933  
                                    u3921 0FA8                                      u3841 0F4D  
                                    u3761 0ED3                                      u2881 0A94  
                                    u4457 0313                                      _PMD5 079B  
                                    u2970 15A9                                      u3690 1545  
                                    u3930 0FB8                                      u3850 0F54  
                                    u3770 0EE7                                      u2890 0AA9  
                                    u2971 15A8                                      u4547 093E  
                                    u4467 08E5                                      u3691 1544  
                                    u3931 0FB7                                      u3851 0F53  
                                    u3771 0EE6                                      u2891 0AA8  
                                    u2980 15B0                                      u3940 0FCB  
                                    u3860 0F59                                      u3780 0EFA  
                                    u2981 15AF                                      u4557 095E  
                                    u4477 08F3                                      u3941 0FCA  
                                    u3861 0F58                                      u3781 0EF9  
                                    u4397 0092                                      u3950 0FE1  
                                    u3870 0F68                                      u3790 0F00  
                                    u4567 0CBA                                      u4487 08FE  
                                    u3951 0FE0                                      u3871 0F67  
                                    u3791 0EFF                                      u3960 0FE8  
                                    u3880 0F6E                                      u4497 090B  
                                    u3961 0FE7                                      u3881 0F6D  
                                    u3970 0FF7                                      u3890 0F7D  
                                    u2995 0BF1                                      u3971 0FF6  
                                    u3891 0F7C                                      u3980 0FFD  
                                    u3981 0FFC                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                                    abs@a 0033                               main@minutes 00D7  
                             main@seconds 00D8                                      _dbuf 013F  
                                    _atoi 0A7F                                      _main 002D  
                                    _dtoa 0646                                      _prec 007A  
                                    _nout 013D                                      pad@i 0034  
                                    pad@p 0031                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      pad@w 0036  
                                    btemp 007E                     i1DATAEE_ReadByte@bAdd 0070  
                                    start 0018                ??_TMR1_SetInterruptHandler 0022  
                            main@dataAddr 00EB                          ??_timerInterrupt 0074  
                         __end_of_ReadI2C 15B2                              main@checksum 00E7  
                         __end_of_OpenI2C 1471                                     ??_abs 0035  
                                   ??_pad 0033                 __size_of_DATAEE_WriteByte 0024  
          __size_of_OSCILLATOR_Initialize 0009                         _parseEPROMReading 0887  
           __end_of_OSCILLATOR_Initialize 142D                           __end_of___aodiv 0EB0  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                                     ?_atoi 0026  
                                   ?_main 0070                                     ?_dtoa 003B  
                                   _ADCLK 0098                           __end_of___aomod 0DAB  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                         ??_initializeEPROM 0024  
                                   _ADPRE 009C                                     _ADRPT 010D  
                                   _T1CLK 0211                                     _T1CON 020E  
                      ?_parseEPROMReading 0027                                     i1l562 1463  
                                   i1l546 149E                                     i1l558 147E  
                                   i1l655 14A7                                     i1l568 0002  
                                   i1l658 14B0                                     i1l771 1456  
                                   i1l499 0016                                     i1l765 1588  
                                   i1l767 158C                                     i1l768 1592  
              __end_of_i2c1_fsmStateTable 1820                                     _OSCEN 0891  
                            vfpfcnvrt@fmt 0059                                     _TMR1H 020D  
                                   _TMR1L 020C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                       ??_I2C1_Initialize 0020                          __end_of_TMR1_ISR 147F  
                         _DATAEE_ReadByte 147F                                     _flags 007C  
                     ??_parseEPROMReading 002C                                     _fputc 175C  
                                   _fputs 0804                           __end_of_isdigit 1507  
                  storeEPROMBuild@minutes 0027                    storeEPROMBuild@seconds 0028  
                                   atoi@n 0033                                     pad@fp 0038  
                                   atoi@s 0026                                     _width 00ED  
                                   _putch 0003                                     main@c 00D5  
                                   main@h 00E8                                     main@m 00E9  
                                   dtoa@d 003B                                     main@s 00EA  
                                   dtoa@i 0057                                     dtoa@n 004F  
                                   dtoa@p 0049                                     dtoa@s 004D  
                                   dtoa@w 004B                           __end_of_isspace 1615  
                 __end_of_TMR1_Initialize 15F3                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 1638                           _TMR1_WriteTimer 148E  
                         __initialization 001A                              __end_of_atoi 0B2E  
                            __end_of_main 031D                              __end_of_dtoa 07AA  
               __end_of_parseEPROMReading 08E1                       __size_of_LCDsend2x4 00D7  
             ?_INTERRUPT_InterruptManager 0070                                    ??_atoi 0028  
                                  ??_main 00B6                                    ??_dtoa 0043  
                               ??_LCDchar 0028                                 ??_LCDbusy 0029  
                               ??_LCDinit 0028                                 ??_LCDrecv 0022  
                               ??_LCDsend 0022                __end_ofi1_DATAEE_WriteByte 1593  
                                  _ADACCH 0091                                    _ADACCL 0090  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  ?_fputc 0020                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    ?_fputs 0028  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                                  _ADUTHL 0110                          __end_of_WriteI2C 0887  
                                  _ANSELA 0F38                                    ?_putch 0070  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                                  _T1GATE 0210                                    _T1GCON 020F  
                 storeEPROMBuild@dataAddr 002E                                    _RC3PPS 0F23  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
                                  i1l1181 09D0                                    i1l1191 09F0  
                                  _ODCONA 0F3A                                    i1l1186 09EB  
                                  i1l1178 09CE                                    _ODCONB 0F45  
                                  _ODCONC 0F50                                    _ODCOND 0F5B  
                                  i1l1189 09EE                                    _ODCONE 0F66  
                                  i1l5010 1473                                    i1l4400 157E  
                                  i1l5008 1471                                    i1l4410 1585  
                                  i1l4402 1580                                    i1l4420 1450  
                                  i1l4412 1587                                    i1l4404 1581  
                                  i1l4500 0993                                    i1l4422 1451  
                                  i1l4414 158D                                    i1l4406 1582  
                                  i1l4502 0997                                    i1l4280 14A0  
                                  i1l4424 1452                                    i1l4416 144B  
                                  i1l4408 1583                                    i1l4520 09C9  
                                  i1l4512 09A5                                    i1l4504 0999  
                                  i1l4290 14AC                                    i1l4282 14A3  
                                  i1l4426 1453                                    i1l4418 144E  
                                  i1l4522 09D1                                    i1l4506 099F  
                                  i1l4514 09A8                                    i1l4284 14A4  
                                  i1l4428 1454                                    i1l4524 09D9  
                                  i1l4516 09B3                                    i1l4508 09A3  
                                  i1l4286 14A5                                    i1l4526 09E2  
                                  i1l4518 09BE                                    i1l4288 14A6  
                                  i1l4490 096E                                    i1l4810 1496  
                                  i1l4396 1575                                    i1l4492 0978  
                                  i1l4820 145E                                    i1l4812 1498  
                                  i1l4804 148E                                    i1l5292 0006  
                                  i1l4398 157C                                    i1l4494 0982  
                                  i1l4486 0964                                    i1l4806 1493  
                                  i1l4814 149A                                    i1l5294 000A  
                                  i1l4496 0988                                    i1l4488 0964  
                                  i1l4816 149C                                    i1l4808 1494  
                                  i1l5296 000F                                    i1l4498 098D  
                                  i1l4818 1457                                    i1l5298 0013  
                                  u312_20 0988                                    u312_21 0987  
                                  _INLVLA 0F3C                                    _INLVLB 0F47  
                                  _INLVLC 0F52                                    _INLVLD 0F5D  
                                  _INLVLE 0F68                                    u313_20 0993  
                                  u313_21 0992                                    _LCDcmd 140B  
                                  u314_20 099F                                    u314_21 099E  
                                  u315_20 09CE                                    u315_21 09CD  
                                  u316_20 09E2                                    u316_21 09E1  
                                  u317_20 09EB                                    u317_21 09EA  
                                  u271_20 14AC                                    u415_20 000A  
                                  u271_21 14AB                                    u415_21 0009  
                                  u416_20 000F                                    u416_21 000E  
                                  u417_20 0013                                    u417_21 0012  
                                  _LCDpos 153D                                    u363_20 1493  
                                  u363_21 1492                                    u364_20 145E  
                                  u364_21 145D                                    _LCDstr 1507  
                                  u295_20 158C                                    u295_21 158B  
                                  _OSCFRQ 0893                             vfpfcnvrt@done 0069  
                                  u233lld 0DD6                                    u242lld 0E9E  
                                  u235lld 0E03                                    u252lld 0D99  
                                  u244lld 0CE9                                    u246lld 0D16  
                                  u275lld 068F                                 ??_ReadI2C 0020  
                             LCDsend2x4@c 0025                               LCDrecv@mode 0026  
                               ??_OpenI2C 0020                          _I2C1_DO_TX_EMPTY 0000  
    __end_of_TMR1_DefaultInterruptHandler 0003     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0002                              vfprintf@cfmt 00A4  
                               ??___aodiv 0030                                 ??___aomod 0030  
                                  ___wmul 15B2                          __end_of_readTC74 1000  
                        __end_of_operADDR 16C8                                    pad@buf 0030  
                                  main@RI 00DF                                    main@NR 00DD  
                                  main@WI 00DE                                    dtoa@fp 0048  
                 __end_of_DATAEE_ReadByte 148E                                    _strlen 1522  
                         _ADCC_Initialize 14D7                     _I2C1_DO_SEND_ADR_READ 0000  
                                  fputc@c 0020                            _PMD_Initialize 1413  
                                  fputs@c 002C                                    fputs@i 002D  
                                  fputs@s 002F                                 ??_isdigit 0022  
                               ??_isspace 0022             i1DATAEE_WriteByte@GIEBitValue 0073  
       __size_of_ADCC_GetSingleConversion 0012                                    putch@c 0070  
                        __end_of_vfprintf 1691                 ?_ADCC_GetSingleConversion 0070  
TMR1_SetInterruptHandler@InterruptHandler 0020                                 ??_sprintf 00AE  
                 __end_of_TMR1_WriteTimer 149F                   _I2C1_DO_RX_NACK_RESTART 0000  
                   __end_of_TMR1_CallBack 1464                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 14C4                   __end_of__initialization 0029  
                      ?_SYSTEM_Initialize 0070                   _rdBlkRegCompleteHandler 0000  
                          __pcstackCOMMON 0070                       ??_SYSTEM_Initialize 0022  
                __size_of_storeEPROMBuild 004F        parseEPROMInitialization@magic_word 002F  
              __size_of_parseEPROMReading 005A                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                          _DATAEE_WriteByte 1638  
                    storeEPROMBuild@hours 002D                             __end_of_fputc 17AD  
                           __end_of_fputs 082D                             __end_of_putch 0004  
                              __end_of_S1 144B                    __end_of_PMD_Initialize 141B  
                  main@readRingBufferAddr 00C2                                 LCDrecv@hc 0024  
                               LCDrecv@lc 0025                              ??_LCDsend2x4 0023  
                                 ??_fputc 0023                 __end_of_SYSTEM_Initialize 14D7  
                                 ??_fputs 0029                                   ??_putch 0020  
                              __pbssBANK1 00ED                                __pbssBANK2 0120  
                  i1DATAEE_WriteByte@bAdd 0070                                   ?_LCDcmd 0070  
                                 ?_LCDpos 0029                                   ?_LCDstr 0029  
                                 LCDcmd@c 0028                                   LCDpos@c 0029  
                                 LCDpos@l 002B                                   LCDpos@p 002C  
                   _rd1RegCompleteHandler 0000                                   LCDstr@c 002E  
                                 LCDstr@p 0029              parseEPROMInitialization@ALAF 002A  
            parseEPROMInitialization@ALAL 0029              parseEPROMInitialization@ALAT 0028  
            parseEPROMInitialization@CLKH 002B              parseEPROMInitialization@CLKM 002C  
            parseEPROMInitialization@TALA 0027              parseEPROMInitialization@NREG 0022  
            parseEPROMInitialization@PMON 0026                         _I2C1_DO_SEND_STOP 0000  
                         _initializeEPROM 09F1                     _wr1RegCompleteHandler 0000  
                              __pmaintext 002D                                   ?___wmul 0020  
                              ??_TMR1_ISR 007A                   __end_of_ADCC_Initialize 14EE  
                              __pintentry 0004                           _I2C1_Initialize 1436  
                          main@magic_word 00DB                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                        __end_of_LCDsend2x4 0CBE  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0070                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112                           ?_PMD_Initialize 0070  
                                 ?_strlen 0020                          ?_DATAEE_ReadByte 0020  
                                 _LCDchar 141B                                   _LCDbusy 14B1  
                                 _LCDinit 08E1                                   _LCDrecv 04BB  
                                 _LCDsend 17AD                                   _OSCCON1 088D  
                                 _OSCCON3 088F                        __size_of_vfpfcnvrt 019E  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                          ?_TMR1_WriteTimer 0070  
                            LCDsend2x4@hc 0026                              LCDsend2x4@lc 0027  
                               ?_readTC74 0070                           __size_of_LCDcmd 0008  
                    DATAEE_WriteByte@bAdd 0020                           __size_of_LCDpos 001C  
                      _i2c1_fsmStateTable 1800                           __size_of_LCDstr 001B  
                                 _ReadI2C 1593                                 ?_operADDR 0020  
                                 _OpenI2C 1464                  _parseEPROMInitialization 0B2E  
                                 ___aodiv 0DAB                                   ___aomod 0CBE  
                         __size_of___wmul 0020                                 ?_vfprintf 00A0  
                              ??_WriteI2C 0020                                   __ptext1 170D  
                                 __ptext2 1615                                   __ptext3 165C  
                                 __ptext4 031D                                   __ptext5 0646  
                                 __ptext6 07AA                                   __ptext7 1522  
                                 __ptext8 0804                                   __ptext9 175C  
          ??_TMR1_DefaultInterruptHandler 0070                           __size_of_strlen 001B  
                       ??_storeEPROMBuild 002C                                 _T1CONbits 020E  
                   _OSCILLATOR_Initialize 1424                              __size_of_abs 001C  
                            __size_of_pad 0056                                   _isdigit 14EE  
       __size_of_TMR1_SetInterruptHandler 0009                  ??_PIN_MANAGER_Initialize 0020  
                                 _isspace 15F3                 ?_TMR1_SetInterruptHandler 0020  
              parseEPROMInitialization@RI 0025                parseEPROMInitialization@NR 0023  
              parseEPROMInitialization@WI 0024                                   atoi@neg 002C  
                storeEPROMBuild@operation 002B                                   main@buf 00C4  
              __size_of_SYSTEM_Initialize 0013                                   _sprintf 1615  
                                 clrloop0 1406                            main@luminosity 00DA  
                    end_of_initialization 0029                                ??_readTC74 0022  
                 __end_of_initializeEPROM 0A7F                                   fputc@fp 0022  
                                 fputs@fp 0028                    _I2C1_DO_SEND_ADR_WRITE 0000  
                              ??_operADDR 0022              parseEPROMReading@temperature 0029  
                      i1_DATAEE_WriteByte 1575                   __end_of_I2C1_Initialize 1440  
                             _I2C1_Status 0120                         __end_of_vfpfcnvrt 04BB  
                     ?i1_DATAEE_WriteByte 0070                          ?_ADCC_Initialize 0070  
                              ??_vfprintf 006E          __end_of_ADCC_GetSingleConversion 14B1  
               storeEPROMBuild@luminosity 002A                _I2C1_DO_SEND_RESTART_WRITE 0000  
                                 strlen@a 0023                                   strlen@s 0024  
                               _PORTAbits 000C                                 _PORTBbits 000D  
                               _PORTCbits 000E                   __size_of_timerInterrupt 008D  
                               _TRISCbits 0013                       timerInterrupt@value 0075  
                    ??i1_DATAEE_WriteByte 0073                  __end_of_DATAEE_WriteByte 165C  
                  parseEPROMReading@hours 002D                             readTC74@value 0023  
                          __end_of_LCDcmd 1413                            __end_of_LCDpos 1559  
                          __end_of_LCDstr 1522                            LCDsend2x4@mode 0022  
                             vfpfcnvrt@ap 005A                               vfpfcnvrt@fp 006D  
                             vfpfcnvrt@ll 0061                            __end_of___wmul 15D2  
                          _I2C1_DO_RX_ACK 0000                         __size_of_TMR1_ISR 000E  
              storeEPROMBuild@temperature 0029                    ?_OSCILLATOR_Initialize 0070  
                          __end_of_strlen 153D                       start_initialization 001A  
         __size_of_PIN_MANAGER_Initialize 0045                               __end_of_abs 1575  
                             __end_of_pad 0800                          WriteI2C@data_out 0021  
                                ??_LCDcmd 0028                                  ??_LCDpos 002A  
                                ??_LCDstr 002B                          ?_initializeEPROM 0070  
                     DATAEE_ReadByte@bAdd 0020                          ?_I2C1_Initialize 0070  
                __size_of_TMR1_Initialize 0021                               vfprintf@fmt 00A0  
                        ??_PMD_Initialize 0020                                  ??___wmul 0024  
                  __size_of_TMR1_CallBack 000D                                  ??_strlen 0022  
                       __size_of_WriteI2C 005A                  _ADCC_GetSingleConversion 149F  
                 i1DATAEE_WriteByte@bData 0072                                  ?_LCDchar 0070  
                             __pbssCOMMON 007A                                  ?_LCDbusy 0027  
                                ?_LCDinit 0070                      _I2C1_DO_SEND_RESTART 0000  
                                ?_LCDrecv 0070                                  ?_LCDsend 0070  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                          ___aodiv@dividend 0028  
                                LCDchar@c 0028                ??_parseEPROMInitialization 002E  
               parseEPROMReading@dataAddr 002E                                  LCDsend@c 0023  
                                ?_ReadI2C 0070                         __size_of_readTC74 0150  
                               _atoi$2982 002E                                 _atoi$2983 0032  
                               _atoi$2984 0030                                 __pnvBANK2 015F  
                   _rd2RegCompleteHandler 0000                                  ?_OpenI2C 0070  
                  _PIN_MANAGER_Initialize 16C8                     _wr2RegCompleteHandler 0000  
                               _dtoa$2947 0046                         __size_of_operADDR 0037  
                         _storeEPROMBuild 170D          __end_of_TMR1_SetInterruptHandler 1436  
         ADCC_GetSingleConversion@channel 0072                                  ?___aodiv 0020  
                                ?___aomod 0020                          ___aodiv@quotient 0033  
            ??_INTERRUPT_InterruptManager 007A                         __size_of_vfprintf 0035  
                          _timerInterrupt 0964                                  ?_isdigit 0020  
                       i1_DATAEE_ReadByte 144B                                  ?_isspace 0020  
                      ?i1_DATAEE_ReadByte 0070                                  ?_sprintf 00A6  
                          __size_of_fputc 0051                            __size_of_fputs 0029  
                __size_of_DATAEE_ReadByte 000F                            __size_of_putch 0001  
                             __size_of_S1 000B                             _TMR1_CallBack 1457  
                     ??i1_DATAEE_ReadByte 0072                            ___wmul@product 0024  
                                _LATAbits 0016                                _I2C1_DO_RX 0000  
                              _I2C1_DO_TX 0000                                 clear_ram0 1405  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0014  
                                _PIR3bits 070F                                  _PIR4bits 0710  
               _I2C1_DO_SEND_RESTART_READ 0000                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_ISR 1471  
                                _SSP1STAT 018F                                 _vfpfcnvrt 031D  
                  __end_of_timerInterrupt 09F1                         ??_TMR1_Initialize 0022  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
               __end_ofi1_DATAEE_ReadByte 1457                         ___wmul@multiplier 0020  
                               main@hours 00D6                          __size_of_LCDchar 0009  
                   DATAEE_WriteByte@bData 0022                          __size_of_LCDbusy 0013  
                        __size_of_LCDinit 0083                              _isspace$3000 0024  
                        __size_of_LCDrecv 018B                          __size_of_LCDsend 0053  
                           _I2C1_DO_RESET 0000                            ?_TMR1_CallBack 0070  
                       ?_DATAEE_WriteByte 0020                   __end_of_storeEPROMBuild 175C  
                      ??_DATAEE_WriteByte 0023                          __size_of_ReadI2C 001F  
                              _ADSTATbits 0097                          __size_of_OpenI2C 000D  
                              vfprintf@ap 00A2                                vfprintf@fp 00A3  
                 ??_OSCILLATOR_Initialize 0020                          __size_of___aodiv 0105  
                        __size_of___aomod 00ED                                ?_vfpfcnvrt 0059  
                                _WriteI2C 082D                           ?_timerInterrupt 0070  
                         ___aodiv@divisor 0020                  _TMR1_SetInterruptHandler 142D  
                         ___aodiv@counter 0031                     _TMR1_InterruptHandler 015F  
                              sprintf@fmt 00A6                  __size_of_ADCC_Initialize 0017  
                        __size_of_isdigit 0019                          __size_of_isspace 0022  
                                __ptext10 0003                                  __ptext11 1559  
                                __ptext20 1691                                  __ptext12 0CBE  
                                __ptext21 0B2E                                  __ptext13 0DAB  
                              _T1GCONbits 020F                                  __ptext30 1424  
                                __ptext22 147F                                  __ptext14 0A7F  
                                __ptext31 1436                                  __ptext23 09F1  
                                __ptext15 15F3                                  __ptext40 0BE7  
                                __ptext32 14D7                                  __ptext24 1638  
                                __ptext16 14EE                                  __ptext41 17AD  
                                __ptext33 1440                                  __ptext25 14C4  
                                __ptext17 15B2                                  __ptext50 0002  
                                __ptext42 14B1                                  __ptext34 1464  
                                __ptext26 15D2                                  __ptext18 0EB0  
                                __ptext51 0964                                  __ptext43 04BB  
                                __ptext35 1507                                  __ptext27 142D  
                                __ptext19 0887                                  __ptext52 1575  
                                __ptext44 082D                                  __ptext36 141B  
                                __ptext28 1413                                  __ptext53 144B  
                                __ptext45 1593                                  __ptext37 153D  
                                __ptext29 16C8                                  __ptext54 149F  
                                __ptext38 140B                                  __ptext47 1471  
                                __ptext39 08E1                                  __ptext48 148E  
                                __ptext49 1457          __end_of_parseEPROMInitialization 0BE7  
                            _SSP1CON1bits 0190                              _SSP1CON2bits 0191  
             __size_ofi1_DATAEE_WriteByte 001E                           timerInterrupt@h 0077  
                         timerInterrupt@m 0078                           timerInterrupt@s 0079  
                        __size_of_sprintf 0023               DATAEE_WriteByte@GIEBitValue 0023  
                                _readTC74 0EB0                  _I2C1_CallbackReturnReset 0000  
                           __size_of_atoi 00AF                             __size_of_main 02F0  
                           __size_of_dtoa 0164                                  _operADDR 1691  
                       ??_DATAEE_ReadByte 0022                                  main@ALAF 00E4  
                                main@ALAL 00E3                                  main@ALAT 00E2  
                                main@CLKH 00E5                ??_ADCC_GetSingleConversion 0072  
                                main@CLKM 00E6                                  main@TALA 00E1  
                                int$flags 007E                                  main@NREG 00DC  
                                main@PMON 00E0                                  _vfprintf 165C  
      __end_of_INTERRUPT_InterruptManager 0018                _INTERRUPT_InterruptManager 0004  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                            _I2C1_DO_IDLE 0000                              _I2C1_DO_RCEN 0000  
              __size_ofi1_DATAEE_ReadByte 000C                          ___aomod@dividend 0028  
                         main@temperature 00D9                            _vfpfcnvrt$2962 006B  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
                          __pstringtext10 0000                                  isdigit@c 0020  
                         ??_TMR1_CallBack 007A                                _LCDsend2x4 0BE7  
        parseEPROMInitialization@checksum 002D                                  intlevel1 0000  
                               sprintf@ap 00AF                                  isspace@c 0020  
                        ?_storeEPROMBuild 0027                   ?_PIN_MANAGER_Initialize 0070  
                 _I2C1_CallbackReturnStop 0000               parseEPROMReading@luminosity 002A  
                    _I2C1_DO_ADDRESS_NACK 0000                  __size_of_initializeEPROM 008E  
                         ___aomod@divisor 0020                               ??_vfpfcnvrt 005B  
                         ___aomod@counter 0031                  __size_of_I2C1_Initialize 000A  
                           __pstringtext1 1800                             __pstringtext2 1820  
                           __pstringtext3 1835                             __pstringtext4 1849  
                           __pstringtext5 1858                             __pstringtext6 1867  
                           __pstringtext7 1876                             __pstringtext8 1883  
                           __pstringtext9 188A                                  sprintf@f 00B1  
                                sprintf@s 00B0                          operADDR@dataAddr 0025  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
              parseEPROMReading@operation 002B                              ___aodiv@sign 0032  
          __end_of_PIN_MANAGER_Initialize 170D                         ??_ADCC_Initialize 0020  
                            ___aomod@sign 0032                           _TMR1_Initialize 15D2  
                       operADDR@operation 0024  
>>>>>>> Stashed changes
